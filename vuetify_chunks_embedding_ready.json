[
  {
    "id": "vuetify_chunk_000001",
    "text": "Component: v-ultimate-vuetify-documentation\nType: component_overview\n\n# v-ultimate-vuetify-documentation\n\n> This comprehensive file contains all Vuetify documentation including components, styles, features, API references, and code examples. > Generated on: 2025-06-18T01:34:44.277Z\n\nAvailable sections: Components, Styles & Utilities, Features",
    "display_content": "# v-ultimate-vuetify-documentation\n\n> This comprehensive file contains all Vuetify documentation including components, styles, features, API references, and code examples. > Generated on: 2025-06-18T01:34:44.277Z\n\nAvailable sections: Components, Styles & Utilities, Features",
    "metadata": {
      "component": "v-ultimate-vuetify-documentation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000001",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000002",
    "text": "Component: v-ultimate-vuetify-documentation\nSection: Components\nType: documentation\n\n## v-ultimate-vuetify-documentation - Components\n\n1. [Alert](#alerts)\n2. [All Vuetify s](#all)\n3. [App-bar](#app-bars)\n4. [Application](#application)\n5. [Aspect ratios](#aspect-ratios)\n6. [Autocomplete](#autocompletes)\n7. [Avatar](#avatars)\n8. [Badge](#badges)\n9. [Banner](#banners)\n10. [Bottom navigation](#bottom-navigation)\n11. [Bottom sheet](#bottom-sheets)\n12. [Breadcrumbs](#breadcrumbs)\n13. [Button](#buttons)\n14. [Button toggle](#button-groups)\n15. [Calendar](#calendars)\n16. [Card](#cards)\n17. [Carousel](#carousels)\n18. [Checkbox](#checkboxes)\n19. [Chip](#chips)\n20. [Chip group](#chip-groups)\n21. [Color input](#color-inputs)\n22. [Color picker](#color-pickers)\n23. [Combobox](#combobox)\n24. [Confirm Edit](#confirm-edit)\n25. [Data iterator](#data-iterators)\n26. [Date input](#date-inputs)\n27. [Date pickers](#date-pickers)\n28. [Defaults provider](#defaults-providers)\n29. [Dialog](#dialogs)\n30. [Divider](#dividers)\n31. [Empty states](#empty-states)\n32. [Expansion panel](#expansion-panels)\n33. [FAB](#floating-action-buttons)\n34. [File input](#file-inputs)\n35. [File upload](#file-upload)\n36. [Footer](#footers)\n37. [Form](#forms)\n38. [Grid system](#grids)\n39. [Hover](#hover)\n40. [Icon](#icons)\n41. [Icon button](#icon-buttons)\n42.",
    "display_content": "## v-ultimate-vuetify-documentation - Components\n\n1. [Alert](#alerts)\n2. [All Vuetify s](#all)\n3. [App-bar](#app-bars)\n4. [Application](#application)\n5. [Aspect ratios](#aspect-ratios)\n6. [Autocomplete](#autocompletes)\n7. [Avatar](#avatars)\n8. [Badge](#badges)\n9. [Banner](#banners)\n10. [Bottom navigation](#bottom-navigation)\n11. [Bottom sheet](#bottom-sheets)\n12. [Breadcrumbs](#breadcrumbs)\n13. [Button](#buttons)\n14. [Button toggle](#button-groups)\n15. [Calendar](#calendars)\n16. [Card](#cards)\n17. [Carousel](#carousels)\n18. [Checkbox](#checkboxes)\n19. [Chip](#chips)\n20. [Chip group](#chip-groups)\n21. [Color input](#color-inputs)\n22. [Color picker](#color-pickers)\n23. [Combobox](#combobox)\n24. [Confirm Edit](#confirm-edit)\n25. [Data iterator](#data-iterators)\n26. [Date input](#date-inputs)\n27. [Date pickers](#date-pickers)\n28. [Defaults provider](#defaults-providers)\n29. [Dialog](#dialogs)\n30. [Divider](#dividers)\n31. [Empty states](#empty-states)\n32. [Expansion panel](#expansion-panels)\n33. [FAB](#floating-action-buttons)\n34. [File input](#file-inputs)\n35. [File upload](#file-upload)\n36. [Footer](#footers)\n37. [Form](#forms)\n38. [Grid system](#grids)\n39. [Hover](#hover)\n40. [Icon](#icons)\n41. [Icon button](#icon-buttons)\n42.",
    "metadata": {
      "component": "v-ultimate-vuetify-documentation",
      "section_type": "subsection",
      "subsection": "Components",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000002",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000003",
    "text": "Component: v-ultimate-vuetify-documentation\nSection: Components\nType: documentation\n\n## v-ultimate-vuetify-documentation - Components\n\n[Image](#images)\n43. [Infinite scroller](#infinite-scroller)\n44. [Input](#inputs)\n45. [Item group](#item-groups)\n46. [Lazy](#lazy)\n47. [List](#lists)\n48. [Locale provider](#locale-providers)\n49. [Menu](#menus)\n50. [Month picker](#date-pickers-month)\n51. [Navigation drawer](#navigation-drawers)\n52. [No SSR](#no-ssr)\n53. [Number inputs](#number-inputs)\n54. [OTP Input](#otp-input)\n55. [Overflow button](#overflow-btns)\n56. [Overlay](#overlays)\n57. [Pagination](#paginations)\n58. [Parallax](#parallax)\n59. [Progress circular](#progress-circular)\n60. [Progress linear](#progress-linear)\n61. [Pull To Refresh](#pull-to-refresh)\n62. [Radio button](#radio-buttons)\n63. [Range Slider](#range-sliders)\n64. [Rating](#ratings)\n65. [Select](#selects)\n66. [Sheet](#sheets)\n67. [Skeleton loader](#skeleton-loaders)\n68. [Slide group](#slide-groups)\n69. [Slider](#sliders)\n70. [Snackbar](#snackbars)\n71. [Snackbar Queue](#snackbar-queue)\n72. [Sparklines](#sparklines)\n73. [Speed Dial](#speed-dials)\n74. [Stepper](#steppers)\n75. [Switch](#switches)\n76. [System-bar](#system-bars)\n77. [Table](#tables)\n78. [Tabs](#tabs)\n79. [Text field](#text-fields)\n80. [Textarea](#textareas)\n81.",
    "display_content": "## v-ultimate-vuetify-documentation - Components\n\n[Image](#images)\n43. [Infinite scroller](#infinite-scroller)\n44. [Input](#inputs)\n45. [Item group](#item-groups)\n46. [Lazy](#lazy)\n47. [List](#lists)\n48. [Locale provider](#locale-providers)\n49. [Menu](#menus)\n50. [Month picker](#date-pickers-month)\n51. [Navigation drawer](#navigation-drawers)\n52. [No SSR](#no-ssr)\n53. [Number inputs](#number-inputs)\n54. [OTP Input](#otp-input)\n55. [Overflow button](#overflow-btns)\n56. [Overlay](#overlays)\n57. [Pagination](#paginations)\n58. [Parallax](#parallax)\n59. [Progress circular](#progress-circular)\n60. [Progress linear](#progress-linear)\n61. [Pull To Refresh](#pull-to-refresh)\n62. [Radio button](#radio-buttons)\n63. [Range Slider](#range-sliders)\n64. [Rating](#ratings)\n65. [Select](#selects)\n66. [Sheet](#sheets)\n67. [Skeleton loader](#skeleton-loaders)\n68. [Slide group](#slide-groups)\n69. [Slider](#sliders)\n70. [Snackbar](#snackbars)\n71. [Snackbar Queue](#snackbar-queue)\n72. [Sparklines](#sparklines)\n73. [Speed Dial](#speed-dials)\n74. [Stepper](#steppers)\n75. [Switch](#switches)\n76. [System-bar](#system-bars)\n77. [Table](#tables)\n78. [Tabs](#tabs)\n79. [Text field](#text-fields)\n80. [Textarea](#textareas)\n81.",
    "metadata": {
      "component": "v-ultimate-vuetify-documentation",
      "section_type": "subsection",
      "subsection": "Components",
      "content_type": "documentation",
      "chunk_index": 1,
      "chunk_id": "vuetify_chunk_000003",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000004",
    "text": "Component: v-ultimate-vuetify-documentation\nSection: Components\nType: documentation\n\n## v-ultimate-vuetify-documentation - Components\n\n[Theme provider](#theme-providers)\n82. [Time picker](#time-pickers)\n83. [Timeline](#timelines)\n84. [Toolbar](#toolbars)\n85. [Tooltip](#tooltips)\n86. [Treeview](#treeview)\n87. [Vertical Stepper](#vertical-steppers)\n88. [Virtual scroll](#virtual-scroller)\n89. [Window](#windows)",
    "display_content": "## v-ultimate-vuetify-documentation - Components\n\n[Theme provider](#theme-providers)\n82. [Time picker](#time-pickers)\n83. [Timeline](#timelines)\n84. [Toolbar](#toolbars)\n85. [Tooltip](#tooltips)\n86. [Treeview](#treeview)\n87. [Vertical Stepper](#vertical-steppers)\n88. [Virtual scroll](#virtual-scroller)\n89. [Window](#windows)",
    "metadata": {
      "component": "v-ultimate-vuetify-documentation",
      "section_type": "subsection",
      "subsection": "Components",
      "content_type": "documentation",
      "chunk_index": 2,
      "chunk_id": "vuetify_chunk_000004",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000005",
    "text": "Component: v-ultimate-vuetify-documentation\nSection: Styles & Utilities\nType: documentation\n\n## v-ultimate-vuetify-documentation - Styles & Utilities\n\n1. [Border Radius](#style-border-radius)\n2. [Borders](#style-borders)\n3. [Colors](#style-colors)\n4. [Content](#style-content)\n5. [Css Reset](#style-css-reset)\n6. [Cursor](#style-cursor)\n7. [Display](#style-display)\n8. [Elevation](#style-elevation)\n9. [Flex](#style-flex)\n10. [Float](#style-float)\n11. [Opacity](#style-opacity)\n12. [Overflow](#style-overflow)\n13. [Position](#style-position)\n14. [Sizing](#style-sizing)\n15. [Spacing](#style-spacing)\n16. [Text And Typography](#style-text-and-typography)\n17. [Transitions](#style-transitions)",
    "display_content": "## v-ultimate-vuetify-documentation - Styles & Utilities\n\n1. [Border Radius](#style-border-radius)\n2. [Borders](#style-borders)\n3. [Colors](#style-colors)\n4. [Content](#style-content)\n5. [Css Reset](#style-css-reset)\n6. [Cursor](#style-cursor)\n7. [Display](#style-display)\n8. [Elevation](#style-elevation)\n9. [Flex](#style-flex)\n10. [Float](#style-float)\n11. [Opacity](#style-opacity)\n12. [Overflow](#style-overflow)\n13. [Position](#style-position)\n14. [Sizing](#style-sizing)\n15. [Spacing](#style-spacing)\n16. [Text And Typography](#style-text-and-typography)\n17. [Transitions](#style-transitions)",
    "metadata": {
      "component": "v-ultimate-vuetify-documentation",
      "section_type": "subsection",
      "subsection": "Styles & Utilities",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000005",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000006",
    "text": "Component: v-ultimate-vuetify-documentation\nSection: Features\nType: documentation\n\n## v-ultimate-vuetify-documentation - Features\n\n1. [Accessibility](#feature-accessibility)\n2. [Aliasing](#feature-aliasing)\n3. [Application Layout](#feature-application-layout)\n4. [Blueprints](#feature-blueprints)\n5. [Dates](#feature-dates)\n6. [Display And Platform](#feature-display-and-platform)\n7. [Global Configuration](#feature-global-configuration)\n8. [Icon Fonts](#feature-icon-fonts)\n9. [Internationalization](#feature-internationalization)\n10. [Rules](#feature-rules)\n11. [Sass Variables](#feature-sass-variables)\n12. [Scrolling](#feature-scrolling)\n13. [Theme](#feature-theme)\n14. [Treeshaking](#feature-treeshaking)",
    "display_content": "## v-ultimate-vuetify-documentation - Features\n\n1. [Accessibility](#feature-accessibility)\n2. [Aliasing](#feature-aliasing)\n3. [Application Layout](#feature-application-layout)\n4. [Blueprints](#feature-blueprints)\n5. [Dates](#feature-dates)\n6. [Display And Platform](#feature-display-and-platform)\n7. [Global Configuration](#feature-global-configuration)\n8. [Icon Fonts](#feature-icon-fonts)\n9. [Internationalization](#feature-internationalization)\n10. [Rules](#feature-rules)\n11. [Sass Variables](#feature-sass-variables)\n12. [Scrolling](#feature-scrolling)\n13. [Theme](#feature-theme)\n14. [Treeshaking](#feature-treeshaking)",
    "metadata": {
      "component": "v-ultimate-vuetify-documentation",
      "section_type": "subsection",
      "subsection": "Features",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000006",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000007",
    "text": "Component: v-alerts\nType: component_overview\n\n# v-alerts\n\nThe `v-alert` component is used to convey important information to the user through the use of contextual types, icons, and colors.",
    "display_content": "# v-alerts\n\nThe `v-alert` component is used to convey important information to the user through the use of contextual types, icons, and colors.",
    "metadata": {
      "component": "v-alerts",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000007",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000008",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nAn alert is a [v-sheet](/components/sheets/) that specializes in getting the user's attention. While similar to [v-banner](/components/banners/) in functionality, `v-alert` is typically inline with content and used multiple times throughout an application.",
    "display_content": "# v-usage\n\nAn alert is a [v-sheet](/components/sheets/) that specializes in getting the user's attention. While similar to [v-banner](/components/banners/) in functionality, `v-alert` is typically inline with content and used multiple times throughout an application.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000008",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000009",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-alert](/api/v-alert/) | Primary Component | | [v-alert-title](/api/v-alert-title/) | Sub-component used to display the `v-alert` title. Wraps the `#title` slot |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-alert](/api/v-alert/) | Primary Component | | [v-alert-title](/api/v-alert-title/) | Sub-component used to display the `v-alert` title. Wraps the `#title` slot |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000009",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000010",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-alert` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-alert` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000010",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000011",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-alert` component is a callout element designed to attract the attention of a user. Unlike [v-banner](/components/banners/), the `v-alert` component is intended to be used and re-used throughout your application. An alert's color is derived from its **type** property which corresponds to your application's contextual [theme colors](/features/theme/#custom-theme-colors) and [iconfont aliases](/features/icon-fonts/#creating-a-custom-icon-set).\n\nAvailable sections: Props, Content, Type, Type reference, Color and icon, Density, Variants, Closable",
    "display_content": "# v-guide\n\nThe `v-alert` component is a callout element designed to attract the attention of a user. Unlike [v-banner](/components/banners/), the `v-alert` component is intended to be used and re-used throughout your application. An alert's color is derived from its **type** property which corresponds to your application's contextual [theme colors](/features/theme/#custom-theme-colors) and [iconfont aliases](/features/icon-fonts/#creating-a-custom-icon-set).\n\nAvailable sections: Props, Content, Type, Type reference, Color and icon, Density, Variants, Closable",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000011",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000012",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nIn addition to the standard [v-sheet](/components/sheets/) properties such as elevation, dimension, and border-radius, the `v-alert` component supports **v-model**, **variants**, and **density**.",
    "display_content": "## v-guide - Props\n\nIn addition to the standard [v-sheet](/components/sheets/) properties such as elevation, dimension, and border-radius, the `v-alert` component supports **v-model**, **variants**, and **density**.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000012",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000013",
    "text": "Component: v-guide\nSection: Content\nType: code_example\n\n## v-guide - Content\n\nThe `v-alert` component supports simple content using the **title** and **text** props. This approach is best for strings that do not need custom styling.\n\nThe following code snippet is an example of a basic `v-alert` component only containing text:\n\n```html\n<v-alert text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus...\"></v-alert>\n```",
    "display_content": "## v-guide - Content\n\nThe `v-alert` component supports simple content using the **title** and **text** props. This approach is best for strings that do not need custom styling.\n\nThe following code snippet is an example of a basic `v-alert` component only containing text:\n\n```html\n<v-alert text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus...\"></v-alert>\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Content",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000013",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000014",
    "text": "Component: v-guide\nSection: Type\nType: documentation\n\n## v-guide - Type\n\nAlerts have 4 contextual states: **success**, **info**, **warning**, and **error**. Each state has a default _color_ and _icon_ associated with it. When a **type** is not provided, the `v-alert` component defaults to a greyish background.\n\nWith a basic alert rendered, add your choice of contextual type. The following example puts the `v-alert` component in a success state:\n\n<ExamplesExample file=\"v-alert/prop-type\" />",
    "display_content": "## v-guide - Type\n\nAlerts have 4 contextual states: **success**, **info**, **warning**, and **error**. Each state has a default _color_ and _icon_ associated with it. When a **type** is not provided, the `v-alert` component defaults to a greyish background.\n\nWith a basic alert rendered, add your choice of contextual type. The following example puts the `v-alert` component in a success state:\n\n<ExamplesExample file=\"v-alert/prop-type\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Type",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000014",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000015",
    "text": "Component: v-guide\nSection: Type reference\nType: documentation\n\n## v-guide - Type reference\n\n| Type | Color | Icon alias | Icon |\n| - | - | - | :---: |\n| Success | **success** { .text-success } | $success | <v-icon icon=\"$success\" /> |\n| Info | **info** { .text-info } | $info | <v-icon icon=\"$info\" /> |\n| Warning | **warning** { .text-warning } | $warning | <v-icon icon=\"$warning\" /> |\n| Error | **error** { .text-error } | $error | <v-icon icon=\"$error\" /> |",
    "display_content": "## v-guide - Type reference\n\n| Type | Color | Icon alias | Icon |\n| - | - | - | :---: |\n| Success | **success** { .text-success } | $success | <v-icon icon=\"$success\" /> |\n| Info | **info** { .text-info } | $info | <v-icon icon=\"$info\" /> |\n| Warning | **warning** { .text-warning } | $warning | <v-icon icon=\"$warning\" /> |\n| Error | **error** { .text-error } | $error | <v-icon icon=\"$error\" /> |",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Type reference",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000015",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000016",
    "text": "Component: v-guide\nSection: Color and icon\nType: code_example\n\n## v-guide - Color and icon\n\nThe **type** property acts as a shorthand for a **color** and **icon** combination, you can use both props individually to achieve the same effect. The following example produces the same result as using **type=\"success\"** by defining a custom color and using the icon lookup table to get the globally defined success icon:\n\n```html\n<v-alert\n  color=\"success\"\n  icon=\"$success\"\n  title=\"Alert title\"\n  text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus...\"\n></v-alert>\n```",
    "display_content": "## v-guide - Color and icon\n\nThe **type** property acts as a shorthand for a **color** and **icon** combination, you can use both props individually to achieve the same effect. The following example produces the same result as using **type=\"success\"** by defining a custom color and using the icon lookup table to get the globally defined success icon:\n\n```html\n<v-alert\n  color=\"success\"\n  icon=\"$success\"\n  title=\"Alert title\"\n  text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus...\"\n></v-alert>\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Color and icon",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000016",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000017",
    "text": "Component: v-guide\nSection: Density\nType: documentation\n\n## v-guide - Density\n\nThe `v-alert` component has the ability to reduce its height in intervals using the density prop. This is useful when you need to reduce the vertical space a component needs. The following example reduces the vertical space by using **density=\"compact\"**:\n\n<ExamplesExample file=\"v-alert/prop-density\" />\n\nThe **density** prop supports 3 levels of component height; **default**, **comfortable**, and **compact**.",
    "display_content": "## v-guide - Density\n\nThe `v-alert` component has the ability to reduce its height in intervals using the density prop. This is useful when you need to reduce the vertical space a component needs. The following example reduces the vertical space by using **density=\"compact\"**:\n\n<ExamplesExample file=\"v-alert/prop-density\" />\n\nThe **density** prop supports 3 levels of component height; **default**, **comfortable**, and **compact**.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000017",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000018",
    "text": "Component: v-guide\nSection: Variants\nType: documentation\n\n## v-guide - Variants\n\nThe `v-alert` has 6 style variants, **elevated**, **flat**, **tonal**, **outlined**, **text**, and **plain**. By default, the `v-alert` component is **flat**; which means that it has a solid background and no box-shadow (elevation). The following example modifies the overall styling of the alert with a custom variant:\n\n<ExamplesExample file=\"v-alert/prop-variant\" />",
    "display_content": "## v-guide - Variants\n\nThe `v-alert` has 6 style variants, **elevated**, **flat**, **tonal**, **outlined**, **text**, and **plain**. By default, the `v-alert` component is **flat**; which means that it has a solid background and no box-shadow (elevation). The following example modifies the overall styling of the alert with a custom variant:\n\n<ExamplesExample file=\"v-alert/prop-variant\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Variants",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000018",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000019",
    "text": "Component: v-guide\nSection: Closable\nType: documentation\n\n## v-guide - Closable\n\nThe **closable** prop adds a [v-icon](/components/icons) on the far right, after the main content. This control hides the `v-alert` when clicked, setting it's internal model to **false**. Manually control the visibility of the alert by binding **v-model** or using **model-value**. The following example uses a dynamic model that shows and hides the `v-alert` component:\n\n<ExamplesExample file=\"v-alert/prop-closable\" />\n\nThe close icon automatically applies a default `aria-label` and is configurable by using the **close-label** prop or changing **close** value in your locale.\n\n::: info\n  For more information on how to global modify your locale settings, navigate to the [Internationalization page](/features/internationalization).\n:::",
    "display_content": "## v-guide - Closable\n\nThe **closable** prop adds a [v-icon](/components/icons) on the far right, after the main content. This control hides the `v-alert` when clicked, setting it's internal model to **false**. Manually control the visibility of the alert by binding **v-model** or using **model-value**. The following example uses a dynamic model that shows and hides the `v-alert` component:\n\n<ExamplesExample file=\"v-alert/prop-closable\" />\n\nThe close icon automatically applies a default `aria-label` and is configurable by using the **close-label** prop or changing **close** value in your locale.\n\n::: info\n  For more information on how to global modify your locale settings, navigate to the [Internationalization page](/features/internationalization).\n:::",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Closable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000019",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000020",
    "text": "Component: v-additional-examples\nType: component_overview\n\n# v-additional-examples\n\nThe following is a collection of `v-alert` examples that demonstrate how different the properties work in an application.\n\nAvailable sections: Border color, Icon, Outlined",
    "display_content": "# v-additional-examples\n\nThe following is a collection of `v-alert` examples that demonstrate how different the properties work in an application.\n\nAvailable sections: Border color, Icon, Outlined",
    "metadata": {
      "component": "v-additional-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000020",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000021",
    "text": "Component: v-additional-examples\nSection: Border color\nType: documentation\n\n## v-additional-examples - Border color\n\nThe **border-color** prop removes the alert background in order to accent the **border** prop. If a **type** is set, it will use the type's default color. If no **color** or **type** is set, the color will default to the inverted color of the applied theme (black for light and white/gray for dark).\n\n<ExamplesExample file=\"v-alert/prop-border-color\" />",
    "display_content": "## v-additional-examples - Border color\n\nThe **border-color** prop removes the alert background in order to accent the **border** prop. If a **type** is set, it will use the type's default color. If no **color** or **type** is set, the color will default to the inverted color of the applied theme (black for light and white/gray for dark).\n\n<ExamplesExample file=\"v-alert/prop-border-color\" />",
    "metadata": {
      "component": "v-additional-examples",
      "section_type": "subsection",
      "subsection": "Border color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000021",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000022",
    "text": "Component: v-additional-examples\nSection: Icon\nType: documentation\n\n## v-additional-examples - Icon\n\nThe **icon** prop allows you to add an icon to the beginning of the alert component. If a **type** is provided, this will override the default type icon. Additionally, setting the **icon** prop to _false_ will remove the icon altogether.\n\n<ExamplesExample file=\"v-alert/prop-icon\" />",
    "display_content": "## v-additional-examples - Icon\n\nThe **icon** prop allows you to add an icon to the beginning of the alert component. If a **type** is provided, this will override the default type icon. Additionally, setting the **icon** prop to _false_ will remove the icon altogether.\n\n<ExamplesExample file=\"v-alert/prop-icon\" />",
    "metadata": {
      "component": "v-additional-examples",
      "section_type": "subsection",
      "subsection": "Icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000022",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000023",
    "text": "Component: v-additional-examples\nSection: Outlined\nType: documentation\n\n## v-additional-examples - Outlined\n\nThe **outlined** prop inverts the style of an alert, inheriting the currently applied **color**, applying it to the text and border, and making its background transparent.\n\n<ExamplesExample file=\"v-alert/prop-outlined\" />",
    "display_content": "## v-additional-examples - Outlined\n\nThe **outlined** prop inverts the style of an alert, inheriting the currently applied **color**, applying it to the text and border, and making its background transparent.\n\n<ExamplesExample file=\"v-alert/prop-outlined\" />",
    "metadata": {
      "component": "v-additional-examples",
      "section_type": "subsection",
      "subsection": "Outlined",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000023",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000024",
    "text": "Component: v-accessibility\nType: component_overview\n\n# v-accessibility\n\nBy default, `v-alert` components are assigned the [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/) role of [**alert**](https://www.w3.org/TR/wai-aria/#alert) which denotes that the alert \\\"is a live region with important and usually time-sensitive information.\\\" When using the **closable** prop, the close icon will receive a corresponding `aria-label`. This value can be modified by changing either the **close-label** prop or globally through customizing the [Internationalization](/features/internationalization)'s default value for the _close_ property.\n\nAvailable sections: Prop Border Color, Prop Border, Prop Closable, Prop Content, Prop Density, Prop Icon, Prop Outlined, Prop Prominent, Prop Rounded, Prop Type, Prop Variant, Usage",
    "display_content": "# v-accessibility\n\nBy default, `v-alert` components are assigned the [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/) role of [**alert**](https://www.w3.org/TR/wai-aria/#alert) which denotes that the alert \\\"is a live region with important and usually time-sensitive information.\\\" When using the **closable** prop, the close icon will receive a corresponding `aria-label`. This value can be modified by changing either the **close-label** prop or globally through customizing the [Internationalization](/features/internationalization)'s default value for the _close_ property.\n\nAvailable sections: Prop Border Color, Prop Border, Prop Closable, Prop Content, Prop Density, Prop Icon, Prop Outlined, Prop Prominent, Prop Rounded, Prop Type, Prop Variant, Usage",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000024",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000025",
    "text": "Component: v-accessibility\nSection: Prop Border Color\nType: code_example\n\n## v-accessibility - Prop Border Color\n\n```vue\n<template>\n  <div>\n    <v-alert\n      border=\"start\"\n      border-color=\"deep-purple accent-4\"\n      elevation=\"2\"\n    >\n      Aliquam eu nunc. Fusce commodo aliquam arcu. In consectetuer turpis ut velit. Nulla facilisi..\n\n      Morbi mollis tellus ac sapien. Fusce vel dui. Praesent ut ligula non mi varius sagittis. Vivamus consectetuer hendrerit lacus. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"top\"\n      border-color=\"success\"\n      elevation=\"2\"\n    >\n      Vestibulum ullamcorper mauris at ligula. Nam pretium turpis et arcu. Ut varius tincidunt libero. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Morbi nec metus.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"bottom\"\n      border-color=\"warning\"\n      elevation=\"2\"\n    >\n      Sed in libero ut nibh placerat accumsan. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Donec elit libero, sodales nec, volutpat a, suscipit non, turpis.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"end\"\n      border-color=\"error\"\n      elevation=\"2\"\n    >\n      Fusce commodo aliquam arcu. Pellentesque posuere. Phasellus tempus. Donec posuere vulputate arcu.\n    </v-alert>\n  </div>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Border Color\n\n```vue\n<template>\n  <div>\n    <v-alert\n      border=\"start\"\n      border-color=\"deep-purple accent-4\"\n      elevation=\"2\"\n    >\n      Aliquam eu nunc. Fusce commodo aliquam arcu. In consectetuer turpis ut velit. Nulla facilisi..\n\n      Morbi mollis tellus ac sapien. Fusce vel dui. Praesent ut ligula non mi varius sagittis. Vivamus consectetuer hendrerit lacus. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"top\"\n      border-color=\"success\"\n      elevation=\"2\"\n    >\n      Vestibulum ullamcorper mauris at ligula. Nam pretium turpis et arcu. Ut varius tincidunt libero. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Morbi nec metus.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"bottom\"\n      border-color=\"warning\"\n      elevation=\"2\"\n    >\n      Sed in libero ut nibh placerat accumsan. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Donec elit libero, sodales nec, volutpat a, suscipit non, turpis.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"end\"\n      border-color=\"error\"\n      elevation=\"2\"\n    >\n      Fusce commodo aliquam arcu. Pellentesque posuere. Phasellus tempus. Donec posuere vulputate arcu.\n    </v-alert>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Border Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000025",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000026",
    "text": "Component: v-accessibility\nSection: Prop Border\nType: code_example\n\n## v-accessibility - Prop Border\n\n```vue\n<template>\n  <div>\n    <v-alert\n      border=\"top\"\n      color=\"primary\"\n    >\n      I'm an alert with a top border and primary color\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"end\"\n      color=\"secondary\"\n    >\n      I'm an alert with an end border and secondary color\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"bottom\"\n      color=\"success\"\n    >\n      I'm an alert with a bottom border and success color\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"start\"\n      color=\"error\"\n    >\n      I'm an alert with a start border and error color\n    </v-alert>\n  </div>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Border\n\n```vue\n<template>\n  <div>\n    <v-alert\n      border=\"top\"\n      color=\"primary\"\n    >\n      I'm an alert with a top border and primary color\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"end\"\n      color=\"secondary\"\n    >\n      I'm an alert with an end border and secondary color\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"bottom\"\n      color=\"success\"\n    >\n      I'm an alert with a bottom border and success color\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"start\"\n      color=\"error\"\n    >\n      I'm an alert with a start border and error color\n    </v-alert>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Border",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000026",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000027",
    "text": "Component: v-accessibility\nSection: Prop Closable\nType: code_example\n\n## v-accessibility - Prop Closable\n\n```vue\n<template>\n  <div>\n    <v-alert\n      v-model=\"alert\"\n      border=\"start\"\n      close-label=\"Close Alert\"\n      color=\"deep-purple-accent-4\"\n      title=\"Closable Alert\"\n      variant=\"tonal\"\n      closable\n    >\n      Aenean imperdiet. Quisque id odio. Cras dapibus. Pellentesque ut neque. Cras dapibus.\n\n      Vivamus consectetuer hendrerit lacus. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Curabitur blandit mollis lacus. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo.\n    </v-alert>\n\n    <div\n      v-if=\"!alert\"\n      class=\"text-center\"\n    >\n      <v-btn @click=\"alert = true\">\n        Reset\n      </v-btn>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const alert = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      alert: true,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-accessibility - Prop Closable\n\n```vue\n<template>\n  <div>\n    <v-alert\n      v-model=\"alert\"\n      border=\"start\"\n      close-label=\"Close Alert\"\n      color=\"deep-purple-accent-4\"\n      title=\"Closable Alert\"\n      variant=\"tonal\"\n      closable\n    >\n      Aenean imperdiet. Quisque id odio. Cras dapibus. Pellentesque ut neque. Cras dapibus.\n\n      Vivamus consectetuer hendrerit lacus. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Curabitur blandit mollis lacus. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo.\n    </v-alert>\n\n    <div\n      v-if=\"!alert\"\n      class=\"text-center\"\n    >\n      <v-btn @click=\"alert = true\">\n        Reset\n      </v-btn>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const alert = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      alert: true,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Closable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000027",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000028",
    "text": "Component: v-accessibility\nSection: Prop Content\nType: code_example\n\n## v-accessibility - Prop Content\n\n```vue\n<template>\n  <v-alert\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n    title=\"Alert title\"\n  ></v-alert>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Content\n\n```vue\n<template>\n  <v-alert\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n    title=\"Alert title\"\n  ></v-alert>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Content",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000028",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000029",
    "text": "Component: v-accessibility\nSection: Prop Density\nType: code_example\n\n## v-accessibility - Prop Density\n\n```vue\n<template>\n  <v-alert\n    density=\"compact\"\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n    title=\"Alert title\"\n    type=\"warning\"\n  ></v-alert>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Density\n\n```vue\n<template>\n  <v-alert\n    density=\"compact\"\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n    title=\"Alert title\"\n    type=\"warning\"\n  ></v-alert>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Density",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000029",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000030",
    "text": "Component: v-accessibility\nSection: Prop Icon\nType: code_example\n\n## v-accessibility - Prop Icon\n\n```vue\n<template>\n  <div>\n    <v-alert\n      color=\"#2A3B4D\"\n      density=\"compact\"\n      icon=\"mdi-firework\"\n      theme=\"dark\"\n    >\n      Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi. Vivamus quis mi. Quisque ut nisi. Maecenas malesuada.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      color=\"#C51162\"\n      icon=\"mdi-material-design\"\n      theme=\"dark\"\n      border\n    >\n      Phasellus blandit leo ut odio. Morbi mattis ullamcorper velit. Donec orci lectus, aliquam ut, faucibus non, euismod id, nulla. In ut quam vitae odio lacinia tincidunt.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      color=\"primary\"\n      icon=\"$vuetify\"\n      theme=\"dark\"\n      prominent\n    >\n      Praesent congue erat at massa. Nullam vel sem. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. Curabitur at lacus ac velit ornare lobortis.\n    </v-alert>\n  </div>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Icon\n\n```vue\n<template>\n  <div>\n    <v-alert\n      color=\"#2A3B4D\"\n      density=\"compact\"\n      icon=\"mdi-firework\"\n      theme=\"dark\"\n    >\n      Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi. Vivamus quis mi. Quisque ut nisi. Maecenas malesuada.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      color=\"#C51162\"\n      icon=\"mdi-material-design\"\n      theme=\"dark\"\n      border\n    >\n      Phasellus blandit leo ut odio. Morbi mattis ullamcorper velit. Donec orci lectus, aliquam ut, faucibus non, euismod id, nulla. In ut quam vitae odio lacinia tincidunt.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      color=\"primary\"\n      icon=\"$vuetify\"\n      theme=\"dark\"\n      prominent\n    >\n      Praesent congue erat at massa. Nullam vel sem. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. Curabitur at lacus ac velit ornare lobortis.\n    </v-alert>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Icon",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000030",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000031",
    "text": "Component: v-accessibility\nSection: Prop Outlined\nType: code_example\n\n## v-accessibility - Prop Outlined\n\n```vue\n<template>\n  <div>\n    <v-alert\n      color=\"purple\"\n      variant=\"outlined\"\n    >\n      <template v-slot:title>\n        Outlined Alert\n      </template>\n\n      Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Duis vel nibh at velit scelerisque suscipit. Praesent blandit laoreet nibh. Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Etiam sollicitudin, ipsum eu pulvinar rutrum, tellus ipsum laoreet sapien, quis venenatis ante odio sit amet eros.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      type=\"success\"\n      variant=\"outlined\"\n    >\n      Praesent venenatis metus at tortor pulvinar varius. Aenean commodo ligula eget dolor. Praesent ac massa at ligula laoreet iaculis. Vestibulum ullamcorper mauris at ligula.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"top\"\n      type=\"warning\"\n      variant=\"outlined\"\n      prominent\n    >\n      Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Suspendisse non nisl sit amet velit hendrerit rutrum. Nullam vel sem. Pellentesque dapibus hendrerit tortor.\n    </v-alert>\n  </div>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Outlined\n\n```vue\n<template>\n  <div>\n    <v-alert\n      color=\"purple\"\n      variant=\"outlined\"\n    >\n      <template v-slot:title>\n        Outlined Alert\n      </template>\n\n      Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Duis vel nibh at velit scelerisque suscipit. Praesent blandit laoreet nibh. Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Etiam sollicitudin, ipsum eu pulvinar rutrum, tellus ipsum laoreet sapien, quis venenatis ante odio sit amet eros.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      type=\"success\"\n      variant=\"outlined\"\n    >\n      Praesent venenatis metus at tortor pulvinar varius. Aenean commodo ligula eget dolor. Praesent ac massa at ligula laoreet iaculis. Vestibulum ullamcorper mauris at ligula.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      border=\"top\"\n      type=\"warning\"\n      variant=\"outlined\"\n      prominent\n    >\n      Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Suspendisse non nisl sit amet velit hendrerit rutrum. Nullam vel sem. Pellentesque dapibus hendrerit tortor.\n    </v-alert>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Outlined",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000031",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000032",
    "text": "Component: v-accessibility\nSection: Prop Prominent\nType: code_example\n\n## v-accessibility - Prop Prominent\n\n```vue\n<template>\n  <div>\n    <v-alert\n      type=\"error\"\n      prominent\n    >\n      <template v-slot:text>\n        Nunc nonummy metus. Nunc interdum lacus sit amet orci Nullam dictum felis eu pede.\n      </template>\n\n      <template v-slot:append>\n        <v-btn size=\"small\" variant=\"text\">Take action</v-btn>\n      </template>\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      color=\"blue-grey-darken-2\"\n      density=\"compact\"\n      icon=\"mdi-school\"\n      prominent\n    >\n      Sed augue ipsum, egestas nec, vestibulum et, malesuada adipiscing, dui. Aenean ut eros et nisl sagittis vestibulum. Sed aliquam ultrices mauris. Donec vitae orci sed dolor rutrum auctor.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      icon=\"mdi-shield-lock-outline\"\n      type=\"info\"\n      prominent\n    >\n      Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Sed in libero ut nibh placerat accumsan.. Curabitur blandit mollis lacus. Curabitur blandit mollis lacus.\n    </v-alert>\n  </div>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Prominent\n\n```vue\n<template>\n  <div>\n    <v-alert\n      type=\"error\"\n      prominent\n    >\n      <template v-slot:text>\n        Nunc nonummy metus. Nunc interdum lacus sit amet orci Nullam dictum felis eu pede.\n      </template>\n\n      <template v-slot:append>\n        <v-btn size=\"small\" variant=\"text\">Take action</v-btn>\n      </template>\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      color=\"blue-grey-darken-2\"\n      density=\"compact\"\n      icon=\"mdi-school\"\n      prominent\n    >\n      Sed augue ipsum, egestas nec, vestibulum et, malesuada adipiscing, dui. Aenean ut eros et nisl sagittis vestibulum. Sed aliquam ultrices mauris. Donec vitae orci sed dolor rutrum auctor.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      icon=\"mdi-shield-lock-outline\"\n      type=\"info\"\n      prominent\n    >\n      Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Sed in libero ut nibh placerat accumsan.. Curabitur blandit mollis lacus. Curabitur blandit mollis lacus.\n    </v-alert>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Prominent",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000032",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000033",
    "text": "Component: v-accessibility\nSection: Prop Rounded\nType: code_example\n\n## v-accessibility - Prop Rounded\n\n```vue\n<template>\n  <div>\n    <v-alert\n      rounded=\"0\"\n      title=\"Info\"\n      type=\"info\"\n    >\n      I'm an alert with no rounded borders. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Aspernatur recusandae, est itaque laboriosam amet officia? Officia repellat provident sed est adipisci voluptatibus, voluptas reprehenderit dicta voluptatum, optio enim, placeat nostrum.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      rounded=\"xl\"\n      title=\"Success\"\n      type=\"success\"\n      variant=\"outlined\"\n    >\n      I'm an alert with extra large rounded borders. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Enim cumque vel sapiente suscipit officia ullam quam possimus provident id neque, cupiditate fuga animi expedita, beatae ipsam in veniam inventore totam.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      rounded=\"pill\"\n      title=\"Warning\"\n      type=\"warning\"\n      prominent\n    >\n      I'm an alert with pill rounded borders. Lorem ipsum dolor sit amet consectetur adipisicing elit. Laudantium ex excepturi ea odio cum libero animi vitae repellat fuga velit explicabo quae, ducimus.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      rounded=\"t-xl b-lg\"\n      title=\"Error\"\n      type=\"error\"\n      prominent\n    >\n      I'm an alert with top and bottom borders. Lorem, ipsum dolor sit amet consectetur adipisicing elit. Rerum esse quis eius delectus odio repellat voluptates ullam doloribus eaque dignissimos\n    </v-alert>\n  </div>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Rounded\n\n```vue\n<template>\n  <div>\n    <v-alert\n      rounded=\"0\"\n      title=\"Info\"\n      type=\"info\"\n    >\n      I'm an alert with no rounded borders. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Aspernatur recusandae, est itaque laboriosam amet officia? Officia repellat provident sed est adipisci voluptatibus, voluptas reprehenderit dicta voluptatum, optio enim, placeat nostrum.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      rounded=\"xl\"\n      title=\"Success\"\n      type=\"success\"\n      variant=\"outlined\"\n    >\n      I'm an alert with extra large rounded borders. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Enim cumque vel sapiente suscipit officia ullam quam possimus provident id neque, cupiditate fuga animi expedita, beatae ipsam in veniam inventore totam.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      rounded=\"pill\"\n      title=\"Warning\"\n      type=\"warning\"\n      prominent\n    >\n      I'm an alert with pill rounded borders. Lorem ipsum dolor sit amet consectetur adipisicing elit. Laudantium ex excepturi ea odio cum libero animi vitae repellat fuga velit explicabo quae, ducimus.\n    </v-alert>\n\n    <br>\n\n    <v-alert\n      rounded=\"t-xl b-lg\"\n      title=\"Error\"\n      type=\"error\"\n      prominent\n    >\n      I'm an alert with top and bottom borders. Lorem, ipsum dolor sit amet consectetur adipisicing elit. Rerum esse quis eius delectus odio repellat voluptates ullam doloribus eaque dignissimos\n    </v-alert>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Rounded",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000033",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000034",
    "text": "Component: v-accessibility\nSection: Prop Type\nType: code_example\n\n## v-accessibility - Prop Type\n\n```vue\n<template>\n  <v-alert\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n    title=\"Alert title\"\n    type=\"success\"\n  ></v-alert>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Type\n\n```vue\n<template>\n  <v-alert\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n    title=\"Alert title\"\n    type=\"success\"\n  ></v-alert>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Type",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000034",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000035",
    "text": "Component: v-accessibility\nSection: Prop Variant\nType: code_example\n\n## v-accessibility - Prop Variant\n\n```vue\n<template>\n  <v-alert\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n    title=\"Alert title\"\n    type=\"info\"\n    variant=\"tonal\"\n  ></v-alert>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Variant\n\n```vue\n<template>\n  <v-alert\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n    title=\"Alert title\"\n    type=\"info\"\n    variant=\"tonal\"\n  ></v-alert>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Variant",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000035",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000036",
    "text": "Component: v-accessibility\nSection: Usage\nType: code_example\n\n## v-accessibility - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-alert\n        v-if=\"alert\"\n        v-model=\"alert\"\n        v-bind=\"props\"\n      >\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n        </template>\n      </v-alert>\n\n      <div class=\"text-center\">\n        <v-btn v-if=\"!alert\" @click=\"alert = true\">\n          Show Alert\n        </v-btn>\n      </div>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"type\"\n        :items=\"[\n          'success',\n          'info',\n          'warning',\n          'error',\n        ]\"\n        label=\"Type\"\n        clearable\n      ></v-select>\n\n      <v-checkbox v-model=\"title\" label=\"Show title\"></v-checkbox>\n\n      <v-checkbox v-model=\"closable\" label=\"Closable\"></v-checkbox>\n\n      <v-checkbox v-model=\"icon\" label=\"Custom icon\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-alert'\n  const model = ref('default')\n  const alert = ref(true)\n  const closable = ref(false)\n  const icon = ref(false)\n  const title = ref(false)\n  const type = ref()\n  const options = ['outlined', 'tonal']\n  const props = computed(() => {\n    return {\n      closable: closable.value || undefined,\n      icon: icon.value ? '$vuetify' : undefined,\n      title: title.value ? 'Alert title' : undefined,\n      text: '...',\n      type: type.value || undefined,\n      variant: ['outlined', 'tonal'].includes(model.value) ? model.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-accessibility - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-alert\n        v-if=\"alert\"\n        v-model=\"alert\"\n        v-bind=\"props\"\n      >\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n        </template>\n      </v-alert>\n\n      <div class=\"text-center\">\n        <v-btn v-if=\"!alert\" @click=\"alert = true\">\n          Show Alert\n        </v-btn>\n      </div>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"type\"\n        :items=\"[\n          'success',\n          'info',\n          'warning',\n          'error',\n        ]\"\n        label=\"Type\"\n        clearable\n      ></v-select>\n\n      <v-checkbox v-model=\"title\" label=\"Show title\"></v-checkbox>\n\n      <v-checkbox v-model=\"closable\" label=\"Closable\"></v-checkbox>\n\n      <v-checkbox v-model=\"icon\" label=\"Custom icon\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-alert'\n  const model = ref('default')\n  const alert = ref(true)\n  const closable = ref(false)\n  const icon = ref(false)\n  const title = ref(false)\n  const type = ref()\n  const options = ['outlined', 'tonal']\n  const props = computed(() => {\n    return {\n      closable: closable.value || undefined,\n      icon: icon.value ? '$vuetify' : undefined,\n      title: title.value ? 'Alert title' : undefined,\n      text: '...',\n      type: type.value || undefined,\n      variant: ['outlined', 'tonal'].includes(model.value) ? model.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000036",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000037",
    "text": "Component: v-components\nType: component_overview\n\n# v-components\n\nVuetify Components are interactive building blocks for creating user interfaces.",
    "display_content": "# v-components\n\nVuetify Components are interactive building blocks for creating user interfaces.",
    "metadata": {
      "component": "v-components",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000037",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000038",
    "text": "Component: v-containment\nType: component_overview\n\n# v-containment\n\nContainment components wrap other components and provide additional functionality. They are typically used to provide a consistent layout or styling.",
    "display_content": "# v-containment\n\nContainment components wrap other components and provide additional functionality. They are typically used to provide a consistent layout or styling.",
    "metadata": {
      "component": "v-containment",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000038",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000039",
    "text": "Component: v-navigation\nType: component_overview\n\n# v-navigation\n\nNavigation components are used to navigate between different views or pages.",
    "display_content": "# v-navigation\n\nNavigation components are used to navigate between different views or pages.",
    "metadata": {
      "component": "v-navigation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000039",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000040",
    "text": "Component: v-form-inputs-and-controls\nType: component_overview\n\n# v-form-inputs-and-controls\n\nForm components are used to collect user input in a variety of ways.",
    "display_content": "# v-form-inputs-and-controls\n\nForm components are used to collect user input in a variety of ways.",
    "metadata": {
      "component": "v-form-inputs-and-controls",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000040",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000041",
    "text": "Component: v-layouts\nType: component_overview\n\n# v-layouts\n\nLayout components are used to create responsive layouts.",
    "display_content": "# v-layouts\n\nLayout components are used to create responsive layouts.",
    "metadata": {
      "component": "v-layouts",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000041",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000042",
    "text": "Component: v-selection\nType: component_overview\n\n# v-selection\n\nThese components allow a user to select one or multiple items from a list of options.",
    "display_content": "# v-selection\n\nThese components allow a user to select one or multiple items from a list of options.",
    "metadata": {
      "component": "v-selection",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000042",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000043",
    "text": "Component: v-data-and-display\nType: component_overview\n\n# v-data-and-display\n\nThese components are used to display data and information in a variety of ways.",
    "display_content": "# v-data-and-display\n\nThese components are used to display data and information in a variety of ways.",
    "metadata": {
      "component": "v-data-and-display",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000043",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000044",
    "text": "Component: v-feedback\nType: component_overview\n\n# v-feedback\n\nThese components are used to provide feedback to the user within content, over content, or in response to user actions.",
    "display_content": "# v-feedback\n\nThese components are used to provide feedback to the user within content, over content, or in response to user actions.",
    "metadata": {
      "component": "v-feedback",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000044",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000045",
    "text": "Component: v-images-and-icons\nType: component_overview\n\n# v-images-and-icons\n\nThis subset of components are used to display media in a variety of ways.",
    "display_content": "# v-images-and-icons\n\nThis subset of components are used to display media in a variety of ways.",
    "metadata": {
      "component": "v-images-and-icons",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000045",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000046",
    "text": "Component: v-pickers\nType: component_overview\n\n# v-pickers\n\nThese components are used to select a value from a specifically styled set of options.",
    "display_content": "# v-pickers\n\nThese components are used to select a value from a specifically styled set of options.",
    "metadata": {
      "component": "v-pickers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000046",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000047",
    "text": "Component: v-providers\nType: component_overview\n\n# v-providers\n\nThe defaults provider component is used to set default values for all components within a template",
    "display_content": "# v-providers\n\nThe defaults provider component is used to set default values for all components within a template",
    "metadata": {
      "component": "v-providers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000047",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000048",
    "text": "Component: v-miscellaneous\nType: component_overview\n\n# v-miscellaneous\n\nThese components don't fit into a traditional category and are used for a variety of purposes.",
    "display_content": "# v-miscellaneous\n\nThese components don't fit into a traditional category and are used for a variety of purposes.",
    "metadata": {
      "component": "v-miscellaneous",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000048",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000049",
    "text": "Component: v-app-bar\nType: component_overview\n\n# v-app-bar\n\nimport PropScrollBehavior from '@/examples/v-app-bar/prop-scroll-behavior.vue'",
    "display_content": "# v-app-bar\n\nimport PropScrollBehavior from '@/examples/v-app-bar/prop-scroll-behavior.vue'",
    "metadata": {
      "component": "v-app-bar",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000049",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000050",
    "text": "Component: v-app-bars\nType: component_overview\n\n# v-app-bars\n\nThe `v-app-bar` component is pivotal to any graphical user interface (GUI), as it generally is the primary source of site navigation.",
    "display_content": "# v-app-bars\n\nThe `v-app-bar` component is pivotal to any graphical user interface (GUI), as it generally is the primary source of site navigation.",
    "metadata": {
      "component": "v-app-bars",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000050",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000051",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-app-bar` component is used for application-wide actions and information.",
    "display_content": "# v-usage\n\nThe `v-app-bar` component is used for application-wide actions and information.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000051",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000052",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-app-bar](/api/v-app-bar/) | Primary Component | | [v-app-bar-nav-icon](/api/v-app-bar-nav-icon/) | A customized [v-btn](/components/buttons/) component that uses a default *icon* value of **$menu** | | [v-app-bar-title](/api/v-app-bar-title/) | An extension of `v-toolbar-title` that is used for scrolling techniques |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-app-bar](/api/v-app-bar/) | Primary Component | | [v-app-bar-nav-icon](/api/v-app-bar-nav-icon/) | A customized [v-btn](/components/buttons/) component that uses a default *icon* value of **$menu** | | [v-app-bar-title](/api/v-app-bar-title/) | An extension of `v-toolbar-title` that is used for scrolling techniques |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000052",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000053",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-app-bar` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-app-bar` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000053",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000054",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-app-bar` component.\n\nAvailable sections: Props, Scroll behavior, Density, Images, Prominent, Misc App Bar Nav, Misc Menu, Prop Dense, Prop Density, Prop Image, Prop Prominent, Prop Scroll Behavior, Usage",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-app-bar` component.\n\nAvailable sections: Props, Scroll behavior, Density, Images, Prominent, Misc App Bar Nav, Misc Menu, Prop Dense, Prop Density, Prop Image, Prop Prominent, Prop Scroll Behavior, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000054",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000055",
    "text": "Component: v-examples\nSection: Props\nType: api_reference\n\n## v-examples - Props\n\nThe `v-app-bar` component has a variety of props that allow you to customize its look and feel, density, scroll behavior, and more.",
    "display_content": "## v-examples - Props\n\nThe `v-app-bar` component has a variety of props that allow you to customize its look and feel, density, scroll behavior, and more.",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000055",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000056",
    "text": "Component: v-examples\nSection: Scroll behavior\nType: documentation\n\n## v-examples - Scroll behavior\n\nAvailable values:\n\n- **hide**: The default slot area will shift up and hide as the user scrolls down. The extension slot remains visible.\n- **fully-hide**: The entire app bar will hide as the user scrolls down.\n- **collapse**: Shrink horizontally to a small bar in one corner.\n- **elevate**: Add a drop shadow to the app bar when scrolling. Ignores `scroll-threshold`, will always be applied with any amount of scrolling.\n- **fade-image**: Fade out the image as the user scrolls down.\n- **inverted**: Has no effect on its own, but will reverse the behavior when combined with any other option.\n\nThe `scroll-threshold` prop is used to determine how far the user must scroll down (in pixels) before the behavior is applied.\n\nA scroll listener is added to `window` by default, but can be changed to a custom element using the `scroll-target` prop.\n\n<prop-scroll-behavior />",
    "display_content": "## v-examples - Scroll behavior\n\nAvailable values:\n\n- **hide**: The default slot area will shift up and hide as the user scrolls down. The extension slot remains visible.\n- **fully-hide**: The entire app bar will hide as the user scrolls down.\n- **collapse**: Shrink horizontally to a small bar in one corner.\n- **elevate**: Add a drop shadow to the app bar when scrolling. Ignores `scroll-threshold`, will always be applied with any amount of scrolling.\n- **fade-image**: Fade out the image as the user scrolls down.\n- **inverted**: Has no effect on its own, but will reverse the behavior when combined with any other option.\n\nThe `scroll-threshold` prop is used to determine how far the user must scroll down (in pixels) before the behavior is applied.\n\nA scroll listener is added to `window` by default, but can be changed to a custom element using the `scroll-target` prop.\n\n<prop-scroll-behavior />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Scroll behavior",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000056",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000057",
    "text": "Component: v-examples\nSection: Density\nType: documentation\n\n## v-examples - Density\n\nYou can make **app-bar** dense. A dense app bar has lower height than regular one.\n\n<ExamplesExample file=\"v-app-bar/prop-density\" />",
    "display_content": "## v-examples - Density\n\nYou can make **app-bar** dense. A dense app bar has lower height than regular one.\n\n<ExamplesExample file=\"v-app-bar/prop-density\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000057",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000058",
    "text": "Component: v-examples\nSection: Images\nType: documentation\n\n## v-examples - Images\n\n`v-app-bar` can contain background images. You can set source via the `image` prop. If you need to customize the `v-img` properties, the app-bar provides you with an **image** slot.\n\n<ExamplesExample file=\"v-app-bar/prop-image\" />",
    "display_content": "## v-examples - Images\n\n`v-app-bar` can contain background images. You can set source via the `image` prop. If you need to customize the `v-img` properties, the app-bar provides you with an **image** slot.\n\n<ExamplesExample file=\"v-app-bar/prop-image\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Images",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000058",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000059",
    "text": "Component: v-examples\nSection: Prominent\nType: documentation\n\n## v-examples - Prominent\n\nAn `v-app-bar` with the `density=\"prominent\"` prop can be used for longer titles, to house imagery, or to provide a stronger presence to the top app bar.\n\n<ExamplesExample file=\"v-app-bar/prop-prominent\" />",
    "display_content": "## v-examples - Prominent\n\nAn `v-app-bar` with the `density=\"prominent\"` prop can be used for longer titles, to house imagery, or to provide a stronger presence to the top app bar.\n\n<ExamplesExample file=\"v-app-bar/prop-prominent\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Prominent",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000059",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000060",
    "text": "Component: v-examples\nSection: Misc App Bar Nav\nType: code_example\n\n## v-examples - Misc App Bar Nav\n\n```vue\n<template>\n  <v-layout style=\"overflow: hidden\">\n    <v-app-bar\n      color=\"deep-purple\"\n      absolute\n    >\n      <v-app-bar-nav-icon @click=\"drawer = !drawer\"></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Title</v-toolbar-title>\n    </v-app-bar>\n    <v-navigation-drawer\n      v-model=\"drawer\"\n      absolute\n      temporary\n    >\n      <v-list\n        v-model=\"group\"\n        color=\"deep-purple-accent-4\"\n        density=\"compact\"\n        nav\n      >\n        <v-list-item prepend-icon=\"mdi-home\" title=\"Home\" value=\"home\"></v-list-item>\n\n        <v-list-item prepend-icon=\"mdi-account\" title=\"Account\" value=\"account\"></v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n    <v-main>\n      <v-card\n        class=\"mx-auto overflow-hidden\"\n        height=\"400\"\n      ></v-card>\n    </v-main>\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const drawer = ref(false)\n  const group = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      drawer: false,\n      group: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc App Bar Nav\n\n```vue\n<template>\n  <v-layout style=\"overflow: hidden\">\n    <v-app-bar\n      color=\"deep-purple\"\n      absolute\n    >\n      <v-app-bar-nav-icon @click=\"drawer = !drawer\"></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Title</v-toolbar-title>\n    </v-app-bar>\n    <v-navigation-drawer\n      v-model=\"drawer\"\n      absolute\n      temporary\n    >\n      <v-list\n        v-model=\"group\"\n        color=\"deep-purple-accent-4\"\n        density=\"compact\"\n        nav\n      >\n        <v-list-item prepend-icon=\"mdi-home\" title=\"Home\" value=\"home\"></v-list-item>\n\n        <v-list-item prepend-icon=\"mdi-account\" title=\"Account\" value=\"account\"></v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n    <v-main>\n      <v-card\n        class=\"mx-auto overflow-hidden\"\n        height=\"400\"\n      ></v-card>\n    </v-main>\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const drawer = ref(false)\n  const group = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      drawer: false,\n      group: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc App Bar Nav",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000060",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000061",
    "text": "Component: v-examples\nSection: Misc Menu\nType: code_example\n\n## v-examples - Misc Menu\n\n```vue\n<template>\n  <v-layout>\n    <v-app-bar\n      color=\"#6A76AB\"\n      scroll-behavior=\"shrink fade-image\"\n      scroll-target=\"#scrolling-techniques-4\"\n      src=\"https://picsum.photos/1920/1080?random\"\n      absolute\n    >\n      <template v-slot:image>\n        <v-img gradient=\"to top right, rgba(100,115,201,.7), rgba(25,32,72,.7)\"></v-img>\n      </template>\n\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Title</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n      <v-menu>\n        <template v-slot:activator=\"{ props }\">\n          <v-btn\n            color=\"yellow\"\n            icon\n            v-bind=\"props\"\n          >\n            <v-icon>mdi-dots-vertical</v-icon>\n          </v-btn>\n        </template>\n\n        <v-list>\n          <v-list-item>\n            <v-list-item-title>Click Me 1</v-list-item-title>\n          </v-list-item>\n\n          <v-list-item>\n            <v-list-item-title>Click Me 2</v-list-item-title>\n          </v-list-item>\n\n          <v-list-item>\n            <v-list-item-title>Click Me 3</v-list-item-title>\n          </v-list-item>\n\n          <v-list-item>\n            <v-list-item-title>Click Me 4</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n\n      <template v-slot:extension>\n        <v-tabs align-tabs=\"title\">\n          <v-tab>Tab 1</v-tab>\n\n          <v-tab>Tab 2</v-tab>\n\n          <v-tab>Tab 3</v-tab>\n        </v-tabs>\n      </template>\n    </v-app-bar>\n    <v-sheet\n      id=\"scrolling-techniques-4\"\n      class=\"overflow-y-auto\"\n      max-height=\"600\"\n      width=\"100%\"\n    >\n      <v-container style=\"height: 1000px;\"></v-container>\n    </v-sheet>\n  </v-layout>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Menu\n\n```vue\n<template>\n  <v-layout>\n    <v-app-bar\n      color=\"#6A76AB\"\n      scroll-behavior=\"shrink fade-image\"\n      scroll-target=\"#scrolling-techniques-4\"\n      src=\"https://picsum.photos/1920/1080?random\"\n      absolute\n    >\n      <template v-slot:image>\n        <v-img gradient=\"to top right, rgba(100,115,201,.7), rgba(25,32,72,.7)\"></v-img>\n      </template>\n\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Title</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n      <v-menu>\n        <template v-slot:activator=\"{ props }\">\n          <v-btn\n            color=\"yellow\"\n            icon\n            v-bind=\"props\"\n          >\n            <v-icon>mdi-dots-vertical</v-icon>\n          </v-btn>\n        </template>\n\n        <v-list>\n          <v-list-item>\n            <v-list-item-title>Click Me 1</v-list-item-title>\n          </v-list-item>\n\n          <v-list-item>\n            <v-list-item-title>Click Me 2</v-list-item-title>\n          </v-list-item>\n\n          <v-list-item>\n            <v-list-item-title>Click Me 3</v-list-item-title>\n          </v-list-item>\n\n          <v-list-item>\n            <v-list-item-title>Click Me 4</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n\n      <template v-slot:extension>\n        <v-tabs align-tabs=\"title\">\n          <v-tab>Tab 1</v-tab>\n\n          <v-tab>Tab 2</v-tab>\n\n          <v-tab>Tab 3</v-tab>\n        </v-tabs>\n      </template>\n    </v-app-bar>\n    <v-sheet\n      id=\"scrolling-techniques-4\"\n      class=\"overflow-y-auto\"\n      max-height=\"600\"\n      width=\"100%\"\n    >\n      <v-container style=\"height: 1000px;\"></v-container>\n    </v-sheet>\n  </v-layout>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Menu",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000061",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000062",
    "text": "Component: v-examples\nSection: Prop Dense\nType: code_example\n\n## v-examples - Prop Dense\n\n```vue\n<template>\n  <div>\n    <v-app-bar\n      color=\"deep-purple-accent-4\"\n      dense\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Page title</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-menu>\n        <template v-slot:activator=\"{ props }\">\n          <v-btn\n            icon\n            v-bind=\"props\"\n          >\n            <v-icon>mdi-dots-vertical</v-icon>\n          </v-btn>\n        </template>\n\n        <v-list>\n          <v-list-item\n            v-for=\"n in 5\"\n            :key=\"n\"\n            @click=\"() => {}\"\n          >\n            <v-list-item-title>Option {{ n }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-app-bar>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Dense\n\n```vue\n<template>\n  <div>\n    <v-app-bar\n      color=\"deep-purple-accent-4\"\n      dense\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Page title</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-menu>\n        <template v-slot:activator=\"{ props }\">\n          <v-btn\n            icon\n            v-bind=\"props\"\n          >\n            <v-icon>mdi-dots-vertical</v-icon>\n          </v-btn>\n        </template>\n\n        <v-list>\n          <v-list-item\n            v-for=\"n in 5\"\n            :key=\"n\"\n            @click=\"() => {}\"\n          >\n            <v-list-item-title>Option {{ n }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-app-bar>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Dense",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000062",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000063",
    "text": "Component: v-examples\nSection: Prop Density\nType: code_example\n\n## v-examples - Prop Density\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"448\"\n  >\n    <v-layout>\n      <v-app-bar\n        color=\"primary\"\n        density=\"compact\"\n      >\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <v-app-bar-title>Photos</v-app-bar-title>\n\n        <template v-slot:append>\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <v-container fluid>\n          <v-row dense>\n            <v-col\n              v-for=\"n in 8\"\n              :key=\"n\"\n              cols=\"3\"\n            >\n              <v-sheet\n                color=\"surface-variant-alt\"\n                height=\"96\"\n              ></v-sheet>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Density\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"448\"\n  >\n    <v-layout>\n      <v-app-bar\n        color=\"primary\"\n        density=\"compact\"\n      >\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <v-app-bar-title>Photos</v-app-bar-title>\n\n        <template v-slot:append>\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <v-container fluid>\n          <v-row dense>\n            <v-col\n              v-for=\"n in 8\"\n              :key=\"n\"\n              cols=\"3\"\n            >\n              <v-sheet\n                color=\"surface-variant-alt\"\n                height=\"96\"\n              ></v-sheet>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Density",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000063",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000064",
    "text": "Component: v-examples\nSection: Prop Image\nType: code_example\n\n## v-examples - Prop Image\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" color=\"grey-lighten-3\" max-width=\"448\">\n    <v-layout>\n      <v-app-bar\n        color=\"teal-darken-4\"\n        image=\"https://picsum.photos/1920/1080?random\"\n      >\n        <template v-slot:image>\n          <v-img\n            gradient=\"to top right, rgba(19,84,122,.8), rgba(128,208,199,.8)\"\n          ></v-img>\n        </template>\n\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <v-app-bar-title>Title</v-app-bar-title>\n\n        <v-btn icon>\n          <v-icon>mdi-magnify</v-icon>\n        </v-btn>\n\n        <v-btn icon>\n          <v-icon>mdi-heart</v-icon>\n        </v-btn>\n\n        <v-btn icon>\n          <v-icon>mdi-dots-vertical</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <v-main>\n        <v-container fluid>\n          <v-row dense>\n            <v-col\n              v-for=\"n in 4\"\n              :key=\"n\"\n              cols=\"12\"\n            >\n              <v-card\n                :subtitle=\"`Subtitle for Content ${n}`\"\n                :title=\"`Content ${n}`\"\n                text=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit.?\"\n              ></v-card>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Image\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" color=\"grey-lighten-3\" max-width=\"448\">\n    <v-layout>\n      <v-app-bar\n        color=\"teal-darken-4\"\n        image=\"https://picsum.photos/1920/1080?random\"\n      >\n        <template v-slot:image>\n          <v-img\n            gradient=\"to top right, rgba(19,84,122,.8), rgba(128,208,199,.8)\"\n          ></v-img>\n        </template>\n\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <v-app-bar-title>Title</v-app-bar-title>\n\n        <v-btn icon>\n          <v-icon>mdi-magnify</v-icon>\n        </v-btn>\n\n        <v-btn icon>\n          <v-icon>mdi-heart</v-icon>\n        </v-btn>\n\n        <v-btn icon>\n          <v-icon>mdi-dots-vertical</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <v-main>\n        <v-container fluid>\n          <v-row dense>\n            <v-col\n              v-for=\"n in 4\"\n              :key=\"n\"\n              cols=\"12\"\n            >\n              <v-card\n                :subtitle=\"`Subtitle for Content ${n}`\"\n                :title=\"`Content ${n}`\"\n                text=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit.?\"\n              ></v-card>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Image",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000064",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000065",
    "text": "Component: v-examples\nSection: Prop Prominent\nType: code_example\n\n## v-examples - Prop Prominent\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"448\">\n    <v-layout>\n      <v-app-bar\n        color=\"info\"\n        density=\"prominent\"\n      >\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <v-app-bar-title>My Recent Trips</v-app-bar-title>\n\n        <template v-slot:append>\n          <v-btn icon>\n            <v-icon>mdi-dots-vertical</v-icon>\n          </v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <v-container fluid>\n          <v-card\n            class=\"mb-2\"\n            density=\"compact\"\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/10.jpg\"\n            subtitle=\"Salsa, merengue, y cumbia\"\n            title=\"Cuba\"\n            variant=\"text\"\n            border\n          >\n            <v-img height=\"128\" src=\"https://picsum.photos/512/128?image=660\" cover></v-img>\n\n            <v-card-text>\n              During my last trip to South America, I spent 2 weeks traveling through Patagonia in Chile.\n            </v-card-text>\n\n            <template v-slot:actions>\n              <v-btn color=\"primary\" variant=\"text\">View More</v-btn>\n\n              <v-btn color=\"primary\" variant=\"text\">See in Map</v-btn>\n            </template>\n          </v-card>\n\n          <v-card\n            density=\"comfortable\"\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/17.jpg\"\n            subtitle=\"Salsa, merengue, y cumbia\"\n            title=\"Florida\"\n            variant=\"text\"\n            border\n          >\n            <v-img height=\"128\" src=\"https://picsum.photos/512/128?random\" cover></v-img>\n\n            <v-card-text>\n              During my last trip to Florida, I spent 2 weeks traveling through the Everglades.\n            </v-card-text>\n\n            <template v-slot:actions>\n              <v-btn color=\"primary\" variant=\"text\">View More</v-btn>\n\n              <v-btn color=\"primary\" variant=\"text\">See in Map</v-btn>\n            </template>\n          </v-card>\n        </v-container>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Prominent\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"448\">\n    <v-layout>\n      <v-app-bar\n        color=\"info\"\n        density=\"prominent\"\n      >\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <v-app-bar-title>My Recent Trips</v-app-bar-title>\n\n        <template v-slot:append>\n          <v-btn icon>\n            <v-icon>mdi-dots-vertical</v-icon>\n          </v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <v-container fluid>\n          <v-card\n            class=\"mb-2\"\n            density=\"compact\"\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/10.jpg\"\n            subtitle=\"Salsa, merengue, y cumbia\"\n            title=\"Cuba\"\n            variant=\"text\"\n            border\n          >\n            <v-img height=\"128\" src=\"https://picsum.photos/512/128?image=660\" cover></v-img>\n\n            <v-card-text>\n              During my last trip to South America, I spent 2 weeks traveling through Patagonia in Chile.\n            </v-card-text>\n\n            <template v-slot:actions>\n              <v-btn color=\"primary\" variant=\"text\">View More</v-btn>\n\n              <v-btn color=\"primary\" variant=\"text\">See in Map</v-btn>\n            </template>\n          </v-card>\n\n          <v-card\n            density=\"comfortable\"\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/17.jpg\"\n            subtitle=\"Salsa, merengue, y cumbia\"\n            title=\"Florida\"\n            variant=\"text\"\n            border\n          >\n            <v-img height=\"128\" src=\"https://picsum.photos/512/128?random\" cover></v-img>\n\n            <v-card-text>\n              During my last trip to Florida, I spent 2 weeks traveling through the Everglades.\n            </v-card-text>\n\n            <template v-slot:actions>\n              <v-btn color=\"primary\" variant=\"text\">View More</v-btn>\n\n              <v-btn color=\"primary\" variant=\"text\">See in Map</v-btn>\n            </template>\n          </v-card>\n        </v-container>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Prominent",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000065",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000066",
    "text": "Component: v-examples\nSection: Prop Scroll Behavior\nType: code_example\n\n## v-examples - Prop Scroll Behavior\n\n```vue\n<template>\n  <AppSheet class=\"mb-6\">\n    <ExamplesUsageExample\n      v-model=\"model\"\n      :code=\"code\"\n      :name=\"name\"\n      :options=\"options\"\n    >\n      <v-layout class=\"overflow-visible\" style=\"height: 300px\">\n        <v-main id=\"scroll-behavior-layout\" class=\"pt-0\" scrollable>\n          <v-app-bar\n            v-bind=\"props\"\n            color=\"secondary\"\n            scroll-target=\"#scroll-behavior-layout > .v-main__scroller\"\n            style=\"position: sticky\"\n          >\n            <template v-slot:prepend>\n              <v-app-bar-nav-icon></v-app-bar-nav-icon>\n            </template>\n\n            <v-app-bar-title>Application Bar</v-app-bar-title>\n\n            <template v-if=\"actions\" v-slot:append>\n              <v-btn icon=\"mdi-heart\"></v-btn>\n\n              <v-btn icon=\"mdi-magnify\"></v-btn>\n\n              <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n            </template>\n          </v-app-bar>\n\n          <div style=\"height: 1000px\"></div>\n        </v-main>\n      </v-layout>\n\n      <template v-slot:configuration>\n        <v-checkbox v-for=\"option in behaviors\" :key=\"option.value\" v-model=\"selectedBehaviors\" :label=\"option.title\" :value=\"option.value\"></v-checkbox>\n        <v-divider></v-divider>\n        <v-checkbox v-model=\"selectedBehaviors\" label=\"Inverted\" value=\"inverted\"></v-checkbox>\n        <v-slider v-model=\"scrollThreshold\" label=\"Threshold\" max=\"1000\" min=\"0\" step=\"1\"></v-slider>\n      </template>\n    </ExamplesUsageExample>\n  </AppSheet>\n</template>\n\n<script setup>\n  const name = 'v-app-bar'\n  const model = ref('default')\n  const options = []\n\n  const actions = ref(false)\n  const scrollThreshold = ref(300)\n  const selectedBehaviors = ref([])\n  const behaviors = [\n    { value: 'hide', title: 'Hide' },\n    { value: 'collapse', title: 'Collapse' },\n    { value: 'elevate', title: 'Elevate' },\n    { value: 'fade-image', title: 'Fade image' },\n  ]\n\n  const props = computed(() => {\n    return {\n      'scroll-behavior': selectedBehaviors.value.join(' ') || undefined,\n      'scroll-threshold': scrollThreshold.value === 300 ? undefined : String(scrollThreshold.value),\n      image: selectedBehaviors.value.includes('fade-image') ? 'https://picsum.photos/1920/1080?random' : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    let str = ''\n\n    if (actions.value) {\n      str += `\n  <template v-slot:append>\n    <v-btn icon=\"mdi-heart\"></v-btn>\n\n    <v-btn icon=\"mdi-magnify\"></v-btn>\n\n    <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n  </template>\n`\n    }\n\n    return str\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Prop Scroll Behavior\n\n```vue\n<template>\n  <AppSheet class=\"mb-6\">\n    <ExamplesUsageExample\n      v-model=\"model\"\n      :code=\"code\"\n      :name=\"name\"\n      :options=\"options\"\n    >\n      <v-layout class=\"overflow-visible\" style=\"height: 300px\">\n        <v-main id=\"scroll-behavior-layout\" class=\"pt-0\" scrollable>\n          <v-app-bar\n            v-bind=\"props\"\n            color=\"secondary\"\n            scroll-target=\"#scroll-behavior-layout > .v-main__scroller\"\n            style=\"position: sticky\"\n          >\n            <template v-slot:prepend>\n              <v-app-bar-nav-icon></v-app-bar-nav-icon>\n            </template>\n\n            <v-app-bar-title>Application Bar</v-app-bar-title>\n\n            <template v-if=\"actions\" v-slot:append>\n              <v-btn icon=\"mdi-heart\"></v-btn>\n\n              <v-btn icon=\"mdi-magnify\"></v-btn>\n\n              <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n            </template>\n          </v-app-bar>\n\n          <div style=\"height: 1000px\"></div>\n        </v-main>\n      </v-layout>\n\n      <template v-slot:configuration>\n        <v-checkbox v-for=\"option in behaviors\" :key=\"option.value\" v-model=\"selectedBehaviors\" :label=\"option.title\" :value=\"option.value\"></v-checkbox>\n        <v-divider></v-divider>\n        <v-checkbox v-model=\"selectedBehaviors\" label=\"Inverted\" value=\"inverted\"></v-checkbox>\n        <v-slider v-model=\"scrollThreshold\" label=\"Threshold\" max=\"1000\" min=\"0\" step=\"1\"></v-slider>\n      </template>\n    </ExamplesUsageExample>\n  </AppSheet>\n</template>\n\n<script setup>\n  const name = 'v-app-bar'\n  const model = ref('default')\n  const options = []\n\n  const actions = ref(false)\n  const scrollThreshold = ref(300)\n  const selectedBehaviors = ref([])\n  const behaviors = [\n    { value: 'hide', title: 'Hide' },\n    { value: 'collapse', title: 'Collapse' },\n    { value: 'elevate', title: 'Elevate' },\n    { value: 'fade-image', title: 'Fade image' },\n  ]\n\n  const props = computed(() => {\n    return {\n      'scroll-behavior': selectedBehaviors.value.join(' ') || undefined,\n      'scroll-threshold': scrollThreshold.value === 300 ? undefined : String(scrollThreshold.value),\n      image: selectedBehaviors.value.includes('fade-image') ? 'https://picsum.photos/1920/1080?random' : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    let str = ''\n\n    if (actions.value) {\n      str += `\n  <template v-slot:append>\n    <v-btn icon=\"mdi-heart\"></v-btn>\n\n    <v-btn icon=\"mdi-magnify\"></v-btn>\n\n    <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n  </template>\n`\n    }\n\n    return str\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Scroll Behavior",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000066",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000067",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-layout class=\"overflow-visible\">\n      <v-app-bar v-bind=\"props\">\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <v-app-bar-title>Application Bar</v-app-bar-title>\n\n        <template v-if=\"actions\" v-slot:append>\n          <v-btn icon=\"mdi-heart\"></v-btn>\n\n          <v-btn icon=\"mdi-magnify\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main style=\"height: 75px;\"></v-main>\n    </v-layout>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"actions\" label=\"Actions\"></v-checkbox>\n\n      <v-slider v-model=\"elevation\" label=\"Elevation\" max=\"24\" min=\"0\" step=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-app-bar'\n  const model = ref('default')\n  const actions = ref(false)\n  const elevation = ref(2)\n  const options = ['collapse', 'rounded']\n\n  const props = computed(() => {\n    return {\n      collapse: model.value === 'collapse' ? true : undefined,\n      elevation: elevation.value === 4 ? undefined : elevation.value,\n      rounded: model.value === 'rounded' ? true : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    let str = ''\n\n    str += `\n  <template v-slot:prepend>\n    <v-app-bar-nav-icon></v-app-bar-nav-icon>\n  </template>\n\n  <v-app-bar-title>Application Bar</v-app-bar-title>\n`\n\n    if (actions.value) {\n      str += `\n  <template v-slot:append>\n    <v-btn icon=\"mdi-heart\"></v-btn>\n\n    <v-btn icon=\"mdi-magnify\"></v-btn>\n\n    <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n  </template>\n`\n    }\n\n    return str\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-layout class=\"overflow-visible\">\n      <v-app-bar v-bind=\"props\">\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <v-app-bar-title>Application Bar</v-app-bar-title>\n\n        <template v-if=\"actions\" v-slot:append>\n          <v-btn icon=\"mdi-heart\"></v-btn>\n\n          <v-btn icon=\"mdi-magnify\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main style=\"height: 75px;\"></v-main>\n    </v-layout>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"actions\" label=\"Actions\"></v-checkbox>\n\n      <v-slider v-model=\"elevation\" label=\"Elevation\" max=\"24\" min=\"0\" step=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-app-bar'\n  const model = ref('default')\n  const actions = ref(false)\n  const elevation = ref(2)\n  const options = ['collapse', 'rounded']\n\n  const props = computed(() => {\n    return {\n      collapse: model.value === 'collapse' ? true : undefined,\n      elevation: elevation.value === 4 ? undefined : elevation.value,\n      rounded: model.value === 'rounded' ? true : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    let str = ''\n\n    str += `\n  <template v-slot:prepend>\n    <v-app-bar-nav-icon></v-app-bar-nav-icon>\n  </template>\n\n  <v-app-bar-title>Application Bar</v-app-bar-title>\n`\n\n    if (actions.value) {\n      str += `\n  <template v-slot:append>\n    <v-btn icon=\"mdi-heart\"></v-btn>\n\n    <v-btn icon=\"mdi-magnify\"></v-btn>\n\n    <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n  </template>\n`\n    }\n\n    return str\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000067",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000068",
    "text": "Component: v-application\nType: component_overview\n\n# v-application\n\nThe `v-app` component is an optional feature that serves as the root layout component as well as providing an easy way to control the theme used at the root level.",
    "display_content": "# v-application\n\nThe `v-app` component is an optional feature that serves as the root layout component as well as providing an easy way to control the theme used at the root level.",
    "metadata": {
      "component": "v-application",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000068",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000069",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-app](/api/v-app/) | Primary Component | | [v-main](/api/v-main/) | Content area |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-app](/api/v-app/) | Primary Component | | [v-main](/api/v-main/) | Content area |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000069",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000070",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nIn Vuetify, the `v-app` component is a convenient way to dynamically modify your application's current theme and provide an entry point for your layouts. When an application is mounted, each layout child registers itself with the closest layout parent and is then automatically placed in your window.",
    "display_content": "# v-guide\n\nIn Vuetify, the `v-app` component is a convenient way to dynamically modify your application's current theme and provide an entry point for your layouts. When an application is mounted, each layout child registers itself with the closest layout parent and is then automatically placed in your window.",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000070",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000071",
    "text": "Component: v-theme\nType: component_overview\n\n# v-theme\n\nThe `v-app` component makes it easy to enable one of your application defined themes. By default, Vuetify comes with 2 themes, **light** and **dark**. Each one is a collection of various colors used to style each individual component. Because `v-app` acts as an interface for [theme](/features/theme/) functionality, you have the ability to change it dynamically within your template.",
    "display_content": "# v-theme\n\nThe `v-app` component makes it easy to enable one of your application defined themes. By default, Vuetify comes with 2 themes, **light** and **dark**. Each one is a collection of various colors used to style each individual component. Because `v-app` acts as an interface for [theme](/features/theme/) functionality, you have the ability to change it dynamically within your template.",
    "metadata": {
      "component": "v-theme",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000071",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000072",
    "text": "Component: v-aspect-ratios\nType: component_overview\n\n# v-aspect-ratios\n\nThe `v-responsive` component can be used to fix any section to a specific aspect ratio",
    "display_content": "# v-aspect-ratios\n\nThe `v-responsive` component can be used to fix any section to a specific aspect ratio",
    "metadata": {
      "component": "v-aspect-ratios",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000072",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000073",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nSpecify a custom aspect-ratio",
    "display_content": "# v-usage\n\nSpecify a custom aspect-ratio",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000073",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000074",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-responsive](/api/v-responsive/) | Primary component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-responsive](/api/v-responsive/) | Primary component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000074",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000075",
    "text": "Component: v-autocompletes\nType: component_overview\n\n# v-autocompletes\n\nThe `v-autocomplete` component offers simple and flexible type-ahead functionality. This is useful when searching large sets of data or even dynamically requesting information from an API.",
    "display_content": "# v-autocompletes\n\nThe `v-autocomplete` component offers simple and flexible type-ahead functionality. This is useful when searching large sets of data or even dynamically requesting information from an API.",
    "metadata": {
      "component": "v-autocompletes",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000075",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000076",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe autocomplete component extends `v-select` and adds the ability to filter items.",
    "display_content": "# v-usage\n\nThe autocomplete component extends `v-select` and adds the ability to filter items.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000076",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000077",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-autocomplete](/api/v-autocomplete/) | Primary Component | | [v-combobox](/api/v-combobox/) | A select component that allows for filtering and custom values | | [v-select](/api/v-select/) | A replacement for the HTML <select></select> |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-autocomplete](/api/v-autocomplete/) | Primary Component | | [v-combobox](/api/v-combobox/) | A select component that allows for filtering and custom values | | [v-select](/api/v-select/) | A replacement for the HTML <select></select> |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000077",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000078",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: error",
    "display_content": "# v-caveats\n\n::: error",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000078",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000079",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nBelow is a collection of simple to complex examples.\n\nAvailable sections: Density, Filter, Item and selection, Misc, Asynchronous items, State selector, New tab, Misc Asynchronous Items, Misc New Tab, Misc State Selector, Prop Density, Prop Filter, Slot Item And Selection, Usage",
    "display_content": "# v-examples\n\nBelow is a collection of simple to complex examples.\n\nAvailable sections: Density, Filter, Item and selection, Misc, Asynchronous items, State selector, New tab, Misc Asynchronous Items, Misc New Tab, Misc State Selector, Prop Density, Prop Filter, Slot Item And Selection, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000079",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000080",
    "text": "Component: v-examples\nSection: Density\nType: documentation\n\n## v-examples - Density\n\nYou can use `density` prop to adjust vertical spacing within the component.\n\n<ExamplesExample file=\"v-autocomplete/prop-density\" />",
    "display_content": "## v-examples - Density\n\nYou can use `density` prop to adjust vertical spacing within the component.\n\n<ExamplesExample file=\"v-autocomplete/prop-density\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000080",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000081",
    "text": "Component: v-examples\nSection: Filter\nType: documentation\n\n## v-examples - Filter\n\nThe `custom-filter` prop can be used to filter each individual item with custom logic. In this example we filter items by name.\n\n<ExamplesExample file=\"v-autocomplete/prop-filter\" />\n\n::: tip\n\nThe **v-autocomplete** component updates the search model on focus/blur events. Focus sets search to the current model (if available), and blur clears it.\n\nUnlike **v-combobox**, it doesn't keep unlisted values. To prevent unnecessary API requests when querying, ensure that search is not empty and/or doesn't match the current model.\n\n:::",
    "display_content": "## v-examples - Filter\n\nThe `custom-filter` prop can be used to filter each individual item with custom logic. In this example we filter items by name.\n\n<ExamplesExample file=\"v-autocomplete/prop-filter\" />\n\n::: tip\n\nThe **v-autocomplete** component updates the search model on focus/blur events. Focus sets search to the current model (if available), and blur clears it.\n\nUnlike **v-combobox**, it doesn't keep unlisted values. To prevent unnecessary API requests when querying, ensure that search is not empty and/or doesn't match the current model.\n\n:::",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Filter",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000081",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000082",
    "text": "Component: v-examples\nSection: Item and selection\nType: documentation\n\n## v-examples - Item and selection\n\nWith the power of slots, you can customize the visual output of the select. In this example we add a profile picture for both the chips and list items.\n\n<ExamplesExample file=\"v-autocomplete/slot-item-and-selection\" />",
    "display_content": "## v-examples - Item and selection\n\nWith the power of slots, you can customize the visual output of the select. In this example we add a profile picture for both the chips and list items.\n\n<ExamplesExample file=\"v-autocomplete/slot-item-and-selection\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Item and selection",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000082",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000083",
    "text": "Component: v-examples\nSection: Misc\nType: documentation\n\n## v-examples - Misc\n\n<!--",
    "display_content": "## v-examples - Misc\n\n<!--",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Misc",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000083",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000084",
    "text": "Component: v-examples\nSection: Asynchronous items\nType: documentation\n\n## v-examples - Asynchronous items\n\nSometimes you need to load data externally based upon a search query. Use the `search-input` prop with the **.sync** modifier when using the `autocomplete` prop. We also make use of the new `cache-items` prop. This will keep a unique list of all items that have been passed to the `items` prop and is **REQUIRED** when using asynchronous items and the **multiple** prop.\n\n<ExamplesExample file=\"v-autocomplete/misc-asynchronous-items\" />\n-->",
    "display_content": "## v-examples - Asynchronous items\n\nSometimes you need to load data externally based upon a search query. Use the `search-input` prop with the **.sync** modifier when using the `autocomplete` prop. We also make use of the new `cache-items` prop. This will keep a unique list of all items that have been passed to the `items` prop and is **REQUIRED** when using asynchronous items and the **multiple** prop.\n\n<ExamplesExample file=\"v-autocomplete/misc-asynchronous-items\" />\n-->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Asynchronous items",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000084",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000085",
    "text": "Component: v-examples\nSection: State selector\nType: documentation\n\n## v-examples - State selector\n\nUsing a combination of `v-autocomplete` slots and transitions, you can create a stylish toggleable autocomplete field such as this state selector.\n\n<ExamplesExample file=\"v-autocomplete/misc-state-selector\" />",
    "display_content": "## v-examples - State selector\n\nUsing a combination of `v-autocomplete` slots and transitions, you can create a stylish toggleable autocomplete field such as this state selector.\n\n<ExamplesExample file=\"v-autocomplete/misc-state-selector\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "State selector",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000085",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000086",
    "text": "Component: v-examples\nSection: New tab\nType: documentation\n\n## v-examples - New tab\n\n<DocIntroduced version=\"3.3.0\" />\n\nThe **auto-select-first** property highlights the first result when searching, allowing you to press <v-kbd>tab</v-kbd> or <v-kbd>enter</v-kbd> to quickly select it.\n\n<ExamplesExample file=\"v-autocomplete/misc-new-tab\" />",
    "display_content": "## v-examples - New tab\n\n<DocIntroduced version=\"3.3.0\" />\n\nThe **auto-select-first** property highlights the first result when searching, allowing you to press <v-kbd>tab</v-kbd> or <v-kbd>enter</v-kbd> to quickly select it.\n\n<ExamplesExample file=\"v-autocomplete/misc-new-tab\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "New tab",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000086",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000087",
    "text": "Component: v-examples\nSection: Misc Asynchronous Items\nType: code_example\n\n## v-examples - Misc Asynchronous Items\n\n```vue\n<template>\n  <v-toolbar color=\"teal\">\n    <v-toolbar-title>State selection</v-toolbar-title>\n\n    <v-autocomplete\n      v-model=\"select\"\n      v-model:search=\"search\"\n      :items=\"items\"\n      :loading=\"loading\"\n      class=\"mx-4\"\n      density=\"comfortable\"\n      label=\"What state are you from?\"\n      style=\"max-width: 300px;\"\n      hide-details\n      hide-no-data\n    ></v-autocomplete>\n\n    <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n  </v-toolbar>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const states = [\n    'Alabama',\n    'Alaska',\n    'American Samoa',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'District of Columbia',\n    'Federated States of Micronesia',\n    'Florida',\n    'Georgia',\n    'Guam',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Marshall Islands',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Carolina',\n    'North Dakota',\n    'Northern Mariana Islands',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Palau',\n    'Pennsylvania',\n    'Puerto Rico',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virgin Island',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming',\n  ]\n\n  const loading = ref(false)\n  const items = ref([])\n  const search = ref(null)\n  const select = ref(null)\n\n  watch(search, val => {\n    val && val !== select.value && querySelections(val)\n  })\n\n  function querySelections (v) {\n    loading.value = true\n    setTimeout(() => {\n      items.value = states.filter(e => {\n        return (e || '').toLowerCase().indexOf((v || '').toLowerCase()) > -1\n      })\n      loading.value = false\n    }, 500)\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        loading: false,\n        items: [],\n        search: null,\n        select: null,\n        states: [\n          'Alabama',\n          'Alaska',\n          'American Samoa',\n          'Arizona',\n          'Arkansas',\n          'California',\n          'Colorado',\n          'Connecticut',\n          'Delaware',\n          'District of Columbia',\n          'Federated States of Micronesia',\n          'Florida',\n          'Georgia',\n          'Guam',\n          'Hawaii',\n          'Idaho',\n          'Illinois',\n          'Indiana',\n          'Iowa',\n          'Kansas',\n          'Kentucky',\n          'Louisiana',\n          'Maine',\n          'Marshall Islands',\n          'Maryland',\n          'Massachusetts',\n          'Michigan',\n          'Minnesota',\n          'Mississippi',\n          'Missouri',\n          'Montana',\n          'Nebraska',\n          'Nevada',\n          'New Hampshire',\n          'New Jersey',\n          'New Mexico',\n          'New York',\n          'North Carolina',\n          'North Dakota',\n          'Northern Mariana Islands',\n          'Ohio',\n          'Oklahoma',\n          'Oregon',\n          'Palau',\n          'Pennsylvania',\n          'Puerto Rico',\n          'Rhode Island',\n          'South Carolina',\n          'South Dakota',\n          'Tennessee',\n          'Texas',\n          'Utah',\n          'Vermont',\n          'Virgin Island',\n          'Virginia',\n          'Washington',\n          'West Virginia',\n          'Wisconsin',\n          'Wyoming',\n        ],\n      }\n    },\n    watch: {\n      search (val) {\n        val && val !== this.select && this.querySelections(val)\n      },\n    },\n    methods: {\n      querySelections (v) {\n        this.loading = true\n        // Simulated ajax query\n        setTimeout(() => {\n          this.items = this.states.filter(e => {\n            return (e || '').toLowerCase().indexOf((v || '').toLowerCase()) > -1\n          })\n          this.loading = false\n        }, 500)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Asynchronous Items\n\n```vue\n<template>\n  <v-toolbar color=\"teal\">\n    <v-toolbar-title>State selection</v-toolbar-title>\n\n    <v-autocomplete\n      v-model=\"select\"\n      v-model:search=\"search\"\n      :items=\"items\"\n      :loading=\"loading\"\n      class=\"mx-4\"\n      density=\"comfortable\"\n      label=\"What state are you from?\"\n      style=\"max-width: 300px;\"\n      hide-details\n      hide-no-data\n    ></v-autocomplete>\n\n    <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n  </v-toolbar>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const states = [\n    'Alabama',\n    'Alaska',\n    'American Samoa',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'District of Columbia',\n    'Federated States of Micronesia',\n    'Florida',\n    'Georgia',\n    'Guam',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Marshall Islands',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Carolina',\n    'North Dakota',\n    'Northern Mariana Islands',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Palau',\n    'Pennsylvania',\n    'Puerto Rico',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virgin Island',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming',\n  ]\n\n  const loading = ref(false)\n  const items = ref([])\n  const search = ref(null)\n  const select = ref(null)\n\n  watch(search, val => {\n    val && val !== select.value && querySelections(val)\n  })\n\n  function querySelections (v) {\n    loading.value = true\n    setTimeout(() => {\n      items.value = states.filter(e => {\n        return (e || '').toLowerCase().indexOf((v || '').toLowerCase()) > -1\n      })\n      loading.value = false\n    }, 500)\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        loading: false,\n        items: [],\n        search: null,\n        select: null,\n        states: [\n          'Alabama',\n          'Alaska',\n          'American Samoa',\n          'Arizona',\n          'Arkansas',\n          'California',\n          'Colorado',\n          'Connecticut',\n          'Delaware',\n          'District of Columbia',\n          'Federated States of Micronesia',\n          'Florida',\n          'Georgia',\n          'Guam',\n          'Hawaii',\n          'Idaho',\n          'Illinois',\n          'Indiana',\n          'Iowa',\n          'Kansas',\n          'Kentucky',\n          'Louisiana',\n          'Maine',\n          'Marshall Islands',\n          'Maryland',\n          'Massachusetts',\n          'Michigan',\n          'Minnesota',\n          'Mississippi',\n          'Missouri',\n          'Montana',\n          'Nebraska',\n          'Nevada',\n          'New Hampshire',\n          'New Jersey',\n          'New Mexico',\n          'New York',\n          'North Carolina',\n          'North Dakota',\n          'Northern Mariana Islands',\n          'Ohio',\n          'Oklahoma',\n          'Oregon',\n          'Palau',\n          'Pennsylvania',\n          'Puerto Rico',\n          'Rhode Island',\n          'South Carolina',\n          'South Dakota',\n          'Tennessee',\n          'Texas',\n          'Utah',\n          'Vermont',\n          'Virgin Island',\n          'Virginia',\n          'Washington',\n          'West Virginia',\n          'Wisconsin',\n          'Wyoming',\n        ],\n      }\n    },\n    watch: {\n      search (val) {\n        val && val !== this.select && this.querySelections(val)\n      },\n    },\n    methods: {\n      querySelections (v) {\n        this.loading = true\n        // Simulated ajax query\n        setTimeout(() => {\n          this.items = this.states.filter(e => {\n            return (e || '').toLowerCase().indexOf((v || '').toLowerCase()) > -1\n          })\n          this.loading = false\n        }, 500)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Asynchronous Items",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000087",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000088",
    "text": "Component: v-examples\nSection: Misc New Tab\nType: code_example\n\n## v-examples - Misc New Tab\n\n```vue\n<template>\n  <v-card class=\"pa-8 d-flex justify-center flex-wrap\" theme=\"dark\">\n    <v-container class=\"text-center\">\n      <v-row justify=\"center\" dense>\n        <v-col cols=\"12\">\n          <v-img\n            class=\"mx-auto mt-12 mb-16\"\n            max-height=\"140\"\n            max-width=\"240\"\n            src=\"https://cdn.vuetifyjs.com/docs/images/logos/vuetify-logo-dark-text.svg\"\n          ></v-img>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-autocomplete\n            :items=\"items\"\n            append-inner-icon=\"mdi-microphone\"\n            class=\"mx-auto\"\n            density=\"comfortable\"\n            menu-icon=\"\"\n            placeholder=\"Search Google or type a URL\"\n            prepend-inner-icon=\"mdi-magnify\"\n            style=\"max-width: 350px;\"\n            theme=\"light\"\n            variant=\"solo\"\n            auto-select-first\n            item-props\n            rounded\n          ></v-autocomplete>\n        </v-col>\n\n        <v-col\n          v-for=\"(shortcut, i) in shortcuts\"\n          :key=\"i\"\n          cols=\"auto\"\n        >\n          <v-card\n            :href=\"shortcut.href\"\n            class=\"pa-4\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            width=\"112\"\n            flat\n          >\n            <v-avatar :icon=\"shortcut.icon\" class=\"mb-2\" color=\"white\" variant=\"tonal\"></v-avatar>\n\n            <div class=\"text-caption text-truncate\" v-text=\"shortcut.title\"></div>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"auto\">\n          <v-dialog v-model=\"dialog\" max-width=\"500\">\n            <template v-slot:activator=\"{ props }\">\n              <v-card v-bind=\"props\" class=\"pa-4\" width=\"112\" flat>\n\n                <v-avatar class=\"mb-2\" color=\"white\" icon=\"mdi-plus\" variant=\"tonal\"></v-avatar>\n\n                <div class=\"text-caption text-truncate\">Add shortcut</div>\n              </v-card>\n            </template>\n\n            <v-card rounded=\"lg\" title=\"Add shortcut\">\n              <template v-slot:text>\n                <v-label class=\"text-caption\">Name</v-label>\n\n                <v-text-field density=\"compact\" variant=\"solo-filled\" flat></v-text-field>\n\n                <v-label class=\"text-caption\">URL</v-label>\n\n                <v-text-field density=\"compact\" variant=\"solo-filled\" flat></v-text-field>\n              </template>\n\n              <div class=\"py-4 px-5 text-end\">\n                <v-btn\n                  class=\"text-none me-2\"\n                  color=\"blue\"\n                  text=\"Cancel\"\n                  variant=\"text\"\n                  border\n                  @click=\"dialog = false\"\n                ></v-btn>\n\n                <v-btn\n                  class=\"text-none\"\n                  color=\"blue\"\n                  text=\"Done\"\n                  variant=\"flat\"\n                  @click=\"dialog = false\"\n                ></v-btn>\n              </div>\n            </v-card>\n          </v-dialog>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'recipe with chicken',\n    },\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'best hiking trails near me',\n    },\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'how to learn a new language',\n    },\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'DIY home organization ideas',\n    },\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'latest fashion trends',\n    },\n  ]\n  const shortcuts = [\n    {\n      icon: 'mdi-github',\n      title: 'Master ',\n      href: 'https://github.com/vuetifyjs/vuetify',\n    },\n    {\n      icon: 'mdi-github',\n      title: 'Dev',\n      href: 'https://github.com/vuetifyjs/vuetify/tree/dev',\n    },\n    {\n      icon: 'mdi-github',\n      title: 'Stable',\n      href: 'https://github.com/vuetifyjs/vuetify/tree/v2-stable',\n    },\n    {\n      icon: 'mdi-github',\n      title: 'My Pull Requests',\n      href: 'https://github.com/vuetifyjs/vuetify/pulls/johnleider',\n    },\n  ]\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dialog: false,\n      items: [\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'recipe with chicken',\n        },\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'best hiking trails near me',\n        },\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'how to learn a new language',\n        },\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'DIY home organization ideas',\n        },\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'latest fashion trends',\n        },\n      ],\n      shortcuts: [\n        {\n          icon: 'mdi-github',\n          title: 'Master ',\n          href: 'https://github.com/vuetifyjs/vuetify',\n        },\n        {\n          icon: 'mdi-github',\n          title: 'Dev',\n          href: 'https://github.com/vuetifyjs/vuetify/tree/dev',\n        },\n        {\n          icon: 'mdi-github',\n          title: 'Stable',\n          href: 'https://github.com/vuetifyjs/vuetify/tree/v2-stable',\n        },\n        {\n          icon: 'mdi-github',\n          title: 'My Pull Requests',\n          href: 'https://github.com/vuetifyjs/vuetify/pulls/johnleider',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc New Tab\n\n```vue\n<template>\n  <v-card class=\"pa-8 d-flex justify-center flex-wrap\" theme=\"dark\">\n    <v-container class=\"text-center\">\n      <v-row justify=\"center\" dense>\n        <v-col cols=\"12\">\n          <v-img\n            class=\"mx-auto mt-12 mb-16\"\n            max-height=\"140\"\n            max-width=\"240\"\n            src=\"https://cdn.vuetifyjs.com/docs/images/logos/vuetify-logo-dark-text.svg\"\n          ></v-img>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-autocomplete\n            :items=\"items\"\n            append-inner-icon=\"mdi-microphone\"\n            class=\"mx-auto\"\n            density=\"comfortable\"\n            menu-icon=\"\"\n            placeholder=\"Search Google or type a URL\"\n            prepend-inner-icon=\"mdi-magnify\"\n            style=\"max-width: 350px;\"\n            theme=\"light\"\n            variant=\"solo\"\n            auto-select-first\n            item-props\n            rounded\n          ></v-autocomplete>\n        </v-col>\n\n        <v-col\n          v-for=\"(shortcut, i) in shortcuts\"\n          :key=\"i\"\n          cols=\"auto\"\n        >\n          <v-card\n            :href=\"shortcut.href\"\n            class=\"pa-4\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            width=\"112\"\n            flat\n          >\n            <v-avatar :icon=\"shortcut.icon\" class=\"mb-2\" color=\"white\" variant=\"tonal\"></v-avatar>\n\n            <div class=\"text-caption text-truncate\" v-text=\"shortcut.title\"></div>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"auto\">\n          <v-dialog v-model=\"dialog\" max-width=\"500\">\n            <template v-slot:activator=\"{ props }\">\n              <v-card v-bind=\"props\" class=\"pa-4\" width=\"112\" flat>\n\n                <v-avatar class=\"mb-2\" color=\"white\" icon=\"mdi-plus\" variant=\"tonal\"></v-avatar>\n\n                <div class=\"text-caption text-truncate\">Add shortcut</div>\n              </v-card>\n            </template>\n\n            <v-card rounded=\"lg\" title=\"Add shortcut\">\n              <template v-slot:text>\n                <v-label class=\"text-caption\">Name</v-label>\n\n                <v-text-field density=\"compact\" variant=\"solo-filled\" flat></v-text-field>\n\n                <v-label class=\"text-caption\">URL</v-label>\n\n                <v-text-field density=\"compact\" variant=\"solo-filled\" flat></v-text-field>\n              </template>\n\n              <div class=\"py-4 px-5 text-end\">\n                <v-btn\n                  class=\"text-none me-2\"\n                  color=\"blue\"\n                  text=\"Cancel\"\n                  variant=\"text\"\n                  border\n                  @click=\"dialog = false\"\n                ></v-btn>\n\n                <v-btn\n                  class=\"text-none\"\n                  color=\"blue\"\n                  text=\"Done\"\n                  variant=\"flat\"\n                  @click=\"dialog = false\"\n                ></v-btn>\n              </div>\n            </v-card>\n          </v-dialog>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'recipe with chicken',\n    },\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'best hiking trails near me',\n    },\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'how to learn a new language',\n    },\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'DIY home organization ideas',\n    },\n    {\n      prependIcon: 'mdi-clock-outline',\n      title: 'latest fashion trends',\n    },\n  ]\n  const shortcuts = [\n    {\n      icon: 'mdi-github',\n      title: 'Master ',\n      href: 'https://github.com/vuetifyjs/vuetify',\n    },\n    {\n      icon: 'mdi-github',\n      title: 'Dev',\n      href: 'https://github.com/vuetifyjs/vuetify/tree/dev',\n    },\n    {\n      icon: 'mdi-github',\n      title: 'Stable',\n      href: 'https://github.com/vuetifyjs/vuetify/tree/v2-stable',\n    },\n    {\n      icon: 'mdi-github',\n      title: 'My Pull Requests',\n      href: 'https://github.com/vuetifyjs/vuetify/pulls/johnleider',\n    },\n  ]\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dialog: false,\n      items: [\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'recipe with chicken',\n        },\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'best hiking trails near me',\n        },\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'how to learn a new language',\n        },\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'DIY home organization ideas',\n        },\n        {\n          prependIcon: 'mdi-clock-outline',\n          title: 'latest fashion trends',\n        },\n      ],\n      shortcuts: [\n        {\n          icon: 'mdi-github',\n          title: 'Master ',\n          href: 'https://github.com/vuetifyjs/vuetify',\n        },\n        {\n          icon: 'mdi-github',\n          title: 'Dev',\n          href: 'https://github.com/vuetifyjs/vuetify/tree/dev',\n        },\n        {\n          icon: 'mdi-github',\n          title: 'Stable',\n          href: 'https://github.com/vuetifyjs/vuetify/tree/v2-stable',\n        },\n        {\n          icon: 'mdi-github',\n          title: 'My Pull Requests',\n          href: 'https://github.com/vuetifyjs/vuetify/pulls/johnleider',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc New Tab",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000088",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000089",
    "text": "Component: v-examples\nSection: Misc State Selector\nType: code_example\n\n## v-examples - Misc State Selector\n\n```vue\n<template>\n  <v-card>\n    <v-card-title class=\"text-h5 font-weight-regular bg-blue-grey\">\n      Profile\n    </v-card-title>\n\n    <v-card-text>\n      <div class=\"text-caption pa-3\">Where do you live?</div>\n\n      <v-autocomplete\n        v-model=\"model\"\n        :hint=\"!isEditing ? 'Click the icon to edit' : 'Click the icon to save'\"\n        :items=\"states\"\n        :label=\"`State — ${isEditing ? 'Editable' : 'Readonly'}`\"\n        :readonly=\"!isEditing\"\n        prepend-icon=\"mdi-city\"\n        persistent-hint\n      >\n        <template v-slot:append>\n          <v-slide-x-reverse-transition mode=\"out-in\">\n            <v-icon\n              :key=\"`icon-${isEditing}`\"\n              :color=\"isEditing ? 'success' : 'info'\"\n              :icon=\"isEditing ? 'mdi-check-outline' : 'mdi-circle-edit-outline'\"\n              @click=\"isEditing = !isEditing\"\n            ></v-icon>\n          </v-slide-x-reverse-transition>\n        </template>\n      </v-autocomplete>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const isEditing = ref(false)\n  const model = ref(null)\n\n  const states = [\n    'Alabama',\n    'Alaska',\n    'American Samoa',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'District of Columbia',\n    'Federated States of Micronesia',\n    'Florida',\n    'Georgia',\n    'Guam',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Marshall Islands',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Carolina',\n    'North Dakota',\n    'Northern Mariana Islands',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Palau',\n    'Pennsylvania',\n    'Puerto Rico',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virgin Island',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        isEditing: false,\n        model: null,\n        states: [\n          'Alabama', 'Alaska', 'American Samoa', 'Arizona',\n          'Arkansas', 'California', 'Colorado', 'Connecticut',\n          'Delaware', 'District of Columbia', 'Federated States of Micronesia',\n          'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho',\n          'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n          'Louisiana', 'Maine', 'Marshall Islands', 'Maryland',\n          'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n          'Missouri', 'Montana', 'Nebraska', 'Nevada',\n          'New Hampshire', 'New Jersey', 'New Mexico', 'New York',\n          'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio',\n          'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico',\n          'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee',\n          'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia',\n          'Washington', 'West Virginia', 'Wisconsin', 'Wyoming',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc State Selector\n\n```vue\n<template>\n  <v-card>\n    <v-card-title class=\"text-h5 font-weight-regular bg-blue-grey\">\n      Profile\n    </v-card-title>\n\n    <v-card-text>\n      <div class=\"text-caption pa-3\">Where do you live?</div>\n\n      <v-autocomplete\n        v-model=\"model\"\n        :hint=\"!isEditing ? 'Click the icon to edit' : 'Click the icon to save'\"\n        :items=\"states\"\n        :label=\"`State — ${isEditing ? 'Editable' : 'Readonly'}`\"\n        :readonly=\"!isEditing\"\n        prepend-icon=\"mdi-city\"\n        persistent-hint\n      >\n        <template v-slot:append>\n          <v-slide-x-reverse-transition mode=\"out-in\">\n            <v-icon\n              :key=\"`icon-${isEditing}`\"\n              :color=\"isEditing ? 'success' : 'info'\"\n              :icon=\"isEditing ? 'mdi-check-outline' : 'mdi-circle-edit-outline'\"\n              @click=\"isEditing = !isEditing\"\n            ></v-icon>\n          </v-slide-x-reverse-transition>\n        </template>\n      </v-autocomplete>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const isEditing = ref(false)\n  const model = ref(null)\n\n  const states = [\n    'Alabama',\n    'Alaska',\n    'American Samoa',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'District of Columbia',\n    'Federated States of Micronesia',\n    'Florida',\n    'Georgia',\n    'Guam',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Marshall Islands',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Carolina',\n    'North Dakota',\n    'Northern Mariana Islands',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Palau',\n    'Pennsylvania',\n    'Puerto Rico',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virgin Island',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        isEditing: false,\n        model: null,\n        states: [\n          'Alabama', 'Alaska', 'American Samoa', 'Arizona',\n          'Arkansas', 'California', 'Colorado', 'Connecticut',\n          'Delaware', 'District of Columbia', 'Federated States of Micronesia',\n          'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho',\n          'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n          'Louisiana', 'Maine', 'Marshall Islands', 'Maryland',\n          'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n          'Missouri', 'Montana', 'Nebraska', 'Nevada',\n          'New Hampshire', 'New Jersey', 'New Mexico', 'New York',\n          'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio',\n          'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico',\n          'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee',\n          'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia',\n          'Washington', 'West Virginia', 'Wisconsin', 'Wyoming',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc State Selector",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000089",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000090",
    "text": "Component: v-examples\nSection: Prop Density\nType: code_example\n\n## v-examples - Prop Density\n\n```vue\n<template>\n  <v-card>\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-autocomplete\n            v-model=\"values\"\n            :items=\"items\"\n            label=\"Default\"\n          ></v-autocomplete>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-autocomplete\n            v-model=\"values\"\n            :items=\"items\"\n            density=\"comfortable\"\n            label=\"Comfortable\"\n          ></v-autocomplete>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-autocomplete\n            v-model=\"values\"\n            :items=\"items\"\n            density=\"compact\"\n            label=\"Compact\"\n          ></v-autocomplete>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ['foo', 'bar', 'fizz', 'buzz']\n\n  const values = ref('foo')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['foo', 'bar', 'fizz', 'buzz'],\n      values: 'foo',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Density\n\n```vue\n<template>\n  <v-card>\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-autocomplete\n            v-model=\"values\"\n            :items=\"items\"\n            label=\"Default\"\n          ></v-autocomplete>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-autocomplete\n            v-model=\"values\"\n            :items=\"items\"\n            density=\"comfortable\"\n            label=\"Comfortable\"\n          ></v-autocomplete>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <v-autocomplete\n            v-model=\"values\"\n            :items=\"items\"\n            density=\"compact\"\n            label=\"Compact\"\n          ></v-autocomplete>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ['foo', 'bar', 'fizz', 'buzz']\n\n  const values = ref('foo')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['foo', 'bar', 'fizz', 'buzz'],\n      values: 'foo',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Density",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000090",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000091",
    "text": "Component: v-examples\nSection: Prop Filter\nType: code_example\n\n## v-examples - Prop Filter\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"purple-lighten-1\"\n    max-width=\"500\"\n  >\n    <v-toolbar color=\"purple\" flat>\n      <v-btn icon=\"mdi-account\"></v-btn>\n\n      <v-toolbar-title class=\"font-weight-light\">\n        User Profile\n      </v-toolbar-title>\n\n      <v-btn\n        icon\n        @click=\"isEditing = !isEditing\"\n      >\n        <v-fade-transition leave-absolute>\n          <v-icon v-if=\"isEditing\">mdi-close</v-icon>\n\n          <v-icon v-else>mdi-pencil</v-icon>\n        </v-fade-transition>\n      </v-btn>\n    </v-toolbar>\n\n    <v-card-text>\n      <v-text-field\n        :disabled=\"!isEditing\"\n        base-color=\"white\"\n        label=\"Name\"\n      ></v-text-field>\n\n      <v-autocomplete\n        :custom-filter=\"customFilter\"\n        :disabled=\"!isEditing\"\n        :items=\"states\"\n        base-color=\"white\"\n        item-title=\"name\"\n        item-value=\"abbr\"\n        label=\"State\"\n      ></v-autocomplete>\n    </v-card-text>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n\n      <v-btn\n        :disabled=\"!isEditing\"\n        @click=\"save\"\n      >\n        Save\n      </v-btn>\n    </v-card-actions>\n\n    <v-snackbar\n      v-model=\"hasSaved\"\n      :timeout=\"2000\"\n      location=\"bottom left\"\n      position=\"absolute\"\n      attach\n    >\n      Your profile has been updated\n    </v-snackbar>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const states = [\n    { name: 'Florida', abbr: 'FL', id: 1 },\n    { name: 'Georgia', abbr: 'GA', id: 2 },\n    { name: 'Nebraska', abbr: 'NE', id: 3 },\n    { name: 'California', abbr: 'CA', id: 4 },\n    { name: 'New York', abbr: 'NY', id: 5 },\n  ]\n\n  const hasSaved = ref(false)\n  const isEditing = ref(null)\n\n  function customFilter (itemTitle, queryText, item) {\n    const textOne = item.raw.name.toLowerCase()\n    const textTwo = item.raw.abbr.toLowerCase()\n    const searchText = queryText.toLowerCase()\n    return textOne.indexOf(searchText) > -1 || textTwo.indexOf(searchText) > -1\n  }\n  function save () {\n    isEditing.value = !isEditing.value\n    hasSaved.value = true\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      hasSaved: false,\n      isEditing: null,\n      states: [\n        { name: 'Florida', abbr: 'FL', id: 1 },\n        { name: 'Georgia', abbr: 'GA', id: 2 },\n        { name: 'Nebraska', abbr: 'NE', id: 3 },\n        { name: 'California', abbr: 'CA', id: 4 },\n        { name: 'New York', abbr: 'NY', id: 5 },\n      ],\n    }),\n\n    methods: {\n      customFilter (itemTitle, queryText, item) {\n        const textOne = item.raw.name.toLowerCase()\n        const textTwo = item.raw.abbr.toLowerCase()\n        const searchText = queryText.toLowerCase()\n\n        return textOne.indexOf(searchText) > -1 ||\n          textTwo.indexOf(searchText) > -1\n      },\n      save () {\n        this.isEditing = !this.isEditing\n        this.hasSaved = true\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Filter\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"purple-lighten-1\"\n    max-width=\"500\"\n  >\n    <v-toolbar color=\"purple\" flat>\n      <v-btn icon=\"mdi-account\"></v-btn>\n\n      <v-toolbar-title class=\"font-weight-light\">\n        User Profile\n      </v-toolbar-title>\n\n      <v-btn\n        icon\n        @click=\"isEditing = !isEditing\"\n      >\n        <v-fade-transition leave-absolute>\n          <v-icon v-if=\"isEditing\">mdi-close</v-icon>\n\n          <v-icon v-else>mdi-pencil</v-icon>\n        </v-fade-transition>\n      </v-btn>\n    </v-toolbar>\n\n    <v-card-text>\n      <v-text-field\n        :disabled=\"!isEditing\"\n        base-color=\"white\"\n        label=\"Name\"\n      ></v-text-field>\n\n      <v-autocomplete\n        :custom-filter=\"customFilter\"\n        :disabled=\"!isEditing\"\n        :items=\"states\"\n        base-color=\"white\"\n        item-title=\"name\"\n        item-value=\"abbr\"\n        label=\"State\"\n      ></v-autocomplete>\n    </v-card-text>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n\n      <v-btn\n        :disabled=\"!isEditing\"\n        @click=\"save\"\n      >\n        Save\n      </v-btn>\n    </v-card-actions>\n\n    <v-snackbar\n      v-model=\"hasSaved\"\n      :timeout=\"2000\"\n      location=\"bottom left\"\n      position=\"absolute\"\n      attach\n    >\n      Your profile has been updated\n    </v-snackbar>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const states = [\n    { name: 'Florida', abbr: 'FL', id: 1 },\n    { name: 'Georgia', abbr: 'GA', id: 2 },\n    { name: 'Nebraska', abbr: 'NE', id: 3 },\n    { name: 'California', abbr: 'CA', id: 4 },\n    { name: 'New York', abbr: 'NY', id: 5 },\n  ]\n\n  const hasSaved = ref(false)\n  const isEditing = ref(null)\n\n  function customFilter (itemTitle, queryText, item) {\n    const textOne = item.raw.name.toLowerCase()\n    const textTwo = item.raw.abbr.toLowerCase()\n    const searchText = queryText.toLowerCase()\n    return textOne.indexOf(searchText) > -1 || textTwo.indexOf(searchText) > -1\n  }\n  function save () {\n    isEditing.value = !isEditing.value\n    hasSaved.value = true\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      hasSaved: false,\n      isEditing: null,\n      states: [\n        { name: 'Florida', abbr: 'FL', id: 1 },\n        { name: 'Georgia', abbr: 'GA', id: 2 },\n        { name: 'Nebraska', abbr: 'NE', id: 3 },\n        { name: 'California', abbr: 'CA', id: 4 },\n        { name: 'New York', abbr: 'NY', id: 5 },\n      ],\n    }),\n\n    methods: {\n      customFilter (itemTitle, queryText, item) {\n        const textOne = item.raw.name.toLowerCase()\n        const textTwo = item.raw.abbr.toLowerCase()\n        const searchText = queryText.toLowerCase()\n\n        return textOne.indexOf(searchText) > -1 ||\n          textTwo.indexOf(searchText) > -1\n      },\n      save () {\n        this.isEditing = !this.isEditing\n        this.hasSaved = true\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Filter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000091",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000092",
    "text": "Component: v-examples\nSection: Slot Item And Selection\nType: code_example\n\n## v-examples - Slot Item And Selection\n\n```vue\n<template>\n  <v-card\n    :loading=\"isUpdating\"\n    class=\"mx-auto\"\n    color=\"blue-grey-darken-1\"\n    max-width=\"420\"\n  >\n    <template v-slot:loader=\"{ isActive }\">\n      <v-progress-linear\n        :active=\"isActive\"\n        color=\"green-lighten-3\"\n        height=\"4\"\n        indeterminate\n      ></v-progress-linear>\n    </template>\n\n    <v-img\n      height=\"200\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/dark-beach.jpg\"\n      cover\n    >\n      <v-row class=\"pa-3\">\n        <v-col cols=\"12\">\n          <v-menu\n            location=\"bottom start\"\n            origin=\"overlap\"\n            transition=\"slide-y-transition\"\n          >\n            <template v-slot:activator=\"{ props }\">\n              <v-btn\n                v-bind=\"props\"\n                density=\"comfortable\"\n                icon=\"mdi-dots-vertical\"\n                variant=\"tonal\"\n              ></v-btn>\n            </template>\n\n            <v-list :lines=\"false\">\n              <v-list-item\n                title=\"Update\"\n                @click=\"isUpdating = true\"\n              ></v-list-item>\n            </v-list>\n          </v-menu>\n        </v-col>\n\n        <v-row>\n          <v-col class=\"text-center\">\n            <h3 class=\"text-h5\">{{ name }}</h3>\n\n            <span class=\"text-grey-lighten-1\">{{ title }}</span>\n          </v-col>\n        </v-row>\n      </v-row>\n    </v-img>\n\n    <v-form>\n      <v-container>\n        <v-row dense>\n          <v-col cols=\"12\" md=\"6\">\n            <v-text-field\n              v-model=\"name\"\n              :disabled=\"isUpdating\"\n              color=\"blue-grey-lighten-2\"\n              label=\"Name\"\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"12\" md=\"6\">\n            <v-text-field\n              v-model=\"title\"\n              :disabled=\"isUpdating\"\n              color=\"blue-grey-lighten-2\"\n              label=\"Title\"\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"12\">\n            <v-autocomplete\n              v-model=\"friends\"\n              :disabled=\"isUpdating\"\n              :items=\"people\"\n              color=\"blue-grey-lighten-2\"\n              item-title=\"name\"\n              item-value=\"name\"\n              label=\"Select\"\n              chips\n              closable-chips\n              multiple\n            >\n              <template v-slot:chip=\"{ props, item }\">\n                <v-chip\n                  v-bind=\"props\"\n                  :prepend-avatar=\"item.raw.avatar\"\n                  :text=\"item.raw.name\"\n                ></v-chip>\n              </template>\n\n              <template v-slot:item=\"{ props, item }\">\n                <v-list-item\n                  v-bind=\"props\"\n                  :prepend-avatar=\"item.raw.avatar\"\n                  :subtitle=\"item.raw.group\"\n                  :title=\"item.raw.name\"\n                ></v-list-item>\n              </template>\n            </v-autocomplete>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-form>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-switch\n        v-model=\"autoUpdate\"\n        :disabled=\"isUpdating\"\n        class=\"mt-0 ms-2\"\n        color=\"green-lighten-2\"\n        density=\"compact\"\n        label=\"Auto Update\"\n        hide-details\n      ></v-switch>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        :disabled=\"autoUpdate\"\n        :loading=\"isUpdating\"\n        :variant=\"isUpdating ? 'tonal' : undefined\"\n        color=\"blue-grey-lighten-3\"\n        prepend-icon=\"mdi-update\"\n        @click=\"isUpdating = true\"\n      >\n        Update Now\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const srcs = {\n    1: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n    2: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n    3: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n    4: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n    5: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n  }\n  const people = [\n    { name: 'Sandra Adams', group: 'Group 1', avatar: srcs[1] },\n    { name: 'Ali Connors', group: 'Group 1', avatar: srcs[2] },\n    { name: 'Trevor Hansen', group: 'Group 1', avatar: srcs[3] },\n    { name: 'Tucker Smith', group: 'Group 1', avatar: srcs[2] },\n    { name: 'Britta Holt', group: 'Group 2', avatar: srcs[4] },\n    { name: 'Jane Smith ', group: 'Group 2', avatar: srcs[5] },\n    { name: 'John Smith', group: 'Group 2', avatar: srcs[1] },\n    { name: 'Sandra Williams', group: 'Group 2', avatar: srcs[3] },\n  ]\n\n  const autoUpdate = ref(true)\n  const friends = ref(['Sandra Adams', 'Britta Holt'])\n  const isUpdating = ref(false)\n  const name = ref('Midnight Crew')\n  const title = ref('The summer breeze')\n\n  let timeout = -1\n  watch(isUpdating, val => {\n    clearTimeout(timeout)\n    if (val) {\n      timeout = setTimeout(() => (isUpdating.value = false), 3000)\n    }\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      const srcs = {\n        1: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n        2: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n        3: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n        4: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n        5: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n      }\n\n      return {\n        autoUpdate: true,\n        friends: ['Sandra Adams', 'Britta Holt'],\n        isUpdating: false,\n        name: 'Midnight Crew',\n        people: [\n          // TODO: https://github.com/vuetifyjs/vuetify/issues/15721\n          // { header: 'Group 1' },\n          { name: 'Sandra Adams', group: 'Group 1', avatar: srcs[1] },\n          { name: 'Ali Connors', group: 'Group 1', avatar: srcs[2] },\n          { name: 'Trevor Hansen', group: 'Group 1', avatar: srcs[3] },\n          { name: 'Tucker Smith', group: 'Group 1', avatar: srcs[2] },\n          // { divider: true },\n          // { header: 'Group 2' },\n          { name: 'Britta Holt', group: 'Group 2', avatar: srcs[4] },\n          { name: 'Jane Smith ', group: 'Group 2', avatar: srcs[5] },\n          { name: 'John Smith', group: 'Group 2', avatar: srcs[1] },\n          { name: 'Sandra Williams', group: 'Group 2', avatar: srcs[3] },\n        ],\n        title: 'The summer breeze',\n        timeout: null,\n      }\n    },\n\n    watch: {\n      isUpdating (val) {\n        clearTimeout(this.timeout)\n\n        if (val) {\n          this.timeout = setTimeout(() => (this.isUpdating = false), 3000)\n        }\n      },\n    },\n\n    methods: {\n      remove (item) {\n        const index = this.friends.indexOf(item.name)\n        if (index >= 0) this.friends.splice(index, 1)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Item And Selection\n\n```vue\n<template>\n  <v-card\n    :loading=\"isUpdating\"\n    class=\"mx-auto\"\n    color=\"blue-grey-darken-1\"\n    max-width=\"420\"\n  >\n    <template v-slot:loader=\"{ isActive }\">\n      <v-progress-linear\n        :active=\"isActive\"\n        color=\"green-lighten-3\"\n        height=\"4\"\n        indeterminate\n      ></v-progress-linear>\n    </template>\n\n    <v-img\n      height=\"200\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/dark-beach.jpg\"\n      cover\n    >\n      <v-row class=\"pa-3\">\n        <v-col cols=\"12\">\n          <v-menu\n            location=\"bottom start\"\n            origin=\"overlap\"\n            transition=\"slide-y-transition\"\n          >\n            <template v-slot:activator=\"{ props }\">\n              <v-btn\n                v-bind=\"props\"\n                density=\"comfortable\"\n                icon=\"mdi-dots-vertical\"\n                variant=\"tonal\"\n              ></v-btn>\n            </template>\n\n            <v-list :lines=\"false\">\n              <v-list-item\n                title=\"Update\"\n                @click=\"isUpdating = true\"\n              ></v-list-item>\n            </v-list>\n          </v-menu>\n        </v-col>\n\n        <v-row>\n          <v-col class=\"text-center\">\n            <h3 class=\"text-h5\">{{ name }}</h3>\n\n            <span class=\"text-grey-lighten-1\">{{ title }}</span>\n          </v-col>\n        </v-row>\n      </v-row>\n    </v-img>\n\n    <v-form>\n      <v-container>\n        <v-row dense>\n          <v-col cols=\"12\" md=\"6\">\n            <v-text-field\n              v-model=\"name\"\n              :disabled=\"isUpdating\"\n              color=\"blue-grey-lighten-2\"\n              label=\"Name\"\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"12\" md=\"6\">\n            <v-text-field\n              v-model=\"title\"\n              :disabled=\"isUpdating\"\n              color=\"blue-grey-lighten-2\"\n              label=\"Title\"\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"12\">\n            <v-autocomplete\n              v-model=\"friends\"\n              :disabled=\"isUpdating\"\n              :items=\"people\"\n              color=\"blue-grey-lighten-2\"\n              item-title=\"name\"\n              item-value=\"name\"\n              label=\"Select\"\n              chips\n              closable-chips\n              multiple\n            >\n              <template v-slot:chip=\"{ props, item }\">\n                <v-chip\n                  v-bind=\"props\"\n                  :prepend-avatar=\"item.raw.avatar\"\n                  :text=\"item.raw.name\"\n                ></v-chip>\n              </template>\n\n              <template v-slot:item=\"{ props, item }\">\n                <v-list-item\n                  v-bind=\"props\"\n                  :prepend-avatar=\"item.raw.avatar\"\n                  :subtitle=\"item.raw.group\"\n                  :title=\"item.raw.name\"\n                ></v-list-item>\n              </template>\n            </v-autocomplete>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-form>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-switch\n        v-model=\"autoUpdate\"\n        :disabled=\"isUpdating\"\n        class=\"mt-0 ms-2\"\n        color=\"green-lighten-2\"\n        density=\"compact\"\n        label=\"Auto Update\"\n        hide-details\n      ></v-switch>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        :disabled=\"autoUpdate\"\n        :loading=\"isUpdating\"\n        :variant=\"isUpdating ? 'tonal' : undefined\"\n        color=\"blue-grey-lighten-3\"\n        prepend-icon=\"mdi-update\"\n        @click=\"isUpdating = true\"\n      >\n        Update Now\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const srcs = {\n    1: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n    2: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n    3: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n    4: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n    5: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n  }\n  const people = [\n    { name: 'Sandra Adams', group: 'Group 1', avatar: srcs[1] },\n    { name: 'Ali Connors', group: 'Group 1', avatar: srcs[2] },\n    { name: 'Trevor Hansen', group: 'Group 1', avatar: srcs[3] },\n    { name: 'Tucker Smith', group: 'Group 1', avatar: srcs[2] },\n    { name: 'Britta Holt', group: 'Group 2', avatar: srcs[4] },\n    { name: 'Jane Smith ', group: 'Group 2', avatar: srcs[5] },\n    { name: 'John Smith', group: 'Group 2', avatar: srcs[1] },\n    { name: 'Sandra Williams', group: 'Group 2', avatar: srcs[3] },\n  ]\n\n  const autoUpdate = ref(true)\n  const friends = ref(['Sandra Adams', 'Britta Holt'])\n  const isUpdating = ref(false)\n  const name = ref('Midnight Crew')\n  const title = ref('The summer breeze')\n\n  let timeout = -1\n  watch(isUpdating, val => {\n    clearTimeout(timeout)\n    if (val) {\n      timeout = setTimeout(() => (isUpdating.value = false), 3000)\n    }\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      const srcs = {\n        1: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n        2: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n        3: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n        4: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n        5: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n      }\n\n      return {\n        autoUpdate: true,\n        friends: ['Sandra Adams', 'Britta Holt'],\n        isUpdating: false,\n        name: 'Midnight Crew',\n        people: [\n          // TODO: https://github.com/vuetifyjs/vuetify/issues/15721\n          // { header: 'Group 1' },\n          { name: 'Sandra Adams', group: 'Group 1', avatar: srcs[1] },\n          { name: 'Ali Connors', group: 'Group 1', avatar: srcs[2] },\n          { name: 'Trevor Hansen', group: 'Group 1', avatar: srcs[3] },\n          { name: 'Tucker Smith', group: 'Group 1', avatar: srcs[2] },\n          // { divider: true },\n          // { header: 'Group 2' },\n          { name: 'Britta Holt', group: 'Group 2', avatar: srcs[4] },\n          { name: 'Jane Smith ', group: 'Group 2', avatar: srcs[5] },\n          { name: 'John Smith', group: 'Group 2', avatar: srcs[1] },\n          { name: 'Sandra Williams', group: 'Group 2', avatar: srcs[3] },\n        ],\n        title: 'The summer breeze',\n        timeout: null,\n      }\n    },\n\n    watch: {\n      isUpdating (val) {\n        clearTimeout(this.timeout)\n\n        if (val) {\n          this.timeout = setTimeout(() => (this.isUpdating = false), 3000)\n        }\n      },\n    },\n\n    methods: {\n      remove (item) {\n        const index = this.friends.indexOf(item.name)\n        if (index >= 0) this.friends.splice(index, 1)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Item And Selection",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000092",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000093",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-autocomplete v-bind=\"props\"></v-autocomplete>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"chips\" label=\"Chips\"></v-checkbox>\n\n      <v-checkbox v-model=\"multiple\" label=\"Multiple\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-autocomplete'\n  const model = ref('default')\n  const clear = ref(false)\n  const chips = ref(false)\n  const multiple = ref(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      chips: chips.value || undefined,\n      label: 'Autocomplete',\n      items: ['California', 'Colorado', 'Florida', 'Georgia', 'Texas', 'Wyoming'],\n      multiple: multiple.value || undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-autocomplete v-bind=\"props\"></v-autocomplete>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"chips\" label=\"Chips\"></v-checkbox>\n\n      <v-checkbox v-model=\"multiple\" label=\"Multiple\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-autocomplete'\n  const model = ref('default')\n  const clear = ref(false)\n  const chips = ref(false)\n  const multiple = ref(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      chips: chips.value || undefined,\n      label: 'Autocomplete',\n      items: ['California', 'Colorado', 'Florida', 'Georgia', 'Texas', 'Wyoming'],\n      multiple: multiple.value || undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000093",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000094",
    "text": "Component: v-avatars\nType: component_overview\n\n# v-avatars\n\nThe `v-avatar` component is typically used to display circular user profile pictures. This component will allow you to dynamically size and add a border radius of responsive images, icons, and text.  When **rounded** prop set to `0` will display an avatar without border radius.",
    "display_content": "# v-avatars\n\nThe `v-avatar` component is typically used to display circular user profile pictures. This component will allow you to dynamically size and add a border radius of responsive images, icons, and text.  When **rounded** prop set to `0` will display an avatar without border radius.",
    "metadata": {
      "component": "v-avatars",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000094",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000095",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nAvatars in their simplest form display content within a circular container.",
    "display_content": "# v-usage\n\nAvatars in their simplest form display content within a circular container.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000095",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000096",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-avatar](/api/v-avatar/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-avatar](/api/v-avatar/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000096",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000097",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-avatar` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-avatar` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000097",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000098",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe `size` prop allows you to change the height and width of the avatar.\n\nAvailable sections: Size, Tile, Default, Advanced usage, Profile Card, Misc Advanced, Misc Avatar Menu, Misc Profile Card, Prop Size, Prop Tile, Slot Default, Usage",
    "display_content": "# v-examples\n\nThe `size` prop allows you to change the height and width of the avatar.\n\nAvailable sections: Size, Tile, Default, Advanced usage, Profile Card, Misc Advanced, Misc Avatar Menu, Misc Profile Card, Prop Size, Prop Tile, Slot Default, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000098",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000099",
    "text": "Component: v-examples\nSection: Size\nType: documentation\n\n## v-examples - Size\n\nThe `size` prop allows you to change the height and width of the avatar.\n\n<ExamplesExample file=\"v-avatar/prop-size\" />",
    "display_content": "## v-examples - Size\n\nThe `size` prop allows you to change the height and width of the avatar.\n\n<ExamplesExample file=\"v-avatar/prop-size\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Size",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000099",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000100",
    "text": "Component: v-examples\nSection: Tile\nType: documentation\n\n## v-examples - Tile\n\nThe `rounded` prop can be used to remove the border radius from v-avatar leaving you with a simple square avatar.\n\n<ExamplesExample file=\"v-avatar/prop-tile\" />",
    "display_content": "## v-examples - Tile\n\nThe `rounded` prop can be used to remove the border radius from v-avatar leaving you with a simple square avatar.\n\n<ExamplesExample file=\"v-avatar/prop-tile\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Tile",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000100",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000101",
    "text": "Component: v-examples\nSection: Default\nType: documentation\n\n## v-examples - Default\n\nThe `v-avatar` default slot allows you to render content such as `v-icon` components, images, or text. Mix and match these with other props to create something unique.\n\n<ExamplesExample file=\"v-avatar/slot-default\" />\n\n<PromotedPromoted />",
    "display_content": "## v-examples - Default\n\nThe `v-avatar` default slot allows you to render content such as `v-icon` components, images, or text. Mix and match these with other props to create something unique.\n\n<ExamplesExample file=\"v-avatar/slot-default\" />\n\n<PromotedPromoted />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Default",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000101",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000102",
    "text": "Component: v-examples\nSection: Advanced usage\nType: usage_guide\n\n## v-examples - Advanced usage\n\nCombining an avatar with other components allows you to build beautiful user interfaces right out of the box.\n\n<ExamplesExample file=\"v-avatar/misc-advanced\" />\n\nAnother example combining avatar with menu.\n\n<ExamplesExample file=\"v-avatar/misc-avatar-menu\" />",
    "display_content": "## v-examples - Advanced usage\n\nCombining an avatar with other components allows you to build beautiful user interfaces right out of the box.\n\n<ExamplesExample file=\"v-avatar/misc-advanced\" />\n\nAnother example combining avatar with menu.\n\n<ExamplesExample file=\"v-avatar/misc-avatar-menu\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Advanced usage",
      "content_type": "usage_guide",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000102",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000103",
    "text": "Component: v-examples\nSection: Profile Card\nType: documentation\n\n## v-examples - Profile Card\n\nUsing the **rounded** prop value `0`, we can create a sleek hard-lined profile card.\n\n<ExamplesExample file=\"v-avatar/misc-profile-card\" />",
    "display_content": "## v-examples - Profile Card\n\nUsing the **rounded** prop value `0`, we can create a sleek hard-lined profile card.\n\n<ExamplesExample file=\"v-avatar/misc-profile-card\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Profile Card",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000103",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000104",
    "text": "Component: v-examples\nSection: Misc Advanced\nType: code_example\n\n## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-expansion-panels class=\"pa-4\" variant=\"popout\">\n    <v-expansion-panel\n      v-for=\"(message, i) in messages\"\n      :key=\"i\"\n      hide-actions\n    >\n      <v-expansion-panel-title>\n        <v-row\n          align=\"center\"\n          class=\"spacer\"\n          no-gutters\n        >\n          <v-col\n            cols=\"4\"\n            md=\"1\"\n            sm=\"2\"\n          >\n            <v-avatar\n              size=\"36px\"\n            >\n              <v-img\n                v-if=\"message.avatar\"\n                alt=\"Avatar\"\n                src=\"https://avatars0.githubusercontent.com/u/9064066?v=4&s=460\"\n              ></v-img>\n              <v-icon\n                v-else\n                :color=\"message.color\"\n                :icon=\"message.icon\"\n              ></v-icon>\n            </v-avatar>\n          </v-col>\n\n          <v-col\n            class=\"hidden-xs text-left ms-2\"\n            md=\"3\"\n            sm=\"5\"\n          >\n            <strong v-html=\"message.name\"></strong>\n            <span\n              v-if=\"message.total\"\n              class=\"text-grey\"\n            >\n              &nbsp;({{ message.total }})\n            </span>\n          </v-col>\n\n          <v-col\n            class=\"text-no-wrap text-left\"\n            cols=\"5\"\n            sm=\"3\"\n          >\n            <v-chip\n              v-if=\"message.new\"\n              :color=\"`${message.color}-lighten-1`\"\n              class=\"ms-0 me-2\"\n              size=\"small\"\n              label\n            >\n              {{ message.new }} new\n            </v-chip>\n            <strong v-html=\"message.title\"></strong>\n          </v-col>\n\n          <v-col\n            v-if=\"message.excerpt\"\n            class=\"text-medium-emphasis text-truncate hidden-sm-and-down\"\n          >\n            &mdash;\n            {{ message.excerpt }}\n          </v-col>\n        </v-row>\n      </v-expansion-panel-title>\n\n      <v-expansion-panel-text>\n        <v-card-text v-text=\"lorem\"></v-card-text>\n      </v-expansion-panel-text>\n    </v-expansion-panel>\n  </v-expansion-panels>\n</template>\n\n<script setup>\n  const messages = [\n    {\n      avatar: 'https://avatars0.githubusercontent.com/u/9064066?v=4&s=460',\n      name: 'John Leider',\n      title: 'Welcome to Vuetify!',\n      excerpt: 'Thank you for joining our community...',\n    },\n    {\n      color: 'red',\n      icon: 'mdi-account-multiple',\n      name: 'Social',\n      new: 1,\n      total: 3,\n      title: 'Twitter',\n    },\n    {\n      color: 'teal',\n      icon: 'mdi-tag',\n      name: 'Promos',\n      new: 2,\n      total: 4,\n      title: 'Shop your way',\n      excerpt: 'New deals available, Join Today',\n    },\n  ]\n  const lorem = 'Lorem ipsum dolor sit amet, at aliquam vivendum vel, everti delicatissimi cu eos. Dico iuvaret debitis mel an, et cum zril menandri. Eum in consul legimus accusam. Ea dico abhorreant duo, quo illum minimum incorrupte no, nostro voluptaria sea eu. Suas eligendi ius at, at nemore equidem est. Sed in error hendrerit, in consul constituam cum.'\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      messages: [\n        {\n          avatar: 'https://avatars0.githubusercontent.com/u/9064066?v=4&s=460',\n          name: 'John Leider',\n          title: 'Welcome to Vuetify!',\n          excerpt: 'Thank you for joining our community...',\n        },\n        {\n          color: 'red',\n          icon: 'mdi-account-multiple',\n          name: 'Social',\n          new: 1,\n          total: 3,\n          title: 'Twitter',\n        },\n        {\n          color: 'teal',\n          icon: 'mdi-tag',\n          name: 'Promos',\n          new: 2,\n          total: 4,\n          title: 'Shop your way',\n          excerpt: 'New deals available, Join Today',\n        },\n      ],\n      lorem: 'Lorem ipsum dolor sit amet, at aliquam vivendum vel, everti delicatissimi cu eos. Dico iuvaret debitis mel an, et cum zril menandri. Eum in consul legimus accusam. Ea dico abhorreant duo, quo illum minimum incorrupte no, nostro voluptaria sea eu. Suas eligendi ius at, at nemore equidem est. Sed in error hendrerit, in consul constituam cum.',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-expansion-panels class=\"pa-4\" variant=\"popout\">\n    <v-expansion-panel\n      v-for=\"(message, i) in messages\"\n      :key=\"i\"\n      hide-actions\n    >\n      <v-expansion-panel-title>\n        <v-row\n          align=\"center\"\n          class=\"spacer\"\n          no-gutters\n        >\n          <v-col\n            cols=\"4\"\n            md=\"1\"\n            sm=\"2\"\n          >\n            <v-avatar\n              size=\"36px\"\n            >\n              <v-img\n                v-if=\"message.avatar\"\n                alt=\"Avatar\"\n                src=\"https://avatars0.githubusercontent.com/u/9064066?v=4&s=460\"\n              ></v-img>\n              <v-icon\n                v-else\n                :color=\"message.color\"\n                :icon=\"message.icon\"\n              ></v-icon>\n            </v-avatar>\n          </v-col>\n\n          <v-col\n            class=\"hidden-xs text-left ms-2\"\n            md=\"3\"\n            sm=\"5\"\n          >\n            <strong v-html=\"message.name\"></strong>\n            <span\n              v-if=\"message.total\"\n              class=\"text-grey\"\n            >\n              &nbsp;({{ message.total }})\n            </span>\n          </v-col>\n\n          <v-col\n            class=\"text-no-wrap text-left\"\n            cols=\"5\"\n            sm=\"3\"\n          >\n            <v-chip\n              v-if=\"message.new\"\n              :color=\"`${message.color}-lighten-1`\"\n              class=\"ms-0 me-2\"\n              size=\"small\"\n              label\n            >\n              {{ message.new }} new\n            </v-chip>\n            <strong v-html=\"message.title\"></strong>\n          </v-col>\n\n          <v-col\n            v-if=\"message.excerpt\"\n            class=\"text-medium-emphasis text-truncate hidden-sm-and-down\"\n          >\n            &mdash;\n            {{ message.excerpt }}\n          </v-col>\n        </v-row>\n      </v-expansion-panel-title>\n\n      <v-expansion-panel-text>\n        <v-card-text v-text=\"lorem\"></v-card-text>\n      </v-expansion-panel-text>\n    </v-expansion-panel>\n  </v-expansion-panels>\n</template>\n\n<script setup>\n  const messages = [\n    {\n      avatar: 'https://avatars0.githubusercontent.com/u/9064066?v=4&s=460',\n      name: 'John Leider',\n      title: 'Welcome to Vuetify!',\n      excerpt: 'Thank you for joining our community...',\n    },\n    {\n      color: 'red',\n      icon: 'mdi-account-multiple',\n      name: 'Social',\n      new: 1,\n      total: 3,\n      title: 'Twitter',\n    },\n    {\n      color: 'teal',\n      icon: 'mdi-tag',\n      name: 'Promos',\n      new: 2,\n      total: 4,\n      title: 'Shop your way',\n      excerpt: 'New deals available, Join Today',\n    },\n  ]\n  const lorem = 'Lorem ipsum dolor sit amet, at aliquam vivendum vel, everti delicatissimi cu eos. Dico iuvaret debitis mel an, et cum zril menandri. Eum in consul legimus accusam. Ea dico abhorreant duo, quo illum minimum incorrupte no, nostro voluptaria sea eu. Suas eligendi ius at, at nemore equidem est. Sed in error hendrerit, in consul constituam cum.'\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      messages: [\n        {\n          avatar: 'https://avatars0.githubusercontent.com/u/9064066?v=4&s=460',\n          name: 'John Leider',\n          title: 'Welcome to Vuetify!',\n          excerpt: 'Thank you for joining our community...',\n        },\n        {\n          color: 'red',\n          icon: 'mdi-account-multiple',\n          name: 'Social',\n          new: 1,\n          total: 3,\n          title: 'Twitter',\n        },\n        {\n          color: 'teal',\n          icon: 'mdi-tag',\n          name: 'Promos',\n          new: 2,\n          total: 4,\n          title: 'Shop your way',\n          excerpt: 'New deals available, Join Today',\n        },\n      ],\n      lorem: 'Lorem ipsum dolor sit amet, at aliquam vivendum vel, everti delicatissimi cu eos. Dico iuvaret debitis mel an, et cum zril menandri. Eum in consul legimus accusam. Ea dico abhorreant duo, quo illum minimum incorrupte no, nostro voluptaria sea eu. Suas eligendi ius at, at nemore equidem est. Sed in error hendrerit, in consul constituam cum.',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Advanced",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000104",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000105",
    "text": "Component: v-examples\nSection: Misc Avatar Menu\nType: code_example\n\n## v-examples - Misc Avatar Menu\n\n```vue\n<template>\n  <v-container\n    style=\"height: 300px\"\n    fluid\n  >\n    <v-row justify=\"center\">\n      <v-menu min-width=\"200px\">\n        <template v-slot:activator=\"{ props }\">\n          <v-btn\n            icon\n            v-bind=\"props\"\n          >\n            <v-avatar\n              color=\"brown\"\n              size=\"large\"\n            >\n              <span class=\"text-h5\">{{ user.initials }}</span>\n            </v-avatar>\n          </v-btn>\n        </template>\n        <v-card>\n          <v-card-text>\n            <div class=\"mx-auto text-center\">\n              <v-avatar\n                color=\"brown\"\n              >\n                <span class=\"text-h5\">{{ user.initials }}</span>\n              </v-avatar>\n              <h3>{{ user.fullName }}</h3>\n              <p class=\"text-caption mt-1\">\n                {{ user.email }}\n              </p>\n              <v-divider class=\"my-3\"></v-divider>\n              <v-btn\n                variant=\"text\"\n                rounded\n              >\n                Edit Account\n              </v-btn>\n              <v-divider class=\"my-3\"></v-divider>\n              <v-btn\n                variant=\"text\"\n                rounded\n              >\n                Disconnect\n              </v-btn>\n            </div>\n          </v-card-text>\n        </v-card>\n      </v-menu>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  const user = {\n    initials: 'JD',\n    fullName: 'John Doe',\n    email: 'john.doe@doe.com',\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      user: {\n        initials: 'JD',\n        fullName: 'John Doe',\n        email: 'john.doe@doe.com',\n      },\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Avatar Menu\n\n```vue\n<template>\n  <v-container\n    style=\"height: 300px\"\n    fluid\n  >\n    <v-row justify=\"center\">\n      <v-menu min-width=\"200px\">\n        <template v-slot:activator=\"{ props }\">\n          <v-btn\n            icon\n            v-bind=\"props\"\n          >\n            <v-avatar\n              color=\"brown\"\n              size=\"large\"\n            >\n              <span class=\"text-h5\">{{ user.initials }}</span>\n            </v-avatar>\n          </v-btn>\n        </template>\n        <v-card>\n          <v-card-text>\n            <div class=\"mx-auto text-center\">\n              <v-avatar\n                color=\"brown\"\n              >\n                <span class=\"text-h5\">{{ user.initials }}</span>\n              </v-avatar>\n              <h3>{{ user.fullName }}</h3>\n              <p class=\"text-caption mt-1\">\n                {{ user.email }}\n              </p>\n              <v-divider class=\"my-3\"></v-divider>\n              <v-btn\n                variant=\"text\"\n                rounded\n              >\n                Edit Account\n              </v-btn>\n              <v-divider class=\"my-3\"></v-divider>\n              <v-btn\n                variant=\"text\"\n                rounded\n              >\n                Disconnect\n              </v-btn>\n            </div>\n          </v-card-text>\n        </v-card>\n      </v-menu>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  const user = {\n    initials: 'JD',\n    fullName: 'John Doe',\n    email: 'john.doe@doe.com',\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      user: {\n        initials: 'JD',\n        fullName: 'John Doe',\n        email: 'john.doe@doe.com',\n      },\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Avatar Menu",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000105",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000106",
    "text": "Component: v-examples\nSection: Misc Profile Card\nType: code_example\n\n## v-examples - Misc Profile Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"434\"\n    rounded=\"0\"\n  >\n    <v-img\n      height=\"100%\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/server-room.jpg\"\n      cover\n    >\n      <v-avatar\n        color=\"grey\"\n        rounded=\"0\"\n        size=\"150\"\n      >\n        <v-img src=\"https://cdn.vuetifyjs.com/images/profiles/marcus.jpg\" cover></v-img>\n      </v-avatar>\n      <v-list-item\n        class=\"text-white\"\n        subtitle=\"Network Engineer\"\n        title=\"Marcus Obrien\"\n      ></v-list-item>\n    </v-img>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Profile Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"434\"\n    rounded=\"0\"\n  >\n    <v-img\n      height=\"100%\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/server-room.jpg\"\n      cover\n    >\n      <v-avatar\n        color=\"grey\"\n        rounded=\"0\"\n        size=\"150\"\n      >\n        <v-img src=\"https://cdn.vuetifyjs.com/images/profiles/marcus.jpg\" cover></v-img>\n      </v-avatar>\n      <v-list-item\n        class=\"text-white\"\n        subtitle=\"Network Engineer\"\n        title=\"Marcus Obrien\"\n      ></v-list-item>\n    </v-img>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Profile Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000106",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000107",
    "text": "Component: v-examples\nSection: Prop Size\nType: code_example\n\n## v-examples - Prop Size\n\n```vue\n<template>\n  <div class=\"d-flex align-center justify-space-around\">\n    <v-avatar color=\"primary\" size=\"x-small\">\n      32\n    </v-avatar>\n\n    <v-avatar color=\"secondary\">\n      48\n    </v-avatar>\n\n    <v-avatar color=\"info\" size=\"x-large\">\n      64\n    </v-avatar>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Size\n\n```vue\n<template>\n  <div class=\"d-flex align-center justify-space-around\">\n    <v-avatar color=\"primary\" size=\"x-small\">\n      32\n    </v-avatar>\n\n    <v-avatar color=\"secondary\">\n      48\n    </v-avatar>\n\n    <v-avatar color=\"info\" size=\"x-large\">\n      64\n    </v-avatar>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Size",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000107",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000108",
    "text": "Component: v-examples\nSection: Prop Tile\nType: code_example\n\n## v-examples - Prop Tile\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-avatar\n      color=\"blue-darken-2\"\n      rounded=\"0\"\n    >\n      <v-icon icon=\"mdi-alarm\"></v-icon>\n    </v-avatar>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Tile\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-avatar\n      color=\"blue-darken-2\"\n      rounded=\"0\"\n    >\n      <v-icon icon=\"mdi-alarm\"></v-icon>\n    </v-avatar>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Tile",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000108",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000109",
    "text": "Component: v-examples\nSection: Slot Default\nType: code_example\n\n## v-examples - Slot Default\n\n```vue\n<template>\n  <div class=\"d-flex align-center justify-space-around\">\n    <v-avatar color=\"info\">\n      <v-icon icon=\"mdi-account-circle\"></v-icon>\n    </v-avatar>\n\n    <v-avatar>\n      <v-img\n        alt=\"John\"\n        src=\"https://cdn.vuetifyjs.com/images/john.jpg\"\n      ></v-img>\n    </v-avatar>\n\n    <v-avatar color=\"red\">\n      <span class=\"text-h5\">CJ</span>\n    </v-avatar>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Default\n\n```vue\n<template>\n  <div class=\"d-flex align-center justify-space-around\">\n    <v-avatar color=\"info\">\n      <v-icon icon=\"mdi-account-circle\"></v-icon>\n    </v-avatar>\n\n    <v-avatar>\n      <v-img\n        alt=\"John\"\n        src=\"https://cdn.vuetifyjs.com/images/john.jpg\"\n      ></v-img>\n    </v-avatar>\n\n    <v-avatar color=\"red\">\n      <span class=\"text-h5\">CJ</span>\n    </v-avatar>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Default",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000109",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000110",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :options=\"options\"\n    name=\"v-avatar\"\n  >\n    <div class=\"text-center\">\n      <v-avatar\n        v-bind=\"props\"\n        :image=\"image ? 'https://cdn.vuetifyjs.com/images/john-smirk.png' : undefined\"\n      ></v-avatar>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"icon\" label=\"Icon\"></v-checkbox>\n\n      <v-checkbox v-model=\"image\" label=\"Image\"></v-checkbox>\n\n      <v-slider\n        v-model=\"size\"\n        label=\"Size\"\n        max=\"80\"\n        min=\"40\"\n        step=\"1\"\n      ></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const model = ref('default')\n  const icon = ref(false)\n  const image = ref(false)\n  const size = ref(40)\n  const options = ['tile']\n  const props = computed(() => {\n    return {\n      color: !image.value && !icon.value ? 'surface-variant' : undefined,\n      icon: icon.value ? '$vuetify' : undefined,\n      image: image.value ? 'smirk.png' : undefined,\n      rounded: model.value === 'tile' ? '0' : undefined,\n      size: size.value === 40 ? undefined : `${size.value}`,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-avatar${propsToString(props.value)}>${slots.value}</v-avatar>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :options=\"options\"\n    name=\"v-avatar\"\n  >\n    <div class=\"text-center\">\n      <v-avatar\n        v-bind=\"props\"\n        :image=\"image ? 'https://cdn.vuetifyjs.com/images/john-smirk.png' : undefined\"\n      ></v-avatar>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"icon\" label=\"Icon\"></v-checkbox>\n\n      <v-checkbox v-model=\"image\" label=\"Image\"></v-checkbox>\n\n      <v-slider\n        v-model=\"size\"\n        label=\"Size\"\n        max=\"80\"\n        min=\"40\"\n        step=\"1\"\n      ></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const model = ref('default')\n  const icon = ref(false)\n  const image = ref(false)\n  const size = ref(40)\n  const options = ['tile']\n  const props = computed(() => {\n    return {\n      color: !image.value && !icon.value ? 'surface-variant' : undefined,\n      icon: icon.value ? '$vuetify' : undefined,\n      image: image.value ? 'smirk.png' : undefined,\n      rounded: model.value === 'tile' ? '0' : undefined,\n      size: size.value === 40 ? undefined : `${size.value}`,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-avatar${propsToString(props.value)}>${slots.value}</v-avatar>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000110",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000111",
    "text": "Component: v-badges\nType: component_overview\n\n# v-badges\n\nThe `v-badge` component superscripts or subscripts an avatar-like icon or text onto content to highlight information to a user or to just draw attention to a specific element. Content within the badge usually contains numbers or icons.",
    "display_content": "# v-badges\n\nThe `v-badge` component superscripts or subscripts an avatar-like icon or text onto content to highlight information to a user or to just draw attention to a specific element. Content within the badge usually contains numbers or icons.",
    "metadata": {
      "component": "v-badges",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000111",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000112",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nBadges in their simplest form display to the upper right of the content that it wraps and requires the badge slot.",
    "display_content": "# v-usage\n\nBadges in their simplest form display to the upper right of the content that it wraps and requires the badge slot.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000112",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000113",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-badge](/api/v-badge/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-badge](/api/v-badge/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000113",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000114",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe **dot** property removes badge's content and reduces its overall size. This is useful when you need to draw a user's attention subtly.\n\nAvailable sections: Dot, Inline, Content, Misc Customization, Misc Dynamic, Misc Hover, Misc Tabs, Prop Content, Prop Dot, Prop Inline, Usage",
    "display_content": "# v-examples\n\nThe **dot** property removes badge's content and reduces its overall size. This is useful when you need to draw a user's attention subtly.\n\nAvailable sections: Dot, Inline, Content, Misc Customization, Misc Dynamic, Misc Hover, Misc Tabs, Prop Content, Prop Dot, Prop Inline, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000114",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000115",
    "text": "Component: v-examples\nSection: Dot\nType: documentation\n\n## v-examples - Dot\n\nThe **dot** property removes badge's content and reduces its overall size. This is useful when you need to draw a user's attention subtly.\n\n<ExamplesExample file=\"v-badge/prop-dot\" />",
    "display_content": "## v-examples - Dot\n\nThe **dot** property removes badge's content and reduces its overall size. This is useful when you need to draw a user's attention subtly.\n\n<ExamplesExample file=\"v-badge/prop-dot\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dot",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000115",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000116",
    "text": "Component: v-examples\nSection: Inline\nType: documentation\n\n## v-examples - Inline\n\nInline badges can be placed anywhere with content and can render without a *default* slot.\n\n<ExamplesExample file=\"v-badge/prop-inline\" />",
    "display_content": "## v-examples - Inline\n\nInline badges can be placed anywhere with content and can render without a *default* slot.\n\n<ExamplesExample file=\"v-badge/prop-inline\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Inline",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000116",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000117",
    "text": "Component: v-examples\nSection: Content\nType: documentation\n\n## v-examples - Content\n\nFor simple text, use the **content** property to display a *value* on the badge.\n\n<ExamplesExample file=\"v-badge/prop-content\" />",
    "display_content": "## v-examples - Content\n\nFor simple text, use the **content** property to display a *value* on the badge.\n\n<ExamplesExample file=\"v-badge/prop-content\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Content",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000117",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000118",
    "text": "Component: v-examples\nSection: Misc Customization\nType: code_example\n\n## v-examples - Misc Customization\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around align-center flex-column flex-md-row fill-height\">\n    <v-badge\n      color=\"error\"\n      icon=\"mdi-lock\"\n      bordered\n    >\n      <v-btn\n        color=\"error\"\n        variant=\"flat\"\n      >\n        Lock Account\n      </v-btn>\n    </v-badge>\n\n    <v-badge\n      color=\"deep-purple-accent-4\"\n      location=\"bottom end\"\n      offset-x=\"2\"\n      offset-y=\"4\"\n      bordered\n      dot\n    >\n      <v-avatar size=\"large\">\n        <v-img src=\"https://cdn.vuetifyjs.com/images/lists/2.jpg\"></v-img>\n      </v-avatar>\n    </v-badge>\n\n    <div class=\"mx-3\"></div>\n\n    <v-badge\n      bordered\n    >\n      <template v-slot:badge>\n        <v-avatar size=\"x-small\">\n          <v-img src=\"https://cdn.vuetifyjs.com/images/logos/v.png\"></v-img>\n        </v-avatar>\n      </template>\n\n      <v-avatar size=\"large\">\n        <v-img src=\"https://cdn.vuetifyjs.com/images/john.png\"></v-img>\n      </v-avatar>\n    </v-badge>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Customization\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around align-center flex-column flex-md-row fill-height\">\n    <v-badge\n      color=\"error\"\n      icon=\"mdi-lock\"\n      bordered\n    >\n      <v-btn\n        color=\"error\"\n        variant=\"flat\"\n      >\n        Lock Account\n      </v-btn>\n    </v-badge>\n\n    <v-badge\n      color=\"deep-purple-accent-4\"\n      location=\"bottom end\"\n      offset-x=\"2\"\n      offset-y=\"4\"\n      bordered\n      dot\n    >\n      <v-avatar size=\"large\">\n        <v-img src=\"https://cdn.vuetifyjs.com/images/lists/2.jpg\"></v-img>\n      </v-avatar>\n    </v-badge>\n\n    <div class=\"mx-3\"></div>\n\n    <v-badge\n      bordered\n    >\n      <template v-slot:badge>\n        <v-avatar size=\"x-small\">\n          <v-img src=\"https://cdn.vuetifyjs.com/images/logos/v.png\"></v-img>\n        </v-avatar>\n      </template>\n\n      <v-avatar size=\"large\">\n        <v-img src=\"https://cdn.vuetifyjs.com/images/john.png\"></v-img>\n      </v-avatar>\n    </v-badge>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Customization",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000118",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000119",
    "text": "Component: v-examples\nSection: Misc Dynamic\nType: code_example\n\n## v-examples - Misc Dynamic\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <div>\n        <v-btn\n          class=\"mx-1\"\n          color=\"primary\"\n          @click=\"messages++\"\n        >\n          Send Message\n        </v-btn>\n\n        <v-btn\n          class=\"mx-1\"\n          color=\"error\"\n          @click=\"messages = 0\"\n        >\n          Clear Notifications\n        </v-btn>\n      </div>\n\n      <v-badge\n        :content=\"messages\"\n        :model-value=\"!!messages\"\n        color=\"green\"\n      >\n        <v-icon size=\"large\">\n          $vuetify\n        </v-icon>\n      </v-badge>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const messages = ref(0)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        messages: 0,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Dynamic\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <div>\n        <v-btn\n          class=\"mx-1\"\n          color=\"primary\"\n          @click=\"messages++\"\n        >\n          Send Message\n        </v-btn>\n\n        <v-btn\n          class=\"mx-1\"\n          color=\"error\"\n          @click=\"messages = 0\"\n        >\n          Clear Notifications\n        </v-btn>\n      </div>\n\n      <v-badge\n        :content=\"messages\"\n        :model-value=\"!!messages\"\n        color=\"green\"\n      >\n        <v-icon size=\"large\">\n          $vuetify\n        </v-icon>\n      </v-badge>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const messages = ref(0)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        messages: 0,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Dynamic",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000119",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000120",
    "text": "Component: v-examples\nSection: Misc Hover\nType: code_example\n\n## v-examples - Misc Hover\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-badge\n      :model-value=\"hover\"\n      color=\"deep-purple\"\n      content=\"9999+\"\n      location=\"top-end\"\n      transition=\"slide-x-transition\"\n    >\n      <v-hover v-slot=\"{ props }\" v-model=\"hover\">\n        <v-icon\n          color=\"grey-lighten-1\"\n          size=\"large\"\n          v-bind=\"props\"\n        >\n          mdi-account\n        </v-icon>\n      </v-hover>\n    </v-badge>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const hover = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      hover: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Hover\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-badge\n      :model-value=\"hover\"\n      color=\"deep-purple\"\n      content=\"9999+\"\n      location=\"top-end\"\n      transition=\"slide-x-transition\"\n    >\n      <v-hover v-slot=\"{ props }\" v-model=\"hover\">\n        <v-icon\n          color=\"grey-lighten-1\"\n          size=\"large\"\n          v-bind=\"props\"\n        >\n          mdi-account\n        </v-icon>\n      </v-hover>\n    </v-badge>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const hover = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      hover: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Hover",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000120",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000121",
    "text": "Component: v-examples\nSection: Misc Tabs\nType: code_example\n\n## v-examples - Misc Tabs\n\n```vue\n<template>\n  <v-tabs\n    bg-color=\"primary\"\n    grow\n  >\n    <v-tab>\n      <v-badge\n        color=\"pink\"\n        dot\n      >\n        Item One\n      </v-badge>\n    </v-tab>\n\n    <v-tab>\n      <v-badge\n        color=\"green\"\n        content=\"6\"\n      >\n        Item Two\n      </v-badge>\n    </v-tab>\n\n    <v-tab>\n      <v-badge\n        color=\"deep-purple-accent-4\"\n        icon=\"$vuetify\"\n      >\n        Item Three\n      </v-badge>\n    </v-tab>\n  </v-tabs>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Tabs\n\n```vue\n<template>\n  <v-tabs\n    bg-color=\"primary\"\n    grow\n  >\n    <v-tab>\n      <v-badge\n        color=\"pink\"\n        dot\n      >\n        Item One\n      </v-badge>\n    </v-tab>\n\n    <v-tab>\n      <v-badge\n        color=\"green\"\n        content=\"6\"\n      >\n        Item Two\n      </v-badge>\n    </v-tab>\n\n    <v-tab>\n      <v-badge\n        color=\"deep-purple-accent-4\"\n        icon=\"$vuetify\"\n      >\n        Item Three\n      </v-badge>\n    </v-tab>\n  </v-tabs>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Tabs",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000121",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000122",
    "text": "Component: v-examples\nSection: Prop Content\nType: code_example\n\n## v-examples - Prop Content\n\n```vue\n<template>\n  <v-toolbar color=\"blue-grey-darken-3\">\n    <v-spacer></v-spacer>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-badge color=\"success\" dot>\n        <v-icon>mdi-home-outline</v-icon>\n      </v-badge>\n    </v-btn>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-icon>mdi-account-multiple-outline</v-icon>\n    </v-btn>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-badge color=\"error\" content=\"9+\">\n        <v-icon>mdi-store-outline</v-icon>\n      </v-badge>\n    </v-btn>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-badge color=\"error\" content=\"2\">\n        <v-icon>mdi-bell-outline</v-icon>\n      </v-badge>\n    </v-btn>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-icon>mdi-menu</v-icon>\n    </v-btn>\n\n    <v-spacer></v-spacer>\n  </v-toolbar>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Content\n\n```vue\n<template>\n  <v-toolbar color=\"blue-grey-darken-3\">\n    <v-spacer></v-spacer>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-badge color=\"success\" dot>\n        <v-icon>mdi-home-outline</v-icon>\n      </v-badge>\n    </v-btn>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-icon>mdi-account-multiple-outline</v-icon>\n    </v-btn>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-badge color=\"error\" content=\"9+\">\n        <v-icon>mdi-store-outline</v-icon>\n      </v-badge>\n    </v-btn>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-badge color=\"error\" content=\"2\">\n        <v-icon>mdi-bell-outline</v-icon>\n      </v-badge>\n    </v-btn>\n\n    <v-btn class=\"text-none\" stacked>\n      <v-icon>mdi-menu</v-icon>\n    </v-btn>\n\n    <v-spacer></v-spacer>\n  </v-toolbar>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Content",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000122",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000123",
    "text": "Component: v-examples\nSection: Prop Dot\nType: code_example\n\n## v-examples - Prop Dot\n\n```vue\n<template>\n  <v-toolbar color=\"grey-lighten-3\" title=\"Application\">\n    <v-btn stacked>\n      <v-badge\n        color=\"error\"\n        dot\n      >\n        <v-icon icon=\"mdi-newspaper-variant-outline\"></v-icon>\n      </v-badge>\n\n      News\n    </v-btn>\n\n    <v-btn stacked>\n      <v-badge\n        color=\"error\"\n        dot\n      >\n        <v-icon icon=\"mdi-post\"></v-icon>\n      </v-badge>\n\n      Blog\n    </v-btn>\n\n    <v-btn\n      variant=\"tonal\"\n      stacked\n    >\n      <v-icon icon=\"mdi-login\"></v-icon>\n\n      Login\n    </v-btn>\n  </v-toolbar>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Dot\n\n```vue\n<template>\n  <v-toolbar color=\"grey-lighten-3\" title=\"Application\">\n    <v-btn stacked>\n      <v-badge\n        color=\"error\"\n        dot\n      >\n        <v-icon icon=\"mdi-newspaper-variant-outline\"></v-icon>\n      </v-badge>\n\n      News\n    </v-btn>\n\n    <v-btn stacked>\n      <v-badge\n        color=\"error\"\n        dot\n      >\n        <v-icon icon=\"mdi-post\"></v-icon>\n      </v-badge>\n\n      Blog\n    </v-btn>\n\n    <v-btn\n      variant=\"tonal\"\n      stacked\n    >\n      <v-icon icon=\"mdi-login\"></v-icon>\n\n      Login\n    </v-btn>\n  </v-toolbar>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Dot",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000123",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000124",
    "text": "Component: v-examples\nSection: Prop Inline\nType: code_example\n\n## v-examples - Prop Inline\n\n```vue\n<template>\n  <v-list\n    class=\"mx-auto\"\n    max-width=\"256\"\n    border\n  >\n    <v-list-item\n      prepend-icon=\"mdi-inbox-arrow-down\"\n      title=\"Inbox\"\n      link\n    >\n      <template v-slot:append>\n        <v-badge\n          color=\"error\"\n          content=\"6\"\n          inline\n        ></v-badge>\n      </template>\n    </v-list-item>\n\n    <v-list-item\n      prepend-icon=\"mdi-send\"\n      title=\"Sent Mail\"\n      link\n    ></v-list-item>\n\n    <v-list-item\n      prepend-icon=\"mdi-delete\"\n      title=\"Trash\"\n      link\n    >\n      <template v-slot:append>\n        <v-badge\n          color=\"info\"\n          content=\"12\"\n          inline\n        ></v-badge>\n      </template>\n    </v-list-item>\n\n    <v-list-item\n      prepend-icon=\"mdi-alert-circle\"\n      title=\"Spam\"\n      link\n    ></v-list-item>\n  </v-list>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Inline\n\n```vue\n<template>\n  <v-list\n    class=\"mx-auto\"\n    max-width=\"256\"\n    border\n  >\n    <v-list-item\n      prepend-icon=\"mdi-inbox-arrow-down\"\n      title=\"Inbox\"\n      link\n    >\n      <template v-slot:append>\n        <v-badge\n          color=\"error\"\n          content=\"6\"\n          inline\n        ></v-badge>\n      </template>\n    </v-list-item>\n\n    <v-list-item\n      prepend-icon=\"mdi-send\"\n      title=\"Sent Mail\"\n      link\n    ></v-list-item>\n\n    <v-list-item\n      prepend-icon=\"mdi-delete\"\n      title=\"Trash\"\n      link\n    >\n      <template v-slot:append>\n        <v-badge\n          color=\"info\"\n          content=\"12\"\n          inline\n        ></v-badge>\n      </template>\n    </v-list-item>\n\n    <v-list-item\n      prepend-icon=\"mdi-alert-circle\"\n      title=\"Spam\"\n      link\n    ></v-list-item>\n  </v-list>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Inline",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000124",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000125",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-badge v-bind=\"props\">\n        <v-icon\n          icon=\"$vuetify\"\n          size=\"x-large\"\n        ></v-icon>\n      </v-badge>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"dot\" label=\"Dot\"></v-checkbox>\n\n      <v-slider\n        v-model=\"content\"\n        label=\"Value\"\n        max=\"100\"\n        min=\"0\"\n        step=\"1\"\n      ></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-badge'\n  const model = ref('default')\n  const content = ref(0)\n  const dot = ref(false)\n  const options = ['floating', 'inline']\n  const props = computed(() => {\n    return {\n      content: content.value || undefined,\n      dot: dot.value || undefined,\n      floating: model.value === 'floating' || undefined,\n      inline: model.value === 'inline' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-icon icon=\"$vuetify\" size=\"x-large\"></v-icon>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-badge v-bind=\"props\">\n        <v-icon\n          icon=\"$vuetify\"\n          size=\"x-large\"\n        ></v-icon>\n      </v-badge>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"dot\" label=\"Dot\"></v-checkbox>\n\n      <v-slider\n        v-model=\"content\"\n        label=\"Value\"\n        max=\"100\"\n        min=\"0\"\n        step=\"1\"\n      ></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-badge'\n  const model = ref('default')\n  const content = ref(0)\n  const dot = ref(false)\n  const options = ['floating', 'inline']\n  const props = computed(() => {\n    return {\n      content: content.value || undefined,\n      dot: dot.value || undefined,\n      floating: model.value === 'floating' || undefined,\n      inline: model.value === 'inline' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-icon icon=\"$vuetify\" size=\"x-large\"></v-icon>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000125",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000126",
    "text": "Component: v-banners\nType: component_overview\n\n# v-banners\n\nThe `v-banner` component is used as a middle-interrupting message to the user with one to two actions.",
    "display_content": "# v-banners\n\nThe `v-banner` component is used as a middle-interrupting message to the user with one to two actions.",
    "metadata": {
      "component": "v-banners",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000126",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000127",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nBanners come in two variations **single-line** and **multi-line** (implicit). These can have icons and actions that you can use with your message.",
    "display_content": "# v-usage\n\nBanners come in two variations **single-line** and **multi-line** (implicit). These can have icons and actions that you can use with your message.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000127",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000128",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-banner](/api/v-banner/) | Primary Component | | [v-banner-text](/api/v-banner-text/) | Sub-component used to display the `v-banner` subtitle. Wraps the `#text` slot | | [v-banner-actions](/api/v-banner-actions/) | Sub-component that modifies the default styling of [v-btn](/components/buttons/). Wraps the `#actions` slot |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-banner](/api/v-banner/) | Primary Component | | [v-banner-text](/api/v-banner-text/) | Sub-component used to display the `v-banner` subtitle. Wraps the `#text` slot | | [v-banner-actions](/api/v-banner-actions/) | Sub-component that modifies the default styling of [v-btn](/components/buttons/). Wraps the `#actions` slot |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000128",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000129",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-banner` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-banner` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000129",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000130",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe prop **lines** can be used to specify how the displayed text should be handled based on its length.\n\nAvailable sections: Lines, Sticky, Actions, Icon, Prepend, Prop Lines, Prop Sticky, Slot Actions, Slot Icon, Slot Prepend, Usage",
    "display_content": "# v-examples\n\nThe prop **lines** can be used to specify how the displayed text should be handled based on its length.\n\nAvailable sections: Lines, Sticky, Actions, Icon, Prepend, Prop Lines, Prop Sticky, Slot Actions, Slot Icon, Slot Prepend, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000130",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000131",
    "text": "Component: v-examples\nSection: Lines\nType: documentation\n\n## v-examples - Lines\n\nThe prop **lines** can be used to specify how the displayed text should be handled based on its length.\n\n<ExamplesExample file=\"v-banner/prop-lines\" />",
    "display_content": "## v-examples - Lines\n\nThe prop **lines** can be used to specify how the displayed text should be handled based on its length.\n\n<ExamplesExample file=\"v-banner/prop-lines\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Lines",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000131",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000132",
    "text": "Component: v-examples\nSection: Sticky\nType: documentation\n\n## v-examples - Sticky\n\nYou can optionally turn on the **sticky** prop to ensure that the content is pinned to the top of the screen.\n\n<ExamplesExample file=\"v-banner/prop-sticky\" />",
    "display_content": "## v-examples - Sticky\n\nYou can optionally turn on the **sticky** prop to ensure that the content is pinned to the top of the screen.\n\n<ExamplesExample file=\"v-banner/prop-sticky\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Sticky",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000132",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000133",
    "text": "Component: v-examples\nSection: Actions\nType: documentation\n\n## v-examples - Actions\n\nBanners may have one or two text buttons that don't stand out that much.\n\n<ExamplesExample file=\"v-banner/slot-actions\" />",
    "display_content": "## v-examples - Actions\n\nBanners may have one or two text buttons that don't stand out that much.\n\n<ExamplesExample file=\"v-banner/slot-actions\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Actions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000133",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000134",
    "text": "Component: v-examples\nSection: Icon\nType: documentation\n\n## v-examples - Icon\n\nThe icon slot allows you to explicitly control the content and functionality within it.\n\n<ExamplesExample file=\"v-banner/slot-icon\" />",
    "display_content": "## v-examples - Icon\n\nThe icon slot allows you to explicitly control the content and functionality within it.\n\n<ExamplesExample file=\"v-banner/slot-icon\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000134",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000135",
    "text": "Component: v-examples\nSection: Prepend\nType: documentation\n\n## v-examples - Prepend\n\nThe prepend slot allows you to explicitly control the content and functionality within it. Icons also help to emphasize a banner's message.\n\n<ExamplesExample file=\"v-banner/slot-prepend\" />",
    "display_content": "## v-examples - Prepend\n\nThe prepend slot allows you to explicitly control the content and functionality within it. Icons also help to emphasize a banner's message.\n\n<ExamplesExample file=\"v-banner/slot-prepend\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Prepend",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000135",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000136",
    "text": "Component: v-examples\nSection: Prop Lines\nType: code_example\n\n## v-examples - Prop Lines\n\n```vue\n<template>\n  <div>\n    <v-banner\n      class=\"my-4\"\n      color=\"deep-purple-accent-4\"\n      icon=\"mdi-lock\"\n      lines=\"one\"\n    >\n      <v-banner-text>\n        Banner with one line of text.\n      </v-banner-text>\n\n      <template v-slot:actions>\n        <v-btn>Action</v-btn>\n      </template>\n    </v-banner>\n\n    <v-banner\n      class=\"my-4\"\n      color=\"error\"\n      icon=\"mdi-weather-hurricane\"\n      lines=\"two\"\n    >\n      <v-banner-text>\n        Banner with two lines of text. If the text is too long to fit on two lines then an ellipsis will be used to hide the remaining content. So this next line will be hidden.\n      </v-banner-text>\n\n      <template v-slot:actions>\n        <v-btn>Action</v-btn>\n      </template>\n    </v-banner>\n\n    <v-banner\n      class=\"my-4\"\n      color=\"warning\"\n      icon=\"$warning\"\n      lines=\"three\"\n    >\n      <v-banner-text>\n        Banner with three lines of text. One or two lines is preferable. Three lines should be considered the absolute maximum length on desktop in order to keep messages short and actionable.\n      </v-banner-text>\n\n      <template v-slot:actions>\n        <v-btn>Action</v-btn>\n      </template>\n    </v-banner>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Lines\n\n```vue\n<template>\n  <div>\n    <v-banner\n      class=\"my-4\"\n      color=\"deep-purple-accent-4\"\n      icon=\"mdi-lock\"\n      lines=\"one\"\n    >\n      <v-banner-text>\n        Banner with one line of text.\n      </v-banner-text>\n\n      <template v-slot:actions>\n        <v-btn>Action</v-btn>\n      </template>\n    </v-banner>\n\n    <v-banner\n      class=\"my-4\"\n      color=\"error\"\n      icon=\"mdi-weather-hurricane\"\n      lines=\"two\"\n    >\n      <v-banner-text>\n        Banner with two lines of text. If the text is too long to fit on two lines then an ellipsis will be used to hide the remaining content. So this next line will be hidden.\n      </v-banner-text>\n\n      <template v-slot:actions>\n        <v-btn>Action</v-btn>\n      </template>\n    </v-banner>\n\n    <v-banner\n      class=\"my-4\"\n      color=\"warning\"\n      icon=\"$warning\"\n      lines=\"three\"\n    >\n      <v-banner-text>\n        Banner with three lines of text. One or two lines is preferable. Three lines should be considered the absolute maximum length on desktop in order to keep messages short and actionable.\n      </v-banner-text>\n\n      <template v-slot:actions>\n        <v-btn>Action</v-btn>\n      </template>\n    </v-banner>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Lines",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000136",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000137",
    "text": "Component: v-examples\nSection: Prop Sticky\nType: code_example\n\n## v-examples - Prop Sticky\n\n```vue\n<template>\n  <v-card\n    class=\"overflow-auto mx-auto\"\n    max-height=\"300\"\n    width=\"448\"\n  >\n    <v-toolbar color=\"primary\">\n      <v-toolbar-title>My Document</v-toolbar-title>\n\n      <template v-slot:append>\n        <v-switch\n          v-model=\"sticky\"\n          color=\"secondary\"\n          label=\"Sticky Banner\"\n          hide-details\n        ></v-switch>\n      </template>\n    </v-toolbar>\n\n    <v-banner\n      :sticky=\"sticky\"\n      lines=\"one\"\n    >\n      <template v-slot:text>\n        We can't save your edits while you are in offline mode.\n      </template>\n\n      <template v-slot:actions>\n        <v-btn color=\"deep-purple-accent-4\">\n          Go Online\n        </v-btn>\n      </template>\n    </v-banner>\n\n    <v-card-text class=\"bg-grey-lighten-4\">\n      <v-sheet\n        class=\"mx-auto\"\n        height=\"300\"\n      ></v-sheet>\n    </v-card-text>\n\n    <v-footer\n      class=\"justify-center\"\n      color=\"primary\"\n    >\n      End of Content\n    </v-footer>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const sticky = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      sticky: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Sticky\n\n```vue\n<template>\n  <v-card\n    class=\"overflow-auto mx-auto\"\n    max-height=\"300\"\n    width=\"448\"\n  >\n    <v-toolbar color=\"primary\">\n      <v-toolbar-title>My Document</v-toolbar-title>\n\n      <template v-slot:append>\n        <v-switch\n          v-model=\"sticky\"\n          color=\"secondary\"\n          label=\"Sticky Banner\"\n          hide-details\n        ></v-switch>\n      </template>\n    </v-toolbar>\n\n    <v-banner\n      :sticky=\"sticky\"\n      lines=\"one\"\n    >\n      <template v-slot:text>\n        We can't save your edits while you are in offline mode.\n      </template>\n\n      <template v-slot:actions>\n        <v-btn color=\"deep-purple-accent-4\">\n          Go Online\n        </v-btn>\n      </template>\n    </v-banner>\n\n    <v-card-text class=\"bg-grey-lighten-4\">\n      <v-sheet\n        class=\"mx-auto\"\n        height=\"300\"\n      ></v-sheet>\n    </v-card-text>\n\n    <v-footer\n      class=\"justify-center\"\n      color=\"primary\"\n    >\n      End of Content\n    </v-footer>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const sticky = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      sticky: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Sticky",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000137",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000138",
    "text": "Component: v-examples\nSection: Slot Actions\nType: code_example\n\n## v-examples - Slot Actions\n\n```vue\n<template>\n  <v-banner\n    color=\"warning\"\n    icon=\"mdi-wifi-strength-alert-outline\"\n    lines=\"one\"\n  >\n    <template v-slot:text>\n      No Internet connection\n    </template>\n\n    <template v-slot:actions>\n      <v-btn>\n        Dismiss\n      </v-btn>\n\n      <v-btn>\n        Retry\n      </v-btn>\n    </template>\n  </v-banner>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Actions\n\n```vue\n<template>\n  <v-banner\n    color=\"warning\"\n    icon=\"mdi-wifi-strength-alert-outline\"\n    lines=\"one\"\n  >\n    <template v-slot:text>\n      No Internet connection\n    </template>\n\n    <template v-slot:actions>\n      <v-btn>\n        Dismiss\n      </v-btn>\n\n      <v-btn>\n        Retry\n      </v-btn>\n    </template>\n  </v-banner>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Actions",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000138",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000139",
    "text": "Component: v-examples\nSection: Slot Icon\nType: code_example\n\n## v-examples - Slot Icon\n\n```vue\n<template>\n  <v-banner\n    color=\"pink-darken-1\"\n    icon=\"mdi-account-box\"\n    lines=\"two\"\n  >\n    <template v-slot:prepend>\n      <v-avatar></v-avatar>\n    </template>\n\n    <v-banner-text>\n      Banner with two lines of text. If the text is too long to fit on two lines then an ellipsis will be used to hide the remaining content. So this next line will be hidden.\n    </v-banner-text>\n\n    <v-banner-actions>\n      <v-btn>Action Button</v-btn>\n    </v-banner-actions>\n  </v-banner>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Icon\n\n```vue\n<template>\n  <v-banner\n    color=\"pink-darken-1\"\n    icon=\"mdi-account-box\"\n    lines=\"two\"\n  >\n    <template v-slot:prepend>\n      <v-avatar></v-avatar>\n    </template>\n\n    <v-banner-text>\n      Banner with two lines of text. If the text is too long to fit on two lines then an ellipsis will be used to hide the remaining content. So this next line will be hidden.\n    </v-banner-text>\n\n    <v-banner-actions>\n      <v-btn>Action Button</v-btn>\n    </v-banner-actions>\n  </v-banner>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Icon",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000139",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000140",
    "text": "Component: v-examples\nSection: Slot Prepend\nType: code_example\n\n## v-examples - Slot Prepend\n\n```vue\n<template>\n  <v-banner\n    color=\"deep-purple-accent-4\"\n    lines=\"two\"\n  >\n    <template v-slot:prepend>\n      <v-avatar\n        color=\"deep-purple-accent-4\"\n        icon=\"mdi-account-filter\"\n      ></v-avatar>\n    </template>\n\n    <v-banner-text>\n      Banner with two lines of text. If the text is too long to fit on two lines then an ellipsis will be used to hide the remaining content. So this next line will be hidden.\n    </v-banner-text>\n\n    <v-banner-actions>\n      <v-btn>Action</v-btn>\n\n      <v-btn>Action</v-btn>\n    </v-banner-actions>\n  </v-banner>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Prepend\n\n```vue\n<template>\n  <v-banner\n    color=\"deep-purple-accent-4\"\n    lines=\"two\"\n  >\n    <template v-slot:prepend>\n      <v-avatar\n        color=\"deep-purple-accent-4\"\n        icon=\"mdi-account-filter\"\n      ></v-avatar>\n    </template>\n\n    <v-banner-text>\n      Banner with two lines of text. If the text is too long to fit on two lines then an ellipsis will be used to hide the remaining content. So this next line will be hidden.\n    </v-banner-text>\n\n    <v-banner-actions>\n      <v-btn>Action</v-btn>\n\n      <v-btn>Action</v-btn>\n    </v-banner-actions>\n  </v-banner>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Prepend",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000140",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000141",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-banner\n        v-bind=\"props\"\n        :avatar=\"avatar ? 'https://cdn.vuetifyjs.com/images/john-smirk.png' : undefined\"\n      >\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquam earum, est illo quae fugit voluptatum fuga magni hic maiores ipsa, illum, tenetur accusamus cupiditate? Dolorem ad nisi eveniet officia voluptatibus.\n        </template>\n\n        <template v-if=\"actions\" v-slot:actions>\n          <v-btn>Click me</v-btn>\n        </template>\n      </v-banner>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"[\n          'success',\n          'info',\n          'warning',\n          'error',\n        ]\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-checkbox v-model=\"avatar\" label=\"Avatar\"></v-checkbox>\n\n      <v-checkbox v-model=\"icon\" label=\"Icon\"></v-checkbox>\n\n      <v-checkbox v-model=\"actions\" label=\"Actions\"></v-checkbox>\n\n      <v-checkbox v-if=\"actions\" v-model=\"stacked\" label=\"Stacked\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-banner'\n  const model = ref('default')\n  const options = ['One line', 'Two lines', 'Three lines']\n  const icon = ref(false)\n  const avatar = ref(false)\n  const actions = ref(false)\n  const stacked = ref(false)\n  const color = ref()\n\n  const props = computed(() => {\n    return {\n      avatar: avatar.value ? 'smirk.png' : undefined,\n      color: color.value ? color.value : undefined,\n      icon: icon.value ? '$vuetify' : undefined,\n      lines: model.value !== 'default' ? model.value.toLocaleLowerCase().split(' ')[0] : undefined,\n      text: '...',\n      stacked: stacked.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:actions>\n    <v-btn>Click me</v-btn>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-banner\n        v-bind=\"props\"\n        :avatar=\"avatar ? 'https://cdn.vuetifyjs.com/images/john-smirk.png' : undefined\"\n      >\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquam earum, est illo quae fugit voluptatum fuga magni hic maiores ipsa, illum, tenetur accusamus cupiditate? Dolorem ad nisi eveniet officia voluptatibus.\n        </template>\n\n        <template v-if=\"actions\" v-slot:actions>\n          <v-btn>Click me</v-btn>\n        </template>\n      </v-banner>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"[\n          'success',\n          'info',\n          'warning',\n          'error',\n        ]\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-checkbox v-model=\"avatar\" label=\"Avatar\"></v-checkbox>\n\n      <v-checkbox v-model=\"icon\" label=\"Icon\"></v-checkbox>\n\n      <v-checkbox v-model=\"actions\" label=\"Actions\"></v-checkbox>\n\n      <v-checkbox v-if=\"actions\" v-model=\"stacked\" label=\"Stacked\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-banner'\n  const model = ref('default')\n  const options = ['One line', 'Two lines', 'Three lines']\n  const icon = ref(false)\n  const avatar = ref(false)\n  const actions = ref(false)\n  const stacked = ref(false)\n  const color = ref()\n\n  const props = computed(() => {\n    return {\n      avatar: avatar.value ? 'smirk.png' : undefined,\n      color: color.value ? color.value : undefined,\n      icon: icon.value ? '$vuetify' : undefined,\n      lines: model.value !== 'default' ? model.value.toLocaleLowerCase().split(' ')[0] : undefined,\n      text: '...',\n      stacked: stacked.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:actions>\n    <v-btn>Click me</v-btn>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000141",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000142",
    "text": "Component: v-bottom-navigation\nType: component_overview\n\n# v-bottom-navigation\n\nThe `v-bottom-navigation` component is an alternative to the sidebar. It is primarily used for mobile applications and comes in three variants, **icons** and **text**, and **shift**.",
    "display_content": "# v-bottom-navigation\n\nThe `v-bottom-navigation` component is an alternative to the sidebar. It is primarily used for mobile applications and comes in three variants, **icons** and **text**, and **shift**.",
    "metadata": {
      "component": "v-bottom-navigation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000142",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000143",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nWhile `v-bottom navigation` is meant to be used with [vue-router](https://router.vuejs.org/), you can also programmatically control the active state of the buttons by using the **value** property. A button is given a default value of its _index_ with `v-bottom-navigation`.",
    "display_content": "# v-usage\n\nWhile `v-bottom navigation` is meant to be used with [vue-router](https://router.vuejs.org/), you can also programmatically control the active state of the buttons by using the **value** property. A button is given a default value of its _index_ with `v-bottom-navigation`.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000143",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000144",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-bottom-navigation](/api/v-bottom-navigation/) | Primary Component | | [v-btn](/api/v-btn/) | Sub-component used for modifying the `v-bottom-navigation` state |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-bottom-navigation](/api/v-bottom-navigation/) | Primary Component | | [v-btn](/api/v-btn/) | Sub-component used for modifying the `v-bottom-navigation` state |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000144",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000145",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe **color** prop applies a color to the background of the bottom navigation. We recommend using the **light** and **dark** props to properly contrast text color.\n\nAvailable sections: Color, Grow, Hide on scroll, Horizontal, Scroll threshold, Shift, Toggle, Prop Color, Prop Grow, Prop Hide On Scroll, Prop Horizontal, Prop Scroll Threshold, Prop Shift, Prop Toggle, Usage",
    "display_content": "# v-examples\n\nThe **color** prop applies a color to the background of the bottom navigation. We recommend using the **light** and **dark** props to properly contrast text color.\n\nAvailable sections: Color, Grow, Hide on scroll, Horizontal, Scroll threshold, Shift, Toggle, Prop Color, Prop Grow, Prop Hide On Scroll, Prop Horizontal, Prop Scroll Threshold, Prop Shift, Prop Toggle, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000145",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000146",
    "text": "Component: v-examples\nSection: Color\nType: documentation\n\n## v-examples - Color\n\nThe **color** prop applies a color to the background of the bottom navigation. We recommend using the **light** and **dark** props to properly contrast text color.\n\n<ExamplesExample file=\"v-bottom-navigation/prop-color\" />",
    "display_content": "## v-examples - Color\n\nThe **color** prop applies a color to the background of the bottom navigation. We recommend using the **light** and **dark** props to properly contrast text color.\n\n<ExamplesExample file=\"v-bottom-navigation/prop-color\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000146",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000147",
    "text": "Component: v-examples\nSection: Grow\nType: documentation\n\n## v-examples - Grow\n\nUsing the **grow** property forces [v-btn](/components/buttons/) components to _fill_ all available space. Buttons have a maximum width of **168px** per the [Bottom Navigation MD specification](https://material.io/components/bottom-navigation#specs).\n\n<ExamplesExample file=\"v-bottom-navigation/prop-grow\" />\n\n<!-- TODO: Fix this example when scrolling techniques is implemented",
    "display_content": "## v-examples - Grow\n\nUsing the **grow** property forces [v-btn](/components/buttons/) components to _fill_ all available space. Buttons have a maximum width of **168px** per the [Bottom Navigation MD specification](https://material.io/components/bottom-navigation#specs).\n\n<ExamplesExample file=\"v-bottom-navigation/prop-grow\" />\n\n<!-- TODO: Fix this example when scrolling techniques is implemented",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Grow",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000147",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000148",
    "text": "Component: v-examples\nSection: Hide on scroll\nType: documentation\n\n## v-examples - Hide on scroll\n\nThe `v-bottom-navigation` component hides when *scrolling up* when using the **hide-on-scroll** property. This is similar to the [scrolling techniques](https://material.io/archive/guidelines/patterns/scrolling-techniques.html) that are supported in [v-app-bar](/components/app-bars/). In the following example, scroll *up and down* to see this behavior.\n\n<ExamplesExample file=\"v-bottom-navigation/prop-hide-on-scroll\" />\n-->",
    "display_content": "## v-examples - Hide on scroll\n\nThe `v-bottom-navigation` component hides when *scrolling up* when using the **hide-on-scroll** property. This is similar to the [scrolling techniques](https://material.io/archive/guidelines/patterns/scrolling-techniques.html) that are supported in [v-app-bar](/components/app-bars/). In the following example, scroll *up and down* to see this behavior.\n\n<ExamplesExample file=\"v-bottom-navigation/prop-hide-on-scroll\" />\n-->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Hide on scroll",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000148",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000149",
    "text": "Component: v-examples\nSection: Horizontal\nType: documentation\n\n## v-examples - Horizontal\n\nAdjust the style of buttons and icons by using the **horizontal** prop. This positions button text *inline* with the provided [v-icon](/components/icons/).\n\n<ExamplesExample file=\"v-bottom-navigation/prop-horizontal\" />\n\n<!-- TODO: Fix this example when scrolling techniques is implemented",
    "display_content": "## v-examples - Horizontal\n\nAdjust the style of buttons and icons by using the **horizontal** prop. This positions button text *inline* with the provided [v-icon](/components/icons/).\n\n<ExamplesExample file=\"v-bottom-navigation/prop-horizontal\" />\n\n<!-- TODO: Fix this example when scrolling techniques is implemented",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Horizontal",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000149",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000150",
    "text": "Component: v-examples\nSection: Scroll threshold\nType: documentation\n\n## v-examples - Scroll threshold\n\nModify the **scroll-threshold** property to increase the distance a user must scroll before the `v-bottom-navigation` is hidden.\n\n<ExamplesExample file=\"v-bottom-navigation/prop-scroll-threshold\" />\n-->",
    "display_content": "## v-examples - Scroll threshold\n\nModify the **scroll-threshold** property to increase the distance a user must scroll before the `v-bottom-navigation` is hidden.\n\n<ExamplesExample file=\"v-bottom-navigation/prop-scroll-threshold\" />\n-->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Scroll threshold",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000150",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000151",
    "text": "Component: v-examples\nSection: Shift\nType: documentation\n\n## v-examples - Shift\n\nThe **shift** prop hides button text when not active. This provides an alternative visual style to the `v-bottom-navigation` component.\n\n::: info\n  For this to work, `v-btn` text is **required** to be wrapped in a `span` tag.\n:::\n\n<ExamplesExample file=\"v-bottom-navigation/prop-shift\" />",
    "display_content": "## v-examples - Shift\n\nThe **shift** prop hides button text when not active. This provides an alternative visual style to the `v-bottom-navigation` component.\n\n::: info\n  For this to work, `v-btn` text is **required** to be wrapped in a `span` tag.\n:::\n\n<ExamplesExample file=\"v-bottom-navigation/prop-shift\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Shift",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000151",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000152",
    "text": "Component: v-examples\nSection: Toggle\nType: documentation\n\n## v-examples - Toggle\n\nSince `v-bottom-navigation` supports v-model, use the **active** prop to control the display state.\n\n<ExamplesExample file=\"v-bottom-navigation/prop-toggle\" />",
    "display_content": "## v-examples - Toggle\n\nSince `v-bottom-navigation` supports v-model, use the **active** prop to control the display state.\n\n<ExamplesExample file=\"v-bottom-navigation/prop-toggle\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Toggle",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000152",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000153",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <v-layout class=\"overflow-visible\" style=\"height: 56px;\">\n    <v-bottom-navigation\n      v-model=\"value\"\n      color=\"primary\"\n      active\n    >\n      <v-btn>\n        <v-icon>mdi-history</v-icon>\n\n        Recents\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-heart</v-icon>\n\n        Favorites\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-map-marker</v-icon>\n\n        <span>Nearby</span>\n      </v-btn>\n    </v-bottom-navigation>\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({ value: 0 }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <v-layout class=\"overflow-visible\" style=\"height: 56px;\">\n    <v-bottom-navigation\n      v-model=\"value\"\n      color=\"primary\"\n      active\n    >\n      <v-btn>\n        <v-icon>mdi-history</v-icon>\n\n        Recents\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-heart</v-icon>\n\n        Favorites\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-map-marker</v-icon>\n\n        <span>Nearby</span>\n      </v-btn>\n    </v-bottom-navigation>\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({ value: 0 }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000153",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000154",
    "text": "Component: v-examples\nSection: Prop Grow\nType: code_example\n\n## v-examples - Prop Grow\n\n```vue\n<template>\n  <v-layout class=\"overflow-visible\" style=\"height: 56px;\">\n    <v-bottom-navigation\n      v-model=\"value\"\n      color=\"teal\"\n      grow\n    >\n      <v-btn>\n        <v-icon>mdi-history</v-icon>\n\n        Recents\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-heart</v-icon>\n\n        Favorites\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-map-marker</v-icon>\n\n        Nearby\n      </v-btn>\n    </v-bottom-navigation>\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(1)\n</script>\n\n<script>\n  export default {\n    data: () => ({ value: 1 }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Grow\n\n```vue\n<template>\n  <v-layout class=\"overflow-visible\" style=\"height: 56px;\">\n    <v-bottom-navigation\n      v-model=\"value\"\n      color=\"teal\"\n      grow\n    >\n      <v-btn>\n        <v-icon>mdi-history</v-icon>\n\n        Recents\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-heart</v-icon>\n\n        Favorites\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-map-marker</v-icon>\n\n        Nearby\n      </v-btn>\n    </v-bottom-navigation>\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(1)\n</script>\n\n<script>\n  export default {\n    data: () => ({ value: 1 }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Grow",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000154",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000155",
    "text": "Component: v-examples\nSection: Prop Hide On Scroll\nType: code_example\n\n## v-examples - Prop Hide On Scroll\n\n```vue\n<template>\n  <v-card\n    class=\"overflow-hidden mx-auto\"\n    height=\"200\"\n    max-width=\"500\"\n  >\n    <v-bottom-navigation\n      scroll-target=\"#hide-on-scroll-example\"\n      absolute\n      hide-on-scroll\n      horizontal\n    >\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        variant=\"text\"\n      >\n        <span>Recents</span>\n\n        <v-icon>mdi-history</v-icon>\n      </v-btn>\n\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        variant=\"text\"\n      >\n        <span>Favorites</span>\n\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        variant=\"text\"\n      >\n        <span>Nearby</span>\n\n        <v-icon>mdi-map-marker</v-icon>\n      </v-btn>\n    </v-bottom-navigation>\n\n    <v-responsive\n      id=\"hide-on-scroll-example\"\n      class=\"overflow-y-auto\"\n      max-height=\"600\"\n    >\n      <v-responsive height=\"1500\"></v-responsive>\n    </v-responsive>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Hide On Scroll\n\n```vue\n<template>\n  <v-card\n    class=\"overflow-hidden mx-auto\"\n    height=\"200\"\n    max-width=\"500\"\n  >\n    <v-bottom-navigation\n      scroll-target=\"#hide-on-scroll-example\"\n      absolute\n      hide-on-scroll\n      horizontal\n    >\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        variant=\"text\"\n      >\n        <span>Recents</span>\n\n        <v-icon>mdi-history</v-icon>\n      </v-btn>\n\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        variant=\"text\"\n      >\n        <span>Favorites</span>\n\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        variant=\"text\"\n      >\n        <span>Nearby</span>\n\n        <v-icon>mdi-map-marker</v-icon>\n      </v-btn>\n    </v-bottom-navigation>\n\n    <v-responsive\n      id=\"hide-on-scroll-example\"\n      class=\"overflow-y-auto\"\n      max-height=\"600\"\n    >\n      <v-responsive height=\"1500\"></v-responsive>\n    </v-responsive>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hide On Scroll",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000155",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000156",
    "text": "Component: v-examples\nSection: Prop Horizontal\nType: code_example\n\n## v-examples - Prop Horizontal\n\n```vue\n<template>\n\n  <v-layout class=\"overflow-visible\" style=\"height: 56px;\">\n    <v-bottom-navigation\n      v-model=\"value\"\n      color=\"primary\"\n      horizontal\n    >\n      <v-btn>\n        <v-icon>mdi-history</v-icon>\n\n        Recents\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-heart</v-icon>\n\n        Favorites\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-map-marker</v-icon>\n\n        Nearby\n      </v-btn>\n    </v-bottom-navigation>\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(1)\n</script>\n\n<script>\n  export default {\n    data: () => ({ value: 1 }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Horizontal\n\n```vue\n<template>\n\n  <v-layout class=\"overflow-visible\" style=\"height: 56px;\">\n    <v-bottom-navigation\n      v-model=\"value\"\n      color=\"primary\"\n      horizontal\n    >\n      <v-btn>\n        <v-icon>mdi-history</v-icon>\n\n        Recents\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-heart</v-icon>\n\n        Favorites\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-map-marker</v-icon>\n\n        Nearby\n      </v-btn>\n    </v-bottom-navigation>\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(1)\n</script>\n\n<script>\n  export default {\n    data: () => ({ value: 1 }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Horizontal",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000156",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000157",
    "text": "Component: v-examples\nSection: Prop Scroll Threshold\nType: code_example\n\n## v-examples - Prop Scroll Threshold\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto overflow-hidden\"\n    height=\"200\"\n    max-width=\"500\"\n  >\n    <v-bottom-navigation\n      color=\"white\"\n      scroll-target=\"#scroll-threshold-example\"\n      scroll-threshold=\"500\"\n      absolute\n      hide-on-scroll\n      horizontal\n    >\n      <v-btn>\n        <span>Recents</span>\n\n        <v-icon>mdi-history</v-icon>\n      </v-btn>\n\n      <v-btn>\n        <span>Favorites</span>\n\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n      <v-btn>\n        <span>Nearby</span>\n\n        <v-icon>mdi-map-marker</v-icon>\n      </v-btn>\n    </v-bottom-navigation>\n\n    <v-sheet\n      id=\"scroll-threshold-example\"\n      class=\"overflow-y-auto pb-16\"\n      max-height=\"600\"\n    >\n      <v-responsive height=\"1500\"></v-responsive>\n    </v-sheet>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Scroll Threshold\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto overflow-hidden\"\n    height=\"200\"\n    max-width=\"500\"\n  >\n    <v-bottom-navigation\n      color=\"white\"\n      scroll-target=\"#scroll-threshold-example\"\n      scroll-threshold=\"500\"\n      absolute\n      hide-on-scroll\n      horizontal\n    >\n      <v-btn>\n        <span>Recents</span>\n\n        <v-icon>mdi-history</v-icon>\n      </v-btn>\n\n      <v-btn>\n        <span>Favorites</span>\n\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n      <v-btn>\n        <span>Nearby</span>\n\n        <v-icon>mdi-map-marker</v-icon>\n      </v-btn>\n    </v-bottom-navigation>\n\n    <v-sheet\n      id=\"scroll-threshold-example\"\n      class=\"overflow-y-auto pb-16\"\n      max-height=\"600\"\n    >\n      <v-responsive height=\"1500\"></v-responsive>\n    </v-sheet>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Scroll Threshold",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000157",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000158",
    "text": "Component: v-examples\nSection: Prop Shift\nType: code_example\n\n## v-examples - Prop Shift\n\n```vue\n<template>\n\n  <v-layout class=\"overflow-visible\" style=\"height: 56px;\">\n    <v-bottom-navigation\n      v-model=\"value\"\n      :bg-color=\"color\"\n      mode=\"shift\"\n    >\n      <v-btn>\n        <v-icon>mdi-television-play</v-icon>\n\n        <span>Video</span>\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-music-note</v-icon>\n\n        <span>Music</span>\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-book</v-icon>\n\n        <span>Book</span>\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-image</v-icon>\n\n        <span>Image</span>\n      </v-btn>\n    </v-bottom-navigation>\n  </v-layout>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const value = ref(1)\n  const color = computed(() => {\n    switch (value.value) {\n      case 0: return 'blue-grey'\n      case 1: return 'teal'\n      case 2: return 'brown'\n      case 3: return 'indigo'\n      default: return 'blue-grey'\n    }\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({ value: 1 }),\n\n    computed: {\n      color () {\n        switch (this.value) {\n          case 0: return 'blue-grey'\n          case 1: return 'teal'\n          case 2: return 'brown'\n          case 3: return 'indigo'\n          default: return 'blue-grey'\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Shift\n\n```vue\n<template>\n\n  <v-layout class=\"overflow-visible\" style=\"height: 56px;\">\n    <v-bottom-navigation\n      v-model=\"value\"\n      :bg-color=\"color\"\n      mode=\"shift\"\n    >\n      <v-btn>\n        <v-icon>mdi-television-play</v-icon>\n\n        <span>Video</span>\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-music-note</v-icon>\n\n        <span>Music</span>\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-book</v-icon>\n\n        <span>Book</span>\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-image</v-icon>\n\n        <span>Image</span>\n      </v-btn>\n    </v-bottom-navigation>\n  </v-layout>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const value = ref(1)\n  const color = computed(() => {\n    switch (value.value) {\n      case 0: return 'blue-grey'\n      case 1: return 'teal'\n      case 2: return 'brown'\n      case 3: return 'indigo'\n      default: return 'blue-grey'\n    }\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({ value: 1 }),\n\n    computed: {\n      color () {\n        switch (this.value) {\n          case 0: return 'blue-grey'\n          case 1: return 'teal'\n          case 2: return 'brown'\n          case 3: return 'indigo'\n          default: return 'blue-grey'\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Shift",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000158",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000159",
    "text": "Component: v-examples\nSection: Prop Toggle\nType: code_example\n\n## v-examples - Prop Toggle\n\n```vue\n<template>\n  <v-layout class=\"border rounded\" style=\"height: 128px;\">\n    <div class=\"mx-auto my-4\">\n      <v-btn\n        color=\"deep-purple\"\n        variant=\"outlined\"\n        @click=\"active = !active\"\n      >\n        Toggle Navigation\n      </v-btn>\n    </div>\n\n    <v-bottom-navigation\n      :active=\"active\"\n      color=\"indigo\"\n    >\n      <v-btn>\n        <v-icon>mdi-history</v-icon>\n\n        Recents\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-heart</v-icon>\n\n        Favorites\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-map-marker</v-icon>\n\n        Nearby\n      </v-btn>\n    </v-bottom-navigation>\n\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const active = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({ active: true }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Toggle\n\n```vue\n<template>\n  <v-layout class=\"border rounded\" style=\"height: 128px;\">\n    <div class=\"mx-auto my-4\">\n      <v-btn\n        color=\"deep-purple\"\n        variant=\"outlined\"\n        @click=\"active = !active\"\n      >\n        Toggle Navigation\n      </v-btn>\n    </div>\n\n    <v-bottom-navigation\n      :active=\"active\"\n      color=\"indigo\"\n    >\n      <v-btn>\n        <v-icon>mdi-history</v-icon>\n\n        Recents\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-heart</v-icon>\n\n        Favorites\n      </v-btn>\n\n      <v-btn>\n        <v-icon>mdi-map-marker</v-icon>\n\n        Nearby\n      </v-btn>\n    </v-bottom-navigation>\n\n  </v-layout>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const active = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({ active: true }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Toggle",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000159",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000160",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-layout class=\"overflow-visible\">\n      <v-bottom-navigation v-bind=\"props\">\n        <v-btn value=\"history\">\n          <v-icon>mdi-history</v-icon>\n\n          <span>Recent</span>\n        </v-btn>\n\n        <v-btn value=\"favorites\">\n          <v-icon>mdi-heart</v-icon>\n\n          <span>Favorites</span>\n        </v-btn>\n\n        <v-btn value=\"nearby\">\n          <v-icon>mdi-map-marker</v-icon>\n\n          <span>Nearby</span>\n        </v-btn>\n      </v-bottom-navigation>\n    </v-layout>\n\n    <template v-slot:configuration>\n      <v-slider v-model=\"elevation\" label=\"Elevation\" max=\"24\" min=\"0\" step=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-bottom-navigation'\n  const model = ref('default')\n  const options = ['grow', 'shift']\n  const elevation = ref(4)\n\n  const props = computed(() => {\n    return {\n      elevation: elevation.value === 4 ? undefined : elevation.value,\n      grow: model.value === 'grow' || undefined,\n      mode: model.value === 'shift' ? 'shift' : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    let str = ''\n\n    str += `\n  <v-btn value=\"recent\">\n    <v-icon>mdi-history</v-icon>\n\n    <span>Recent</span>\n  </v-btn>\n\n  <v-btn value=\"favorites\">\n    <v-icon>mdi-heart</v-icon>\n\n    <span>Favorites</span>\n  </v-btn>\n\n  <v-btn value=\"nearby\">\n    <v-icon>mdi-map-marker</v-icon>\n\n    <span>Nearby</span>\n  </v-btn>\n`\n\n    return str\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-layout class=\"overflow-visible\">\n      <v-bottom-navigation v-bind=\"props\">\n        <v-btn value=\"history\">\n          <v-icon>mdi-history</v-icon>\n\n          <span>Recent</span>\n        </v-btn>\n\n        <v-btn value=\"favorites\">\n          <v-icon>mdi-heart</v-icon>\n\n          <span>Favorites</span>\n        </v-btn>\n\n        <v-btn value=\"nearby\">\n          <v-icon>mdi-map-marker</v-icon>\n\n          <span>Nearby</span>\n        </v-btn>\n      </v-bottom-navigation>\n    </v-layout>\n\n    <template v-slot:configuration>\n      <v-slider v-model=\"elevation\" label=\"Elevation\" max=\"24\" min=\"0\" step=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-bottom-navigation'\n  const model = ref('default')\n  const options = ['grow', 'shift']\n  const elevation = ref(4)\n\n  const props = computed(() => {\n    return {\n      elevation: elevation.value === 4 ? undefined : elevation.value,\n      grow: model.value === 'grow' || undefined,\n      mode: model.value === 'shift' ? 'shift' : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    let str = ''\n\n    str += `\n  <v-btn value=\"recent\">\n    <v-icon>mdi-history</v-icon>\n\n    <span>Recent</span>\n  </v-btn>\n\n  <v-btn value=\"favorites\">\n    <v-icon>mdi-heart</v-icon>\n\n    <span>Favorites</span>\n  </v-btn>\n\n  <v-btn value=\"nearby\">\n    <v-icon>mdi-map-marker</v-icon>\n\n    <span>Nearby</span>\n  </v-btn>\n`\n\n    return str\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000160",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000161",
    "text": "Component: v-bottom-sheets\nType: component_overview\n\n# v-bottom-sheets\n\nThe bottom sheet is a modified `v-dialog` that slides from the bottom of the screen, similar to a `v-bottom-navigation`.",
    "display_content": "# v-bottom-sheets\n\nThe bottom sheet is a modified `v-dialog` that slides from the bottom of the screen, similar to a `v-bottom-navigation`.",
    "metadata": {
      "component": "v-bottom-sheets",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000161",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000162",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nWhereas a bottom navigation component is for buttons and specific application level actions, a bottom sheet is meant to contain anything.",
    "display_content": "# v-usage\n\nWhereas a bottom navigation component is for buttons and specific application level actions, a bottom sheet is meant to contain anything.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000162",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000163",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component                                        | Description       | |--------------------------------------------------|-------------------| | [v-bottom-sheet](/api/v-bottom-sheet/) | Primary Component |",
    "display_content": "# v-api\n\n| Component                                        | Description       | |--------------------------------------------------|-------------------| | [v-bottom-sheet](/api/v-bottom-sheet/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000163",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000164",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended components to use inside of a `v-bottom-sheet` are:",
    "display_content": "# v-anatomy\n\nThe recommended components to use inside of a `v-bottom-sheet` are:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000164",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000165",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-bottom-sheet` component is a modified [v-dialog](/components/dialogs/) that slides from the bottom of the screen. It is used for elevating content above other elements in a dialog style fashion. The bottom sheet can be controlled using the `v-model` prop or through the `activator` slot.\n\nAvailable sections: Props, Model, Inset, Slots, Examples, Music Player, Open In List, Misc Open In List, Misc Player, Prop Inset, Prop Model, Usage",
    "display_content": "# v-guide\n\nThe `v-bottom-sheet` component is a modified [v-dialog](/components/dialogs/) that slides from the bottom of the screen. It is used for elevating content above other elements in a dialog style fashion. The bottom sheet can be controlled using the `v-model` prop or through the `activator` slot.\n\nAvailable sections: Props, Model, Inset, Slots, Examples, Music Player, Open In List, Misc Open In List, Misc Player, Prop Inset, Prop Model, Usage",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000165",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000166",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-bottom-sheet` component has access to all of the props available in [v-dialog](/api/v-dialog/).",
    "display_content": "## v-guide - Props\n\nThe `v-bottom-sheet` component has access to all of the props available in [v-dialog](/api/v-dialog/).",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000166",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000167",
    "text": "Component: v-guide\nSection: Model\nType: documentation\n\n## v-guide - Model\n\nThe **v-model** (or **model-value**) controls the visibility of the bottom sheet:\n\n<ExamplesExample file=\"v-bottom-sheet/prop-model\" />\n\nThis also works in tandem with the [activator](/api/v-bottom-sheet/#slots-activator) slot.",
    "display_content": "## v-guide - Model\n\nThe **v-model** (or **model-value**) controls the visibility of the bottom sheet:\n\n<ExamplesExample file=\"v-bottom-sheet/prop-model\" />\n\nThis also works in tandem with the [activator](/api/v-bottom-sheet/#slots-activator) slot.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Model",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000167",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000168",
    "text": "Component: v-guide\nSection: Inset\nType: documentation\n\n## v-guide - Inset\n\nWith the **inset** prop, reduce the maximum width of the content area on desktop to 70%. This can be further reduced manually using the **width** prop.\n\n<ExamplesExample file=\"v-bottom-sheet/prop-inset\" />",
    "display_content": "## v-guide - Inset\n\nWith the **inset** prop, reduce the maximum width of the content area on desktop to 70%. This can be further reduced manually using the **width** prop.\n\n<ExamplesExample file=\"v-bottom-sheet/prop-inset\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Inset",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000168",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000169",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe `v-bottom-sheet` component has access to all of the slots available in [v-dialog](/api/v-dialog#slots).\n\n![Bottom Sheet Slots](https://cdn.vuetifyjs.com/docs/images/components/v-bottom-sheet/v-bottom-sheet-slots.png)\n\n| Slot         | Description                                         |\n|--------------|-----------------------------------------------------|\n| 1. Default   | The default slot                                    |\n| 2. Activator | The activator slot is used to open the bottom sheet |\n\n::: info\n\nThe **activator** slot is not required when using the **v-model** prop.\n\n:::",
    "display_content": "## v-guide - Slots\n\nThe `v-bottom-sheet` component has access to all of the slots available in [v-dialog](/api/v-dialog#slots).\n\n![Bottom Sheet Slots](https://cdn.vuetifyjs.com/docs/images/components/v-bottom-sheet/v-bottom-sheet-slots.png)\n\n| Slot         | Description                                         |\n|--------------|-----------------------------------------------------|\n| 1. Default   | The default slot                                    |\n| 2. Activator | The activator slot is used to open the bottom sheet |\n\n::: info\n\nThe **activator** slot is not required when using the **v-model** prop.\n\n:::",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000169",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000170",
    "text": "Component: v-guide\nSection: Examples\nType: code_example\n\n## v-guide - Examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-bottom-sheet` component.",
    "display_content": "## v-guide - Examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-bottom-sheet` component.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Examples",
      "content_type": "code_example",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000170",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000171",
    "text": "Component: v-guide\nSection: Music Player\nType: documentation\n\n## v-guide - Music Player\n\nUsing a inset bottom sheet, you can make practical components such as this simple music player.\n\n<ExamplesExample file=\"v-bottom-sheet/misc-player\" />",
    "display_content": "## v-guide - Music Player\n\nUsing a inset bottom sheet, you can make practical components such as this simple music player.\n\n<ExamplesExample file=\"v-bottom-sheet/misc-player\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Music Player",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000171",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000172",
    "text": "Component: v-guide\nSection: Open In List\nType: documentation\n\n## v-guide - Open In List\n\nBy combining a functional list into a bottom sheet, you can create a simple 'open in' component.\n\n<ExamplesExample file=\"v-bottom-sheet/misc-open-in-list\" />",
    "display_content": "## v-guide - Open In List\n\nBy combining a functional list into a bottom sheet, you can create a simple 'open in' component.\n\n<ExamplesExample file=\"v-bottom-sheet/misc-open-in-list\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Open In List",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000172",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000173",
    "text": "Component: v-guide\nSection: Misc Open In List\nType: code_example\n\n## v-guide - Misc Open In List\n\n```vue\n<template>\n  <v-bottom-sheet v-model=\"sheet\">\n    <template v-slot:activator=\"{ props: activatorProps }\">\n      <div class=\"text-center pa-8\">\n        <v-btn\n          v-bind=\"activatorProps\"\n          color=\"purple\"\n          size=\"x-large\"\n          text=\"Click Me\"\n        ></v-btn>\n      </div>\n    </template>\n\n    <v-list>\n      <v-list-subheader title=\"Open in\"></v-list-subheader>\n\n      <v-list-item\n        v-for=\"tile in tiles\"\n        :key=\"tile.title\"\n        :prepend-avatar=\"`https://cdn.vuetifyjs.com/images/bottom-sheets/${tile.img}`\"\n        :title=\"tile.title\"\n        @click=\"sheet = false\"\n      ></v-list-item>\n    </v-list>\n  </v-bottom-sheet>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const sheet = shallowRef(false)\n  const tiles = [\n    { img: 'keep.png', title: 'Keep' },\n    { img: 'inbox.png', title: 'Inbox' },\n    { img: 'hangouts.png', title: 'Hangouts' },\n    { img: 'messenger.png', title: 'Messenger' },\n    { img: 'google.png', title: 'Google+' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      sheet: false,\n      tiles: [\n        { img: 'keep.png', title: 'Keep' },\n        { img: 'inbox.png', title: 'Inbox' },\n        { img: 'hangouts.png', title: 'Hangouts' },\n        { img: 'messenger.png', title: 'Messenger' },\n        { img: 'google.png', title: 'Google+' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Open In List\n\n```vue\n<template>\n  <v-bottom-sheet v-model=\"sheet\">\n    <template v-slot:activator=\"{ props: activatorProps }\">\n      <div class=\"text-center pa-8\">\n        <v-btn\n          v-bind=\"activatorProps\"\n          color=\"purple\"\n          size=\"x-large\"\n          text=\"Click Me\"\n        ></v-btn>\n      </div>\n    </template>\n\n    <v-list>\n      <v-list-subheader title=\"Open in\"></v-list-subheader>\n\n      <v-list-item\n        v-for=\"tile in tiles\"\n        :key=\"tile.title\"\n        :prepend-avatar=\"`https://cdn.vuetifyjs.com/images/bottom-sheets/${tile.img}`\"\n        :title=\"tile.title\"\n        @click=\"sheet = false\"\n      ></v-list-item>\n    </v-list>\n  </v-bottom-sheet>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const sheet = shallowRef(false)\n  const tiles = [\n    { img: 'keep.png', title: 'Keep' },\n    { img: 'inbox.png', title: 'Inbox' },\n    { img: 'hangouts.png', title: 'Hangouts' },\n    { img: 'messenger.png', title: 'Messenger' },\n    { img: 'google.png', title: 'Google+' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      sheet: false,\n      tiles: [\n        { img: 'keep.png', title: 'Keep' },\n        { img: 'inbox.png', title: 'Inbox' },\n        { img: 'hangouts.png', title: 'Hangouts' },\n        { img: 'messenger.png', title: 'Messenger' },\n        { img: 'google.png', title: 'Google+' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Open In List",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000173",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000174",
    "text": "Component: v-guide\nSection: Misc Player\nType: code_example\n\n## v-guide - Misc Player\n\n```vue\n<template>\n  <v-bottom-sheet inset>\n    <template v-slot:activator=\"{ props: activatorProps }\">\n      <div class=\"text-center pa-8\">\n        <v-btn\n          v-bind=\"activatorProps\"\n          color=\"red\"\n          size=\"x-large\"\n          text=\"Click Me\"\n        ></v-btn>\n      </div>\n    </template>\n\n    <v-sheet>\n      <v-progress-linear model-value=\"50\"></v-progress-linear>\n\n      <v-list>\n        <v-list-item subtitle=\"Fitz & The Trantrums\" title=\"The Walker\">\n          <template v-slot:append>\n            <div class=\"d-flex ga-1\">\n              <v-btn icon=\"mdi-rewind\" variant=\"text\"></v-btn>\n\n              <v-btn icon=\"mdi-pause\" variant=\"text\"></v-btn>\n\n              <v-btn icon=\"mdi-fast-forward\" variant=\"text\"></v-btn>\n            </div>\n          </template>\n        </v-list-item>\n      </v-list>\n    </v-sheet>\n  </v-bottom-sheet>\n</template>\n\n```",
    "display_content": "## v-guide - Misc Player\n\n```vue\n<template>\n  <v-bottom-sheet inset>\n    <template v-slot:activator=\"{ props: activatorProps }\">\n      <div class=\"text-center pa-8\">\n        <v-btn\n          v-bind=\"activatorProps\"\n          color=\"red\"\n          size=\"x-large\"\n          text=\"Click Me\"\n        ></v-btn>\n      </div>\n    </template>\n\n    <v-sheet>\n      <v-progress-linear model-value=\"50\"></v-progress-linear>\n\n      <v-list>\n        <v-list-item subtitle=\"Fitz & The Trantrums\" title=\"The Walker\">\n          <template v-slot:append>\n            <div class=\"d-flex ga-1\">\n              <v-btn icon=\"mdi-rewind\" variant=\"text\"></v-btn>\n\n              <v-btn icon=\"mdi-pause\" variant=\"text\"></v-btn>\n\n              <v-btn icon=\"mdi-fast-forward\" variant=\"text\"></v-btn>\n            </div>\n          </template>\n        </v-list-item>\n      </v-list>\n    </v-sheet>\n  </v-bottom-sheet>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Player",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000174",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000175",
    "text": "Component: v-guide\nSection: Prop Inset\nType: code_example\n\n## v-guide - Prop Inset\n\n```vue\n<template>\n  <div class=\"text-center pa-8\">\n    <v-btn\n      class=\"ma-auto\"\n      size=\"x-large\"\n      text=\"Click Me\"\n      @click=\"sheet = !sheet\"\n    ></v-btn>\n\n    <v-bottom-sheet v-model=\"sheet\" inset>\n      <v-card class=\"text-center\" height=\"200\">\n        <v-card-text>\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"sheet = !sheet\"\n          ></v-btn>\n\n          <br>\n          <br>\n\n          <div>\n            This is a bottom sheet that is using the inset prop\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-bottom-sheet>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const sheet = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      sheet: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Inset\n\n```vue\n<template>\n  <div class=\"text-center pa-8\">\n    <v-btn\n      class=\"ma-auto\"\n      size=\"x-large\"\n      text=\"Click Me\"\n      @click=\"sheet = !sheet\"\n    ></v-btn>\n\n    <v-bottom-sheet v-model=\"sheet\" inset>\n      <v-card class=\"text-center\" height=\"200\">\n        <v-card-text>\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"sheet = !sheet\"\n          ></v-btn>\n\n          <br>\n          <br>\n\n          <div>\n            This is a bottom sheet that is using the inset prop\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-bottom-sheet>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const sheet = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      sheet: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Inset",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000175",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000176",
    "text": "Component: v-guide\nSection: Prop Model\nType: code_example\n\n## v-guide - Prop Model\n\n```vue\n<template>\n  <div class=\"pa-8 text-center\">\n    <v-btn\n      class=\"ma-auto\"\n      size=\"x-large\"\n      text=\"Click Me\"\n      @click=\"sheet = !sheet\"\n    ></v-btn>\n\n    <v-bottom-sheet v-model=\"sheet\">\n      <v-card class=\"text-center\" height=\"200\">\n        <v-card-text>\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"sheet = !sheet\"\n          ></v-btn>\n\n          <br>\n          <br>\n\n          <div>\n            This is a bottom sheet using the controlled by v-model instead of activator\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-bottom-sheet>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const sheet = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      sheet: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Model\n\n```vue\n<template>\n  <div class=\"pa-8 text-center\">\n    <v-btn\n      class=\"ma-auto\"\n      size=\"x-large\"\n      text=\"Click Me\"\n      @click=\"sheet = !sheet\"\n    ></v-btn>\n\n    <v-bottom-sheet v-model=\"sheet\">\n      <v-card class=\"text-center\" height=\"200\">\n        <v-card-text>\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"sheet = !sheet\"\n          ></v-btn>\n\n          <br>\n          <br>\n\n          <div>\n            This is a bottom sheet using the controlled by v-model instead of activator\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-bottom-sheet>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const sheet = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      sheet: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Model",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000176",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000177",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-bottom-sheet v-bind=\"props\">\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <div class=\"pa-2 text-center\">\n          <v-btn\n            v-bind=\"activatorProps\"\n            size=\"x-large\"\n            text=\"Click Me\"\n          ></v-btn>\n        </div>\n      </template>\n\n      <v-card\n        text=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ut, eos? Nulla aspernatur odio rem, culpa voluptatibus eius debitis dolorem perspiciatis asperiores sed consectetur praesentium! Delectus et iure maxime eaque exercitationem!\"\n        title=\"Bottom Sheet\"\n      ></v-card>\n    </v-bottom-sheet>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-bottom-sheet'\n  const model = ref('default')\n  const options = ['inset']\n\n  const props = computed(() => {\n    return {\n      inset: model.value === 'inset' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:activator=\"{ props: activatorProps }\">\n    <v-btn v-bind=\"activatorProps\" text=\"Click Me\"></v-btn>\n  </template>\n\n  <v-card\n    title=\"Bottom Sheet\"\n    text=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ut, eos? Nulla aspernatur odio rem, culpa voluptatibus eius debitis dolorem perspiciatis asperiores sed consectetur praesentium! Delectus et iure maxime eaque exercitationem!\"\n  ></v-card>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-bottom-sheet${propsToString(props.value)}>${slots.value}</v-bottom-sheet>`\n  })\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-bottom-sheet v-bind=\"props\">\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <div class=\"pa-2 text-center\">\n          <v-btn\n            v-bind=\"activatorProps\"\n            size=\"x-large\"\n            text=\"Click Me\"\n          ></v-btn>\n        </div>\n      </template>\n\n      <v-card\n        text=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ut, eos? Nulla aspernatur odio rem, culpa voluptatibus eius debitis dolorem perspiciatis asperiores sed consectetur praesentium! Delectus et iure maxime eaque exercitationem!\"\n        title=\"Bottom Sheet\"\n      ></v-card>\n    </v-bottom-sheet>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-bottom-sheet'\n  const model = ref('default')\n  const options = ['inset']\n\n  const props = computed(() => {\n    return {\n      inset: model.value === 'inset' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:activator=\"{ props: activatorProps }\">\n    <v-btn v-bind=\"activatorProps\" text=\"Click Me\"></v-btn>\n  </template>\n\n  <v-card\n    title=\"Bottom Sheet\"\n    text=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ut, eos? Nulla aspernatur odio rem, culpa voluptatibus eius debitis dolorem perspiciatis asperiores sed consectetur praesentium! Delectus et iure maxime eaque exercitationem!\"\n  ></v-card>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-bottom-sheet${propsToString(props.value)}>${slots.value}</v-bottom-sheet>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000177",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000178",
    "text": "Component: v-breadcrumbs\nType: component_overview\n\n# v-breadcrumbs\n\nThe `v-breadcrumbs` component is used as a navigational helper and hierarchy for pages.",
    "display_content": "# v-breadcrumbs\n\nThe `v-breadcrumbs` component is used as a navigational helper and hierarchy for pages.",
    "metadata": {
      "component": "v-breadcrumbs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000178",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000179",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nBy default, breadcrumbs use a text divider. This can be any string.",
    "display_content": "# v-usage\n\nBy default, breadcrumbs use a text divider. This can be any string.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000179",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000180",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-breadcrumbs](/api/v-breadcrumbs/) | Primary Component | | [v-breadcrumbs-item](/api/v-breadcrumbs-item/) | Sub-component used for each breadcrumb | | [v-breadcrumbs-divider](/api/v-breadcrumbs-divider/) | Sub-component used for dividing breadcrumbs |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-breadcrumbs](/api/v-breadcrumbs/) | Primary Component | | [v-breadcrumbs-item](/api/v-breadcrumbs-item/) | Sub-component used for each breadcrumb | | [v-breadcrumbs-divider](/api/v-breadcrumbs-divider/) | Sub-component used for dividing breadcrumbs |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000180",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000181",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nBreadcrumbs separator can be set using `divider` property.\n\nAvailable sections: Divider, Prepend, Dividers, Title, Prop Divider, Slot Icon Dividers, Slot Prepend, Slot Title, Usage",
    "display_content": "# v-examples\n\nBreadcrumbs separator can be set using `divider` property.\n\nAvailable sections: Divider, Prepend, Dividers, Title, Prop Divider, Slot Icon Dividers, Slot Prepend, Slot Title, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000181",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000182",
    "text": "Component: v-examples\nSection: Divider\nType: documentation\n\n## v-examples - Divider\n\nBreadcrumbs separator can be set using `divider` property.\n\n<ExamplesExample file=\"v-breadcrumbs/prop-divider\" />",
    "display_content": "## v-examples - Divider\n\nBreadcrumbs separator can be set using `divider` property.\n\n<ExamplesExample file=\"v-breadcrumbs/prop-divider\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Divider",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000182",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000183",
    "text": "Component: v-examples\nSection: Prepend\nType: documentation\n\n## v-examples - Prepend\n\nPrepend content with the `prepend` slot.\n\n<ExamplesExample file=\"v-breadcrumbs/slot-prepend\" />",
    "display_content": "## v-examples - Prepend\n\nPrepend content with the `prepend` slot.\n\n<ExamplesExample file=\"v-breadcrumbs/slot-prepend\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Prepend",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000183",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000184",
    "text": "Component: v-examples\nSection: Dividers\nType: documentation\n\n## v-examples - Dividers\n\nTo customize the divider, use the `divider` slot.\n\n<ExamplesExample file=\"v-breadcrumbs/slot-icon-dividers\" />",
    "display_content": "## v-examples - Dividers\n\nTo customize the divider, use the `divider` slot.\n\n<ExamplesExample file=\"v-breadcrumbs/slot-icon-dividers\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dividers",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000184",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000185",
    "text": "Component: v-examples\nSection: Title\nType: documentation\n\n## v-examples - Title\n\nYou can use the `title` slot to customize each breadcrumb title.\n\n<ExamplesExample file=\"v-breadcrumbs/slot-title\" />",
    "display_content": "## v-examples - Title\n\nYou can use the `title` slot to customize each breadcrumb title.\n\n<ExamplesExample file=\"v-breadcrumbs/slot-title\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Title",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000185",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000186",
    "text": "Component: v-examples\nSection: Prop Divider\nType: code_example\n\n## v-examples - Prop Divider\n\n```vue\n<template>\n  <div>\n    <v-breadcrumbs\n      :items=\"items\"\n      divider=\"-\"\n    ></v-breadcrumbs>\n\n    <v-breadcrumbs\n      :items=\"items\"\n      divider=\".\"\n    ></v-breadcrumbs>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Dashboard',\n      disabled: false,\n      href: 'breadcrumbs_dashboard',\n    },\n    {\n      title: 'Link 1',\n      disabled: false,\n      href: 'breadcrumbs_link_1',\n    },\n    {\n      title: 'Link 2',\n      disabled: true,\n      href: 'breadcrumbs_link_2',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Dashboard',\n          disabled: false,\n          href: 'breadcrumbs_dashboard',\n        },\n        {\n          title: 'Link 1',\n          disabled: false,\n          href: 'breadcrumbs_link_1',\n        },\n        {\n          title: 'Link 2',\n          disabled: true,\n          href: 'breadcrumbs_link_2',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Divider\n\n```vue\n<template>\n  <div>\n    <v-breadcrumbs\n      :items=\"items\"\n      divider=\"-\"\n    ></v-breadcrumbs>\n\n    <v-breadcrumbs\n      :items=\"items\"\n      divider=\".\"\n    ></v-breadcrumbs>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Dashboard',\n      disabled: false,\n      href: 'breadcrumbs_dashboard',\n    },\n    {\n      title: 'Link 1',\n      disabled: false,\n      href: 'breadcrumbs_link_1',\n    },\n    {\n      title: 'Link 2',\n      disabled: true,\n      href: 'breadcrumbs_link_2',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Dashboard',\n          disabled: false,\n          href: 'breadcrumbs_dashboard',\n        },\n        {\n          title: 'Link 1',\n          disabled: false,\n          href: 'breadcrumbs_link_1',\n        },\n        {\n          title: 'Link 2',\n          disabled: true,\n          href: 'breadcrumbs_link_2',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Divider",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000186",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000187",
    "text": "Component: v-examples\nSection: Slot Icon Dividers\nType: code_example\n\n## v-examples - Slot Icon Dividers\n\n```vue\n<template>\n  <div>\n    <v-breadcrumbs :items=\"items\">\n      <template v-slot:divider>\n        <v-icon icon=\"mdi-forward\"></v-icon>\n      </template>\n    </v-breadcrumbs>\n\n    <v-breadcrumbs :items=\"items\">\n      <template v-slot:divider>\n        <v-icon icon=\"mdi-chevron-right\"></v-icon>\n      </template>\n    </v-breadcrumbs>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Dashboard',\n      disabled: false,\n      href: 'breadcrumbs_dashboard',\n    },\n    {\n      title: 'Link 1',\n      disabled: false,\n      href: 'breadcrumbs_link_1',\n    },\n    {\n      title: 'Link 2',\n      disabled: true,\n      href: 'breadcrumbs_link_2',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Dashboard',\n          disabled: false,\n          href: 'breadcrumbs_dashboard',\n        },\n        {\n          title: 'Link 1',\n          disabled: false,\n          href: 'breadcrumbs_link_1',\n        },\n        {\n          title: 'Link 2',\n          disabled: true,\n          href: 'breadcrumbs_link_2',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Icon Dividers\n\n```vue\n<template>\n  <div>\n    <v-breadcrumbs :items=\"items\">\n      <template v-slot:divider>\n        <v-icon icon=\"mdi-forward\"></v-icon>\n      </template>\n    </v-breadcrumbs>\n\n    <v-breadcrumbs :items=\"items\">\n      <template v-slot:divider>\n        <v-icon icon=\"mdi-chevron-right\"></v-icon>\n      </template>\n    </v-breadcrumbs>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Dashboard',\n      disabled: false,\n      href: 'breadcrumbs_dashboard',\n    },\n    {\n      title: 'Link 1',\n      disabled: false,\n      href: 'breadcrumbs_link_1',\n    },\n    {\n      title: 'Link 2',\n      disabled: true,\n      href: 'breadcrumbs_link_2',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Dashboard',\n          disabled: false,\n          href: 'breadcrumbs_dashboard',\n        },\n        {\n          title: 'Link 1',\n          disabled: false,\n          href: 'breadcrumbs_link_1',\n        },\n        {\n          title: 'Link 2',\n          disabled: true,\n          href: 'breadcrumbs_link_2',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Icon Dividers",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000187",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000188",
    "text": "Component: v-examples\nSection: Slot Prepend\nType: code_example\n\n## v-examples - Slot Prepend\n\n```vue\n<template>\n  <v-breadcrumbs :items=\"items\">\n    <template v-slot:prepend>\n      <v-icon icon=\"$vuetify\" size=\"small\"></v-icon>\n    </template>\n  </v-breadcrumbs>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Dashboard',\n      disabled: false,\n      href: 'breadcrumbs_dashboard',\n    },\n    {\n      title: 'Link 1',\n      disabled: false,\n      href: 'breadcrumbs_link_1',\n    },\n    {\n      title: 'Link 2',\n      disabled: true,\n      href: 'breadcrumbs_link_2',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Dashboard',\n          disabled: false,\n          href: 'breadcrumbs_dashboard',\n        },\n        {\n          title: 'Link 1',\n          disabled: false,\n          href: 'breadcrumbs_link_1',\n        },\n        {\n          title: 'Link 2',\n          disabled: true,\n          href: 'breadcrumbs_link_2',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Prepend\n\n```vue\n<template>\n  <v-breadcrumbs :items=\"items\">\n    <template v-slot:prepend>\n      <v-icon icon=\"$vuetify\" size=\"small\"></v-icon>\n    </template>\n  </v-breadcrumbs>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Dashboard',\n      disabled: false,\n      href: 'breadcrumbs_dashboard',\n    },\n    {\n      title: 'Link 1',\n      disabled: false,\n      href: 'breadcrumbs_link_1',\n    },\n    {\n      title: 'Link 2',\n      disabled: true,\n      href: 'breadcrumbs_link_2',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Dashboard',\n          disabled: false,\n          href: 'breadcrumbs_dashboard',\n        },\n        {\n          title: 'Link 1',\n          disabled: false,\n          href: 'breadcrumbs_link_1',\n        },\n        {\n          title: 'Link 2',\n          disabled: true,\n          href: 'breadcrumbs_link_2',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Prepend",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000188",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000189",
    "text": "Component: v-examples\nSection: Slot Title\nType: code_example\n\n## v-examples - Slot Title\n\n```vue\n<template>\n  <v-breadcrumbs :items=\"items\">\n    <template v-slot:title=\"{ item }\">\n      {{ item.title.toUpperCase() }}\n    </template>\n  </v-breadcrumbs>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Dashboard',\n      disabled: false,\n      href: 'breadcrumbs_dashboard',\n    },\n    {\n      title: 'Link 1',\n      disabled: false,\n      href: 'breadcrumbs_link_1',\n    },\n    {\n      title: 'Link 2',\n      disabled: true,\n      href: 'breadcrumbs_link_2',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Dashboard',\n          disabled: false,\n          href: 'breadcrumbs_dashboard',\n        },\n        {\n          title: 'Link 1',\n          disabled: false,\n          href: 'breadcrumbs_link_1',\n        },\n        {\n          title: 'Link 2',\n          disabled: true,\n          href: 'breadcrumbs_link_2',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Title\n\n```vue\n<template>\n  <v-breadcrumbs :items=\"items\">\n    <template v-slot:title=\"{ item }\">\n      {{ item.title.toUpperCase() }}\n    </template>\n  </v-breadcrumbs>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Dashboard',\n      disabled: false,\n      href: 'breadcrumbs_dashboard',\n    },\n    {\n      title: 'Link 1',\n      disabled: false,\n      href: 'breadcrumbs_link_1',\n    },\n    {\n      title: 'Link 2',\n      disabled: true,\n      href: 'breadcrumbs_link_2',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Dashboard',\n          disabled: false,\n          href: 'breadcrumbs_dashboard',\n        },\n        {\n          title: 'Link 1',\n          disabled: false,\n          href: 'breadcrumbs_link_1',\n        },\n        {\n          title: 'Link 2',\n          disabled: true,\n          href: 'breadcrumbs_link_2',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Title",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000189",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000190",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-breadcrumbs v-bind=\"props\">\n        <!-- <v-breadcrumbs-item>Item</v-breadcrumbs-item>\n\n        <v-breadcrumbs-divider></v-breadcrumbs-divider>\n\n        <v-breadcrumbs-item active>Item 2</v-breadcrumbs-item>\n\n        <v-breadcrumbs-divider></v-breadcrumbs-divider>\n\n        <v-breadcrumbs-item disabled>Item 3</v-breadcrumbs-item> -->\n      </v-breadcrumbs>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select v-model=\"color\" :items=\"['primary', 'success', 'info']\" label=\"Background color\" clearable></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-breadcrumbs'\n  const model = ref('default')\n  const options = []\n  const color = ref()\n  const props = computed(() => {\n    return {\n      'bg-color': color.value || undefined,\n      items: ['Foo', 'Bar', 'Fizz'],\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-breadcrumbs v-bind=\"props\">\n        <!-- <v-breadcrumbs-item>Item</v-breadcrumbs-item>\n\n        <v-breadcrumbs-divider></v-breadcrumbs-divider>\n\n        <v-breadcrumbs-item active>Item 2</v-breadcrumbs-item>\n\n        <v-breadcrumbs-divider></v-breadcrumbs-divider>\n\n        <v-breadcrumbs-item disabled>Item 3</v-breadcrumbs-item> -->\n      </v-breadcrumbs>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select v-model=\"color\" :items=\"['primary', 'success', 'info']\" label=\"Background color\" clearable></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-breadcrumbs'\n  const model = ref('default')\n  const options = []\n  const color = ref()\n  const props = computed(() => {\n    return {\n      'bg-color': color.value || undefined,\n      items: ['Foo', 'Bar', 'Fizz'],\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000190",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000191",
    "text": "Component: v-buttons\nType: component_overview\n\n# v-buttons\n\nThe `v-btn` component replaces the standard html button with a material design theme and a multitude of options. Any color helper class can be used to alter the background or text color.",
    "display_content": "# v-buttons\n\nThe `v-btn` component replaces the standard html button with a material design theme and a multitude of options. Any color helper class can be used to alter the background or text color.",
    "metadata": {
      "component": "v-buttons",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000191",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000192",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nButtons in their simplest form contain uppercase text, a slight elevation, hover effect, and a ripple effect on click.",
    "display_content": "# v-usage\n\nButtons in their simplest form contain uppercase text, a slight elevation, hover effect, and a ripple effect on click.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000192",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000193",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-btn](/api/v-btn/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-btn](/api/v-btn/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000193",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000194",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-btn` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-btn` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000194",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000195",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-btn` component is commonly used throughout Vuetify and is a staple for any application. It is used for everything from navigation to form submission; and can be styled in a multitude of ways.\n\nAvailable sections: Props, Density, Size, Block, Rounded, Elevation, Ripple, Variants, Icon, Loaders, Inside of bars, Slots, Icon color, Custom loader",
    "display_content": "# v-guide\n\nThe `v-btn` component is commonly used throughout Vuetify and is a staple for any application. It is used for everything from navigation to form submission; and can be styled in a multitude of ways.\n\nAvailable sections: Props, Density, Size, Block, Rounded, Elevation, Ripple, Variants, Icon, Loaders, Inside of bars, Slots, Icon color, Custom loader",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000195",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000196",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nA wide array of props can be employed to modify the `v-btn` component's look and functionality. Props like **prepend-icon** and **append-icon** offer a straightforward approach to incorporate positioned icons, whereas **block** and **stacked** props are utilized to manage the component's form.",
    "display_content": "## v-guide - Props\n\nA wide array of props can be employed to modify the `v-btn` component's look and functionality. Props like **prepend-icon** and **append-icon** offer a straightforward approach to incorporate positioned icons, whereas **block** and **stacked** props are utilized to manage the component's form.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000196",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000197",
    "text": "Component: v-guide\nSection: Density\nType: documentation\n\n## v-guide - Density\n\nThe **density** prop is used to control the vertical space that the button takes up.\n\n<ExamplesExample file=\"v-btn/prop-density\" />",
    "display_content": "## v-guide - Density\n\nThe **density** prop is used to control the vertical space that the button takes up.\n\n<ExamplesExample file=\"v-btn/prop-density\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000197",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000198",
    "text": "Component: v-guide\nSection: Size\nType: documentation\n\n## v-guide - Size\n\nThe **size** property is used to control the size of the button and scales with density. The default size is **undefined** which essentially translates to **medium**.\n\n<ExamplesExample file=\"v-btn/prop-size\" />",
    "display_content": "## v-guide - Size\n\nThe **size** property is used to control the size of the button and scales with density. The default size is **undefined** which essentially translates to **medium**.\n\n<ExamplesExample file=\"v-btn/prop-size\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Size",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000198",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000199",
    "text": "Component: v-guide\nSection: Block\nType: documentation\n\n## v-guide - Block\n\nBlock buttons extend the full available width of their container. This is useful for creating buttons that span the full width of a card or dialog.\n\n<ExamplesExample file=\"v-btn/prop-block\" />\n\n::: info\nBlock applies **width: 100%** which can cause overflow issues inside a flex container.\n:::",
    "display_content": "## v-guide - Block\n\nBlock buttons extend the full available width of their container. This is useful for creating buttons that span the full width of a card or dialog.\n\n<ExamplesExample file=\"v-btn/prop-block\" />\n\n::: info\nBlock applies **width: 100%** which can cause overflow issues inside a flex container.\n:::",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Block",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000199",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000200",
    "text": "Component: v-guide\nSection: Rounded\nType: documentation\n\n## v-guide - Rounded\n\nUse the **rounded** prop to control the border radius of a button.\n\n<ExamplesExample file=\"v-btn/prop-rounded\" />",
    "display_content": "## v-guide - Rounded\n\nUse the **rounded** prop to control the border radius of a button.\n\n<ExamplesExample file=\"v-btn/prop-rounded\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Rounded",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000200",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000201",
    "text": "Component: v-guide\nSection: Elevation\nType: documentation\n\n## v-guide - Elevation\n\nThe **elevation** property provides up to 24 levels of shadow depth. By default, buttons rest at 2dp.\n\n<ExamplesExample file=\"v-btn/prop-elevation\" />",
    "display_content": "## v-guide - Elevation\n\nThe **elevation** property provides up to 24 levels of shadow depth. By default, buttons rest at 2dp.\n\n<ExamplesExample file=\"v-btn/prop-elevation\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Elevation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000201",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000202",
    "text": "Component: v-guide\nSection: Ripple\nType: documentation\n\n## v-guide - Ripple\n\nThe **ripple** property determines whether the [v-ripple](/directives/ripple/) directive is used.\n\n<ExamplesExample file=\"v-btn/prop-ripple\" />",
    "display_content": "## v-guide - Ripple\n\nThe **ripple** property determines whether the [v-ripple](/directives/ripple/) directive is used.\n\n<ExamplesExample file=\"v-btn/prop-ripple\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Ripple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000202",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000203",
    "text": "Component: v-guide\nSection: Variants\nType: documentation\n\n## v-guide - Variants\n\nThe **variant** prop gives you easy access to several different button styles. Available variants are: **elevated**(default), **flat**, **tonal**, **outlined**, **text**, and **plain**.",
    "display_content": "## v-guide - Variants\n\nThe **variant** prop gives you easy access to several different button styles. Available variants are: **elevated**(default), **flat**, **tonal**, **outlined**, **text**, and **plain**.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Variants",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000203",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000204",
    "text": "Component: v-guide\nSection: Variants\nType: documentation\n\n## v-guide - Variants\n\n| Value        | Example                                                  | Description                                                     |\n|--------------|----------------------------------------------------------|-----------------------------------------------------------------|\n| **elevated** | <v-btn color=\"primary\" variant=\"elevated\">Button</v-btn> | Elevates the button with a shadow                               |\n| **flat**     | <v-btn color=\"primary\" variant=\"flat\">Button</v-btn>     | Removes button shadow                                           |\n| **tonal**    | <v-btn color=\"primary\" variant=\"tonal\">Button</v-btn>    | Background color is a lowered opacity of the current text color |\n| **outlined** | <v-btn color=\"primary\" variant=\"outlined\">Button</v-btn> | Applies a thin border with the current text color               |\n| **text**     | <v-btn color=\"primary\" variant=\"text\">Button</v-btn>     | Removes the background and removes shadow                       |\n| **plain**    | <v-btn color=\"primary\" variant=\"plain\">Button</v-btn>    | Removes the background and lowers the opacity until hovered     |",
    "display_content": "## v-guide - Variants\n\n| Value        | Example                                                  | Description                                                     |\n|--------------|----------------------------------------------------------|-----------------------------------------------------------------|\n| **elevated** | <v-btn color=\"primary\" variant=\"elevated\">Button</v-btn> | Elevates the button with a shadow                               |\n| **flat**     | <v-btn color=\"primary\" variant=\"flat\">Button</v-btn>     | Removes button shadow                                           |\n| **tonal**    | <v-btn color=\"primary\" variant=\"tonal\">Button</v-btn>    | Background color is a lowered opacity of the current text color |\n| **outlined** | <v-btn color=\"primary\" variant=\"outlined\">Button</v-btn> | Applies a thin border with the current text color               |\n| **text**     | <v-btn color=\"primary\" variant=\"text\">Button</v-btn>     | Removes the background and removes shadow                       |\n| **plain**    | <v-btn color=\"primary\" variant=\"plain\">Button</v-btn>    | Removes the background and lowers the opacity until hovered     |",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Variants",
      "content_type": "documentation",
      "chunk_index": 1,
      "chunk_id": "vuetify_chunk_000204",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000205",
    "text": "Component: v-guide\nSection: Icon\nType: documentation\n\n## v-guide - Icon\n\nIcons can be used for the primary content of a button. They are commonly used in the [v-toolbar](/components/toolbars/) and [v-app-bar](/components/app-bars/) components.\n\n<ExamplesExample file=\"v-btn/prop-icon\" />",
    "display_content": "## v-guide - Icon\n\nIcons can be used for the primary content of a button. They are commonly used in the [v-toolbar](/components/toolbars/) and [v-app-bar](/components/app-bars/) components.\n\n<ExamplesExample file=\"v-btn/prop-icon\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000205",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000206",
    "text": "Component: v-guide\nSection: Loaders\nType: documentation\n\n## v-guide - Loaders\n\nUsing the loading prop, you can notify a user that there is processing taking place. The default behavior is to use a `v-progress-circular` component but this can be customized with the **loader** slot.\n\n<ExamplesExample file=\"v-btn/prop-loaders\" />",
    "display_content": "## v-guide - Loaders\n\nUsing the loading prop, you can notify a user that there is processing taking place. The default behavior is to use a `v-progress-circular` component but this can be customized with the **loader** slot.\n\n<ExamplesExample file=\"v-btn/prop-loaders\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Loaders",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000206",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000207",
    "text": "Component: v-guide\nSection: Inside of bars\nType: documentation\n\n## v-guide - Inside of bars\n\nA common use-case is to use the `v-btn` with the **icon** property within a [v-toolbar](/components/toolbars/) or [v-app-bar](/components/app-bars/) component.\n\n<ExamplesExample file=\"v-btn/misc-toolbar\" />",
    "display_content": "## v-guide - Inside of bars\n\nA common use-case is to use the `v-btn` with the **icon** property within a [v-toolbar](/components/toolbars/) or [v-app-bar](/components/app-bars/) component.\n\n<ExamplesExample file=\"v-btn/misc-toolbar\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Inside of bars",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000207",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000208",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe `v-btn` component provides slots that enable you to customize content created by its props or to add additional content.\n\n![Button Anatomy](https://cdn.vuetifyjs.com/docs/images/components/v-btn/v-btn-slots.png)\n\n| Slot | Description |\n| - | - |\n| 1. Default | The default slot |\n| 2. Prepend | Content area before the default slot |\n| 3. Append | Content area after the default slot |\n| 4. Loader | Content area shown when **loading** is set to `true` |\n\nSlots give you greater control to customize the content of the `v-btn` component while still taking advantage of the easy-to-use props.",
    "display_content": "## v-guide - Slots\n\nThe `v-btn` component provides slots that enable you to customize content created by its props or to add additional content.\n\n![Button Anatomy](https://cdn.vuetifyjs.com/docs/images/components/v-btn/v-btn-slots.png)\n\n| Slot | Description |\n| - | - |\n| 1. Default | The default slot |\n| 2. Prepend | Content area before the default slot |\n| 3. Append | Content area after the default slot |\n| 4. Loader | Content area shown when **loading** is set to `true` |\n\nSlots give you greater control to customize the content of the `v-btn` component while still taking advantage of the easy-to-use props.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000208",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000209",
    "text": "Component: v-guide\nSection: Icon color\nType: documentation\n\n## v-guide - Icon color\n\nWhen you use the **prepend-icon** and **append-icon** props in conjunction with the corresponding slot, **prepend** or **append**, you are able to place a [v-icon](/components/icons/) that automatically injects the designated icon.\n\n<ExamplesExample file=\"v-btn/slot-prepend-append\" />",
    "display_content": "## v-guide - Icon color\n\nWhen you use the **prepend-icon** and **append-icon** props in conjunction with the corresponding slot, **prepend** or **append**, you are able to place a [v-icon](/components/icons/) that automatically injects the designated icon.\n\n<ExamplesExample file=\"v-btn/slot-prepend-append\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Icon color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000209",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000210",
    "text": "Component: v-guide\nSection: Custom loader\nType: documentation\n\n## v-guide - Custom loader\n\nThe **loader** slot allows you to customize the loading indicator. In this example we use a [v-progress-linear](/components/progress-linear/) component to create a loading bar that spans the full width of the button.\n\n<ExamplesExample file=\"v-btn/slot-loader\" />\n\n<VoPromotionsCardVuetify class=\"mb-4\" />",
    "display_content": "## v-guide - Custom loader\n\nThe **loader** slot allows you to customize the loading indicator. In this example we use a [v-progress-linear](/components/progress-linear/) component to create a loading bar that spans the full width of the button.\n\n<ExamplesExample file=\"v-btn/slot-loader\" />\n\n<VoPromotionsCardVuetify class=\"mb-4\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Custom loader",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000210",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000211",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-btn` component.\n\nAvailable sections: Discord event, Survey group, Tax form confirmation, Dialog action, Cookie settings, Readonly buttons",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-btn` component.\n\nAvailable sections: Discord event, Survey group, Tax form confirmation, Dialog action, Cookie settings, Readonly buttons",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000211",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000212",
    "text": "Component: v-examples\nSection: Discord event\nType: events_reference\n\n## v-examples - Discord event\n\nIn this example we utilize multiple different button variants and styles to create a copy of the Discord event card.\n\n<ExamplesExample file=\"v-btn/misc-discord-event\" hide-invert />",
    "display_content": "## v-examples - Discord event\n\nIn this example we utilize multiple different button variants and styles to create a copy of the Discord event card.\n\n<ExamplesExample file=\"v-btn/misc-discord-event\" hide-invert />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Discord event",
      "content_type": "events_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000212",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000213",
    "text": "Component: v-examples\nSection: Survey group\nType: documentation\n\n## v-examples - Survey group\n\nIn addition to [Button groups](/components/button-groups/), the `v-btn` component cant hook into a [v-item-group](/components/item-groups/) using a special symbol. In the next example we create a group of buttons that are used to select a survey answer and add custom **active** state styling.\n\n<ExamplesExample file=\"v-btn/misc-group-survey\" hide-invert />",
    "display_content": "## v-examples - Survey group\n\nIn addition to [Button groups](/components/button-groups/), the `v-btn` component cant hook into a [v-item-group](/components/item-groups/) using a special symbol. In the next example we create a group of buttons that are used to select a survey answer and add custom **active** state styling.\n\n<ExamplesExample file=\"v-btn/misc-group-survey\" hide-invert />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Survey group",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000213",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000214",
    "text": "Component: v-examples\nSection: Tax form confirmation\nType: documentation\n\n## v-examples - Tax form confirmation\n\nThis example utilizes the [v-text-field](/components/text-fields/) component to collect data from the user and the **loading** prop of `v-btn` when submitting the form.\n\n<ExamplesExample file=\"v-btn/misc-tax-form\" />",
    "display_content": "## v-examples - Tax form confirmation\n\nThis example utilizes the [v-text-field](/components/text-fields/) component to collect data from the user and the **loading** prop of `v-btn` when submitting the form.\n\n<ExamplesExample file=\"v-btn/misc-tax-form\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Tax form confirmation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000214",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000215",
    "text": "Component: v-examples\nSection: Dialog action\nType: documentation\n\n## v-examples - Dialog action\n\nButtons are often used to trigger actions within a [v-dialog](/components/dialogs/). In this example we use the **outlined** variant and the **color** prop to create a button that is visually distinct from the other buttons.\n\n<ExamplesExample file=\"v-btn/misc-dialog-action\" />",
    "display_content": "## v-examples - Dialog action\n\nButtons are often used to trigger actions within a [v-dialog](/components/dialogs/). In this example we use the **outlined** variant and the **color** prop to create a button that is visually distinct from the other buttons.\n\n<ExamplesExample file=\"v-btn/misc-dialog-action\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dialog action",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000215",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000216",
    "text": "Component: v-examples\nSection: Cookie settings\nType: documentation\n\n## v-examples - Cookie settings\n\nIn this example we use a [v-banner](/components/banners/) component to display a custom cookie consent banner. Clicking the \"Manage Cookies\" button will prompt a [v-dialog](/components/dialogs/) component.\n\n<ExamplesExample file=\"v-btn/misc-cookie-settings\" />",
    "display_content": "## v-examples - Cookie settings\n\nIn this example we use a [v-banner](/components/banners/) component to display a custom cookie consent banner. Clicking the \"Manage Cookies\" button will prompt a [v-dialog](/components/dialogs/) component.\n\n<ExamplesExample file=\"v-btn/misc-cookie-settings\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Cookie settings",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000216",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000217",
    "text": "Component: v-examples\nSection: Readonly buttons\nType: documentation\n\n## v-examples - Readonly buttons\n\nIn this example, we change the properties of the `v-btn` based upon a \"subscription\" state. When the user is subscribed, we want to disable interaction with the button, but not change its appearance; which is what occurs when using the **disabled** property.\n\n<ExamplesExample file=\"v-btn/misc-readonly\" />",
    "display_content": "## v-examples - Readonly buttons\n\nIn this example, we change the properties of the `v-btn` based upon a \"subscription\" state. When the user is subscribed, we want to disable interaction with the button, but not change its appearance; which is what occurs when using the **disabled** property.\n\n<ExamplesExample file=\"v-btn/misc-readonly\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Readonly buttons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000217",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000218",
    "text": "Component: v-global-configuration\nType: component_overview\n\n# v-global-configuration\n\nModify the default values and set a default style for all `v-btn` components using the [Global configuration](/features/global-configuration/). This helps keep your application consistent and allows you to change it in the future with minimal effort.",
    "display_content": "# v-global-configuration\n\nModify the default values and set a default style for all `v-btn` components using the [Global configuration](/features/global-configuration/). This helps keep your application consistent and allows you to change it in the future with minimal effort.",
    "metadata": {
      "component": "v-global-configuration",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000218",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000219",
    "text": "Component: v-aliasing\nType: component_overview\n\n# v-aliasing\n\nUtilize the [component aliasing](/features/aliasing/) feature to generate virtual components derived from the v-btn component. This proves valuable when dealing with numerous button variations within design specifications or when developing a custom library based on Vuetify.",
    "display_content": "# v-aliasing\n\nUtilize the [component aliasing](/features/aliasing/) feature to generate virtual components derived from the v-btn component. This proves valuable when dealing with numerous button variations within design specifications or when developing a custom library based on Vuetify.",
    "metadata": {
      "component": "v-aliasing",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000219",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000220",
    "text": "Component: v-sass-variables\nType: component_overview\n\n# v-sass-variables\n\nMake fine tuned changes by modifying the `v-btn` [SASS variables](/features/sass-variables). This is useful when you want to change the default button height or padding.",
    "display_content": "# v-sass-variables\n\nMake fine tuned changes by modifying the `v-btn` [SASS variables](/features/sass-variables). This is useful when you want to change the default button height or padding.",
    "metadata": {
      "component": "v-sass-variables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000220",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000221",
    "text": "Component: v-defaults-side-effects\nType: component_overview\n\n# v-defaults-side-effects\n\nThere are instances where a set of default properties are injected or custom styling is applied to the `v-btn`. This can be for a variety of reasons, but the most common are:\n\nAvailable sections: Banners, Bottom navigation, Button groups, Cards, Snackbars, Toolbars and AppBars",
    "display_content": "# v-defaults-side-effects\n\nThere are instances where a set of default properties are injected or custom styling is applied to the `v-btn`. This can be for a variety of reasons, but the most common are:\n\nAvailable sections: Banners, Bottom navigation, Button groups, Cards, Snackbars, Toolbars and AppBars",
    "metadata": {
      "component": "v-defaults-side-effects",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000221",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000222",
    "text": "Component: v-defaults-side-effects\nSection: Banners\nType: documentation\n\n## v-defaults-side-effects - Banners\n\nThe `v-banner-actions` component applies the **text** variant and **slim** prop, reducing button x-axis padding to **8px**.\n\n| Documentation | API |\n| - | - |\n| [Banners](/components/banners/) | [v-banner-actions](/api/v-banner-actions/) |\n\n<ExamplesExample file=\"v-btn/defaults-banner-actions\" />\n\nThe following properties are modified when used within a `v-banner-actions` component:\n\n| Property | Value |\n| - | - |\n| **color** | provided by `v-banner-actions` |\n| **density** | provided by `v-banner-actions` |\n| **slim** | `true` |\n| **variant** | `text` |",
    "display_content": "## v-defaults-side-effects - Banners\n\nThe `v-banner-actions` component applies the **text** variant and **slim** prop, reducing button x-axis padding to **8px**.\n\n| Documentation | API |\n| - | - |\n| [Banners](/components/banners/) | [v-banner-actions](/api/v-banner-actions/) |\n\n<ExamplesExample file=\"v-btn/defaults-banner-actions\" />\n\nThe following properties are modified when used within a `v-banner-actions` component:\n\n| Property | Value |\n| - | - |\n| **color** | provided by `v-banner-actions` |\n| **density** | provided by `v-banner-actions` |\n| **slim** | `true` |\n| **variant** | `text` |",
    "metadata": {
      "component": "v-defaults-side-effects",
      "section_type": "subsection",
      "subsection": "Banners",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000222",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000223",
    "text": "Component: v-defaults-side-effects\nSection: Bottom navigation\nType: documentation\n\n## v-defaults-side-effects - Bottom navigation\n\nThe `v-bottom-navigation` component **scopes** out all previously provided defaults and applies its own. This is to avoid changes made to `v-btn` in the [Global configuration](/features/global-configuration/). Buttons automatically register with `v-bottom-navigation`'s' group and will update the **model** when clicked.\n\n| Documentation | API |\n| - | - |\n| [Bottom navigation](/components/bottom-navigation/) | [v-bottom-navigation](/api/v-bottom-navigation/) |\n\n<ExamplesExample file=\"v-btn/defaults-bottom-navigation\" />\n\nThe following properties are modified when used within a `v-bottom-navigation` component:\n\n| Property | Value |\n| - | - |\n| **color** | provided by `v-bottom-navigation` |\n| **density** | provided by `v-bottom-navigation` |\n| **stacked** | `true` when **mode** is `shift` |\n| **variant** | `text` |",
    "display_content": "## v-defaults-side-effects - Bottom navigation\n\nThe `v-bottom-navigation` component **scopes** out all previously provided defaults and applies its own. This is to avoid changes made to `v-btn` in the [Global configuration](/features/global-configuration/). Buttons automatically register with `v-bottom-navigation`'s' group and will update the **model** when clicked.\n\n| Documentation | API |\n| - | - |\n| [Bottom navigation](/components/bottom-navigation/) | [v-bottom-navigation](/api/v-bottom-navigation/) |\n\n<ExamplesExample file=\"v-btn/defaults-bottom-navigation\" />\n\nThe following properties are modified when used within a `v-bottom-navigation` component:\n\n| Property | Value |\n| - | - |\n| **color** | provided by `v-bottom-navigation` |\n| **density** | provided by `v-bottom-navigation` |\n| **stacked** | `true` when **mode** is `shift` |\n| **variant** | `text` |",
    "metadata": {
      "component": "v-defaults-side-effects",
      "section_type": "subsection",
      "subsection": "Bottom navigation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000223",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000224",
    "text": "Component: v-defaults-side-effects\nSection: Button groups\nType: documentation\n\n## v-defaults-side-effects - Button groups\n\nThe `v-btn-group` component makes multiple changes to the `v-btn` component.\n\n| Documentation | API |\n| - | - |\n| [Button groups](/components/button-groups/) | [v-btn-group](/api/v-btn-group/) |\n\n<ExamplesExample file=\"v-btn/defaults-btn-group\" />\n\nThe following properties are modified when used within a `v-btn-group` component:\n\n| Property | Value |\n| - | - |\n| **color** | provided by `v-btn-group` |\n| **height** | `auto` |\n| **density** | provided by `v-btn-group` |\n| **flat** | `true` |\n| **variant** | provided by `v-btn-group` |",
    "display_content": "## v-defaults-side-effects - Button groups\n\nThe `v-btn-group` component makes multiple changes to the `v-btn` component.\n\n| Documentation | API |\n| - | - |\n| [Button groups](/components/button-groups/) | [v-btn-group](/api/v-btn-group/) |\n\n<ExamplesExample file=\"v-btn/defaults-btn-group\" />\n\nThe following properties are modified when used within a `v-btn-group` component:\n\n| Property | Value |\n| - | - |\n| **color** | provided by `v-btn-group` |\n| **height** | `auto` |\n| **density** | provided by `v-btn-group` |\n| **flat** | `true` |\n| **variant** | provided by `v-btn-group` |",
    "metadata": {
      "component": "v-defaults-side-effects",
      "section_type": "subsection",
      "subsection": "Button groups",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000224",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000225",
    "text": "Component: v-defaults-side-effects\nSection: Cards\nType: documentation\n\n## v-defaults-side-effects - Cards\n\nThe `v-card-actions` component applies the **text** variant and **slim** prop, reducing button x-axis padding to **8px**, and applies a start margin for all siblings. This is to ensure the text from the button lines up with the text and title of the card and that there is space between its actions.\n\n| Documentation | API |\n| - | - |\n| [Cards](/components/cards/) | [v-card-actions](/api/v-card-actions/) |\n\n<ExamplesExample file=\"v-btn/defaults-card-actions\" />\n\nThe following properties are modified when used within a `v-card-actions` component:\n\n| Property | Value |\n| - | - |\n| **slim** | `true` |\n| **variant** | `text` |",
    "display_content": "## v-defaults-side-effects - Cards\n\nThe `v-card-actions` component applies the **text** variant and **slim** prop, reducing button x-axis padding to **8px**, and applies a start margin for all siblings. This is to ensure the text from the button lines up with the text and title of the card and that there is space between its actions.\n\n| Documentation | API |\n| - | - |\n| [Cards](/components/cards/) | [v-card-actions](/api/v-card-actions/) |\n\n<ExamplesExample file=\"v-btn/defaults-card-actions\" />\n\nThe following properties are modified when used within a `v-card-actions` component:\n\n| Property | Value |\n| - | - |\n| **slim** | `true` |\n| **variant** | `text` |",
    "metadata": {
      "component": "v-defaults-side-effects",
      "section_type": "subsection",
      "subsection": "Cards",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000225",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000226",
    "text": "Component: v-defaults-side-effects\nSection: Snackbars\nType: documentation\n\n## v-defaults-side-effects - Snackbars\n\nThe `v-snackbar` component applies the **text** variant, **slim** prop, and removes ripples from all `v-btn` components.\n\n| Documentation | API |\n| - | - |\n| [Snackbars](/components/snackbars/) | [v-snackbar](/api/v-snackbar/) |\n\n<ExamplesExample file=\"v-btn/defaults-snackbar\" />\n\nThe following properties are modified when used within the **actions** slot of the `v-snackbar` component:\n\n| Property | Value |\n| - | - |\n| **slim** | `true` |\n| **ripple** | `false` |\n| **variant** | `text` |",
    "display_content": "## v-defaults-side-effects - Snackbars\n\nThe `v-snackbar` component applies the **text** variant, **slim** prop, and removes ripples from all `v-btn` components.\n\n| Documentation | API |\n| - | - |\n| [Snackbars](/components/snackbars/) | [v-snackbar](/api/v-snackbar/) |\n\n<ExamplesExample file=\"v-btn/defaults-snackbar\" />\n\nThe following properties are modified when used within the **actions** slot of the `v-snackbar` component:\n\n| Property | Value |\n| - | - |\n| **slim** | `true` |\n| **ripple** | `false` |\n| **variant** | `text` |",
    "metadata": {
      "component": "v-defaults-side-effects",
      "section_type": "subsection",
      "subsection": "Snackbars",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000226",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000227",
    "text": "Component: v-accessibility\nType: component_overview\n\n# v-accessibility\n\nThe `v-btn` component is an extension of the native `button` element and supports all of the same accessibility features.\n\nAvailable sections: ARIA Attributes, Keyboard Navigation, Accessible Labels, Touch Target Size",
    "display_content": "# v-accessibility\n\nThe `v-btn` component is an extension of the native `button` element and supports all of the same accessibility features.\n\nAvailable sections: ARIA Attributes, Keyboard Navigation, Accessible Labels, Touch Target Size",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000227",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000228",
    "text": "Component: v-accessibility\nSection: ARIA Attributes\nType: documentation\n\n## v-accessibility - ARIA Attributes\n\nBy default, the `v-btn` component includes relevant [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/) attributes to enhance accessibility. The component is automatically assigned the `type=\"button\"` attribute, which indicates its purpose as a button to assistive technologies.",
    "display_content": "## v-accessibility - ARIA Attributes\n\nBy default, the `v-btn` component includes relevant [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/) attributes to enhance accessibility. The component is automatically assigned the `type=\"button\"` attribute, which indicates its purpose as a button to assistive technologies.",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "subsection",
      "subsection": "ARIA Attributes",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000228",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000229",
    "text": "Component: v-accessibility\nSection: Keyboard Navigation\nType: documentation\n\n## v-accessibility - Keyboard Navigation\n\nThe `v-btn` component is natively focusable and responds to keyboard events, such as pressing the <v-kbd>Enter</v-kbd> or <v-kbd>Space</v-kbd> key to trigger the button's action. This ensures that users can navigate and interact with your application using just the keyboard.",
    "display_content": "## v-accessibility - Keyboard Navigation\n\nThe `v-btn` component is natively focusable and responds to keyboard events, such as pressing the <v-kbd>Enter</v-kbd> or <v-kbd>Space</v-kbd> key to trigger the button's action. This ensures that users can navigate and interact with your application using just the keyboard.",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "subsection",
      "subsection": "Keyboard Navigation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000229",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000230",
    "text": "Component: v-accessibility\nSection: Accessible Labels\nType: code_example\n\n## v-accessibility - Accessible Labels\n\nWhen using a [v-icon](/components/icons/) within the `v-btn` component (e.g., with the **icon** prop), it is essential to provide a text alternative for screen reader users. You can add an `aria-label` attribute with a descriptive label to ensure that the button's purpose is clear to all users.\n\n```html\n<v-btn\n  aria-label=\"Refresh\"\n  icon=\"mdi-refresh\"\n></v-btn>\n```",
    "display_content": "## v-accessibility - Accessible Labels\n\nWhen using a [v-icon](/components/icons/) within the `v-btn` component (e.g., with the **icon** prop), it is essential to provide a text alternative for screen reader users. You can add an `aria-label` attribute with a descriptive label to ensure that the button's purpose is clear to all users.\n\n```html\n<v-btn\n  aria-label=\"Refresh\"\n  icon=\"mdi-refresh\"\n></v-btn>\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Accessible Labels",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000230",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000231",
    "text": "Component: v-accessibility\nSection: Touch Target Size\nType: code_example\n\n## v-accessibility - Touch Target Size\n\nMake sure your buttons have an adequate touch target size, especially on touch devices. A larger touch target can improve the usability of your buttons for users with motor impairments or those using small screens. You can use **large** or **x-large** values for the size prop to increase the button size:\n\n```html\n<v-btn size=\"large\">\n  Large Button\n</v-btn>\n\n<v-btn size=\"x-large\">\n  Extra Large Button\n</v-btn>\n```",
    "display_content": "## v-accessibility - Touch Target Size\n\nMake sure your buttons have an adequate touch target size, especially on touch devices. A larger touch target can improve the usability of your buttons for users with motor impairments or those using small screens. You can use **large** or **x-large** values for the size prop to increase the button size:\n\n```html\n<v-btn size=\"large\">\n  Large Button\n</v-btn>\n\n<v-btn size=\"x-large\">\n  Extra Large Button\n</v-btn>\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Touch Target Size",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000231",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000232",
    "text": "Component: v-button-toggles\nType: component_overview\n\n# v-button-toggles\n\nThe `v-btn-toggle` component is a simple wrapper for `v-item-group` built specifically to work with `v-btn`.",
    "display_content": "# v-button-toggles\n\nThe `v-btn-toggle` component is a simple wrapper for `v-item-group` built specifically to work with `v-btn`.",
    "metadata": {
      "component": "v-button-toggles",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000232",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000233",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nToggle buttons allow you to create a styled group of buttons that can be selected or toggled under a single **v-model**.",
    "display_content": "# v-usage\n\nToggle buttons allow you to create a styled group of buttons that can be selected or toggled under a single **v-model**.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000233",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000234",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component                          | Description | |------------------------------------| - | | [v-btn-toggle](/api/v-btn-toggle/) | Primary component | | [v-btn](/api/v-btn/)               | Sub-component used for modifying the `v-btn-toggle` state | | [v-btn-group](/api/v-btn-group/)   | A stateless version of `v-btn-toggle` |",
    "display_content": "# v-api\n\n| Component                          | Description | |------------------------------------| - | | [v-btn-toggle](/api/v-btn-toggle/) | Primary component | | [v-btn](/api/v-btn/)               | Sub-component used for modifying the `v-btn-toggle` state | | [v-btn-group](/api/v-btn-group/)   | A stateless version of `v-btn-toggle` |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000234",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000235",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can add a visual divider between buttons with the **divided** prop.\n\nAvailable sections: Divided, Variant, Mandatory, Multiple, Rounded, Misc, WYSIWYG",
    "display_content": "# v-examples\n\nYou can add a visual divider between buttons with the **divided** prop.\n\nAvailable sections: Divided, Variant, Mandatory, Multiple, Rounded, Misc, WYSIWYG",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000235",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000236",
    "text": "Component: v-examples\nSection: Divided\nType: documentation\n\n## v-examples - Divided\n\nYou can add a visual divider between buttons with the **divided** prop.\n\n<ExamplesExample file=\"v-btn-toggle/prop-divided\" />",
    "display_content": "## v-examples - Divided\n\nYou can add a visual divider between buttons with the **divided** prop.\n\n<ExamplesExample file=\"v-btn-toggle/prop-divided\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Divided",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000236",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000237",
    "text": "Component: v-examples\nSection: Variant\nType: documentation\n\n## v-examples - Variant\n\nYou can switch the button variant by using **variant** prop on `v-btn-toggle`.\n\n<ExamplesExample file=\"v-btn-toggle/prop-variant\" />",
    "display_content": "## v-examples - Variant\n\nYou can switch the button variant by using **variant** prop on `v-btn-toggle`.\n\n<ExamplesExample file=\"v-btn-toggle/prop-variant\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Variant",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000237",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000238",
    "text": "Component: v-examples\nSection: Mandatory\nType: documentation\n\n## v-examples - Mandatory\n\nA `v-btn-toggle` with the **mandatory** prop will always have a value.\n\n<ExamplesExample file=\"v-btn-toggle/prop-mandatory\" />",
    "display_content": "## v-examples - Mandatory\n\nA `v-btn-toggle` with the **mandatory** prop will always have a value.\n\n<ExamplesExample file=\"v-btn-toggle/prop-mandatory\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Mandatory",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000238",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000239",
    "text": "Component: v-examples\nSection: Multiple\nType: documentation\n\n## v-examples - Multiple\n\nA `v-btn-toggle` with the **multiple** prop will allow a user to select multiple return values as an array.\n\n<ExamplesExample file=\"v-btn-toggle/prop-multiple\" />",
    "display_content": "## v-examples - Multiple\n\nA `v-btn-toggle` with the **multiple** prop will allow a user to select multiple return values as an array.\n\n<ExamplesExample file=\"v-btn-toggle/prop-multiple\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Multiple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000239",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000240",
    "text": "Component: v-examples\nSection: Rounded\nType: documentation\n\n## v-examples - Rounded\n\nYou can control the border radius with the **rounded** prop.\n\n<ExamplesExample file=\"v-btn-toggle/prop-rounded\" />",
    "display_content": "## v-examples - Rounded\n\nYou can control the border radius with the **rounded** prop.\n\n<ExamplesExample file=\"v-btn-toggle/prop-rounded\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Rounded",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000240",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000241",
    "text": "Component: v-examples\nSection: Misc\nType: documentation\n\n## v-examples - Misc\n\n<!-- #### Toolbar\n\nEasily integrate customized button solutions with a `v-toolbar`\n\n<ExamplesExample file=\"v-btn-toggle/misc-toolbar\" /> -->",
    "display_content": "## v-examples - Misc\n\n<!-- #### Toolbar\n\nEasily integrate customized button solutions with a `v-toolbar`\n\n<ExamplesExample file=\"v-btn-toggle/misc-toolbar\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Misc",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000241",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000242",
    "text": "Component: v-examples\nSection: WYSIWYG\nType: documentation\n\n## v-examples - WYSIWYG\n\nGroup similar actions and design your own WYSIWYG component.\n\n<ExamplesExample file=\"v-btn-toggle/misc-wysiwyg\" />",
    "display_content": "## v-examples - WYSIWYG\n\nGroup similar actions and design your own WYSIWYG component.\n\n<ExamplesExample file=\"v-btn-toggle/misc-wysiwyg\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "WYSIWYG",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000242",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000243",
    "text": "Component: v-calendars\nType: component_overview\n\n# v-calendars\n\nThe `v-calendar` component is used to display information in a daily, weekly, monthly. The daily view has slots for all day or timed elements, and the weekly and monthly view has a slot for each day.",
    "display_content": "# v-calendars\n\nThe `v-calendar` component is used to display information in a daily, weekly, monthly. The daily view has slots for all day or timed elements, and the weekly and monthly view has a slot for each day.",
    "metadata": {
      "component": "v-calendars",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000243",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000244",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "display_content": "# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000244",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000245",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nA calendar has a type and a value which determines what type of calendar is shown over what span of time. This shows the bare minimum configuration, an array of events with **title**, **start** and **end** properties. **end** is optional, it defaults to the **start**. If the **start** has a time it's considered a timed event and will be shown accordingly in the day views. An event can span multiple days and will be rendered accordingly.",
    "display_content": "# v-usage\n\nA calendar has a type and a value which determines what type of calendar is shown over what span of time. This shows the bare minimum configuration, an array of events with **title**, **start** and **end** properties. **end** is optional, it defaults to the **start**. If the **start** has a time it's considered a timed event and will be shown accordingly in the day views. An event can span multiple days and will be rendered accordingly.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000245",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000246",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-calendar](/api/v-calendar/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-calendar](/api/v-calendar/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000246",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000247",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-calendar` component in Vuetify offers a versatile solution for building various calendar interfaces. It's designed to be highly customizable, catering to a wide range of applications from simple date pickers to complex event calendars.\n\nAvailable sections: Props, Type month, Type week, Type day, Event Click, Usage, Misc Drag And Drop, Prop Type Day, Prop Type Month, Prop Type Week, Slot Day Body, Slot Day",
    "display_content": "# v-guide\n\nThe `v-calendar` component in Vuetify offers a versatile solution for building various calendar interfaces. It's designed to be highly customizable, catering to a wide range of applications from simple date pickers to complex event calendars.\n\nAvailable sections: Props, Type month, Type week, Type day, Event Click, Usage, Misc Drag And Drop, Prop Type Day, Prop Type Month, Prop Type Week, Slot Day Body, Slot Day",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000247",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000248",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-calendar` component is equipped with a range of props that allow you to tailor its functionality and appearance to your specific requirements. This section will provide an overview of the available properties, offering insights into their usage and impact on the calendar's behavior and presentation.",
    "display_content": "## v-guide - Props\n\nThe `v-calendar` component is equipped with a range of props that allow you to tailor its functionality and appearance to your specific requirements. This section will provide an overview of the available properties, offering insights into their usage and impact on the calendar's behavior and presentation.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000248",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000249",
    "text": "Component: v-guide\nSection: Type month\nType: documentation\n\n## v-guide - Type month\n\nThis is a calendar with the type of `month`\n\n<ExamplesExample file=\"v-calendar/prop-type-month\" />",
    "display_content": "## v-guide - Type month\n\nThis is a calendar with the type of `month`\n\n<ExamplesExample file=\"v-calendar/prop-type-month\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Type month",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000249",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000250",
    "text": "Component: v-guide\nSection: Type week\nType: documentation\n\n## v-guide - Type week\n\nThis is a calendar with the type of `week`\n\n<ExamplesExample file=\"v-calendar/prop-type-week\" />",
    "display_content": "## v-guide - Type week\n\nThis is a calendar with the type of `week`\n\n<ExamplesExample file=\"v-calendar/prop-type-week\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Type week",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000250",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000251",
    "text": "Component: v-guide\nSection: Type day\nType: documentation\n\n## v-guide - Type day\n\nThis is a calendar with the type of `day`\n\n<ExamplesExample file=\"v-calendar/prop-type-day\" />",
    "display_content": "## v-guide - Type day\n\nThis is a calendar with the type of `day`\n\n<ExamplesExample file=\"v-calendar/prop-type-day\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Type day",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000251",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000252",
    "text": "Component: v-guide\nSection: Event Click\nType: code_example\n\n## v-guide - Event Click\n\n```vue\n<template>\n  <v-row class=\"fill-height\">\n    <v-col>\n      <v-sheet height=\"64\">\n        <v-toolbar\n          flat\n        >\n          <v-btn\n            class=\"me-4\"\n            color=\"grey-darken-2\"\n            variant=\"outlined\"\n            @click=\"setToday\"\n          >\n            Today\n          </v-btn>\n          <v-btn\n            color=\"grey-darken-2\"\n            size=\"small\"\n            variant=\"text\"\n            icon\n            @click=\"prev\"\n          >\n            <v-icon size=\"small\">\n              mdi-chevron-left\n            </v-icon>\n          </v-btn>\n          <v-btn\n            color=\"grey-darken-2\"\n            size=\"small\"\n            variant=\"text\"\n            icon\n            @click=\"next\"\n          >\n            <v-icon size=\"small\">\n              mdi-chevron-right\n            </v-icon>\n          </v-btn>\n          <v-toolbar-title v-if=\"calendar\">\n            {{ calendar.title }}\n          </v-toolbar-title>\n          <v-menu location=\"bottom end\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn\n                color=\"grey-darken-2\"\n                variant=\"outlined\"\n                v-bind=\"props\"\n              >\n                <span>{{ typeToLabel[type] }}</span>\n                <v-icon end>\n                  mdi-menu-down\n                </v-icon>\n              </v-btn>\n            </template>\n            <v-list>\n              <v-list-item @click=\"type = 'day'\">\n                <v-list-item-title>Day</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"type = 'week'\">\n                <v-list-item-title>Week</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"type = 'month'\">\n                <v-list-item-title>Month</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"type = '4day'\">\n                <v-list-item-title>4 days</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-toolbar>\n      </v-sheet>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"focus\"\n          :event-color=\"getEventColor\"\n          :events=\"events\"\n          :type=\"type\"\n          color=\"primary\"\n          @change=\"updateRange\"\n          @click:date=\"viewDay\"\n          @click:event=\"showEvent\"\n          @click:more=\"viewDay\"\n        ></v-calendar>\n        <v-menu\n          v-model=\"selectedOpen\"\n          :activator=\"selectedElement\"\n          :close-on-content-click=\"false\"\n          location=\"end\"\n        >\n          <v-card\n            color=\"grey-lighten-4\"\n            min-width=\"350px\"\n            flat\n          >\n            <v-toolbar\n              :color=\"selectedEvent.color\"\n              dark\n            >\n              <v-btn icon>\n                <v-icon>mdi-pencil</v-icon>\n              </v-btn>\n              <v-toolbar-title v-html=\"selectedEvent.name\"></v-toolbar-title>\n              <v-btn icon>\n                <v-icon>mdi-heart</v-icon>\n              </v-btn>\n              <v-btn icon>\n                <v-icon>mdi-dots-vertical</v-icon>\n              </v-btn>\n            </v-toolbar>\n            <v-card-text>\n              <span v-html=\"selectedEvent.details\"></span>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn\n                color=\"secondary\"\n                variant=\"text\"\n                @click=\"selectedOpen = false\"\n              >\n                Cancel\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-menu>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { onMounted, ref } from 'vue'\n\n  const calendar = ref()\n\n  const typeToLabel = {\n    month: 'Month',\n    week: 'Week',\n    day: 'Day',\n    '4day': '4 Days',\n  }\n  const colors = ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1']\n  const names = ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party']\n\n  const focus = ref('')\n  const type = ref('month')\n  const selectedEvent = ref({})\n  const selectedElement = ref(null)\n  const selectedOpen = ref(false)\n  const events = ref([])\n\n  onMounted(() => {\n    calendar.value.checkChange()\n  })\n\n  function viewDay ({ date }) {\n    focus.value = date\n    type.value = 'day'\n  }\n  function getEventColor (event) {\n    return event.color\n  }\n  function setToday () {\n    focus.value = ''\n  }\n  function prev () {\n    calendar.value.prev()\n  }\n  function next () {\n    calendar.value.next()\n  }\n  function showEvent ({ nativeEvent, event }) {\n    const open = () => {\n      selectedEvent.value = event\n      selectedElement.value = nativeEvent.target\n      requestAnimationFrame(() => requestAnimationFrame(() => selectedOpen.value = true))\n    }\n    if (selectedOpen.value) {\n      selectedOpen.value = false\n      requestAnimationFrame(() => requestAnimationFrame(() => open()))\n    } else {\n      open()\n    }\n    nativeEvent.stopPropagation()\n  }\n  function updateRange ({ start, end }) {\n    const _events = []\n    const min = new Date(`${start.date}T00:00:00`)\n    const max = new Date(`${end.date}T23:59:59`)\n    const days = (max.getTime() - min.getTime()) / 86400000\n    const eventCount = rnd(days, days + 20)\n    for (let i = 0; i < eventCount; i++) {\n      const allDay = rnd(0, 3) === 0\n      const firstTimestamp = rnd(min.getTime(), max.getTime())\n      const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n      const secondTimestamp = rnd(2, allDay ? 288 : 8) * 900000\n      const second = new Date(first.getTime() + secondTimestamp)\n      _events.push({\n        name: names[rnd(0, names.length - 1)],\n        start: first,\n        end: second,\n        color: colors[rnd(0, colors.length - 1)],\n        timed: !allDay,\n      })\n    }\n    events.value = _events\n  }\n  function rnd (a, b) {\n    return Math.floor((b - a + 1) * Math.random()) + a\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      focus: '',\n      type: 'month',\n      typeToLabel: {\n        month: 'Month',\n        week: 'Week',\n        day: 'Day',\n        '4day': '4 Days',\n      },\n      selectedEvent: {},\n      selectedElement: null,\n      selectedOpen: false,\n      events: [],\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n    }),\n    mounted () {\n      this.$refs.calendar.checkChange()\n    },\n    methods: {\n      viewDay ({ date }) {\n        this.focus = date\n        this.type = 'day'\n      },\n      getEventColor (event) {\n        return event.color\n      },\n      setToday () {\n        this.focus = ''\n      },\n      prev () {\n        this.$refs.calendar.prev()\n      },\n      next () {\n        this.$refs.calendar.next()\n      },\n      showEvent ({ nativeEvent, event }) {\n        const open = () => {\n          this.selectedEvent = event\n          this.selectedElement = nativeEvent.target\n          requestAnimationFrame(() => requestAnimationFrame(() => this.selectedOpen = true))\n        }\n\n        if (this.selectedOpen) {\n          this.selectedOpen = false\n          requestAnimationFrame(() => requestAnimationFrame(() => open()))\n        } else {\n          open()\n        }\n\n        nativeEvent.stopPropagation()\n      },\n      updateRange ({ start, end }) {\n        const events = []\n\n        const min = new Date(`${start.date}T00:00:00`)\n        const max = new Date(`${end.date}T23:59:59`)\n        const days = (max.getTime() - min.getTime()) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const allDay = this.rnd(0, 3) === 0\n          const firstTimestamp = this.rnd(min.getTime(), max.getTime())\n          const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n          const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\n          const second = new Date(first.getTime() + secondTimestamp)\n\n          events.push({\n            name: this.names[this.rnd(0, this.names.length - 1)],\n            start: first,\n            end: second,\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\n            timed: !allDay,\n          })\n        }\n\n        this.events = events\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Event Click\n\n```vue\n<template>\n  <v-row class=\"fill-height\">\n    <v-col>\n      <v-sheet height=\"64\">\n        <v-toolbar\n          flat\n        >\n          <v-btn\n            class=\"me-4\"\n            color=\"grey-darken-2\"\n            variant=\"outlined\"\n            @click=\"setToday\"\n          >\n            Today\n          </v-btn>\n          <v-btn\n            color=\"grey-darken-2\"\n            size=\"small\"\n            variant=\"text\"\n            icon\n            @click=\"prev\"\n          >\n            <v-icon size=\"small\">\n              mdi-chevron-left\n            </v-icon>\n          </v-btn>\n          <v-btn\n            color=\"grey-darken-2\"\n            size=\"small\"\n            variant=\"text\"\n            icon\n            @click=\"next\"\n          >\n            <v-icon size=\"small\">\n              mdi-chevron-right\n            </v-icon>\n          </v-btn>\n          <v-toolbar-title v-if=\"calendar\">\n            {{ calendar.title }}\n          </v-toolbar-title>\n          <v-menu location=\"bottom end\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn\n                color=\"grey-darken-2\"\n                variant=\"outlined\"\n                v-bind=\"props\"\n              >\n                <span>{{ typeToLabel[type] }}</span>\n                <v-icon end>\n                  mdi-menu-down\n                </v-icon>\n              </v-btn>\n            </template>\n            <v-list>\n              <v-list-item @click=\"type = 'day'\">\n                <v-list-item-title>Day</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"type = 'week'\">\n                <v-list-item-title>Week</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"type = 'month'\">\n                <v-list-item-title>Month</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"type = '4day'\">\n                <v-list-item-title>4 days</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-toolbar>\n      </v-sheet>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"focus\"\n          :event-color=\"getEventColor\"\n          :events=\"events\"\n          :type=\"type\"\n          color=\"primary\"\n          @change=\"updateRange\"\n          @click:date=\"viewDay\"\n          @click:event=\"showEvent\"\n          @click:more=\"viewDay\"\n        ></v-calendar>\n        <v-menu\n          v-model=\"selectedOpen\"\n          :activator=\"selectedElement\"\n          :close-on-content-click=\"false\"\n          location=\"end\"\n        >\n          <v-card\n            color=\"grey-lighten-4\"\n            min-width=\"350px\"\n            flat\n          >\n            <v-toolbar\n              :color=\"selectedEvent.color\"\n              dark\n            >\n              <v-btn icon>\n                <v-icon>mdi-pencil</v-icon>\n              </v-btn>\n              <v-toolbar-title v-html=\"selectedEvent.name\"></v-toolbar-title>\n              <v-btn icon>\n                <v-icon>mdi-heart</v-icon>\n              </v-btn>\n              <v-btn icon>\n                <v-icon>mdi-dots-vertical</v-icon>\n              </v-btn>\n            </v-toolbar>\n            <v-card-text>\n              <span v-html=\"selectedEvent.details\"></span>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn\n                color=\"secondary\"\n                variant=\"text\"\n                @click=\"selectedOpen = false\"\n              >\n                Cancel\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-menu>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { onMounted, ref } from 'vue'\n\n  const calendar = ref()\n\n  const typeToLabel = {\n    month: 'Month',\n    week: 'Week',\n    day: 'Day',\n    '4day': '4 Days',\n  }\n  const colors = ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1']\n  const names = ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party']\n\n  const focus = ref('')\n  const type = ref('month')\n  const selectedEvent = ref({})\n  const selectedElement = ref(null)\n  const selectedOpen = ref(false)\n  const events = ref([])\n\n  onMounted(() => {\n    calendar.value.checkChange()\n  })\n\n  function viewDay ({ date }) {\n    focus.value = date\n    type.value = 'day'\n  }\n  function getEventColor (event) {\n    return event.color\n  }\n  function setToday () {\n    focus.value = ''\n  }\n  function prev () {\n    calendar.value.prev()\n  }\n  function next () {\n    calendar.value.next()\n  }\n  function showEvent ({ nativeEvent, event }) {\n    const open = () => {\n      selectedEvent.value = event\n      selectedElement.value = nativeEvent.target\n      requestAnimationFrame(() => requestAnimationFrame(() => selectedOpen.value = true))\n    }\n    if (selectedOpen.value) {\n      selectedOpen.value = false\n      requestAnimationFrame(() => requestAnimationFrame(() => open()))\n    } else {\n      open()\n    }\n    nativeEvent.stopPropagation()\n  }\n  function updateRange ({ start, end }) {\n    const _events = []\n    const min = new Date(`${start.date}T00:00:00`)\n    const max = new Date(`${end.date}T23:59:59`)\n    const days = (max.getTime() - min.getTime()) / 86400000\n    const eventCount = rnd(days, days + 20)\n    for (let i = 0; i < eventCount; i++) {\n      const allDay = rnd(0, 3) === 0\n      const firstTimestamp = rnd(min.getTime(), max.getTime())\n      const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n      const secondTimestamp = rnd(2, allDay ? 288 : 8) * 900000\n      const second = new Date(first.getTime() + secondTimestamp)\n      _events.push({\n        name: names[rnd(0, names.length - 1)],\n        start: first,\n        end: second,\n        color: colors[rnd(0, colors.length - 1)],\n        timed: !allDay,\n      })\n    }\n    events.value = _events\n  }\n  function rnd (a, b) {\n    return Math.floor((b - a + 1) * Math.random()) + a\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      focus: '',\n      type: 'month',\n      typeToLabel: {\n        month: 'Month',\n        week: 'Week',\n        day: 'Day',\n        '4day': '4 Days',\n      },\n      selectedEvent: {},\n      selectedElement: null,\n      selectedOpen: false,\n      events: [],\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n    }),\n    mounted () {\n      this.$refs.calendar.checkChange()\n    },\n    methods: {\n      viewDay ({ date }) {\n        this.focus = date\n        this.type = 'day'\n      },\n      getEventColor (event) {\n        return event.color\n      },\n      setToday () {\n        this.focus = ''\n      },\n      prev () {\n        this.$refs.calendar.prev()\n      },\n      next () {\n        this.$refs.calendar.next()\n      },\n      showEvent ({ nativeEvent, event }) {\n        const open = () => {\n          this.selectedEvent = event\n          this.selectedElement = nativeEvent.target\n          requestAnimationFrame(() => requestAnimationFrame(() => this.selectedOpen = true))\n        }\n\n        if (this.selectedOpen) {\n          this.selectedOpen = false\n          requestAnimationFrame(() => requestAnimationFrame(() => open()))\n        } else {\n          open()\n        }\n\n        nativeEvent.stopPropagation()\n      },\n      updateRange ({ start, end }) {\n        const events = []\n\n        const min = new Date(`${start.date}T00:00:00`)\n        const max = new Date(`${end.date}T23:59:59`)\n        const days = (max.getTime() - min.getTime()) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const allDay = this.rnd(0, 3) === 0\n          const firstTimestamp = this.rnd(min.getTime(), max.getTime())\n          const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n          const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\n          const second = new Date(first.getTime() + secondTimestamp)\n\n          events.push({\n            name: this.names[this.rnd(0, this.names.length - 1)],\n            start: first,\n            end: second,\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\n            timed: !allDay,\n          })\n        }\n\n        this.events = events\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Event Click",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000252",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000253",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <div>\n    <v-sheet\n      class=\"d-flex\"\n      height=\"54\"\n      tile\n    >\n      <v-select\n        v-model=\"type\"\n        :items=\"types\"\n        class=\"ma-2\"\n        density=\"compact\"\n        label=\"View Mode\"\n        variant=\"outlined\"\n        hide-details\n      ></v-select>\n      <v-select\n        v-model=\"weekday\"\n        :items=\"weekdays\"\n        class=\"ma-2\"\n        density=\"compact\"\n        label=\"weekdays\"\n        variant=\"outlined\"\n        hide-details\n      ></v-select>\n    </v-sheet>\n    <v-sheet>\n      <v-calendar\n        ref=\"calendar\"\n        v-model=\"value\"\n        :events=\"events\"\n        :view-mode=\"type\"\n        :weekdays=\"weekday\"\n      ></v-calendar>\n    </v-sheet>\n  </div>\n</template>\n\n<script>\n  import { useDate } from 'vuetify'\n\n  export default {\n    data: () => ({\n      type: 'month',\n      types: ['month', 'week', 'day'],\n      weekday: [0, 1, 2, 3, 4, 5, 6],\n      weekdays: [\n        { title: 'Sun - Sat', value: [0, 1, 2, 3, 4, 5, 6] },\n        { title: 'Mon - Sun', value: [1, 2, 3, 4, 5, 6, 0] },\n        { title: 'Mon - Fri', value: [1, 2, 3, 4, 5] },\n        { title: 'Mon, Wed, Fri', value: [1, 3, 5] },\n      ],\n      value: [new Date()],\n      events: [],\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n      titles: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n    }),\n    mounted () {\n      const adapter = useDate()\n      this.getEvents({ start: adapter.startOfDay(adapter.startOfMonth(new Date())), end: adapter.endOfDay(adapter.endOfMonth(new Date())) })\n    },\n    methods: {\n      getEvents ({ start, end }) {\n        const events = []\n\n        const min = start\n        const max = end\n        const days = (max.getTime() - min.getTime()) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const allDay = this.rnd(0, 3) === 0\n          const firstTimestamp = this.rnd(min.getTime(), max.getTime())\n          const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n          const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\n          const second = new Date(first.getTime() + secondTimestamp)\n\n          events.push({\n            title: this.titles[this.rnd(0, this.titles.length - 1)],\n            start: first,\n            end: second,\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\n            allDay: !allDay,\n          })\n        }\n\n        this.events = events\n      },\n      getEventColor (event) {\n        return event.color\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <div>\n    <v-sheet\n      class=\"d-flex\"\n      height=\"54\"\n      tile\n    >\n      <v-select\n        v-model=\"type\"\n        :items=\"types\"\n        class=\"ma-2\"\n        density=\"compact\"\n        label=\"View Mode\"\n        variant=\"outlined\"\n        hide-details\n      ></v-select>\n      <v-select\n        v-model=\"weekday\"\n        :items=\"weekdays\"\n        class=\"ma-2\"\n        density=\"compact\"\n        label=\"weekdays\"\n        variant=\"outlined\"\n        hide-details\n      ></v-select>\n    </v-sheet>\n    <v-sheet>\n      <v-calendar\n        ref=\"calendar\"\n        v-model=\"value\"\n        :events=\"events\"\n        :view-mode=\"type\"\n        :weekdays=\"weekday\"\n      ></v-calendar>\n    </v-sheet>\n  </div>\n</template>\n\n<script>\n  import { useDate } from 'vuetify'\n\n  export default {\n    data: () => ({\n      type: 'month',\n      types: ['month', 'week', 'day'],\n      weekday: [0, 1, 2, 3, 4, 5, 6],\n      weekdays: [\n        { title: 'Sun - Sat', value: [0, 1, 2, 3, 4, 5, 6] },\n        { title: 'Mon - Sun', value: [1, 2, 3, 4, 5, 6, 0] },\n        { title: 'Mon - Fri', value: [1, 2, 3, 4, 5] },\n        { title: 'Mon, Wed, Fri', value: [1, 3, 5] },\n      ],\n      value: [new Date()],\n      events: [],\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n      titles: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n    }),\n    mounted () {\n      const adapter = useDate()\n      this.getEvents({ start: adapter.startOfDay(adapter.startOfMonth(new Date())), end: adapter.endOfDay(adapter.endOfMonth(new Date())) })\n    },\n    methods: {\n      getEvents ({ start, end }) {\n        const events = []\n\n        const min = start\n        const max = end\n        const days = (max.getTime() - min.getTime()) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const allDay = this.rnd(0, 3) === 0\n          const firstTimestamp = this.rnd(min.getTime(), max.getTime())\n          const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n          const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\n          const second = new Date(first.getTime() + secondTimestamp)\n\n          events.push({\n            title: this.titles[this.rnd(0, this.titles.length - 1)],\n            start: first,\n            end: second,\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\n            allDay: !allDay,\n          })\n        }\n\n        this.events = events\n      },\n      getEventColor (event) {\n        return event.color\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000253",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000254",
    "text": "Component: v-guide\nSection: Misc Drag And Drop\nType: code_example\n\n## v-guide - Misc Drag And Drop\n\n```vue\n<template>\n  <v-row class=\"fill-height\">\n    <v-col>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"value\"\n          :event-color=\"getEventColor\"\n          :event-ripple=\"false\"\n          :events=\"events\"\n          color=\"primary\"\n          type=\"4day\"\n          @change=\"getEvents\"\n          @mousedown:event=\"startDrag\"\n          @mousedown:time=\"startTime\"\n          @mouseleave=\"cancelDrag\"\n          @mousemove:time=\"mouseMove\"\n          @mouseup:time=\"endDrag\"\n        >\n          <template v-slot:event=\"{ event, timed /*, eventSummary */ }\">\n            <!--<div class=\"v-event-draggable\">\n              <component :is=\"{ render: eventSummary }\"></component>\n            </div>-->\n            <div\n              v-if=\"timed\"\n              class=\"v-event-drag-bottom\"\n              @mousedown.stop=\"extendBottom(event)\"\n            ></div>\n          </template>\n        </v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      value: '',\n      events: [],\n      colors: ['#2196F3', '#3F51B5', '#673AB7', '#00BCD4', '#4CAF50', '#FF9800', '#757575'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n      dragEvent: null,\n      dragStart: null,\n      createEvent: null,\n      createStart: null,\n      extendOriginal: null,\n    }),\n    methods: {\n      startDrag ({ event, timed }) {\n        if (event && timed) {\n          this.dragEvent = event\n          this.dragTime = null\n          this.extendOriginal = null\n        }\n      },\n      startTime (tms) {\n        const mouse = this.toTime(tms)\n\n        if (this.dragEvent && this.dragTime === null) {\n          const start = this.dragEvent.start\n\n          this.dragTime = mouse - start\n        } else {\n          this.createStart = this.roundTime(mouse)\n          this.createEvent = {\n            name: `Event #${this.events.length}`,\n            color: this.rndElement(this.colors),\n            start: this.createStart,\n            end: this.createStart,\n            timed: true,\n          }\n\n          this.events.push(this.createEvent)\n        }\n      },\n      extendBottom (event) {\n        this.createEvent = event\n        this.createStart = event.start\n        this.extendOriginal = event.end\n      },\n      mouseMove (tms) {\n        const mouse = this.toTime(tms)\n\n        if (this.dragEvent && this.dragTime !== null) {\n          const start = this.dragEvent.start\n          const end = this.dragEvent.end\n          const duration = end - start\n          const newStartTime = mouse - this.dragTime\n          const newStart = this.roundTime(newStartTime)\n          const newEnd = newStart + duration\n\n          this.dragEvent.start = newStart\n          this.dragEvent.end = newEnd\n        } else if (this.createEvent && this.createStart !== null) {\n          const mouseRounded = this.roundTime(mouse, false)\n          const min = Math.min(mouseRounded, this.createStart)\n          const max = Math.max(mouseRounded, this.createStart)\n\n          this.createEvent.start = min\n          this.createEvent.end = max\n        }\n      },\n      endDrag () {\n        this.dragTime = null\n        this.dragEvent = null\n        this.createEvent = null\n        this.createStart = null\n        this.extendOriginal = null\n      },\n      cancelDrag () {\n        if (this.createEvent) {\n          if (this.extendOriginal) {\n            this.createEvent.end = this.extendOriginal\n          } else {\n            const i = this.events.indexOf(this.createEvent)\n            if (i !== -1) {\n              this.events.splice(i, 1)\n            }\n          }\n        }\n\n        this.createEvent = null\n        this.createStart = null\n        this.dragTime = null\n        this.dragEvent = null\n      },\n      roundTime (time, down = true) {\n        const roundTo = 15 // minutes\n        const roundDownTime = roundTo * 60 * 1000\n\n        return down\n          ? time - time % roundDownTime\n          : time + (roundDownTime - (time % roundDownTime))\n      },\n      toTime (tms) {\n        return new Date(tms.year, tms.month - 1, tms.day, tms.hour, tms.minute).getTime()\n      },\n      getEventColor (event) {\n        const rgb = parseInt(event.color.substring(1), 16)\n        const r = (rgb >> 16) & 0xFF\n        const g = (rgb >> 8) & 0xFF\n        const b = (rgb >> 0) & 0xFF\n\n        return event === this.dragEvent\n          ? `rgba(${r}, ${g}, ${b}, 0.7)`\n          : event === this.createEvent\n            ? `rgba(${r}, ${g}, ${b}, 0.7)`\n            : event.color\n      },\n      getEvents ({ start, end }) {\n        const events = []\n\n        const min = new Date(`${start.date}T00:00:00`).getTime()\n        const max = new Date(`${end.date}T23:59:59`).getTime()\n        const days = (max - min) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const timed = this.rnd(0, 3) !== 0\n          const firstTimestamp = this.rnd(min, max)\n          const secondTimestamp = this.rnd(2, timed ? 8 : 288) * 900000\n          const start = firstTimestamp - (firstTimestamp % 900000)\n          const end = start + secondTimestamp\n\n          events.push({\n            name: this.rndElement(this.names),\n            color: this.rndElement(this.colors),\n            start,\n            end,\n            timed,\n          })\n        }\n\n        this.events = events\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n      rndElement (arr) {\n        return arr[this.rnd(0, arr.length - 1)]\n      },\n    },\n  }\n</script>\n\n<style scoped lang=\"scss\">\n.v-event-draggable {\n  padding-left: 6px;\n}\n\n.v-event-timed {\n  user-select: none;\n  -webkit-user-select: none;\n}\n\n.v-event-drag-bottom {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 4px;\n  height: 4px;\n  cursor: ns-resize;\n\n  &::after {\n    display: none;\n    position: absolute;\n    left: 50%;\n    height: 4px;\n    border-top: 1px solid white;\n    border-bottom: 1px solid white;\n    width: 16px;\n    margin-left: -8px;\n    opacity: 0.8;\n    content: '';\n  }\n\n  &:hover::after {\n    display: block;\n  }\n}\n</style>\n\n```",
    "display_content": "## v-guide - Misc Drag And Drop\n\n```vue\n<template>\n  <v-row class=\"fill-height\">\n    <v-col>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"value\"\n          :event-color=\"getEventColor\"\n          :event-ripple=\"false\"\n          :events=\"events\"\n          color=\"primary\"\n          type=\"4day\"\n          @change=\"getEvents\"\n          @mousedown:event=\"startDrag\"\n          @mousedown:time=\"startTime\"\n          @mouseleave=\"cancelDrag\"\n          @mousemove:time=\"mouseMove\"\n          @mouseup:time=\"endDrag\"\n        >\n          <template v-slot:event=\"{ event, timed /*, eventSummary */ }\">\n            <!--<div class=\"v-event-draggable\">\n              <component :is=\"{ render: eventSummary }\"></component>\n            </div>-->\n            <div\n              v-if=\"timed\"\n              class=\"v-event-drag-bottom\"\n              @mousedown.stop=\"extendBottom(event)\"\n            ></div>\n          </template>\n        </v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      value: '',\n      events: [],\n      colors: ['#2196F3', '#3F51B5', '#673AB7', '#00BCD4', '#4CAF50', '#FF9800', '#757575'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n      dragEvent: null,\n      dragStart: null,\n      createEvent: null,\n      createStart: null,\n      extendOriginal: null,\n    }),\n    methods: {\n      startDrag ({ event, timed }) {\n        if (event && timed) {\n          this.dragEvent = event\n          this.dragTime = null\n          this.extendOriginal = null\n        }\n      },\n      startTime (tms) {\n        const mouse = this.toTime(tms)\n\n        if (this.dragEvent && this.dragTime === null) {\n          const start = this.dragEvent.start\n\n          this.dragTime = mouse - start\n        } else {\n          this.createStart = this.roundTime(mouse)\n          this.createEvent = {\n            name: `Event #${this.events.length}`,\n            color: this.rndElement(this.colors),\n            start: this.createStart,\n            end: this.createStart,\n            timed: true,\n          }\n\n          this.events.push(this.createEvent)\n        }\n      },\n      extendBottom (event) {\n        this.createEvent = event\n        this.createStart = event.start\n        this.extendOriginal = event.end\n      },\n      mouseMove (tms) {\n        const mouse = this.toTime(tms)\n\n        if (this.dragEvent && this.dragTime !== null) {\n          const start = this.dragEvent.start\n          const end = this.dragEvent.end\n          const duration = end - start\n          const newStartTime = mouse - this.dragTime\n          const newStart = this.roundTime(newStartTime)\n          const newEnd = newStart + duration\n\n          this.dragEvent.start = newStart\n          this.dragEvent.end = newEnd\n        } else if (this.createEvent && this.createStart !== null) {\n          const mouseRounded = this.roundTime(mouse, false)\n          const min = Math.min(mouseRounded, this.createStart)\n          const max = Math.max(mouseRounded, this.createStart)\n\n          this.createEvent.start = min\n          this.createEvent.end = max\n        }\n      },\n      endDrag () {\n        this.dragTime = null\n        this.dragEvent = null\n        this.createEvent = null\n        this.createStart = null\n        this.extendOriginal = null\n      },\n      cancelDrag () {\n        if (this.createEvent) {\n          if (this.extendOriginal) {\n            this.createEvent.end = this.extendOriginal\n          } else {\n            const i = this.events.indexOf(this.createEvent)\n            if (i !== -1) {\n              this.events.splice(i, 1)\n            }\n          }\n        }\n\n        this.createEvent = null\n        this.createStart = null\n        this.dragTime = null\n        this.dragEvent = null\n      },\n      roundTime (time, down = true) {\n        const roundTo = 15 // minutes\n        const roundDownTime = roundTo * 60 * 1000\n\n        return down\n          ? time - time % roundDownTime\n          : time + (roundDownTime - (time % roundDownTime))\n      },\n      toTime (tms) {\n        return new Date(tms.year, tms.month - 1, tms.day, tms.hour, tms.minute).getTime()\n      },\n      getEventColor (event) {\n        const rgb = parseInt(event.color.substring(1), 16)\n        const r = (rgb >> 16) & 0xFF\n        const g = (rgb >> 8) & 0xFF\n        const b = (rgb >> 0) & 0xFF\n\n        return event === this.dragEvent\n          ? `rgba(${r}, ${g}, ${b}, 0.7)`\n          : event === this.createEvent\n            ? `rgba(${r}, ${g}, ${b}, 0.7)`\n            : event.color\n      },\n      getEvents ({ start, end }) {\n        const events = []\n\n        const min = new Date(`${start.date}T00:00:00`).getTime()\n        const max = new Date(`${end.date}T23:59:59`).getTime()\n        const days = (max - min) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const timed = this.rnd(0, 3) !== 0\n          const firstTimestamp = this.rnd(min, max)\n          const secondTimestamp = this.rnd(2, timed ? 8 : 288) * 900000\n          const start = firstTimestamp - (firstTimestamp % 900000)\n          const end = start + secondTimestamp\n\n          events.push({\n            name: this.rndElement(this.names),\n            color: this.rndElement(this.colors),\n            start,\n            end,\n            timed,\n          })\n        }\n\n        this.events = events\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n      rndElement (arr) {\n        return arr[this.rnd(0, arr.length - 1)]\n      },\n    },\n  }\n</script>\n\n<style scoped lang=\"scss\">\n.v-event-draggable {\n  padding-left: 6px;\n}\n\n.v-event-timed {\n  user-select: none;\n  -webkit-user-select: none;\n}\n\n.v-event-drag-bottom {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 4px;\n  height: 4px;\n  cursor: ns-resize;\n\n  &::after {\n    display: none;\n    position: absolute;\n    left: 50%;\n    height: 4px;\n    border-top: 1px solid white;\n    border-bottom: 1px solid white;\n    width: 16px;\n    margin-left: -8px;\n    opacity: 0.8;\n    content: '';\n  }\n\n  &:hover::after {\n    display: block;\n  }\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Drag And Drop",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000254",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000255",
    "text": "Component: v-guide\nSection: Prop Type Day\nType: code_example\n\n## v-guide - Prop Type Day\n\n```vue\n<template>\n  <v-row>\n    <v-col>\n      <v-sheet>\n        <v-calendar\n          color=\"primary\"\n          view-mode=\"day\"\n        ></v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Type Day\n\n```vue\n<template>\n  <v-row>\n    <v-col>\n      <v-sheet>\n        <v-calendar\n          color=\"primary\"\n          view-mode=\"day\"\n        ></v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Type Day",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000255",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000256",
    "text": "Component: v-guide\nSection: Prop Type Month\nType: code_example\n\n## v-guide - Prop Type Month\n\n```vue\n<template>\n  <v-row class=\"fill-height\">\n    <v-col>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          type=\"month\"\n        ></v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { onMounted, ref } from 'vue'\n  import { useDate } from 'vuetify'\n\n  const calendar = ref()\n\n  const today = ref(new Date())\n  const events = ref([])\n  const colors = ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1']\n  const names = ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party']\n\n  onMounted(() => {\n    const adapter = useDate()\n    fetchEvents({ start: adapter.startOfDay(adapter.startOfMonth(new Date())), end: adapter.endOfDay(adapter.endOfMonth(new Date())) })\n  })\n  function fetchEvents ({ start, end }) {\n    const _events = []\n    const min = start\n    const max = end\n    const days = (max.getTime() - min.getTime()) / 86400000\n    const eventCount = rnd(days, days + 20)\n    for (let i = 0; i < eventCount; i++) {\n      const allDay = rnd(0, 3) === 0\n      const firstTimestamp = rnd(min.getTime(), max.getTime())\n      const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n      const secondTimestamp = rnd(2, allDay ? 288 : 8) * 900000\n      const second = new Date(first.getTime() + secondTimestamp)\n      _events.push({\n        title: names[rnd(0, names.length - 1)],\n        start: first,\n        end: second,\n        color: colors[rnd(0, colors.length - 1)],\n        allDay: !allDay,\n      })\n    }\n    events.value = _events\n  }\n  function rnd (a, b) {\n    return Math.floor((b - a + 1) * Math.random()) + a\n  }\n</script>\n\n<script>\n  import { useDate } from 'vuetify'\n\n  export default {\n    data: () => ({\n      focus: '',\n      events: [],\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n    }),\n    mounted () {\n      const adapter = useDate()\n      this.fetchEvents({ start: adapter.startOfDay(adapter.startOfMonth(new Date())), end: adapter.endOfDay(adapter.endOfMonth(new Date())) })\n    },\n    methods: {\n      getEventColor (event) {\n        return event.color\n      },\n      fetchEvents ({ start, end }) {\n        const events = []\n\n        const min = start\n        const max = end\n        const days = (max.getTime() - min.getTime()) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const allDay = this.rnd(0, 3) === 0\n          const firstTimestamp = this.rnd(min.getTime(), max.getTime())\n          const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n          const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\n          const second = new Date(first.getTime() + secondTimestamp)\n\n          events.push({\n            title: this.names[this.rnd(0, this.names.length - 1)],\n            start: first,\n            end: second,\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\n            allDay: !allDay,\n          })\n        }\n\n        this.events = events\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Type Month\n\n```vue\n<template>\n  <v-row class=\"fill-height\">\n    <v-col>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          type=\"month\"\n        ></v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { onMounted, ref } from 'vue'\n  import { useDate } from 'vuetify'\n\n  const calendar = ref()\n\n  const today = ref(new Date())\n  const events = ref([])\n  const colors = ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1']\n  const names = ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party']\n\n  onMounted(() => {\n    const adapter = useDate()\n    fetchEvents({ start: adapter.startOfDay(adapter.startOfMonth(new Date())), end: adapter.endOfDay(adapter.endOfMonth(new Date())) })\n  })\n  function fetchEvents ({ start, end }) {\n    const _events = []\n    const min = start\n    const max = end\n    const days = (max.getTime() - min.getTime()) / 86400000\n    const eventCount = rnd(days, days + 20)\n    for (let i = 0; i < eventCount; i++) {\n      const allDay = rnd(0, 3) === 0\n      const firstTimestamp = rnd(min.getTime(), max.getTime())\n      const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n      const secondTimestamp = rnd(2, allDay ? 288 : 8) * 900000\n      const second = new Date(first.getTime() + secondTimestamp)\n      _events.push({\n        title: names[rnd(0, names.length - 1)],\n        start: first,\n        end: second,\n        color: colors[rnd(0, colors.length - 1)],\n        allDay: !allDay,\n      })\n    }\n    events.value = _events\n  }\n  function rnd (a, b) {\n    return Math.floor((b - a + 1) * Math.random()) + a\n  }\n</script>\n\n<script>\n  import { useDate } from 'vuetify'\n\n  export default {\n    data: () => ({\n      focus: '',\n      events: [],\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n    }),\n    mounted () {\n      const adapter = useDate()\n      this.fetchEvents({ start: adapter.startOfDay(adapter.startOfMonth(new Date())), end: adapter.endOfDay(adapter.endOfMonth(new Date())) })\n    },\n    methods: {\n      getEventColor (event) {\n        return event.color\n      },\n      fetchEvents ({ start, end }) {\n        const events = []\n\n        const min = start\n        const max = end\n        const days = (max.getTime() - min.getTime()) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const allDay = this.rnd(0, 3) === 0\n          const firstTimestamp = this.rnd(min.getTime(), max.getTime())\n          const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n          const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\n          const second = new Date(first.getTime() + secondTimestamp)\n\n          events.push({\n            title: this.names[this.rnd(0, this.names.length - 1)],\n            start: first,\n            end: second,\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\n            allDay: !allDay,\n          })\n        }\n\n        this.events = events\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Type Month",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000256",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000257",
    "text": "Component: v-guide\nSection: Prop Type Week\nType: code_example\n\n## v-guide - Prop Type Week\n\n```vue\n<template>\n  <v-row>\n    <v-col cols=\"12\">\n      <v-sheet>\n        <v-select\n          v-model=\"weekday\"\n          :items=\"weekdays\"\n          class=\"ma-2\"\n          density=\"compact\"\n          label=\"weekdays\"\n          variant=\"outlined\"\n          hide-details\n        ></v-select>\n      </v-sheet>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-sheet>\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          view-mode=\"week\"\n        ></v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const calendar = ref(null)\n  const weekday = ref([0, 1, 2, 3, 4, 5, 6])\n  const weekdays = ref([\n    { title: 'Sun - Sat', value: [0, 1, 2, 3, 4, 5, 6] },\n    { title: 'Mon - Sun', value: [1, 2, 3, 4, 5, 6, 0] },\n    { title: 'Mon - Fri', value: [1, 2, 3, 4, 5] },\n    { title: 'Mon, Wed, Fri', value: [1, 3, 5] },\n  ])\n  const events = [\n    {\n      title: 'Weekly Meeting',\n      start: new Date('2019-01-07 09:00'),\n      end: new Date('2019-01-07 10:00'),\n    },\n    {\n      title: `Thomas' Birthday`,\n      start: new Date('2019-01-10'),\n      end: new Date('2019-01-10'),\n      allDay: true,\n    },\n    {\n      title: 'Mash Potatoes',\n      start: new Date('2019-01-09 12:30'),\n      end: new Date('2019-01-09 15:30'),\n    },\n  ]\n\n  const today = ref(new Date('2019-01-08'))\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      today: '2019-01-08',\n      weekday: [0, 1, 2, 3, 4, 5, 6],\n      weekdays: [\n        { title: 'Sun - Sat', value: [0, 1, 2, 3, 4, 5, 6] },\n        { title: 'Mon - Sun', value: [1, 2, 3, 4, 5, 6, 0] },\n        { title: 'Mon - Fri', value: [1, 2, 3, 4, 5] },\n        { title: 'Mon, Wed, Fri', value: [1, 3, 5] },\n      ],\n      events: [\n        {\n          title: 'Weekly Meeting',\n          start: new Date('2019-01-07 09:00'),\n          end: new Date('2019-01-07 10:00'),\n        },\n        {\n          title: `Thomas' Birthday`,\n          start: new Date('2019-01-10'),\n          end: new Date('2019-01-10'),\n          allDay: true,\n        },\n        {\n          title: 'Mash Potatoes',\n          start: new Date('2019-01-09 12:30'),\n          end: new Date('2019-01-09 15:30'),\n        },\n      ],\n    }),\n  }\n</script>\n\n<style scoped>\n.my-event {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  border-radius: 2px;\n  background-color: #1867c0;\n  color: #ffffff;\n  border: 1px solid #1867c0;\n  font-size: 12px;\n  padding: 3px;\n  cursor: pointer;\n  margin-bottom: 1px;\n  left: 4px;\n  margin-right: 8px;\n  position: relative;\n}\n\n.my-event.with-time {\n  position: absolute;\n  right: 4px;\n  margin-right: 0px;\n}\n</style>\n\n```",
    "display_content": "## v-guide - Prop Type Week\n\n```vue\n<template>\n  <v-row>\n    <v-col cols=\"12\">\n      <v-sheet>\n        <v-select\n          v-model=\"weekday\"\n          :items=\"weekdays\"\n          class=\"ma-2\"\n          density=\"compact\"\n          label=\"weekdays\"\n          variant=\"outlined\"\n          hide-details\n        ></v-select>\n      </v-sheet>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-sheet>\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"today\"\n          :events=\"events\"\n          color=\"primary\"\n          view-mode=\"week\"\n        ></v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const calendar = ref(null)\n  const weekday = ref([0, 1, 2, 3, 4, 5, 6])\n  const weekdays = ref([\n    { title: 'Sun - Sat', value: [0, 1, 2, 3, 4, 5, 6] },\n    { title: 'Mon - Sun', value: [1, 2, 3, 4, 5, 6, 0] },\n    { title: 'Mon - Fri', value: [1, 2, 3, 4, 5] },\n    { title: 'Mon, Wed, Fri', value: [1, 3, 5] },\n  ])\n  const events = [\n    {\n      title: 'Weekly Meeting',\n      start: new Date('2019-01-07 09:00'),\n      end: new Date('2019-01-07 10:00'),\n    },\n    {\n      title: `Thomas' Birthday`,\n      start: new Date('2019-01-10'),\n      end: new Date('2019-01-10'),\n      allDay: true,\n    },\n    {\n      title: 'Mash Potatoes',\n      start: new Date('2019-01-09 12:30'),\n      end: new Date('2019-01-09 15:30'),\n    },\n  ]\n\n  const today = ref(new Date('2019-01-08'))\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      today: '2019-01-08',\n      weekday: [0, 1, 2, 3, 4, 5, 6],\n      weekdays: [\n        { title: 'Sun - Sat', value: [0, 1, 2, 3, 4, 5, 6] },\n        { title: 'Mon - Sun', value: [1, 2, 3, 4, 5, 6, 0] },\n        { title: 'Mon - Fri', value: [1, 2, 3, 4, 5] },\n        { title: 'Mon, Wed, Fri', value: [1, 3, 5] },\n      ],\n      events: [\n        {\n          title: 'Weekly Meeting',\n          start: new Date('2019-01-07 09:00'),\n          end: new Date('2019-01-07 10:00'),\n        },\n        {\n          title: `Thomas' Birthday`,\n          start: new Date('2019-01-10'),\n          end: new Date('2019-01-10'),\n          allDay: true,\n        },\n        {\n          title: 'Mash Potatoes',\n          start: new Date('2019-01-09 12:30'),\n          end: new Date('2019-01-09 15:30'),\n        },\n      ],\n    }),\n  }\n</script>\n\n<style scoped>\n.my-event {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  border-radius: 2px;\n  background-color: #1867c0;\n  color: #ffffff;\n  border: 1px solid #1867c0;\n  font-size: 12px;\n  padding: 3px;\n  cursor: pointer;\n  margin-bottom: 1px;\n  left: 4px;\n  margin-right: 8px;\n  position: relative;\n}\n\n.my-event.with-time {\n  position: absolute;\n  right: 4px;\n  margin-right: 0px;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Type Week",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000257",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000258",
    "text": "Component: v-guide\nSection: Slot Day Body\nType: code_example\n\n## v-guide - Slot Day Body\n\n```vue\n<template>\n  <v-row>\n    <v-col>\n      <v-sheet height=\"500\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"value\"\n          type=\"week\"\n        >\n          <template v-slot:day-body=\"{ date, week }\">\n            <div\n              :class=\"{ first: date === week[0].date }\"\n              :style=\"{ top: nowY }\"\n              class=\"v-current-time\"\n            ></div>\n          </template>\n        </v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { computed, onMounted, ref } from 'vue'\n\n  const calendar = ref()\n\n  const value = ref('')\n  const ready = ref(false)\n\n  const cal = computed(() => {\n    return ready.value ? calendar.value : null\n  })\n  const nowY = computed(() => {\n    return cal.value ? cal.value.timeToY(cal.value.times.now) + 'px' : '-10px'\n  })\n\n  onMounted(() => {\n    ready.value = true\n    scrollToTime()\n    updateTime()\n  })\n\n  function getCurrentTime () {\n    return cal.value ? cal.value.times.now.hour * 60 + cal.value.times.now.minute : 0\n  }\n  function scrollToTime () {\n    const time = getCurrentTime()\n    const first = Math.max(0, time - (time % 30) - 30)\n    cal.value.scrollToTime(first)\n  }\n  function updateTime () {\n    setInterval(() => cal.value.updateTimes(), 60 * 1000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: '',\n      ready: false,\n    }),\n    computed: {\n      cal () {\n        return this.ready ? this.$refs.calendar : null\n      },\n      nowY () {\n        return this.cal ? this.cal.timeToY(this.cal.times.now) + 'px' : '-10px'\n      },\n    },\n    mounted () {\n      this.ready = true\n      this.scrollToTime()\n      this.updateTime()\n    },\n    methods: {\n      getCurrentTime () {\n        return this.cal ? this.cal.times.now.hour * 60 + this.cal.times.now.minute : 0\n      },\n      scrollToTime () {\n        const time = this.getCurrentTime()\n        const first = Math.max(0, time - (time % 30) - 30)\n\n        this.cal.scrollToTime(first)\n      },\n      updateTime () {\n        setInterval(() => this.cal.updateTimes(), 60 * 1000)\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n.v-current-time {\n  height: 2px;\n  background-color: #ea4335;\n  position: absolute;\n  left: -1px;\n  right: 0;\n  pointer-events: none;\n\n  &.first::before {\n    content: '';\n    position: absolute;\n    background-color: #ea4335;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    margin-top: -5px;\n    margin-left: -6.5px;\n  }\n}\n</style>\n\n```",
    "display_content": "## v-guide - Slot Day Body\n\n```vue\n<template>\n  <v-row>\n    <v-col>\n      <v-sheet height=\"500\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"value\"\n          type=\"week\"\n        >\n          <template v-slot:day-body=\"{ date, week }\">\n            <div\n              :class=\"{ first: date === week[0].date }\"\n              :style=\"{ top: nowY }\"\n              class=\"v-current-time\"\n            ></div>\n          </template>\n        </v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { computed, onMounted, ref } from 'vue'\n\n  const calendar = ref()\n\n  const value = ref('')\n  const ready = ref(false)\n\n  const cal = computed(() => {\n    return ready.value ? calendar.value : null\n  })\n  const nowY = computed(() => {\n    return cal.value ? cal.value.timeToY(cal.value.times.now) + 'px' : '-10px'\n  })\n\n  onMounted(() => {\n    ready.value = true\n    scrollToTime()\n    updateTime()\n  })\n\n  function getCurrentTime () {\n    return cal.value ? cal.value.times.now.hour * 60 + cal.value.times.now.minute : 0\n  }\n  function scrollToTime () {\n    const time = getCurrentTime()\n    const first = Math.max(0, time - (time % 30) - 30)\n    cal.value.scrollToTime(first)\n  }\n  function updateTime () {\n    setInterval(() => cal.value.updateTimes(), 60 * 1000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: '',\n      ready: false,\n    }),\n    computed: {\n      cal () {\n        return this.ready ? this.$refs.calendar : null\n      },\n      nowY () {\n        return this.cal ? this.cal.timeToY(this.cal.times.now) + 'px' : '-10px'\n      },\n    },\n    mounted () {\n      this.ready = true\n      this.scrollToTime()\n      this.updateTime()\n    },\n    methods: {\n      getCurrentTime () {\n        return this.cal ? this.cal.times.now.hour * 60 + this.cal.times.now.minute : 0\n      },\n      scrollToTime () {\n        const time = this.getCurrentTime()\n        const first = Math.max(0, time - (time % 30) - 30)\n\n        this.cal.scrollToTime(first)\n      },\n      updateTime () {\n        setInterval(() => this.cal.updateTimes(), 60 * 1000)\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n.v-current-time {\n  height: 2px;\n  background-color: #ea4335;\n  position: absolute;\n  left: -1px;\n  right: 0;\n  pointer-events: none;\n\n  &.first::before {\n    content: '';\n    position: absolute;\n    background-color: #ea4335;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    margin-top: -5px;\n    margin-left: -6.5px;\n  }\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Slot Day Body",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000258",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000259",
    "text": "Component: v-guide\nSection: Slot Day\nType: code_example\n\n## v-guide - Slot Day\n\n```vue\n<template>\n  <v-row>\n    <v-col>\n      <v-sheet height=\"500\">\n        <v-calendar\n          :now=\"today\"\n          :value=\"today\"\n          color=\"primary\"\n        >\n          <template v-slot:day=\"{ past, date }\">\n            <v-row\n              class=\"fill-height\"\n            >\n              <template v-if=\"past && tracked[date]\">\n                <v-sheet\n                  v-for=\"(percent, i) in tracked[date]\"\n                  :key=\"i\"\n                  :color=\"colors[i]\"\n                  :title=\"category[i]\"\n                  :width=\"`${percent}%`\"\n                  height=\"100%\"\n                  tile\n                ></v-sheet>\n              </template>\n            </v-row>\n          </template>\n        </v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const today = ref('2019-01-10')\n  const tracked = ref({\n    '2019-01-09': [23, 45, 10],\n    '2019-01-08': [10],\n    '2019-01-07': [0, 78, 5],\n    '2019-01-06': [0, 0, 50],\n    '2019-01-05': [0, 10, 23],\n    '2019-01-04': [2, 90],\n    '2019-01-03': [10, 32],\n    '2019-01-02': [80, 10, 10],\n    '2019-01-01': [20, 25, 10],\n  })\n  const colors = ref(['#1867c0', '#fb8c00', '#000000'])\n  const category = ref(['Development', 'Meetings', 'Slacking'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      today: '2019-01-10',\n      tracked: {\n        '2019-01-09': [23, 45, 10],\n        '2019-01-08': [10],\n        '2019-01-07': [0, 78, 5],\n        '2019-01-06': [0, 0, 50],\n        '2019-01-05': [0, 10, 23],\n        '2019-01-04': [2, 90],\n        '2019-01-03': [10, 32],\n        '2019-01-02': [80, 10, 10],\n        '2019-01-01': [20, 25, 10],\n      },\n      colors: ['#1867c0', '#fb8c00', '#000000'],\n      category: ['Development', 'Meetings', 'Slacking'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Slot Day\n\n```vue\n<template>\n  <v-row>\n    <v-col>\n      <v-sheet height=\"500\">\n        <v-calendar\n          :now=\"today\"\n          :value=\"today\"\n          color=\"primary\"\n        >\n          <template v-slot:day=\"{ past, date }\">\n            <v-row\n              class=\"fill-height\"\n            >\n              <template v-if=\"past && tracked[date]\">\n                <v-sheet\n                  v-for=\"(percent, i) in tracked[date]\"\n                  :key=\"i\"\n                  :color=\"colors[i]\"\n                  :title=\"category[i]\"\n                  :width=\"`${percent}%`\"\n                  height=\"100%\"\n                  tile\n                ></v-sheet>\n              </template>\n            </v-row>\n          </template>\n        </v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const today = ref('2019-01-10')\n  const tracked = ref({\n    '2019-01-09': [23, 45, 10],\n    '2019-01-08': [10],\n    '2019-01-07': [0, 78, 5],\n    '2019-01-06': [0, 0, 50],\n    '2019-01-05': [0, 10, 23],\n    '2019-01-04': [2, 90],\n    '2019-01-03': [10, 32],\n    '2019-01-02': [80, 10, 10],\n    '2019-01-01': [20, 25, 10],\n  })\n  const colors = ref(['#1867c0', '#fb8c00', '#000000'])\n  const category = ref(['Development', 'Meetings', 'Slacking'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      today: '2019-01-10',\n      tracked: {\n        '2019-01-09': [23, 45, 10],\n        '2019-01-08': [10],\n        '2019-01-07': [0, 78, 5],\n        '2019-01-06': [0, 0, 50],\n        '2019-01-05': [0, 10, 23],\n        '2019-01-04': [2, 90],\n        '2019-01-03': [10, 32],\n        '2019-01-02': [80, 10, 10],\n        '2019-01-01': [20, 25, 10],\n      },\n      colors: ['#1867c0', '#fb8c00', '#000000'],\n      category: ['Development', 'Meetings', 'Slacking'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Slot Day",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000259",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000260",
    "text": "Component: v-cards\nType: component_overview\n\n# v-cards\n\nThe `v-card` component is a versatile and enhanced version of [v-sheet](/components/sheets/) that provides a simple interface for headings, text, images, icons, and more.",
    "display_content": "# v-cards\n\nThe `v-card` component is a versatile and enhanced version of [v-sheet](/components/sheets/) that provides a simple interface for headings, text, images, icons, and more.",
    "metadata": {
      "component": "v-cards",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000260",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000261",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-card` component is a stylish way to wrap different types of content; such as tables, images, or user actions.",
    "display_content": "# v-usage\n\nThe `v-card` component is a stylish way to wrap different types of content; such as tables, images, or user actions.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000261",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000262",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-card](/api/v-card/) | Primary Component | | [v-card-item](/api/v-card-item/) | Sub-component used to wrap the Card's `v-card-title` and `v-card-subtitle` components. | | [v-card-title](/api/v-card-title/) | Sub-component used to display the Card's title. Wraps the `#title` slot | | [v-card-subtitle](/api/v-card-subtitle/) | Sub-component used to display the Card's subtitle. Wraps the `#subtitle` slot. |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-card](/api/v-card/) | Primary Component | | [v-card-item](/api/v-card-item/) | Sub-component used to wrap the Card's `v-card-title` and `v-card-subtitle` components. | | [v-card-title](/api/v-card-title/) | Sub-component used to display the Card's title. Wraps the `#title` slot | | [v-card-subtitle](/api/v-card-subtitle/) | Sub-component used to display the Card's subtitle. Wraps the `#subtitle` slot. |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000262",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000263",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-card` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-card` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000263",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000264",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-card` component is a versatile and enhanced sheet of paper that provides a simple interface for headings, text, images, and actions. It is a content container that is the most common way to present information.\n\nAvailable sections: Basics, Combined, Props, Variants, Color, Elevation, Hover, Href, Link, Disabled, Image, Slots, Avatar and icon",
    "display_content": "# v-guide\n\nThe `v-card` component is a versatile and enhanced sheet of paper that provides a simple interface for headings, text, images, and actions. It is a content container that is the most common way to present information.\n\nAvailable sections: Basics, Combined, Props, Variants, Color, Elevation, Hover, Href, Link, Disabled, Image, Slots, Avatar and icon",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000264",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000265",
    "text": "Component: v-guide\nSection: Basics\nType: documentation\n\n## v-guide - Basics\n\nThere are three ways you can populate a `v-card` with content. The first one is by using props, the second one is by slots, and the third one is by manually using the `v-card-*` components.\n\n<ExamplesExample file=\"v-card/basics-content\" />\n\nProps give you an easy interface to display text-only content. They can also be used to easily render images and icons. Use slots if you need to render more complex content. If you need full control over the content, use markup.",
    "display_content": "## v-guide - Basics\n\nThere are three ways you can populate a `v-card` with content. The first one is by using props, the second one is by slots, and the third one is by manually using the `v-card-*` components.\n\n<ExamplesExample file=\"v-card/basics-content\" />\n\nProps give you an easy interface to display text-only content. They can also be used to easily render images and icons. Use slots if you need to render more complex content. If you need full control over the content, use markup.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Basics",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000265",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000266",
    "text": "Component: v-guide\nSection: Combined\nType: documentation\n\n## v-guide - Combined\n\nIn some cases it is possible to combine the different options, like the example below where props, slots and markup have all been used.\n\n<ExamplesExample file=\"v-card/basics-combine\" />\n\n::: info\n\nIn general slots take precedence over props. So if you provide both **text** prop and use **text** slot, then only the slot content will be rendered.\n\n:::",
    "display_content": "## v-guide - Combined\n\nIn some cases it is possible to combine the different options, like the example below where props, slots and markup have all been used.\n\n<ExamplesExample file=\"v-card/basics-combine\" />\n\n::: info\n\nIn general slots take precedence over props. So if you provide both **text** prop and use **text** slot, then only the slot content will be rendered.\n\n:::",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Combined",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000266",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000267",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-card` component has a variety of props that allow you to customize its appearance and behavior.",
    "display_content": "## v-guide - Props\n\nThe `v-card` component has a variety of props that allow you to customize its appearance and behavior.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000267",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000268",
    "text": "Component: v-guide\nSection: Variants\nType: documentation\n\n## v-guide - Variants\n\nThe **variant** prop gives you easy access to several different card styles. Available variants are: **elevated**(default), **flat**, **tonal**, **outlined**, **text**, and **plain**.\n\n| Value        | Description                                                 |\n|--------------|-------------------------------------------------------------|\n| **elevated** | Elevates the card with a shadow                             |\n| **flat**     | Removes card shadow and border                              |\n| **tonal**    | Background color is a lowered opacity of the color          |\n| **outlined** | Applies a thin border and card has zero elevation           |\n| **text**     | Removes the background and removes shadow                   |\n| **plain**    | Removes the background and lowers the opacity until hovered |\n\n<ExamplesExample file=\"v-card/prop-variant\" />\n\n<VoPromotionsCardVuetify class=\"mb-4\" />",
    "display_content": "## v-guide - Variants\n\nThe **variant** prop gives you easy access to several different card styles. Available variants are: **elevated**(default), **flat**, **tonal**, **outlined**, **text**, and **plain**.\n\n| Value        | Description                                                 |\n|--------------|-------------------------------------------------------------|\n| **elevated** | Elevates the card with a shadow                             |\n| **flat**     | Removes card shadow and border                              |\n| **tonal**    | Background color is a lowered opacity of the color          |\n| **outlined** | Applies a thin border and card has zero elevation           |\n| **text**     | Removes the background and removes shadow                   |\n| **plain**    | Removes the background and lowers the opacity until hovered |\n\n<ExamplesExample file=\"v-card/prop-variant\" />\n\n<VoPromotionsCardVuetify class=\"mb-4\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Variants",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000268",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000269",
    "text": "Component: v-guide\nSection: Color\nType: documentation\n\n## v-guide - Color\n\nCards can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\n<ExamplesExample file=\"v-card/prop-color\" />",
    "display_content": "## v-guide - Color\n\nCards can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\n<ExamplesExample file=\"v-card/prop-color\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000269",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000270",
    "text": "Component: v-guide\nSection: Elevation\nType: documentation\n\n## v-guide - Elevation\n\nThe **elevation** property provides up to 24 levels of shadow depth. By default, cards rest at 2dp.\n\n<ExamplesExample file=\"v-card/prop-elevation\" />",
    "display_content": "## v-guide - Elevation\n\nThe **elevation** property provides up to 24 levels of shadow depth. By default, cards rest at 2dp.\n\n<ExamplesExample file=\"v-card/prop-elevation\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Elevation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000270",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000271",
    "text": "Component: v-guide\nSection: Hover\nType: documentation\n\n## v-guide - Hover\n\nWhen using the **hover** prop, the cards will increase its elevation when the mouse is hovered over them.\n\n<ExamplesExample file=\"v-card/prop-hover\" />",
    "display_content": "## v-guide - Hover\n\nWhen using the **hover** prop, the cards will increase its elevation when the mouse is hovered over them.\n\n<ExamplesExample file=\"v-card/prop-hover\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Hover",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000271",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000272",
    "text": "Component: v-guide\nSection: Href\nType: documentation\n\n## v-guide - Href\n\nThe card becomes an anchor with the **href** prop.\n\n<ExamplesExample file=\"v-card/prop-href\" />",
    "display_content": "## v-guide - Href\n\nThe card becomes an anchor with the **href** prop.\n\n<ExamplesExample file=\"v-card/prop-href\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Href",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000272",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000273",
    "text": "Component: v-guide\nSection: Link\nType: documentation\n\n## v-guide - Link\n\nAdd the **link** prop for the same style without adding an anchor.\n\n<ExamplesExample file=\"v-card/prop-link\" />",
    "display_content": "## v-guide - Link\n\nAdd the **link** prop for the same style without adding an anchor.\n\n<ExamplesExample file=\"v-card/prop-link\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Link",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000273",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000274",
    "text": "Component: v-guide\nSection: Disabled\nType: documentation\n\n## v-guide - Disabled\n\nThe **disabled** prop can be added in order to prevent a user from interacting with the card.\n\n<ExamplesExample file=\"v-card/prop-disabled\" />",
    "display_content": "## v-guide - Disabled\n\nThe **disabled** prop can be added in order to prevent a user from interacting with the card.\n\n<ExamplesExample file=\"v-card/prop-disabled\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000274",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000275",
    "text": "Component: v-guide\nSection: Image\nType: documentation\n\n## v-guide - Image\n\nApply a specific background image to the Card.\n\n<ExamplesExample file=\"v-card/prop-image\" />\n\n::: tip\n\n`v-card` does not allow its content to overflow outside the card by default. It also establishes a z-index stacking context, which prevents its content from displaying on top of elements outside the `v-card`, even when it sets a higher z-index value. To override this default behavior, apply the following usage: `<v-card style=\"overflow: initial; z-index: initial\">`.\n\n:::",
    "display_content": "## v-guide - Image\n\nApply a specific background image to the Card.\n\n<ExamplesExample file=\"v-card/prop-image\" />\n\n::: tip\n\n`v-card` does not allow its content to overflow outside the card by default. It also establishes a z-index stacking context, which prevents its content from displaying on top of elements outside the `v-card`, even when it sets a higher z-index value. To override this default behavior, apply the following usage: `<v-card style=\"overflow: initial; z-index: initial\">`.\n\n:::",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Image",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000275",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000276",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe `v-card` component provides slots that enable you to customize content created by its props or to add additional content.\n\nSlots give you greater control to customize the content of the `v-card` component while still taking advantage of the easy-to-use props.",
    "display_content": "## v-guide - Slots\n\nThe `v-card` component provides slots that enable you to customize content created by its props or to add additional content.\n\nSlots give you greater control to customize the content of the `v-card` component while still taking advantage of the easy-to-use props.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000276",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000277",
    "text": "Component: v-guide\nSection: Avatar and icon\nType: documentation\n\n## v-guide - Avatar and icon\n\nYou can use the **prepend-avatar**, **append-avatar**, **prepend-icon** and **append-icon** props or the **prepend** and **append** slots to place a [v-icon](/components/icons/) that automatically injects the designated icon.\n\n<ExamplesExample file=\"v-card/slot-prepend-append\" />",
    "display_content": "## v-guide - Avatar and icon\n\nYou can use the **prepend-avatar**, **append-avatar**, **prepend-icon** and **append-icon** props or the **prepend** and **append** slots to place a [v-icon](/components/icons/) that automatically injects the designated icon.\n\n<ExamplesExample file=\"v-card/slot-prepend-append\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Avatar and icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000277",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000278",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-card` component.\n\nAvailable sections: Card Reveal, Content wrapping, Custom actions, Grids, Horizontal cards, Information card, Media with text, Twitter card, Weather card, Loading, Earnings goal, Funding card, Basics Combine, Basics Content, Usage, Misc Card Reveal, Misc Content Wrapping, Misc Custom Actions, Misc Earnings Goal, Misc Grids, Misc Horizontal Cards, Misc Information Card, Misc Intermediate, Misc Media With Text, Misc Shopify Funding, Misc Twitter Card, Misc Weather Card, Prop Color, Prop Disabled, Prop Elevated, Prop Elevation, Prop Hover, Prop Href, Prop Image, Prop Link, Prop Loading, Prop Outlined, Prop Variant, Slot Prepend Append",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-card` component.\n\nAvailable sections: Card Reveal, Content wrapping, Custom actions, Grids, Horizontal cards, Information card, Media with text, Twitter card, Weather card, Loading, Earnings goal, Funding card, Basics Combine, Basics Content, Usage, Misc Card Reveal, Misc Content Wrapping, Misc Custom Actions, Misc Earnings Goal, Misc Grids, Misc Horizontal Cards, Misc Information Card, Misc Intermediate, Misc Media With Text, Misc Shopify Funding, Misc Twitter Card, Misc Weather Card, Prop Color, Prop Disabled, Prop Elevated, Prop Elevation, Prop Hover, Prop Href, Prop Image, Prop Link, Prop Loading, Prop Outlined, Prop Variant, Slot Prepend Append",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000278",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000279",
    "text": "Component: v-examples\nSection: Card Reveal\nType: documentation\n\n## v-examples - Card Reveal\n\nUsing [v-expand-transition](/api/v-expand-transition/) and a `@click` event you can have a card that reveals more information once the button is clicked, activating the hidden card to be revealed.\n\n<ExamplesExample file=\"v-card/misc-card-reveal\" />",
    "display_content": "## v-examples - Card Reveal\n\nUsing [v-expand-transition](/api/v-expand-transition/) and a `@click` event you can have a card that reveals more information once the button is clicked, activating the hidden card to be revealed.\n\n<ExamplesExample file=\"v-card/misc-card-reveal\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Card Reveal",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000279",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000280",
    "text": "Component: v-examples\nSection: Content wrapping\nType: documentation\n\n## v-examples - Content wrapping\n\nThe `v-card` component is useful for wrapping content.\n\n<ExamplesExample file=\"v-card/misc-content-wrapping\" />",
    "display_content": "## v-examples - Content wrapping\n\nThe `v-card` component is useful for wrapping content.\n\n<ExamplesExample file=\"v-card/misc-content-wrapping\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Content wrapping",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000280",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000281",
    "text": "Component: v-examples\nSection: Custom actions\nType: documentation\n\n## v-examples - Custom actions\n\nWith a simple conditional, you can easily add supplementary text that is hidden until opened.\n\n<ExamplesExample file=\"v-card/misc-custom-actions\" />\n\n<VoPromotionsCardVuetify class=\"mb-4\" />",
    "display_content": "## v-examples - Custom actions\n\nWith a simple conditional, you can easily add supplementary text that is hidden until opened.\n\n<ExamplesExample file=\"v-card/misc-custom-actions\" />\n\n<VoPromotionsCardVuetify class=\"mb-4\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom actions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000281",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000282",
    "text": "Component: v-examples\nSection: Grids\nType: documentation\n\n## v-examples - Grids\n\nUsing [grids](/components/grids/), you can create beautiful layouts.\n\n<ExamplesExample file=\"v-card/misc-grids\" />",
    "display_content": "## v-examples - Grids\n\nUsing [grids](/components/grids/), you can create beautiful layouts.\n\n<ExamplesExample file=\"v-card/misc-grids\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Grids",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000282",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000283",
    "text": "Component: v-examples\nSection: Horizontal cards\nType: documentation\n\n## v-examples - Horizontal cards\n\nYou can also play with the card layout using [layout flex](/styles/flex/).\n\n<ExamplesExample file=\"v-card/misc-horizontal-cards\" />",
    "display_content": "## v-examples - Horizontal cards\n\nYou can also play with the card layout using [layout flex](/styles/flex/).\n\n<ExamplesExample file=\"v-card/misc-horizontal-cards\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Horizontal cards",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000283",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000284",
    "text": "Component: v-examples\nSection: Information card\nType: documentation\n\n## v-examples - Information card\n\nCards are entry points to more detailed information. To keep things concise, ensure to limit the number of actions the user can take.\n\n<ExamplesExample file=\"v-card/misc-information-card\" />",
    "display_content": "## v-examples - Information card\n\nCards are entry points to more detailed information. To keep things concise, ensure to limit the number of actions the user can take.\n\n<ExamplesExample file=\"v-card/misc-information-card\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Information card",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000284",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000285",
    "text": "Component: v-examples\nSection: Media with text\nType: documentation\n\n## v-examples - Media with text\n\nUsing the layout system, we can add custom text anywhere within the background.\n\n<ExamplesExample file=\"v-card/misc-media-with-text\" />",
    "display_content": "## v-examples - Media with text\n\nUsing the layout system, we can add custom text anywhere within the background.\n\n<ExamplesExample file=\"v-card/misc-media-with-text\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Media with text",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000285",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000286",
    "text": "Component: v-examples\nSection: Twitter card\nType: documentation\n\n## v-examples - Twitter card\n\nThe `v-card` component has multiple children components that help you build complex examples without having to worry about spacing. This example is comprised of the `v-card-title`, `v-card-text` and `v-card-actions` components.\n\n<ExamplesExample file=\"v-card/misc-twitter-card\" />",
    "display_content": "## v-examples - Twitter card\n\nThe `v-card` component has multiple children components that help you build complex examples without having to worry about spacing. This example is comprised of the `v-card-title`, `v-card-text` and `v-card-actions` components.\n\n<ExamplesExample file=\"v-card/misc-twitter-card\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Twitter card",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000286",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000287",
    "text": "Component: v-examples\nSection: Weather card\nType: documentation\n\n## v-examples - Weather card\n\nUsing [v-list-items](/components/lists) and a [v-slider](/components/sliders), we are able to create a unique weather card. The list components ensure that we have consistent spacing and functionality while the slider component allows us to provide a useful interface of selection to the user.\n\n<ExamplesExample file=\"v-card/misc-weather-card\" />",
    "display_content": "## v-examples - Weather card\n\nUsing [v-list-items](/components/lists) and a [v-slider](/components/sliders), we are able to create a unique weather card. The list components ensure that we have consistent spacing and functionality while the slider component allows us to provide a useful interface of selection to the user.\n\n<ExamplesExample file=\"v-card/misc-weather-card\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Weather card",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000287",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000288",
    "text": "Component: v-examples\nSection: Loading\nType: documentation\n\n## v-examples - Loading\n\nUse an indeterminate [v-progress-linear](/components/progress-linear) to indicate a loading state.\n\n<ExamplesExample file=\"v-card/prop-loading\" />",
    "display_content": "## v-examples - Loading\n\nUse an indeterminate [v-progress-linear](/components/progress-linear) to indicate a loading state.\n\n<ExamplesExample file=\"v-card/prop-loading\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Loading",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000288",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000289",
    "text": "Component: v-examples\nSection: Earnings goal\nType: documentation\n\n## v-examples - Earnings goal\n\nThis example utilizes slots to customize the appearance of the different content areas.\n\n<ExamplesExample file=\"v-card/misc-earnings-goal\" />",
    "display_content": "## v-examples - Earnings goal\n\nThis example utilizes slots to customize the appearance of the different content areas.\n\n<ExamplesExample file=\"v-card/misc-earnings-goal\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Earnings goal",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000289",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000290",
    "text": "Component: v-examples\nSection: Funding card\nType: documentation\n\n## v-examples - Funding card\n\nUtilize a combination of Card properties and utility classes to create a unique funding card.\n\n<ExamplesExample file=\"v-card/misc-shopify-funding\" />",
    "display_content": "## v-examples - Funding card\n\nUtilize a combination of Card properties and utility classes to create a unique funding card.\n\n<ExamplesExample file=\"v-card/misc-shopify-funding\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Funding card",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000290",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000291",
    "text": "Component: v-examples\nSection: Basics Combine\nType: code_example\n\n## v-examples - Basics Combine\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    prepend-icon=\"$vuetify\"\n    subtitle=\"The #1 Vue UI Library\"\n    width=\"400\"\n  >\n    <template v-slot:title>\n      <span class=\"font-weight-black\">Welcome to Vuetify</span>\n    </template>\n\n    <v-card-text class=\"bg-surface-light pt-4\">\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n    </v-card-text>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Basics Combine\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    prepend-icon=\"$vuetify\"\n    subtitle=\"The #1 Vue UI Library\"\n    width=\"400\"\n  >\n    <template v-slot:title>\n      <span class=\"font-weight-black\">Welcome to Vuetify</span>\n    </template>\n\n    <v-card-text class=\"bg-surface-light pt-4\">\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n    </v-card-text>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Basics Combine",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000291",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000292",
    "text": "Component: v-examples\nSection: Basics Content\nType: code_example\n\n## v-examples - Basics Content\n\n```vue\n<template>\n  <v-row>\n    <v-col cols=\"12\" md=\"4\">\n      <v-card\n        subtitle=\"This is a card subtitle\"\n        text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus!\"\n        title=\"This is a title\"\n      ></v-card>\n\n      <div class=\"text-center text-caption\">Using Props Only</div>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"4\">\n      <v-card>\n        <template v-slot:title>\n          This is a title\n        </template>\n\n        <template v-slot:subtitle>\n          This is a card subtitle\n        </template>\n\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus!\n        </template>\n      </v-card>\n\n      <div class=\"text-center text-caption\">Using Slots Only</div>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"4\">\n      <v-card>\n        <v-card-item>\n          <v-card-title>This is a title</v-card-title>\n\n          <v-card-subtitle>This is a card subtitle</v-card-subtitle>\n        </v-card-item>\n\n        <v-card-text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus!\n        </v-card-text>\n      </v-card>\n\n      <div class=\"text-center text-caption\">Using Markup Only</div>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "display_content": "## v-examples - Basics Content\n\n```vue\n<template>\n  <v-row>\n    <v-col cols=\"12\" md=\"4\">\n      <v-card\n        subtitle=\"This is a card subtitle\"\n        text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus!\"\n        title=\"This is a title\"\n      ></v-card>\n\n      <div class=\"text-center text-caption\">Using Props Only</div>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"4\">\n      <v-card>\n        <template v-slot:title>\n          This is a title\n        </template>\n\n        <template v-slot:subtitle>\n          This is a card subtitle\n        </template>\n\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus!\n        </template>\n      </v-card>\n\n      <div class=\"text-center text-caption\">Using Slots Only</div>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"4\">\n      <v-card>\n        <v-card-item>\n          <v-card-title>This is a title</v-card-title>\n\n          <v-card-subtitle>This is a card subtitle</v-card-subtitle>\n        </v-card-item>\n\n        <v-card-text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus!\n        </v-card-text>\n      </v-card>\n\n      <div class=\"text-center text-caption\">Using Markup Only</div>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Basics Content",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000292",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000293",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n\n      <v-card v-bind=\"props\">\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n        </template>\n\n        <v-card-actions v-if=\"actions\">\n          <v-btn>Click me</v-btn>\n        </v-card-actions>\n      </v-card>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"title\" label=\"Show title\"></v-checkbox>\n\n      <v-checkbox v-model=\"subtitle\" label=\"Show subtitle\"></v-checkbox>\n\n      <v-checkbox v-model=\"actions\" label=\"Show actions\"></v-checkbox>\n\n      <v-checkbox v-model=\"loading\" label=\"Loading\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-card'\n  const model = ref('default')\n  const actions = ref(false)\n  const loading = ref(false)\n  const subtitle = ref(false)\n  const title = ref(false)\n  const options = ['outlined', 'tonal']\n  const props = computed(() => {\n    return {\n      loading: loading.value || undefined,\n      title: title.value ? 'Card title' : undefined,\n      subtitle: subtitle.value ? 'Subtitle' : undefined,\n      text: '...',\n      variant: ['outlined', 'tonal'].includes(model.value) ? model.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    let str = ''\n\n    if (actions.value) {\n      str += `\n  <v-card-actions>\n    <v-btn>Click me</v-btn>\n  </v-card-actions>\n`\n    }\n\n    return str\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n\n      <v-card v-bind=\"props\">\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n        </template>\n\n        <v-card-actions v-if=\"actions\">\n          <v-btn>Click me</v-btn>\n        </v-card-actions>\n      </v-card>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"title\" label=\"Show title\"></v-checkbox>\n\n      <v-checkbox v-model=\"subtitle\" label=\"Show subtitle\"></v-checkbox>\n\n      <v-checkbox v-model=\"actions\" label=\"Show actions\"></v-checkbox>\n\n      <v-checkbox v-model=\"loading\" label=\"Loading\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-card'\n  const model = ref('default')\n  const actions = ref(false)\n  const loading = ref(false)\n  const subtitle = ref(false)\n  const title = ref(false)\n  const options = ['outlined', 'tonal']\n  const props = computed(() => {\n    return {\n      loading: loading.value || undefined,\n      title: title.value ? 'Card title' : undefined,\n      subtitle: subtitle.value ? 'Subtitle' : undefined,\n      text: '...',\n      variant: ['outlined', 'tonal'].includes(model.value) ? model.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    let str = ''\n\n    if (actions.value) {\n      str += `\n  <v-card-actions>\n    <v-btn>Click me</v-btn>\n  </v-card-actions>\n`\n    }\n\n    return str\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000293",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000294",
    "text": "Component: v-examples\nSection: Misc Card Reveal\nType: code_example\n\n## v-examples - Misc Card Reveal\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-card-text>\n      <div>Word of the Day</div>\n\n      <p class=\"text-h4 font-weight-black\">el·ee·mos·y·nar·y</p>\n\n      <p>adjective</p>\n\n      <div class=\"text-medium-emphasis\">\n        relating to or dependent on charity; charitable; charitable donations. Pertaining to alms.<br>\n        \"an eleemosynary educational institution.\"\n      </div>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn\n        color=\"teal-accent-4\"\n        text=\"Learn More\"\n        variant=\"text\"\n        @click=\"reveal = true\"\n      ></v-btn>\n    </v-card-actions>\n\n    <v-expand-transition>\n      <v-card\n        v-if=\"reveal\"\n        class=\"position-absolute w-100\"\n        height=\"100%\"\n        style=\"bottom: 0;\"\n      >\n        <v-card-text class=\"pb-0\">\n          <p class=\"text-h4\">Origin</p>\n\n          <p class=\"text-medium-emphasis\">\n            late 16th century (as a noun denoting a place where alms were distributed): from medieval Latin eleemosynarius, from late Latin eleemosyna ‘alms’, from Greek eleēmosunē ‘compassion’\n          </p>\n        </v-card-text>\n\n        <v-card-actions class=\"pt-0\">\n          <v-btn\n            color=\"teal-accent-4\"\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"reveal = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-expand-transition>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const reveal = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      reveal: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Card Reveal\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-card-text>\n      <div>Word of the Day</div>\n\n      <p class=\"text-h4 font-weight-black\">el·ee·mos·y·nar·y</p>\n\n      <p>adjective</p>\n\n      <div class=\"text-medium-emphasis\">\n        relating to or dependent on charity; charitable; charitable donations. Pertaining to alms.<br>\n        \"an eleemosynary educational institution.\"\n      </div>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn\n        color=\"teal-accent-4\"\n        text=\"Learn More\"\n        variant=\"text\"\n        @click=\"reveal = true\"\n      ></v-btn>\n    </v-card-actions>\n\n    <v-expand-transition>\n      <v-card\n        v-if=\"reveal\"\n        class=\"position-absolute w-100\"\n        height=\"100%\"\n        style=\"bottom: 0;\"\n      >\n        <v-card-text class=\"pb-0\">\n          <p class=\"text-h4\">Origin</p>\n\n          <p class=\"text-medium-emphasis\">\n            late 16th century (as a noun denoting a place where alms were distributed): from medieval Latin eleemosynarius, from late Latin eleemosyna ‘alms’, from Greek eleēmosunē ‘compassion’\n          </p>\n        </v-card-text>\n\n        <v-card-actions class=\"pt-0\">\n          <v-btn\n            color=\"teal-accent-4\"\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"reveal = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-expand-transition>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const reveal = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      reveal: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Card Reveal",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000294",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000295",
    "text": "Component: v-examples\nSection: Misc Content Wrapping\nType: code_example\n\n## v-examples - Misc Content Wrapping\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"400\">\n    <v-img\n      color=\"surface-variant\"\n      height=\"200\"\n      src=\"https://cdn.vuetifyjs.com/docs/images/cards/purple-flowers.jpg\"\n      cover\n    >\n      <v-toolbar color=\"transparent\">\n        <template v-slot:prepend>\n          <v-btn icon=\"$menu\"></v-btn>\n        </template>\n\n        <v-toolbar-title class=\"text-h6\" text=\"Messages\"></v-toolbar-title>\n\n        <template v-slot:append>\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-toolbar>\n    </v-img>\n\n    <v-card-text>\n      <div class=\"font-weight-bold ms-1 mb-2\">Today</div>\n\n      <v-timeline align=\"start\" density=\"compact\">\n        <v-timeline-item\n          v-for=\"message in messages\"\n          :key=\"message.time\"\n          :dot-color=\"message.color\"\n          size=\"x-small\"\n        >\n          <div class=\"mb-4\">\n            <div class=\"font-weight-normal\">\n              <strong>{{ message.from }}</strong> @{{ message.time }}\n            </div>\n\n            <div>{{ message.message }}</div>\n          </div>\n        </v-timeline-item>\n      </v-timeline>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  const messages = [\n    {\n      from: 'You',\n      message: `Sure, I'll see you later.`,\n      time: '10:42am',\n      color: 'deep-purple-lighten-1',\n    },\n    {\n      from: 'John Doe',\n      message: 'Yeah, sure. Does 1:00pm work?',\n      time: '10:37am',\n      color: 'green',\n    },\n    {\n      from: 'You',\n      message: 'Did you still want to grab lunch today?',\n      time: '9:47am',\n      color: 'deep-purple-lighten-1',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      messages: [\n        {\n          from: 'You',\n          message: `Sure, I'll see you later.`,\n          time: '10:42am',\n          color: 'deep-purple-lighten-1',\n        },\n        {\n          from: 'John Doe',\n          message: 'Yeah, sure. Does 1:00pm work?',\n          time: '10:37am',\n          color: 'green',\n        },\n        {\n          from: 'You',\n          message: 'Did you still want to grab lunch today?',\n          time: '9:47am',\n          color: 'deep-purple-lighten-1',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Content Wrapping\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"400\">\n    <v-img\n      color=\"surface-variant\"\n      height=\"200\"\n      src=\"https://cdn.vuetifyjs.com/docs/images/cards/purple-flowers.jpg\"\n      cover\n    >\n      <v-toolbar color=\"transparent\">\n        <template v-slot:prepend>\n          <v-btn icon=\"$menu\"></v-btn>\n        </template>\n\n        <v-toolbar-title class=\"text-h6\" text=\"Messages\"></v-toolbar-title>\n\n        <template v-slot:append>\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-toolbar>\n    </v-img>\n\n    <v-card-text>\n      <div class=\"font-weight-bold ms-1 mb-2\">Today</div>\n\n      <v-timeline align=\"start\" density=\"compact\">\n        <v-timeline-item\n          v-for=\"message in messages\"\n          :key=\"message.time\"\n          :dot-color=\"message.color\"\n          size=\"x-small\"\n        >\n          <div class=\"mb-4\">\n            <div class=\"font-weight-normal\">\n              <strong>{{ message.from }}</strong> @{{ message.time }}\n            </div>\n\n            <div>{{ message.message }}</div>\n          </div>\n        </v-timeline-item>\n      </v-timeline>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  const messages = [\n    {\n      from: 'You',\n      message: `Sure, I'll see you later.`,\n      time: '10:42am',\n      color: 'deep-purple-lighten-1',\n    },\n    {\n      from: 'John Doe',\n      message: 'Yeah, sure. Does 1:00pm work?',\n      time: '10:37am',\n      color: 'green',\n    },\n    {\n      from: 'You',\n      message: 'Did you still want to grab lunch today?',\n      time: '9:47am',\n      color: 'deep-purple-lighten-1',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      messages: [\n        {\n          from: 'You',\n          message: `Sure, I'll see you later.`,\n          time: '10:42am',\n          color: 'deep-purple-lighten-1',\n        },\n        {\n          from: 'John Doe',\n          message: 'Yeah, sure. Does 1:00pm work?',\n          time: '10:37am',\n          color: 'green',\n        },\n        {\n          from: 'You',\n          message: 'Did you still want to grab lunch today?',\n          time: '9:47am',\n          color: 'deep-purple-lighten-1',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Content Wrapping",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000295",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000296",
    "text": "Component: v-examples\nSection: Misc Custom Actions\nType: code_example\n\n## v-examples - Misc Custom Actions\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-img\n      height=\"200px\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/sunshine.jpg\"\n      cover\n    ></v-img>\n\n    <v-card-title>\n      Top western road trips\n    </v-card-title>\n\n    <v-card-subtitle>\n      1,000 miles of wonder\n    </v-card-subtitle>\n\n    <v-card-actions>\n      <v-btn\n        color=\"orange-lighten-2\"\n        text=\"Explore\"\n      ></v-btn>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        :icon=\"show ? 'mdi-chevron-up' : 'mdi-chevron-down'\"\n        @click=\"show = !show\"\n      ></v-btn>\n    </v-card-actions>\n\n    <v-expand-transition>\n      <div v-show=\"show\">\n        <v-divider></v-divider>\n\n        <v-card-text>\n          I'm a thing. But, like most politicians, he promised more than he could deliver. You won't have time for sleeping, soldier, not with all the bed making you'll be doing. Then we'll go with that data file! Hey, you add a one and two zeros to that or we walk! You're going to do his laundry? I've got to find a way to escape.\n        </v-card-text>\n      </div>\n    </v-expand-transition>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const show = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      show: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Custom Actions\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-img\n      height=\"200px\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/sunshine.jpg\"\n      cover\n    ></v-img>\n\n    <v-card-title>\n      Top western road trips\n    </v-card-title>\n\n    <v-card-subtitle>\n      1,000 miles of wonder\n    </v-card-subtitle>\n\n    <v-card-actions>\n      <v-btn\n        color=\"orange-lighten-2\"\n        text=\"Explore\"\n      ></v-btn>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        :icon=\"show ? 'mdi-chevron-up' : 'mdi-chevron-down'\"\n        @click=\"show = !show\"\n      ></v-btn>\n    </v-card-actions>\n\n    <v-expand-transition>\n      <div v-show=\"show\">\n        <v-divider></v-divider>\n\n        <v-card-text>\n          I'm a thing. But, like most politicians, he promised more than he could deliver. You won't have time for sleeping, soldier, not with all the bed making you'll be doing. Then we'll go with that data file! Hey, you add a one and two zeros to that or we walk! You're going to do his laundry? I've got to find a way to escape.\n        </v-card-text>\n      </div>\n    </v-expand-transition>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const show = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      show: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Custom Actions",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000296",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000297",
    "text": "Component: v-examples\nSection: Misc Earnings Goal\nType: code_example\n\n## v-examples - Misc Earnings Goal\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"500\" border flat>\n    <v-list-item class=\"px-6\" height=\"88\">\n      <template v-slot:prepend>\n        <v-avatar color=\"surface-light\" size=\"32\">🎯</v-avatar>\n      </template>\n\n      <template v-slot:title> Set an earnings goal. </template>\n\n      <template v-slot:append>\n        <v-btn\n          class=\"text-none\"\n          color=\"primary\"\n          text=\"Create goal\"\n          variant=\"text\"\n          slim\n        ></v-btn>\n      </template>\n    </v-list-item>\n\n    <v-divider></v-divider>\n\n    <v-card-text class=\"text-medium-emphasis pa-6\">\n      <div class=\"text-h6 mb-6\">Earn my first $100</div>\n\n      <div class=\"text-h4 font-weight-black mb-4\">0%</div>\n\n      <v-progress-linear\n        bg-color=\"surface-variant\"\n        class=\"mb-6\"\n        color=\"primary\"\n        height=\"10\"\n        model-value=\"2\"\n        rounded=\"pill\"\n      ></v-progress-linear>\n\n      <div>$0 of $100 earned — 7 days left</div>\n    </v-card-text>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Earnings Goal\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"500\" border flat>\n    <v-list-item class=\"px-6\" height=\"88\">\n      <template v-slot:prepend>\n        <v-avatar color=\"surface-light\" size=\"32\">🎯</v-avatar>\n      </template>\n\n      <template v-slot:title> Set an earnings goal. </template>\n\n      <template v-slot:append>\n        <v-btn\n          class=\"text-none\"\n          color=\"primary\"\n          text=\"Create goal\"\n          variant=\"text\"\n          slim\n        ></v-btn>\n      </template>\n    </v-list-item>\n\n    <v-divider></v-divider>\n\n    <v-card-text class=\"text-medium-emphasis pa-6\">\n      <div class=\"text-h6 mb-6\">Earn my first $100</div>\n\n      <div class=\"text-h4 font-weight-black mb-4\">0%</div>\n\n      <v-progress-linear\n        bg-color=\"surface-variant\"\n        class=\"mb-6\"\n        color=\"primary\"\n        height=\"10\"\n        model-value=\"2\"\n        rounded=\"pill\"\n      ></v-progress-linear>\n\n      <div>$0 of $100 earned — 7 days left</div>\n    </v-card-text>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Earnings Goal",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000297",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000298",
    "text": "Component: v-examples\nSection: Misc Grids\nType: code_example\n\n## v-examples - Misc Grids\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-container fluid>\n      <v-row dense>\n        <v-col\n          v-for=\"card in cards\"\n          :key=\"card.title\"\n          :cols=\"card.flex\"\n        >\n          <v-card>\n            <v-img\n              :src=\"card.src\"\n              class=\"align-end\"\n              gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n              height=\"200px\"\n              cover\n            >\n              <v-card-title class=\"text-white\" v-text=\"card.title\"></v-card-title>\n            </v-img>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n\n              <v-btn\n                color=\"medium-emphasis\"\n                icon=\"mdi-heart\"\n                size=\"small\"\n              ></v-btn>\n\n              <v-btn\n                color=\"medium-emphasis\"\n                icon=\"mdi-bookmark\"\n                size=\"small\"\n              ></v-btn>\n\n              <v-btn\n                color=\"medium-emphasis\"\n                icon=\"mdi-share-variant\"\n                size=\"small\"\n              ></v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  const cards = [\n    { title: 'Pre-fab homes', src: 'https://cdn.vuetifyjs.com/images/cards/house.jpg', flex: 12 },\n    { title: 'Favorite road trips', src: 'https://cdn.vuetifyjs.com/images/cards/road.jpg', flex: 6 },\n    { title: 'Best airlines', src: 'https://cdn.vuetifyjs.com/images/cards/plane.jpg', flex: 6 },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      cards: [\n        { title: 'Pre-fab homes', src: 'https://cdn.vuetifyjs.com/images/cards/house.jpg', flex: 12 },\n        { title: 'Favorite road trips', src: 'https://cdn.vuetifyjs.com/images/cards/road.jpg', flex: 6 },\n        { title: 'Best airlines', src: 'https://cdn.vuetifyjs.com/images/cards/plane.jpg', flex: 6 },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Grids\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-container fluid>\n      <v-row dense>\n        <v-col\n          v-for=\"card in cards\"\n          :key=\"card.title\"\n          :cols=\"card.flex\"\n        >\n          <v-card>\n            <v-img\n              :src=\"card.src\"\n              class=\"align-end\"\n              gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n              height=\"200px\"\n              cover\n            >\n              <v-card-title class=\"text-white\" v-text=\"card.title\"></v-card-title>\n            </v-img>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n\n              <v-btn\n                color=\"medium-emphasis\"\n                icon=\"mdi-heart\"\n                size=\"small\"\n              ></v-btn>\n\n              <v-btn\n                color=\"medium-emphasis\"\n                icon=\"mdi-bookmark\"\n                size=\"small\"\n              ></v-btn>\n\n              <v-btn\n                color=\"medium-emphasis\"\n                icon=\"mdi-share-variant\"\n                size=\"small\"\n              ></v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  const cards = [\n    { title: 'Pre-fab homes', src: 'https://cdn.vuetifyjs.com/images/cards/house.jpg', flex: 12 },\n    { title: 'Favorite road trips', src: 'https://cdn.vuetifyjs.com/images/cards/road.jpg', flex: 6 },\n    { title: 'Best airlines', src: 'https://cdn.vuetifyjs.com/images/cards/plane.jpg', flex: 6 },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      cards: [\n        { title: 'Pre-fab homes', src: 'https://cdn.vuetifyjs.com/images/cards/house.jpg', flex: 12 },\n        { title: 'Favorite road trips', src: 'https://cdn.vuetifyjs.com/images/cards/road.jpg', flex: 6 },\n        { title: 'Best airlines', src: 'https://cdn.vuetifyjs.com/images/cards/plane.jpg', flex: 6 },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Grids",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000298",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000299",
    "text": "Component: v-examples\nSection: Misc Horizontal Cards\nType: code_example\n\n## v-examples - Misc Horizontal Cards\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-layout>\n      <v-system-bar color=\"pink-darken-2\">\n        <v-spacer></v-spacer>\n\n        <v-icon>mdi-window-minimize</v-icon>\n\n        <v-icon>mdi-window-maximize</v-icon>\n\n        <v-icon>mdi-close</v-icon>\n      </v-system-bar>\n\n      <v-app-bar color=\"pink\">\n        <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n        <v-toolbar-title>My Music</v-toolbar-title>\n\n        <v-btn icon=\"mdi-magnify\"></v-btn>\n      </v-app-bar>\n\n      <v-main>\n        <v-container>\n          <v-row dense>\n            <v-col cols=\"12\">\n              <v-card color=\"#385F73\">\n                <v-card-title class=\"text-h5\">\n                  Unlimited music now\n                </v-card-title>\n\n                <v-card-subtitle>\n                  Listen to your favorite artists and albums whenever and wherever, online and offline.\n                </v-card-subtitle>\n\n                <v-card-actions>\n                  <v-btn text=\"Listen Now\" variant=\"text\"></v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-col>\n\n            <v-col cols=\"12\">\n              <v-card color=\"#1F7087\">\n                <div class=\"d-flex flex-no-wrap justify-space-between\">\n                  <div>\n                    <v-card-title class=\"text-h5\">\n                      Supermodel\n                    </v-card-title>\n\n                    <v-card-subtitle>Foster the People</v-card-subtitle>\n\n                    <v-card-actions>\n                      <v-btn\n                        class=\"ms-2\"\n                        size=\"small\"\n                        text=\"START RADIO\"\n                        variant=\"outlined\"\n                      ></v-btn>\n                    </v-card-actions>\n                  </div>\n\n                  <v-avatar\n                    class=\"ma-3\"\n                    rounded=\"0\"\n                    size=\"125\"\n                  >\n                    <v-img src=\"https://cdn.vuetifyjs.com/images/cards/foster.jpg\"></v-img>\n                  </v-avatar>\n                </div>\n              </v-card>\n            </v-col>\n\n            <v-col cols=\"12\">\n              <v-card color=\"#952175\">\n                <div class=\"d-flex flex-no-wrap justify-space-between\">\n                  <div>\n                    <v-card-title class=\"text-h5\">\n                      Halcyon Days\n                    </v-card-title>\n\n                    <v-card-subtitle>Ellie Goulding</v-card-subtitle>\n\n                    <v-card-actions>\n                      <v-btn\n                        class=\"ms-2\"\n                        icon=\"mdi-play\"\n                        variant=\"text\"\n                      ></v-btn>\n                    </v-card-actions>\n                  </div>\n\n                  <v-avatar\n                    class=\"ma-3\"\n                    rounded=\"0\"\n                    size=\"125\"\n                  >\n                    <v-img src=\"https://cdn.vuetifyjs.com/images/cards/halcyon.png\"></v-img>\n                  </v-avatar>\n                </div>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Horizontal Cards\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-layout>\n      <v-system-bar color=\"pink-darken-2\">\n        <v-spacer></v-spacer>\n\n        <v-icon>mdi-window-minimize</v-icon>\n\n        <v-icon>mdi-window-maximize</v-icon>\n\n        <v-icon>mdi-close</v-icon>\n      </v-system-bar>\n\n      <v-app-bar color=\"pink\">\n        <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n        <v-toolbar-title>My Music</v-toolbar-title>\n\n        <v-btn icon=\"mdi-magnify\"></v-btn>\n      </v-app-bar>\n\n      <v-main>\n        <v-container>\n          <v-row dense>\n            <v-col cols=\"12\">\n              <v-card color=\"#385F73\">\n                <v-card-title class=\"text-h5\">\n                  Unlimited music now\n                </v-card-title>\n\n                <v-card-subtitle>\n                  Listen to your favorite artists and albums whenever and wherever, online and offline.\n                </v-card-subtitle>\n\n                <v-card-actions>\n                  <v-btn text=\"Listen Now\" variant=\"text\"></v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-col>\n\n            <v-col cols=\"12\">\n              <v-card color=\"#1F7087\">\n                <div class=\"d-flex flex-no-wrap justify-space-between\">\n                  <div>\n                    <v-card-title class=\"text-h5\">\n                      Supermodel\n                    </v-card-title>\n\n                    <v-card-subtitle>Foster the People</v-card-subtitle>\n\n                    <v-card-actions>\n                      <v-btn\n                        class=\"ms-2\"\n                        size=\"small\"\n                        text=\"START RADIO\"\n                        variant=\"outlined\"\n                      ></v-btn>\n                    </v-card-actions>\n                  </div>\n\n                  <v-avatar\n                    class=\"ma-3\"\n                    rounded=\"0\"\n                    size=\"125\"\n                  >\n                    <v-img src=\"https://cdn.vuetifyjs.com/images/cards/foster.jpg\"></v-img>\n                  </v-avatar>\n                </div>\n              </v-card>\n            </v-col>\n\n            <v-col cols=\"12\">\n              <v-card color=\"#952175\">\n                <div class=\"d-flex flex-no-wrap justify-space-between\">\n                  <div>\n                    <v-card-title class=\"text-h5\">\n                      Halcyon Days\n                    </v-card-title>\n\n                    <v-card-subtitle>Ellie Goulding</v-card-subtitle>\n\n                    <v-card-actions>\n                      <v-btn\n                        class=\"ms-2\"\n                        icon=\"mdi-play\"\n                        variant=\"text\"\n                      ></v-btn>\n                    </v-card-actions>\n                  </div>\n\n                  <v-avatar\n                    class=\"ma-3\"\n                    rounded=\"0\"\n                    size=\"125\"\n                  >\n                    <v-img src=\"https://cdn.vuetifyjs.com/images/cards/halcyon.png\"></v-img>\n                  </v-avatar>\n                </div>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Horizontal Cards",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000299",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000300",
    "text": "Component: v-examples\nSection: Misc Information Card\nType: code_example\n\n## v-examples - Misc Information Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-card-text>\n      <div>Word of the Day</div>\n\n      <p class=\"text-h4 font-weight-black\">be•nev•o•lent</p>\n\n      <p>adjective</p>\n\n      <div class=\"text-medium-emphasis\">\n        well meaning and kindly.<br>\n        \"a benevolent smile\"\n      </div>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        text=\"Learn More\"\n        variant=\"text\"\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Information Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-card-text>\n      <div>Word of the Day</div>\n\n      <p class=\"text-h4 font-weight-black\">be•nev•o•lent</p>\n\n      <p>adjective</p>\n\n      <div class=\"text-medium-emphasis\">\n        well meaning and kindly.<br>\n        \"a benevolent smile\"\n      </div>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        text=\"Learn More\"\n        variant=\"text\"\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Information Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000300",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000301",
    "text": "Component: v-examples\nSection: Misc Intermediate\nType: code_example\n\n## v-examples - Misc Intermediate\n\n```vue\n<template>\n  <v-card class=\"d-inline-block mx-auto\">\n    <v-container>\n      <v-row justify=\"space-between\">\n        <v-col cols=\"auto\">\n          <v-img\n            height=\"200\"\n            src=\"https://cdn.vuetifyjs.com/images/cards/store.jpg\"\n            width=\"200\"\n          ></v-img>\n        </v-col>\n\n        <v-col\n          class=\"text-center ps-0\"\n          cols=\"auto\"\n        >\n          <v-row\n            class=\"flex-column ma-0 fill-height\"\n            justify=\"center\"\n          >\n            <v-col class=\"px-0\">\n              <v-btn icon>\n                <v-icon>mdi-heart</v-icon>\n              </v-btn>\n            </v-col>\n\n            <v-col class=\"px-0\">\n              <v-btn icon>\n                <v-icon>mdi-bookmark</v-icon>\n              </v-btn>\n            </v-col>\n\n            <v-col class=\"px-0\">\n              <v-btn icon>\n                <v-icon>mdi-share-variant</v-icon>\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Intermediate\n\n```vue\n<template>\n  <v-card class=\"d-inline-block mx-auto\">\n    <v-container>\n      <v-row justify=\"space-between\">\n        <v-col cols=\"auto\">\n          <v-img\n            height=\"200\"\n            src=\"https://cdn.vuetifyjs.com/images/cards/store.jpg\"\n            width=\"200\"\n          ></v-img>\n        </v-col>\n\n        <v-col\n          class=\"text-center ps-0\"\n          cols=\"auto\"\n        >\n          <v-row\n            class=\"flex-column ma-0 fill-height\"\n            justify=\"center\"\n          >\n            <v-col class=\"px-0\">\n              <v-btn icon>\n                <v-icon>mdi-heart</v-icon>\n              </v-btn>\n            </v-col>\n\n            <v-col class=\"px-0\">\n              <v-btn icon>\n                <v-icon>mdi-bookmark</v-icon>\n              </v-btn>\n            </v-col>\n\n            <v-col class=\"px-0\">\n              <v-btn icon>\n                <v-icon>mdi-share-variant</v-icon>\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Intermediate",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000301",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000302",
    "text": "Component: v-examples\nSection: Misc Media With Text\nType: code_example\n\n## v-examples - Misc Media With Text\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-img\n      class=\"align-end text-white\"\n      height=\"200\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/docks.jpg\"\n      cover\n    >\n      <v-card-title>Top 10 Australian beaches</v-card-title>\n    </v-img>\n\n    <v-card-subtitle class=\"pt-4\">\n      Number 10\n    </v-card-subtitle>\n\n    <v-card-text>\n      <div>Whitehaven Beach</div>\n\n      <div>Whitsunday Island, Whitsunday Islands</div>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn color=\"orange\" text=\"Share\"></v-btn>\n\n      <v-btn color=\"orange\" text=\"Explore\"></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Media With Text\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-img\n      class=\"align-end text-white\"\n      height=\"200\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/docks.jpg\"\n      cover\n    >\n      <v-card-title>Top 10 Australian beaches</v-card-title>\n    </v-img>\n\n    <v-card-subtitle class=\"pt-4\">\n      Number 10\n    </v-card-subtitle>\n\n    <v-card-text>\n      <div>Whitehaven Beach</div>\n\n      <div>Whitsunday Island, Whitsunday Islands</div>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn color=\"orange\" text=\"Share\"></v-btn>\n\n      <v-btn color=\"orange\" text=\"Explore\"></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Media With Text",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000302",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000303",
    "text": "Component: v-examples\nSection: Misc Shopify Funding\nType: code_example\n\n## v-examples - Misc Shopify Funding\n\n```vue\n<template>\n  <v-container>\n    <v-card>\n      <v-card-title class=\"text-overline\">\n        Progress\n\n        <div class=\"text-green-darken-3 text-h3 font-weight-bold\">90%</div>\n\n        <div class=\"text-h6 text-medium-emphasis font-weight-regular\">\n          $2,938.00 remaining\n        </div>\n      </v-card-title>\n      <br>\n      <v-card-text>\n        <div\n          :style=\"`right: calc(${review} - 32px)`\"\n          class=\"position-absolute mt-n8 text-caption text-green-darken-3\"\n        >\n          Eligibility review\n        </div>\n        <v-progress-linear\n          color=\"green-darken-3\"\n          height=\"22\"\n          model-value=\"90\"\n          rounded=\"lg\"\n        >\n          <v-badge\n            :style=\"`right: ${review}`\"\n            class=\"position-absolute\"\n            color=\"white\"\n            dot\n            inline\n          ></v-badge>\n        </v-progress-linear>\n\n        <div class=\"d-flex justify-space-between py-3\">\n          <span class=\"text-green-darken-3 font-weight-medium\">\n            $26,442.00 remitted\n          </span>\n\n          <span class=\"text-medium-emphasis\"> $29,380.00 total </span>\n        </div>\n      </v-card-text>\n\n      <v-divider></v-divider>\n\n      <v-list-item\n        append-icon=\"mdi-chevron-right\"\n        lines=\"two\"\n        subtitle=\"Details and agreement\"\n        link\n      ></v-list-item>\n    </v-card>\n  </v-container>\n</template>\n\n<script setup>\n  const review = '30%'\n</script>\n\n<script>\n  export default {\n    data: () => ({ review: '30%' }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Shopify Funding\n\n```vue\n<template>\n  <v-container>\n    <v-card>\n      <v-card-title class=\"text-overline\">\n        Progress\n\n        <div class=\"text-green-darken-3 text-h3 font-weight-bold\">90%</div>\n\n        <div class=\"text-h6 text-medium-emphasis font-weight-regular\">\n          $2,938.00 remaining\n        </div>\n      </v-card-title>\n      <br>\n      <v-card-text>\n        <div\n          :style=\"`right: calc(${review} - 32px)`\"\n          class=\"position-absolute mt-n8 text-caption text-green-darken-3\"\n        >\n          Eligibility review\n        </div>\n        <v-progress-linear\n          color=\"green-darken-3\"\n          height=\"22\"\n          model-value=\"90\"\n          rounded=\"lg\"\n        >\n          <v-badge\n            :style=\"`right: ${review}`\"\n            class=\"position-absolute\"\n            color=\"white\"\n            dot\n            inline\n          ></v-badge>\n        </v-progress-linear>\n\n        <div class=\"d-flex justify-space-between py-3\">\n          <span class=\"text-green-darken-3 font-weight-medium\">\n            $26,442.00 remitted\n          </span>\n\n          <span class=\"text-medium-emphasis\"> $29,380.00 total </span>\n        </div>\n      </v-card-text>\n\n      <v-divider></v-divider>\n\n      <v-list-item\n        append-icon=\"mdi-chevron-right\"\n        lines=\"two\"\n        subtitle=\"Details and agreement\"\n        link\n      ></v-list-item>\n    </v-card>\n  </v-container>\n</template>\n\n<script setup>\n  const review = '30%'\n</script>\n\n<script>\n  export default {\n    data: () => ({ review: '30%' }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Shopify Funding",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000303",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000304",
    "text": "Component: v-examples\nSection: Misc Twitter Card\nType: code_example\n\n## v-examples - Misc Twitter Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto text-white\"\n    color=\"#26c6da\"\n    max-width=\"400\"\n    prepend-icon=\"mdi-twitter\"\n    title=\"Twitter\"\n  >\n    <template v-slot:prepend>\n      <v-icon size=\"x-large\"></v-icon>\n    </template>\n\n    <v-card-text class=\"text-h5 py-2\">\n      \"Turns out semicolon-less style is easier and safer in TS because most gotcha edge cases are type invalid as well.\"\n    </v-card-text>\n\n    <v-card-actions>\n      <v-list-item class=\"w-100\">\n        <template v-slot:prepend>\n          <v-avatar\n            color=\"grey-darken-3\"\n            image=\"https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortCurly&accessoriesType=Prescription02&hairColor=Black&facialHairType=Blank&clotheType=Hoodie&clotheColor=White&eyeType=Default&eyebrowType=DefaultNatural&mouthType=Default&skinColor=Light\"\n          ></v-avatar>\n        </template>\n\n        <v-list-item-title>Evan You</v-list-item-title>\n\n        <v-list-item-subtitle>Vue Creator</v-list-item-subtitle>\n\n        <template v-slot:append>\n          <div class=\"justify-self-end\">\n            <v-icon class=\"me-1\" icon=\"mdi-heart\"></v-icon>\n            <span class=\"subheading me-2\">256</span>\n            <span class=\"me-1\">·</span>\n            <v-icon class=\"me-1\" icon=\"mdi-share-variant\"></v-icon>\n            <span class=\"subheading\">45</span>\n          </div>\n        </template>\n      </v-list-item>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Twitter Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto text-white\"\n    color=\"#26c6da\"\n    max-width=\"400\"\n    prepend-icon=\"mdi-twitter\"\n    title=\"Twitter\"\n  >\n    <template v-slot:prepend>\n      <v-icon size=\"x-large\"></v-icon>\n    </template>\n\n    <v-card-text class=\"text-h5 py-2\">\n      \"Turns out semicolon-less style is easier and safer in TS because most gotcha edge cases are type invalid as well.\"\n    </v-card-text>\n\n    <v-card-actions>\n      <v-list-item class=\"w-100\">\n        <template v-slot:prepend>\n          <v-avatar\n            color=\"grey-darken-3\"\n            image=\"https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortCurly&accessoriesType=Prescription02&hairColor=Black&facialHairType=Blank&clotheType=Hoodie&clotheColor=White&eyeType=Default&eyebrowType=DefaultNatural&mouthType=Default&skinColor=Light\"\n          ></v-avatar>\n        </template>\n\n        <v-list-item-title>Evan You</v-list-item-title>\n\n        <v-list-item-subtitle>Vue Creator</v-list-item-subtitle>\n\n        <template v-slot:append>\n          <div class=\"justify-self-end\">\n            <v-icon class=\"me-1\" icon=\"mdi-heart\"></v-icon>\n            <span class=\"subheading me-2\">256</span>\n            <span class=\"me-1\">·</span>\n            <v-icon class=\"me-1\" icon=\"mdi-share-variant\"></v-icon>\n            <span class=\"subheading\">45</span>\n          </div>\n        </template>\n      </v-list-item>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Twitter Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000304",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000305",
    "text": "Component: v-examples\nSection: Misc Weather Card\nType: code_example\n\n## v-examples - Misc Weather Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"368\"\n  >\n    <v-card-item title=\"Florida\">\n      <template v-slot:subtitle>\n        <v-icon\n          class=\"me-1 pb-1\"\n          color=\"error\"\n          icon=\"mdi-alert\"\n          size=\"18\"\n        ></v-icon>\n\n        Extreme Weather Alert\n      </template>\n    </v-card-item>\n\n    <v-card-text class=\"py-0\">\n      <v-row align=\"center\" no-gutters>\n        <v-col\n          class=\"text-h2\"\n          cols=\"6\"\n        >\n          64&deg;F\n        </v-col>\n\n        <v-col class=\"text-right\" cols=\"6\">\n          <v-icon\n            color=\"error\"\n            icon=\"mdi-weather-hurricane\"\n            size=\"88\"\n          ></v-icon>\n        </v-col>\n      </v-row>\n    </v-card-text>\n\n    <div class=\"d-flex py-3 justify-space-between\">\n      <v-list-item\n        density=\"compact\"\n        prepend-icon=\"mdi-weather-windy\"\n      >\n        <v-list-item-subtitle>123 km/h</v-list-item-subtitle>\n      </v-list-item>\n\n      <v-list-item\n        density=\"compact\"\n        prepend-icon=\"mdi-weather-pouring\"\n      >\n        <v-list-item-subtitle>48%</v-list-item-subtitle>\n      </v-list-item>\n    </div>\n\n    <v-expand-transition>\n      <div v-if=\"expand\">\n        <div class=\"py-2\">\n          <v-slider\n            v-model=\"time\"\n            :max=\"6\"\n            :step=\"1\"\n            :ticks=\"labels\"\n            class=\"mx-4\"\n            color=\"primary\"\n            density=\"compact\"\n            show-ticks=\"always\"\n            thumb-size=\"10\"\n            hide-details\n          ></v-slider>\n        </div>\n\n        <v-list class=\"bg-transparent\">\n          <v-list-item\n            v-for=\"item in forecast\"\n            :key=\"item.day\"\n            :append-icon=\"item.icon\"\n            :subtitle=\"item.temp\"\n            :title=\"item.day\"\n          >\n          </v-list-item>\n        </v-list>\n      </div>\n    </v-expand-transition>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-btn\n        :text=\"!expand ? 'Full Report' : 'Hide Report'\"\n        @click=\"expand = !expand\"\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const labels = { 0: 'SU', 1: 'MO', 2: 'TU', 3: 'WED', 4: 'TH', 5: 'FR', 6: 'SA' }\n  const forecast = [\n    { day: 'Tuesday', icon: 'mdi-white-balance-sunny', temp: '24\\u00B0/12\\u00B0' },\n    { day: 'Wednesday', icon: 'mdi-white-balance-sunny', temp: '22\\u00B0/14\\u00B0' },\n    { day: 'Thursday', icon: 'mdi-cloud', temp: '25\\u00B0/15\\u00B0' },\n  ]\n\n  const expand = ref(false)\n  const time = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      labels: { 0: 'SU', 1: 'MO', 2: 'TU', 3: 'WED', 4: 'TH', 5: 'FR', 6: 'SA' },\n      expand: false,\n      time: 0,\n      forecast: [\n        { day: 'Tuesday', icon: 'mdi-white-balance-sunny', temp: '24\\xB0/12\\xB0' },\n        { day: 'Wednesday', icon: 'mdi-white-balance-sunny', temp: '22\\xB0/14\\xB0' },\n        { day: 'Thursday', icon: 'mdi-cloud', temp: '25\\xB0/15\\xB0' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Weather Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"368\"\n  >\n    <v-card-item title=\"Florida\">\n      <template v-slot:subtitle>\n        <v-icon\n          class=\"me-1 pb-1\"\n          color=\"error\"\n          icon=\"mdi-alert\"\n          size=\"18\"\n        ></v-icon>\n\n        Extreme Weather Alert\n      </template>\n    </v-card-item>\n\n    <v-card-text class=\"py-0\">\n      <v-row align=\"center\" no-gutters>\n        <v-col\n          class=\"text-h2\"\n          cols=\"6\"\n        >\n          64&deg;F\n        </v-col>\n\n        <v-col class=\"text-right\" cols=\"6\">\n          <v-icon\n            color=\"error\"\n            icon=\"mdi-weather-hurricane\"\n            size=\"88\"\n          ></v-icon>\n        </v-col>\n      </v-row>\n    </v-card-text>\n\n    <div class=\"d-flex py-3 justify-space-between\">\n      <v-list-item\n        density=\"compact\"\n        prepend-icon=\"mdi-weather-windy\"\n      >\n        <v-list-item-subtitle>123 km/h</v-list-item-subtitle>\n      </v-list-item>\n\n      <v-list-item\n        density=\"compact\"\n        prepend-icon=\"mdi-weather-pouring\"\n      >\n        <v-list-item-subtitle>48%</v-list-item-subtitle>\n      </v-list-item>\n    </div>\n\n    <v-expand-transition>\n      <div v-if=\"expand\">\n        <div class=\"py-2\">\n          <v-slider\n            v-model=\"time\"\n            :max=\"6\"\n            :step=\"1\"\n            :ticks=\"labels\"\n            class=\"mx-4\"\n            color=\"primary\"\n            density=\"compact\"\n            show-ticks=\"always\"\n            thumb-size=\"10\"\n            hide-details\n          ></v-slider>\n        </div>\n\n        <v-list class=\"bg-transparent\">\n          <v-list-item\n            v-for=\"item in forecast\"\n            :key=\"item.day\"\n            :append-icon=\"item.icon\"\n            :subtitle=\"item.temp\"\n            :title=\"item.day\"\n          >\n          </v-list-item>\n        </v-list>\n      </div>\n    </v-expand-transition>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-btn\n        :text=\"!expand ? 'Full Report' : 'Hide Report'\"\n        @click=\"expand = !expand\"\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const labels = { 0: 'SU', 1: 'MO', 2: 'TU', 3: 'WED', 4: 'TH', 5: 'FR', 6: 'SA' }\n  const forecast = [\n    { day: 'Tuesday', icon: 'mdi-white-balance-sunny', temp: '24\\u00B0/12\\u00B0' },\n    { day: 'Wednesday', icon: 'mdi-white-balance-sunny', temp: '22\\u00B0/14\\u00B0' },\n    { day: 'Thursday', icon: 'mdi-cloud', temp: '25\\u00B0/15\\u00B0' },\n  ]\n\n  const expand = ref(false)\n  const time = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      labels: { 0: 'SU', 1: 'MO', 2: 'TU', 3: 'WED', 4: 'TH', 5: 'FR', 6: 'SA' },\n      expand: false,\n      time: 0,\n      forecast: [\n        { day: 'Tuesday', icon: 'mdi-white-balance-sunny', temp: '24\\xB0/12\\xB0' },\n        { day: 'Wednesday', icon: 'mdi-white-balance-sunny', temp: '22\\xB0/14\\xB0' },\n        { day: 'Thursday', icon: 'mdi-cloud', temp: '25\\xB0/15\\xB0' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Weather Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000305",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000306",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-col cols=\"auto\">\n      <v-radio-group\n        v-model=\"color\"\n        hide-details\n        inline\n      >\n        <v-radio\n          color=\"indigo\"\n          label=\"indigo\"\n          value=\"indigo\"\n        ></v-radio>\n\n        <v-radio\n          color=\"indigo-darken-3\"\n          label=\"indigo-darken-3\"\n          value=\"indigo-darken-3\"\n        ></v-radio>\n\n        <v-radio\n          color=\"primary\"\n          label=\"primary\"\n          value=\"primary\"\n        ></v-radio>\n\n        <v-radio\n          color=\"secondary\"\n          label=\"secondary\"\n          value=\"secondary\"\n        ></v-radio>\n      </v-radio-group>\n    </v-col>\n\n    <v-col\n      v-for=\"(variant, i) in variants\"\n      :key=\"i\"\n      cols=\"12\"\n      md=\"6\"\n    >\n      <v-card\n        :color=\"color\"\n        :variant=\"variant\"\n        class=\"mx-auto\"\n      >\n        <v-card-item>\n          <div>\n            <div class=\"text-overline mb-1\">\n              {{ variant }}\n            </div>\n            <div class=\"text-h6 mb-1\">\n              Headline\n            </div>\n            <div class=\"text-caption\">Greyhound divisely hello coldly fonwderfully</div>\n          </div>\n        </v-card-item>\n\n        <v-card-actions>\n          <v-btn>\n            Button\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const variants = ['elevated', 'flat', 'tonal', 'outlined']\n  const color = ref('indigo')\n</script>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-col cols=\"auto\">\n      <v-radio-group\n        v-model=\"color\"\n        hide-details\n        inline\n      >\n        <v-radio\n          color=\"indigo\"\n          label=\"indigo\"\n          value=\"indigo\"\n        ></v-radio>\n\n        <v-radio\n          color=\"indigo-darken-3\"\n          label=\"indigo-darken-3\"\n          value=\"indigo-darken-3\"\n        ></v-radio>\n\n        <v-radio\n          color=\"primary\"\n          label=\"primary\"\n          value=\"primary\"\n        ></v-radio>\n\n        <v-radio\n          color=\"secondary\"\n          label=\"secondary\"\n          value=\"secondary\"\n        ></v-radio>\n      </v-radio-group>\n    </v-col>\n\n    <v-col\n      v-for=\"(variant, i) in variants\"\n      :key=\"i\"\n      cols=\"12\"\n      md=\"6\"\n    >\n      <v-card\n        :color=\"color\"\n        :variant=\"variant\"\n        class=\"mx-auto\"\n      >\n        <v-card-item>\n          <div>\n            <div class=\"text-overline mb-1\">\n              {{ variant }}\n            </div>\n            <div class=\"text-h6 mb-1\">\n              Headline\n            </div>\n            <div class=\"text-caption\">Greyhound divisely hello coldly fonwderfully</div>\n          </div>\n        </v-card-item>\n\n        <v-card-actions>\n          <v-btn>\n            Button\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const variants = ['elevated', 'flat', 'tonal', 'outlined']\n  const color = ref('indigo')\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000306",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000307",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    subtitle=\"The card stays disabled\"\n    title=\"Disabled card\"\n    disabled\n    link\n  ></v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    subtitle=\"The card stays disabled\"\n    title=\"Disabled card\"\n    disabled\n    link\n  ></v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000307",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000308",
    "text": "Component: v-examples\nSection: Prop Elevated\nType: code_example\n\n## v-examples - Prop Elevated\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    variant=\"elevated\"\n  >\n    <v-card-item>\n      <div>\n        <div class=\"text-overline mb-1\">\n          OVERLINE\n        </div>\n\n        <div class=\"text-h6 mb-1\">\n          Headline\n        </div>\n\n        <div class=\"text-caption\">Greyhound divisely hello coldly fonwderfully</div>\n      </div>\n    </v-card-item>\n\n    <v-card-actions>\n      <v-btn text=\"Button\" variant=\"outlined\">\n\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Elevated\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    variant=\"elevated\"\n  >\n    <v-card-item>\n      <div>\n        <div class=\"text-overline mb-1\">\n          OVERLINE\n        </div>\n\n        <div class=\"text-h6 mb-1\">\n          Headline\n        </div>\n\n        <div class=\"text-caption\">Greyhound divisely hello coldly fonwderfully</div>\n      </div>\n    </v-card-item>\n\n    <v-card-actions>\n      <v-btn text=\"Button\" variant=\"outlined\">\n\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Elevated",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000308",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000309",
    "text": "Component: v-examples\nSection: Prop Elevation\nType: code_example\n\n## v-examples - Prop Elevation\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto my-8\"\n    elevation=\"16\"\n    max-width=\"344\"\n  >\n    <v-card-item>\n      <v-card-title>\n        Card title\n      </v-card-title>\n\n      <v-card-subtitle>\n        Card subtitle secondary text\n      </v-card-subtitle>\n    </v-card-item>\n\n    <v-card-text>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </v-card-text>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Elevation\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto my-8\"\n    elevation=\"16\"\n    max-width=\"344\"\n  >\n    <v-card-item>\n      <v-card-title>\n        Card title\n      </v-card-title>\n\n      <v-card-subtitle>\n        Card subtitle secondary text\n      </v-card-subtitle>\n    </v-card-item>\n\n    <v-card-text>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </v-card-text>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Elevation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000309",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000310",
    "text": "Component: v-examples\nSection: Prop Hover\nType: code_example\n\n## v-examples - Prop Hover\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    hover\n  >\n    <v-card-item>\n      <v-card-title>\n        Card title\n      </v-card-title>\n\n      <v-card-subtitle>\n        Card subtitle secondary text\n      </v-card-subtitle>\n    </v-card-item>\n\n    <v-card-text>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </v-card-text>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Hover\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    hover\n  >\n    <v-card-item>\n      <v-card-title>\n        Card title\n      </v-card-title>\n\n      <v-card-subtitle>\n        Card subtitle secondary text\n      </v-card-subtitle>\n    </v-card-item>\n\n    <v-card-text>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </v-card-text>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hover",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000310",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000311",
    "text": "Component: v-examples\nSection: Prop Href\nType: code_example\n\n## v-examples - Prop Href\n\n```vue\n<template>\n  <v-card\n    append-icon=\"mdi-open-in-new\"\n    class=\"mx-auto\"\n    href=\"https://github.com/vuetifyjs/vuetify/\"\n    max-width=\"344\"\n    prepend-icon=\"mdi-github\"\n    rel=\"noopener\"\n    subtitle=\"Check out the official repository\"\n    target=\"_blank\"\n    title=\"Vuetify on GitHub\"\n  ></v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Href\n\n```vue\n<template>\n  <v-card\n    append-icon=\"mdi-open-in-new\"\n    class=\"mx-auto\"\n    href=\"https://github.com/vuetifyjs/vuetify/\"\n    max-width=\"344\"\n    prepend-icon=\"mdi-github\"\n    rel=\"noopener\"\n    subtitle=\"Check out the official repository\"\n    target=\"_blank\"\n    title=\"Vuetify on GitHub\"\n  ></v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Href",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000311",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000312",
    "text": "Component: v-examples\nSection: Prop Image\nType: code_example\n\n## v-examples - Prop Image\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"surface-variant\"\n    image=\"https://cdn.vuetifyjs.com/docs/images/cards/dark-beach.jpg\"\n    max-width=\"340\"\n    subtitle=\"Take a walk down the beach\"\n    title=\"Evening sunset\"\n  >\n    <template v-slot:actions>\n      <v-btn\n        append-icon=\"mdi-chevron-right\"\n        color=\"red-lighten-2\"\n        text=\"Book Activity\"\n        variant=\"outlined\"\n        block\n      ></v-btn>\n    </template>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Image\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"surface-variant\"\n    image=\"https://cdn.vuetifyjs.com/docs/images/cards/dark-beach.jpg\"\n    max-width=\"340\"\n    subtitle=\"Take a walk down the beach\"\n    title=\"Evening sunset\"\n  >\n    <template v-slot:actions>\n      <v-btn\n        append-icon=\"mdi-chevron-right\"\n        color=\"red-lighten-2\"\n        text=\"Book Activity\"\n        variant=\"outlined\"\n        block\n      ></v-btn>\n    </template>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Image",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000312",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000313",
    "text": "Component: v-examples\nSection: Prop Link\nType: code_example\n\n## v-examples - Prop Link\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    subtitle=\"Same looks, no anchor\"\n    title=\"Hover and click me\"\n    link\n  ></v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Link\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    subtitle=\"Same looks, no anchor\"\n    title=\"Hover and click me\"\n    link\n  ></v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Link",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000313",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000314",
    "text": "Component: v-examples\nSection: Prop Loading\nType: code_example\n\n## v-examples - Prop Loading\n\n```vue\n<template>\n  <v-card\n    :disabled=\"loading\"\n    :loading=\"loading\"\n    class=\"mx-auto my-12\"\n    max-width=\"374\"\n  >\n    <template v-slot:loader=\"{ isActive }\">\n      <v-progress-linear\n        :active=\"isActive\"\n        color=\"deep-purple\"\n        height=\"4\"\n        indeterminate\n      ></v-progress-linear>\n    </template>\n\n    <v-img\n      height=\"250\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/cooking.png\"\n      cover\n    ></v-img>\n\n    <v-card-item>\n      <v-card-title>Cafe Badilico</v-card-title>\n\n      <v-card-subtitle>\n        <span class=\"me-1\">Local Favorite</span>\n\n        <v-icon\n          color=\"error\"\n          icon=\"mdi-fire-circle\"\n          size=\"small\"\n        ></v-icon>\n      </v-card-subtitle>\n    </v-card-item>\n\n    <v-card-text>\n      <v-row\n        align=\"center\"\n        class=\"mx-0\"\n      >\n        <v-rating\n          :model-value=\"4.5\"\n          color=\"amber\"\n          density=\"compact\"\n          size=\"small\"\n          half-increments\n          readonly\n        ></v-rating>\n\n        <div class=\"text-grey ms-4\">\n          4.5 (413)\n        </div>\n      </v-row>\n\n      <div class=\"my-4 text-subtitle-1\">\n        $ • Italian, Cafe\n      </div>\n\n      <div>Small plates, salads & sandwiches - an intimate setting with 12 indoor seats plus patio seating.</div>\n    </v-card-text>\n\n    <v-divider class=\"mx-4 mb-1\"></v-divider>\n\n    <v-card-title>Tonight's availability</v-card-title>\n\n    <div class=\"px-4 mb-2\">\n      <v-chip-group v-model=\"selection\" selected-class=\"bg-deep-purple-lighten-2\">\n        <v-chip>5:30PM</v-chip>\n\n        <v-chip>7:30PM</v-chip>\n\n        <v-chip>8:00PM</v-chip>\n\n        <v-chip>9:00PM</v-chip>\n      </v-chip-group>\n    </div>\n\n    <v-card-actions>\n      <v-btn\n        color=\"deep-purple-lighten-2\"\n        text=\"Reserve\"\n        block\n        border\n        @click=\"reserve\"\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const loading = ref(false)\n  const selection = ref(1)\n  function reserve () {\n    loading.value = true\n    setTimeout(() => (loading.value = false), 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loading: false,\n      selection: 1,\n    }),\n\n    methods: {\n      reserve () {\n        this.loading = true\n\n        setTimeout(() => (this.loading = false), 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Loading\n\n```vue\n<template>\n  <v-card\n    :disabled=\"loading\"\n    :loading=\"loading\"\n    class=\"mx-auto my-12\"\n    max-width=\"374\"\n  >\n    <template v-slot:loader=\"{ isActive }\">\n      <v-progress-linear\n        :active=\"isActive\"\n        color=\"deep-purple\"\n        height=\"4\"\n        indeterminate\n      ></v-progress-linear>\n    </template>\n\n    <v-img\n      height=\"250\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/cooking.png\"\n      cover\n    ></v-img>\n\n    <v-card-item>\n      <v-card-title>Cafe Badilico</v-card-title>\n\n      <v-card-subtitle>\n        <span class=\"me-1\">Local Favorite</span>\n\n        <v-icon\n          color=\"error\"\n          icon=\"mdi-fire-circle\"\n          size=\"small\"\n        ></v-icon>\n      </v-card-subtitle>\n    </v-card-item>\n\n    <v-card-text>\n      <v-row\n        align=\"center\"\n        class=\"mx-0\"\n      >\n        <v-rating\n          :model-value=\"4.5\"\n          color=\"amber\"\n          density=\"compact\"\n          size=\"small\"\n          half-increments\n          readonly\n        ></v-rating>\n\n        <div class=\"text-grey ms-4\">\n          4.5 (413)\n        </div>\n      </v-row>\n\n      <div class=\"my-4 text-subtitle-1\">\n        $ • Italian, Cafe\n      </div>\n\n      <div>Small plates, salads & sandwiches - an intimate setting with 12 indoor seats plus patio seating.</div>\n    </v-card-text>\n\n    <v-divider class=\"mx-4 mb-1\"></v-divider>\n\n    <v-card-title>Tonight's availability</v-card-title>\n\n    <div class=\"px-4 mb-2\">\n      <v-chip-group v-model=\"selection\" selected-class=\"bg-deep-purple-lighten-2\">\n        <v-chip>5:30PM</v-chip>\n\n        <v-chip>7:30PM</v-chip>\n\n        <v-chip>8:00PM</v-chip>\n\n        <v-chip>9:00PM</v-chip>\n      </v-chip-group>\n    </div>\n\n    <v-card-actions>\n      <v-btn\n        color=\"deep-purple-lighten-2\"\n        text=\"Reserve\"\n        block\n        border\n        @click=\"reserve\"\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const loading = ref(false)\n  const selection = ref(1)\n  function reserve () {\n    loading.value = true\n    setTimeout(() => (loading.value = false), 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loading: false,\n      selection: 1,\n    }),\n\n    methods: {\n      reserve () {\n        this.loading = true\n\n        setTimeout(() => (this.loading = false), 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Loading",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000314",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000315",
    "text": "Component: v-examples\nSection: Prop Outlined\nType: code_example\n\n## v-examples - Prop Outlined\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    variant=\"outlined\"\n  >\n    <v-card-item>\n      <div>\n        <div class=\"text-overline mb-1\">\n          OVERLINE\n        </div>\n\n        <div class=\"text-h6 mb-1\">\n          Headline\n        </div>\n\n        <div class=\"text-caption\">Greyhound divisely hello coldly fonwderfully</div>\n      </div>\n    </v-card-item>\n\n    <v-card-actions>\n      <v-btn text=\"Button\" variant=\"outlined\"></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Outlined\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    variant=\"outlined\"\n  >\n    <v-card-item>\n      <div>\n        <div class=\"text-overline mb-1\">\n          OVERLINE\n        </div>\n\n        <div class=\"text-h6 mb-1\">\n          Headline\n        </div>\n\n        <div class=\"text-caption\">Greyhound divisely hello coldly fonwderfully</div>\n      </div>\n    </v-card-item>\n\n    <v-card-actions>\n      <v-btn text=\"Button\" variant=\"outlined\"></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Outlined",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000315",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000316",
    "text": "Component: v-examples\nSection: Prop Variant\nType: code_example\n\n## v-examples - Prop Variant\n\n```vue\n<template>\n  <v-row dense>\n    <v-col\n      v-for=\"(variant, i) in variants\"\n      :key=\"i\"\n      cols=\"12\"\n      md=\"4\"\n    >\n      <v-card\n        :variant=\"variant\"\n        class=\"mx-auto\"\n        color=\"surface-variant\"\n        max-width=\"344\"\n        subtitle=\"Greyhound divisely hello coldly fonwderfully\"\n        title=\"Headline\"\n      >\n        <template v-slot:actions>\n          <v-btn text=\"Button\"></v-btn>\n        </template>\n      </v-card>\n\n      <div class=\"text-center text-caption\">{{ variant }}</div>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  const variants = ['elevated', 'flat', 'tonal', 'outlined', 'text', 'plain']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      variants: ['elevated', 'flat', 'tonal', 'outlined', 'text', 'plain'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Variant\n\n```vue\n<template>\n  <v-row dense>\n    <v-col\n      v-for=\"(variant, i) in variants\"\n      :key=\"i\"\n      cols=\"12\"\n      md=\"4\"\n    >\n      <v-card\n        :variant=\"variant\"\n        class=\"mx-auto\"\n        color=\"surface-variant\"\n        max-width=\"344\"\n        subtitle=\"Greyhound divisely hello coldly fonwderfully\"\n        title=\"Headline\"\n      >\n        <template v-slot:actions>\n          <v-btn text=\"Button\"></v-btn>\n        </template>\n      </v-card>\n\n      <div class=\"text-center text-caption\">{{ variant }}</div>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  const variants = ['elevated', 'flat', 'tonal', 'outlined', 'text', 'plain']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      variants: ['elevated', 'flat', 'tonal', 'outlined', 'text', 'plain'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Variant",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000316",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000317",
    "text": "Component: v-examples\nSection: Slot Prepend Append\nType: code_example\n\n## v-examples - Slot Prepend Append\n\n```vue\n<template>\n  <v-row align=\"center\" justify=\"center\" dense>\n    <v-col cols=\"12\" md=\"6\">\n      <v-card\n        append-icon=\"mdi-check\"\n        class=\"mx-auto\"\n        prepend-icon=\"mdi-account\"\n        subtitle=\"prepend-icon and append-icon\"\n        title=\"Icons\"\n      >\n        <v-card-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</v-card-text>\n      </v-card>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"6\">\n      <v-card\n        class=\"mx-auto\"\n        subtitle=\"prepend and append\"\n        title=\"Icons\"\n      >\n        <template v-slot:prepend>\n          <v-icon color=\"primary\" icon=\"mdi-account\"></v-icon>\n        </template>\n        <template v-slot:append>\n          <v-icon color=\"success\" icon=\"mdi-check\"></v-icon>\n        </template>\n        <v-card-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</v-card-text>\n      </v-card>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"6\">\n      <v-card\n        append-avatar=\"https://cdn.vuetifyjs.com/images/john.jpg\"\n        class=\"mx-auto\"\n        prepend-avatar=\"https://cdn.vuetifyjs.com/images/logos/v-alt.svg\"\n        subtitle=\"prepend-avatar and append-avatar\"\n        title=\"Avatars\"\n      >\n        <v-card-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</v-card-text>\n      </v-card>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"6\">\n      <v-card\n        class=\"mx-auto\"\n        subtitle=\"prepend and append\"\n        title=\"Avatars\"\n      >\n        <template v-slot:prepend>\n          <v-avatar color=\"blue-darken-2\">\n            <v-icon icon=\"mdi-alarm\"></v-icon>\n          </v-avatar>\n        </template>\n        <template v-slot:append>\n          <v-avatar size=\"24\">\n            <v-img\n              alt=\"John\"\n              src=\"https://cdn.vuetifyjs.com/images/john.png\"\n            ></v-img>\n          </v-avatar>\n        </template>\n        <v-card-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</v-card-text>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Prepend Append\n\n```vue\n<template>\n  <v-row align=\"center\" justify=\"center\" dense>\n    <v-col cols=\"12\" md=\"6\">\n      <v-card\n        append-icon=\"mdi-check\"\n        class=\"mx-auto\"\n        prepend-icon=\"mdi-account\"\n        subtitle=\"prepend-icon and append-icon\"\n        title=\"Icons\"\n      >\n        <v-card-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</v-card-text>\n      </v-card>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"6\">\n      <v-card\n        class=\"mx-auto\"\n        subtitle=\"prepend and append\"\n        title=\"Icons\"\n      >\n        <template v-slot:prepend>\n          <v-icon color=\"primary\" icon=\"mdi-account\"></v-icon>\n        </template>\n        <template v-slot:append>\n          <v-icon color=\"success\" icon=\"mdi-check\"></v-icon>\n        </template>\n        <v-card-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</v-card-text>\n      </v-card>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"6\">\n      <v-card\n        append-avatar=\"https://cdn.vuetifyjs.com/images/john.jpg\"\n        class=\"mx-auto\"\n        prepend-avatar=\"https://cdn.vuetifyjs.com/images/logos/v-alt.svg\"\n        subtitle=\"prepend-avatar and append-avatar\"\n        title=\"Avatars\"\n      >\n        <v-card-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</v-card-text>\n      </v-card>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"6\">\n      <v-card\n        class=\"mx-auto\"\n        subtitle=\"prepend and append\"\n        title=\"Avatars\"\n      >\n        <template v-slot:prepend>\n          <v-avatar color=\"blue-darken-2\">\n            <v-icon icon=\"mdi-alarm\"></v-icon>\n          </v-avatar>\n        </template>\n        <template v-slot:append>\n          <v-avatar size=\"24\">\n            <v-img\n              alt=\"John\"\n              src=\"https://cdn.vuetifyjs.com/images/john.png\"\n            ></v-img>\n          </v-avatar>\n        </template>\n        <v-card-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</v-card-text>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Prepend Append",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000317",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000318",
    "text": "Component: v-carousels\nType: component_overview\n\n# v-carousels\n\nThe `v-carousel` component is used to display large numbers of visual content on a rotating timer.",
    "display_content": "# v-carousels\n\nThe `v-carousel` component is used to display large numbers of visual content on a rotating timer.",
    "metadata": {
      "component": "v-carousels",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000318",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000319",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-carousel` component expands upon `v-window` by providing additional features targeted at displaying images.",
    "display_content": "# v-usage\n\nThe `v-carousel` component expands upon `v-window` by providing additional features targeted at displaying images.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000319",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000320",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-carousel](/api/v-carousel/) | Primary component | | [v-carousel-item](/api/v-carousel-item/) | Sub-component used for displaying the `v-carousel` state |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-carousel](/api/v-carousel/) | Primary component | | [v-carousel-item](/api/v-carousel-item/) | Sub-component used for displaying the `v-carousel` state |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000320",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000321",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nUse any available icon as your carousel's slide delimiter.\n\nAvailable sections: Custom delimiters, Cycle, Hide controls, Customized arrows, Hide delimiters, Progress, Model, Prop Custom Icons, Prop Custom Transition, Prop Cycle, Prop Hide Controls, Prop Hide Delimiters, Prop Model, Prop Progress, Slots Next Prev, Usage",
    "display_content": "# v-examples\n\nUse any available icon as your carousel's slide delimiter.\n\nAvailable sections: Custom delimiters, Cycle, Hide controls, Customized arrows, Hide delimiters, Progress, Model, Prop Custom Icons, Prop Custom Transition, Prop Cycle, Prop Hide Controls, Prop Hide Delimiters, Prop Model, Prop Progress, Slots Next Prev, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000321",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000322",
    "text": "Component: v-examples\nSection: Custom delimiters\nType: documentation\n\n## v-examples - Custom delimiters\n\nUse any available icon as your carousel's slide delimiter.\n\n<ExamplesExample file=\"v-carousel/prop-custom-icons\" />\n\n<!-- #### Custom transition\n\nThe `v-carousel-item` component can have its **transition/reverse-transition** changed.\n\n<ExamplesExample file=\"v-carousel/prop-custom-transition\" /> -->",
    "display_content": "## v-examples - Custom delimiters\n\nUse any available icon as your carousel's slide delimiter.\n\n<ExamplesExample file=\"v-carousel/prop-custom-icons\" />\n\n<!-- #### Custom transition\n\nThe `v-carousel-item` component can have its **transition/reverse-transition** changed.\n\n<ExamplesExample file=\"v-carousel/prop-custom-transition\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom delimiters",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000322",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000323",
    "text": "Component: v-examples\nSection: Cycle\nType: documentation\n\n## v-examples - Cycle\n\nWith the **cycle** prop you can have your slides automatically transition to the next available every 6s (default).\n\n<ExamplesExample file=\"v-carousel/prop-cycle\" />",
    "display_content": "## v-examples - Cycle\n\nWith the **cycle** prop you can have your slides automatically transition to the next available every 6s (default).\n\n<ExamplesExample file=\"v-carousel/prop-cycle\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Cycle",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000323",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000324",
    "text": "Component: v-examples\nSection: Hide controls\nType: documentation\n\n## v-examples - Hide controls\n\nYou can hide the carousel navigation controls with `:show-arrows=\"false\"`. Or you can make them only appear on hover with `show-arrows=\"hover\"`.\n\n<ExamplesExample file=\"v-carousel/prop-hide-controls\" />",
    "display_content": "## v-examples - Hide controls\n\nYou can hide the carousel navigation controls with `:show-arrows=\"false\"`. Or you can make them only appear on hover with `show-arrows=\"hover\"`.\n\n<ExamplesExample file=\"v-carousel/prop-hide-controls\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Hide controls",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000324",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000325",
    "text": "Component: v-examples\nSection: Customized arrows\nType: documentation\n\n## v-examples - Customized arrows\n\nArrows can be customized by using **prev** and **next** slots.\n\n<ExamplesExample file=\"v-carousel/slots-next-prev\" />",
    "display_content": "## v-examples - Customized arrows\n\nArrows can be customized by using **prev** and **next** slots.\n\n<ExamplesExample file=\"v-carousel/slots-next-prev\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Customized arrows",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000325",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000326",
    "text": "Component: v-examples\nSection: Hide delimiters\nType: documentation\n\n## v-examples - Hide delimiters\n\nYou can hide the bottom controls with **hide-delimiters** prop.\n\n<ExamplesExample file=\"v-carousel/prop-hide-delimiters\" />",
    "display_content": "## v-examples - Hide delimiters\n\nYou can hide the bottom controls with **hide-delimiters** prop.\n\n<ExamplesExample file=\"v-carousel/prop-hide-delimiters\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Hide delimiters",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000326",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000327",
    "text": "Component: v-examples\nSection: Progress\nType: documentation\n\n## v-examples - Progress\n\nYou can show a linear progress bar with the **progress** prop. It will indicate how far into the cycle the carousel currently is.\n\n<ExamplesExample file=\"v-carousel/prop-progress\" />",
    "display_content": "## v-examples - Progress\n\nYou can show a linear progress bar with the **progress** prop. It will indicate how far into the cycle the carousel currently is.\n\n<ExamplesExample file=\"v-carousel/prop-progress\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Progress",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000327",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000328",
    "text": "Component: v-examples\nSection: Model\nType: documentation\n\n## v-examples - Model\n\nYou can control carousel with **v-model**.\n\n<ExamplesExample file=\"v-carousel/prop-model\" />",
    "display_content": "## v-examples - Model\n\nYou can control carousel with **v-model**.\n\n<ExamplesExample file=\"v-carousel/prop-model\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Model",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000328",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000329",
    "text": "Component: v-examples\nSection: Prop Custom Icons\nType: code_example\n\n## v-examples - Prop Custom Icons\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    elevation=\"24\"\n    max-width=\"444\"\n  >\n    <v-carousel\n      :continuous=\"false\"\n      :show-arrows=\"false\"\n      delimiter-icon=\"mdi-square\"\n      height=\"300\"\n      hide-delimiter-background\n    >\n      <v-carousel-item\n        v-for=\"(slide, i) in slides\"\n        :key=\"i\"\n      >\n        <v-sheet\n          :color=\"colors[i]\"\n          height=\"100%\"\n          tile\n        >\n          <div class=\"d-flex fill-height justify-center align-center\">\n            <div class=\"text-h2\">\n              {{ slide }} Slide\n            </div>\n          </div>\n        </v-sheet>\n      </v-carousel-item>\n    </v-carousel>\n  </v-card>\n</template>\n\n<script setup>\n  const colors = [\n    'green',\n    'secondary',\n    'yellow darken-4',\n    'red lighten-2',\n    'orange darken-1',\n  ]\n  const slides = [\n    'First',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        colors: [\n          'green',\n          'secondary',\n          'yellow darken-4',\n          'red lighten-2',\n          'orange darken-1',\n        ],\n        slides: [\n          'First',\n          'Second',\n          'Third',\n          'Fourth',\n          'Fifth',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Custom Icons\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    elevation=\"24\"\n    max-width=\"444\"\n  >\n    <v-carousel\n      :continuous=\"false\"\n      :show-arrows=\"false\"\n      delimiter-icon=\"mdi-square\"\n      height=\"300\"\n      hide-delimiter-background\n    >\n      <v-carousel-item\n        v-for=\"(slide, i) in slides\"\n        :key=\"i\"\n      >\n        <v-sheet\n          :color=\"colors[i]\"\n          height=\"100%\"\n          tile\n        >\n          <div class=\"d-flex fill-height justify-center align-center\">\n            <div class=\"text-h2\">\n              {{ slide }} Slide\n            </div>\n          </div>\n        </v-sheet>\n      </v-carousel-item>\n    </v-carousel>\n  </v-card>\n</template>\n\n<script setup>\n  const colors = [\n    'green',\n    'secondary',\n    'yellow darken-4',\n    'red lighten-2',\n    'orange darken-1',\n  ]\n  const slides = [\n    'First',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        colors: [\n          'green',\n          'secondary',\n          'yellow darken-4',\n          'red lighten-2',\n          'orange darken-1',\n        ],\n        slides: [\n          'First',\n          'Second',\n          'Third',\n          'Fourth',\n          'Fifth',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Custom Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000329",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000330",
    "text": "Component: v-examples\nSection: Prop Custom Transition\nType: code_example\n\n## v-examples - Prop Custom Transition\n\n```vue\n<template>\n  <v-carousel>\n    <v-carousel-item\n      v-for=\"(item,i) in items\"\n      :key=\"i\"\n      :src=\"item.src\"\n      reverse-transition=\"fade-transition\"\n      transition=\"fade-transition\"\n      cover\n    ></v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const items = [\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        items: [\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Custom Transition\n\n```vue\n<template>\n  <v-carousel>\n    <v-carousel-item\n      v-for=\"(item,i) in items\"\n      :key=\"i\"\n      :src=\"item.src\"\n      reverse-transition=\"fade-transition\"\n      transition=\"fade-transition\"\n      cover\n    ></v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const items = [\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        items: [\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Custom Transition",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000330",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000331",
    "text": "Component: v-examples\nSection: Prop Cycle\nType: code_example\n\n## v-examples - Prop Cycle\n\n```vue\n<template>\n  <v-carousel\n    height=\"400\"\n    show-arrows=\"hover\"\n    cycle\n    hide-delimiter-background\n  >\n    <v-carousel-item\n      v-for=\"(slide, i) in slides\"\n      :key=\"i\"\n    >\n      <v-sheet\n        :color=\"colors[i]\"\n        height=\"100%\"\n      >\n        <div class=\"d-flex fill-height justify-center align-center\">\n          <div class=\"text-h2\">\n            {{ slide }} Slide\n          </div>\n        </div>\n      </v-sheet>\n    </v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const colors = [\n    'indigo',\n    'warning',\n    'pink darken-2',\n    'red lighten-1',\n    'deep-purple accent-4',\n  ]\n  const slides = [\n    'First',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        colors: [\n          'indigo',\n          'warning',\n          'pink darken-2',\n          'red lighten-1',\n          'deep-purple accent-4',\n        ],\n        slides: [\n          'First',\n          'Second',\n          'Third',\n          'Fourth',\n          'Fifth',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Cycle\n\n```vue\n<template>\n  <v-carousel\n    height=\"400\"\n    show-arrows=\"hover\"\n    cycle\n    hide-delimiter-background\n  >\n    <v-carousel-item\n      v-for=\"(slide, i) in slides\"\n      :key=\"i\"\n    >\n      <v-sheet\n        :color=\"colors[i]\"\n        height=\"100%\"\n      >\n        <div class=\"d-flex fill-height justify-center align-center\">\n          <div class=\"text-h2\">\n            {{ slide }} Slide\n          </div>\n        </div>\n      </v-sheet>\n    </v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const colors = [\n    'indigo',\n    'warning',\n    'pink darken-2',\n    'red lighten-1',\n    'deep-purple accent-4',\n  ]\n  const slides = [\n    'First',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        colors: [\n          'indigo',\n          'warning',\n          'pink darken-2',\n          'red lighten-1',\n          'deep-purple accent-4',\n        ],\n        slides: [\n          'First',\n          'Second',\n          'Third',\n          'Fourth',\n          'Fifth',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Cycle",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000331",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000332",
    "text": "Component: v-examples\nSection: Prop Hide Controls\nType: code_example\n\n## v-examples - Prop Hide Controls\n\n```vue\n<template>\n  <v-carousel :show-arrows=\"false\">\n    <v-carousel-item\n      v-for=\"(item,i) in items\"\n      :key=\"i\"\n      :src=\"item.src\"\n      cover\n    ></v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const items = [\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        items: [\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Hide Controls\n\n```vue\n<template>\n  <v-carousel :show-arrows=\"false\">\n    <v-carousel-item\n      v-for=\"(item,i) in items\"\n      :key=\"i\"\n      :src=\"item.src\"\n      cover\n    ></v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const items = [\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        items: [\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hide Controls",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000332",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000333",
    "text": "Component: v-examples\nSection: Prop Hide Delimiters\nType: code_example\n\n## v-examples - Prop Hide Delimiters\n\n```vue\n<template>\n  <v-carousel hide-delimiters>\n    <v-carousel-item\n      v-for=\"(item,i) in items\"\n      :key=\"i\"\n      :src=\"item.src\"\n      cover\n    ></v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const items = [\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        items: [\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Hide Delimiters\n\n```vue\n<template>\n  <v-carousel hide-delimiters>\n    <v-carousel-item\n      v-for=\"(item,i) in items\"\n      :key=\"i\"\n      :src=\"item.src\"\n      cover\n    ></v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const items = [\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n    },\n    {\n      src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        items: [\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\n          },\n          {\n            src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hide Delimiters",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000333",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000334",
    "text": "Component: v-examples\nSection: Prop Model\nType: code_example\n\n## v-examples - Prop Model\n\n```vue\n<template>\n  <div>\n    <div class=\"d-flex justify-space-around align-center py-4\">\n      <v-btn\n        icon=\"mdi-minus\"\n        variant=\"text\"\n        @click=\"model = Math.max(model - 1, 0)\"\n      ></v-btn>\n      {{ model }}\n      <v-btn\n        icon=\"mdi-plus\"\n        variant=\"text\"\n        @click=\"model = Math.min(model + 1, 4)\"\n      ></v-btn>\n    </div>\n    <v-carousel v-model=\"model\">\n      <v-carousel-item\n        v-for=\"(color, i) in colors\"\n        :key=\"color\"\n        :value=\"i\"\n      >\n        <v-sheet\n          :color=\"color\"\n          height=\"100%\"\n          tile\n        >\n          <div class=\"d-flex fill-height justify-center align-center\">\n            <div class=\"text-h2\">\n              Slide {{ i + 1 }}\n            </div>\n          </div>\n        </v-sheet>\n      </v-carousel-item>\n    </v-carousel>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const colors = [\n    'primary',\n    'secondary',\n    'yellow darken-2',\n    'red',\n    'orange',\n  ]\n\n  const model = ref(0)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        colors: [\n          'primary',\n          'secondary',\n          'yellow darken-2',\n          'red',\n          'orange',\n        ],\n        model: 0,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Model\n\n```vue\n<template>\n  <div>\n    <div class=\"d-flex justify-space-around align-center py-4\">\n      <v-btn\n        icon=\"mdi-minus\"\n        variant=\"text\"\n        @click=\"model = Math.max(model - 1, 0)\"\n      ></v-btn>\n      {{ model }}\n      <v-btn\n        icon=\"mdi-plus\"\n        variant=\"text\"\n        @click=\"model = Math.min(model + 1, 4)\"\n      ></v-btn>\n    </div>\n    <v-carousel v-model=\"model\">\n      <v-carousel-item\n        v-for=\"(color, i) in colors\"\n        :key=\"color\"\n        :value=\"i\"\n      >\n        <v-sheet\n          :color=\"color\"\n          height=\"100%\"\n          tile\n        >\n          <div class=\"d-flex fill-height justify-center align-center\">\n            <div class=\"text-h2\">\n              Slide {{ i + 1 }}\n            </div>\n          </div>\n        </v-sheet>\n      </v-carousel-item>\n    </v-carousel>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const colors = [\n    'primary',\n    'secondary',\n    'yellow darken-2',\n    'red',\n    'orange',\n  ]\n\n  const model = ref(0)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        colors: [\n          'primary',\n          'secondary',\n          'yellow darken-2',\n          'red',\n          'orange',\n        ],\n        model: 0,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Model",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000334",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000335",
    "text": "Component: v-examples\nSection: Prop Progress\nType: code_example\n\n## v-examples - Prop Progress\n\n```vue\n<template>\n  <v-carousel\n    height=\"400\"\n    progress=\"primary\"\n    hide-delimiters\n  >\n    <v-carousel-item\n      v-for=\"(slide, i) in slides\"\n      :key=\"i\"\n    >\n      <v-sheet\n        height=\"100%\"\n      >\n        <div class=\"d-flex fill-height justify-center align-center\">\n          <div class=\"text-h2\">\n            {{ slide }} Slide\n          </div>\n        </div>\n      </v-sheet>\n    </v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const slides = [\n    'First',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        slides: [\n          'First',\n          'Second',\n          'Third',\n          'Fourth',\n          'Fifth',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Progress\n\n```vue\n<template>\n  <v-carousel\n    height=\"400\"\n    progress=\"primary\"\n    hide-delimiters\n  >\n    <v-carousel-item\n      v-for=\"(slide, i) in slides\"\n      :key=\"i\"\n    >\n      <v-sheet\n        height=\"100%\"\n      >\n        <div class=\"d-flex fill-height justify-center align-center\">\n          <div class=\"text-h2\">\n            {{ slide }} Slide\n          </div>\n        </div>\n      </v-sheet>\n    </v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const slides = [\n    'First',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        slides: [\n          'First',\n          'Second',\n          'Third',\n          'Fourth',\n          'Fifth',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Progress",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000335",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000336",
    "text": "Component: v-examples\nSection: Slots Next Prev\nType: code_example\n\n## v-examples - Slots Next Prev\n\n```vue\n<template>\n  <v-carousel\n    height=\"400\"\n    hide-delimiter-background\n    show-arrows\n  >\n    <template v-slot:prev=\"{ props }\">\n      <v-btn\n        color=\"success\"\n        variant=\"elevated\"\n        @click=\"props.onClick\"\n      >Previous slide</v-btn>\n    </template>\n    <template v-slot:next=\"{ props }\">\n      <v-btn\n        color=\"info\"\n        variant=\"elevated\"\n        @click=\"props.onClick\"\n      >Next slide</v-btn>\n    </template>\n    <v-carousel-item\n      v-for=\"(slide, i) in slides\"\n      :key=\"i\"\n    >\n      <v-sheet\n        :color=\"colors[i]\"\n        height=\"100%\"\n      >\n        <div class=\"d-flex fill-height justify-center align-center\">\n          <div class=\"text-h2\">\n            {{ slide }} Slide\n          </div>\n        </div>\n      </v-sheet>\n    </v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const colors = [\n    'indigo',\n    'warning',\n    'pink darken-2',\n    'red lighten-1',\n    'deep-purple accent-4',\n  ]\n  const slides = [\n    'First',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        colors: [\n          'indigo',\n          'warning',\n          'pink darken-2',\n          'red lighten-1',\n          'deep-purple accent-4',\n        ],\n        slides: [\n          'First',\n          'Second',\n          'Third',\n          'Fourth',\n          'Fifth',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slots Next Prev\n\n```vue\n<template>\n  <v-carousel\n    height=\"400\"\n    hide-delimiter-background\n    show-arrows\n  >\n    <template v-slot:prev=\"{ props }\">\n      <v-btn\n        color=\"success\"\n        variant=\"elevated\"\n        @click=\"props.onClick\"\n      >Previous slide</v-btn>\n    </template>\n    <template v-slot:next=\"{ props }\">\n      <v-btn\n        color=\"info\"\n        variant=\"elevated\"\n        @click=\"props.onClick\"\n      >Next slide</v-btn>\n    </template>\n    <v-carousel-item\n      v-for=\"(slide, i) in slides\"\n      :key=\"i\"\n    >\n      <v-sheet\n        :color=\"colors[i]\"\n        height=\"100%\"\n      >\n        <div class=\"d-flex fill-height justify-center align-center\">\n          <div class=\"text-h2\">\n            {{ slide }} Slide\n          </div>\n        </div>\n      </v-sheet>\n    </v-carousel-item>\n  </v-carousel>\n</template>\n\n<script setup>\n  const colors = [\n    'indigo',\n    'warning',\n    'pink darken-2',\n    'red lighten-1',\n    'deep-purple accent-4',\n  ]\n  const slides = [\n    'First',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        colors: [\n          'indigo',\n          'warning',\n          'pink darken-2',\n          'red lighten-1',\n          'deep-purple accent-4',\n        ],\n        slides: [\n          'First',\n          'Second',\n          'Third',\n          'Fourth',\n          'Fifth',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slots Next Prev",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000336",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000337",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-carousel v-bind=\"props\">\n        <v-carousel-item\n          src=\"https://cdn.vuetifyjs.com/images/cards/docks.jpg\"\n          cover\n        ></v-carousel-item>\n\n        <v-carousel-item\n          src=\"https://cdn.vuetifyjs.com/images/cards/hotel.jpg\"\n          cover\n        ></v-carousel-item>\n\n        <v-carousel-item\n          src=\"https://cdn.vuetifyjs.com/images/cards/sunshine.jpg\"\n          cover\n        ></v-carousel-item>\n      </v-carousel>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-carousel'\n  const model = ref('default')\n  const options = ['Hide delimiters', 'Show arrows on hover']\n  const props = computed(() => {\n    return {\n      'hide-delimiters': model.value === 'Hide delimiters' || undefined,\n      'show-arrows': model.value === 'Show arrows on hover' ? 'hover' : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-carousel-item\n    src=\"https://cdn.vuetifyjs.com/images/cards/docks.jpg\"\n    cover\n  ></v-carousel-item>\n\n  <v-carousel-item\n    src=\"https://cdn.vuetifyjs.com/images/cards/hotel.jpg\"\n    cover\n  ></v-carousel-item>\n\n  <v-carousel-item\n    src=\"https://cdn.vuetifyjs.com/images/cards/sunshine.jpg\"\n    cover\n  ></v-carousel-item>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-carousel v-bind=\"props\">\n        <v-carousel-item\n          src=\"https://cdn.vuetifyjs.com/images/cards/docks.jpg\"\n          cover\n        ></v-carousel-item>\n\n        <v-carousel-item\n          src=\"https://cdn.vuetifyjs.com/images/cards/hotel.jpg\"\n          cover\n        ></v-carousel-item>\n\n        <v-carousel-item\n          src=\"https://cdn.vuetifyjs.com/images/cards/sunshine.jpg\"\n          cover\n        ></v-carousel-item>\n      </v-carousel>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-carousel'\n  const model = ref('default')\n  const options = ['Hide delimiters', 'Show arrows on hover']\n  const props = computed(() => {\n    return {\n      'hide-delimiters': model.value === 'Hide delimiters' || undefined,\n      'show-arrows': model.value === 'Show arrows on hover' ? 'hover' : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-carousel-item\n    src=\"https://cdn.vuetifyjs.com/images/cards/docks.jpg\"\n    cover\n  ></v-carousel-item>\n\n  <v-carousel-item\n    src=\"https://cdn.vuetifyjs.com/images/cards/hotel.jpg\"\n    cover\n  ></v-carousel-item>\n\n  <v-carousel-item\n    src=\"https://cdn.vuetifyjs.com/images/cards/sunshine.jpg\"\n    cover\n  ></v-carousel-item>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000337",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000338",
    "text": "Component: v-checkboxes\nType: component_overview\n\n# v-checkboxes\n\nThe `v-checkbox` component provides users the ability to choose between two distinct values. These are very similar to a switch and can be used in complex forms and checklists.",
    "display_content": "# v-checkboxes\n\nThe `v-checkbox` component provides users the ability to choose between two distinct values. These are very similar to a switch and can be used in complex forms and checklists.",
    "metadata": {
      "component": "v-checkboxes",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000338",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000339",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nA `v-checkbox` in its simplest form provides a toggle between 2 values.",
    "display_content": "# v-usage\n\nA `v-checkbox` in its simplest form provides a toggle between 2 values.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000339",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000340",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-checkbox](/api/v-checkbox/) | Primary component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-checkbox](/api/v-checkbox/) | Primary component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000340",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000341",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nCheckboxes can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\nAvailable sections: Colors, Model as array, Model as boolean, States, Label slot, Inline text-field",
    "display_content": "# v-examples\n\nCheckboxes can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\nAvailable sections: Colors, Model as array, Model as boolean, States, Label slot, Inline text-field",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000341",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000342",
    "text": "Component: v-examples\nSection: Colors\nType: documentation\n\n## v-examples - Colors\n\nCheckboxes can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\n<ExamplesExample file=\"v-checkbox/prop-colors\" />",
    "display_content": "## v-examples - Colors\n\nCheckboxes can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\n<ExamplesExample file=\"v-checkbox/prop-colors\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000342",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000343",
    "text": "Component: v-examples\nSection: Model as array\nType: documentation\n\n## v-examples - Model as array\n\nMultiple `v-checkbox`'s can share the same **v-model** by using an array.\n\n<ExamplesExample file=\"v-checkbox/prop-model-as-array\" />",
    "display_content": "## v-examples - Model as array\n\nMultiple `v-checkbox`'s can share the same **v-model** by using an array.\n\n<ExamplesExample file=\"v-checkbox/prop-model-as-array\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Model as array",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000343",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000344",
    "text": "Component: v-examples\nSection: Model as boolean\nType: documentation\n\n## v-examples - Model as boolean\n\nA single `v-checkbox` will have a boolean value as its **value**.\n\n<ExamplesExample file=\"v-checkbox/prop-model-as-boolean\" />",
    "display_content": "## v-examples - Model as boolean\n\nA single `v-checkbox` will have a boolean value as its **value**.\n\n<ExamplesExample file=\"v-checkbox/prop-model-as-boolean\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Model as boolean",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000344",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000345",
    "text": "Component: v-examples\nSection: States\nType: documentation\n\n## v-examples - States\n\n`v-checkbox` can have different states such as **default**, **disabled**, and **indeterminate**.\n\n<ExamplesExample file=\"v-checkbox/prop-states\" />",
    "display_content": "## v-examples - States\n\n`v-checkbox` can have different states such as **default**, **disabled**, and **indeterminate**.\n\n<ExamplesExample file=\"v-checkbox/prop-states\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "States",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000345",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000346",
    "text": "Component: v-examples\nSection: Label slot\nType: slots_reference\n\n## v-examples - Label slot\n\nCheckbox labels can be defined in `label` slot - that will allow to use HTML content.\n\n<ExamplesExample file=\"v-checkbox/slot-label\" />",
    "display_content": "## v-examples - Label slot\n\nCheckbox labels can be defined in `label` slot - that will allow to use HTML content.\n\n<ExamplesExample file=\"v-checkbox/slot-label\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Label slot",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000346",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000347",
    "text": "Component: v-examples\nSection: Inline text-field\nType: documentation\n\n## v-examples - Inline text-field\n\nIf you need to place checkboxes in line with other components, you can use the `v-checkbox-btn` component.\n\nThis component renders just checkbox, without the trapping of a form input such as validation, a label, and messages.\n\n<ExamplesExample file=\"v-checkbox/misc-inline-textfield\" />",
    "display_content": "## v-examples - Inline text-field\n\nIf you need to place checkboxes in line with other components, you can use the `v-checkbox-btn` component.\n\nThis component renders just checkbox, without the trapping of a form input such as validation, a label, and messages.\n\n<ExamplesExample file=\"v-checkbox/misc-inline-textfield\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Inline text-field",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000347",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000348",
    "text": "Component: v-chips\nType: component_overview\n\n# v-chips\n\nThe `v-chip` component is used to convey small pieces of information. Using the `close` property, the chip becomes interactive, allowing user interaction. This component is used by the [v-chip-group](/components/chip-groups) for advanced selection options.",
    "display_content": "# v-chips\n\nThe `v-chip` component is used to convey small pieces of information. Using the `close` property, the chip becomes interactive, allowing user interaction. This component is used by the [v-chip-group](/components/chip-groups) for advanced selection options.",
    "metadata": {
      "component": "v-chips",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000348",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000349",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nChips come in the following variations: closeable, filter, outlined, pill. The default slot of `v-chip` will also accept avatars and icons alongside text.",
    "display_content": "# v-usage\n\nChips come in the following variations: closeable, filter, outlined, pill. The default slot of `v-chip` will also accept avatars and icons alongside text.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000349",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000350",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-chip](/api/v-chip/) | Primary component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-chip](/api/v-chip/) | Primary component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000350",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000351",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-chip` component is used to convey small pieces of information. Using the `close` property, the chip becomes interactive, allowing user interaction. This component is used by the [v-chip-group](/components/chip-groups) for advanced selection options.\n\nAvailable sections: Props, Closable, Color and variants, Size and density, Draggable, Label, No ripple, Outlined, Icon",
    "display_content": "# v-guide\n\nThe `v-chip` component is used to convey small pieces of information. Using the `close` property, the chip becomes interactive, allowing user interaction. This component is used by the [v-chip-group](/components/chip-groups) for advanced selection options.\n\nAvailable sections: Props, Closable, Color and variants, Size and density, Draggable, Label, No ripple, Outlined, Icon",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000351",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000352",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nSimilar to other components such as [v-btn](/components/buttons/) and [v-list](/components/lists/), the `v-chip` component has a large selection of props for customizing the appearance.",
    "display_content": "## v-guide - Props\n\nSimilar to other components such as [v-btn](/components/buttons/) and [v-list](/components/lists/), the `v-chip` component has a large selection of props for customizing the appearance.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000352",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000353",
    "text": "Component: v-guide\nSection: Closable\nType: documentation\n\n## v-guide - Closable\n\nClosable chips can be controlled with a v-model. You can also listen to the `click:close` event if you want to know when a chip has been closed.\n\n<ExamplesExample file=\"v-chip/prop-closable\" />",
    "display_content": "## v-guide - Closable\n\nClosable chips can be controlled with a v-model. You can also listen to the `click:close` event if you want to know when a chip has been closed.\n\n<ExamplesExample file=\"v-chip/prop-closable\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Closable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000353",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000354",
    "text": "Component: v-guide\nSection: Color and variants\nType: documentation\n\n## v-guide - Color and variants\n\nAny color from the Material Design palette can be used to change a chips color. <ExamplesExample file=\"v-chip/prop-colored\" />\n\nThe **variant** prop gives you easy access to several different button styles. Available variants are: **elevated**, **flat**, **tonal** (default), **outlined**, **text**, and **plain**.",
    "display_content": "## v-guide - Color and variants\n\nAny color from the Material Design palette can be used to change a chips color. <ExamplesExample file=\"v-chip/prop-colored\" />\n\nThe **variant** prop gives you easy access to several different button styles. Available variants are: **elevated**, **flat**, **tonal** (default), **outlined**, **text**, and **plain**.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Color and variants",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000354",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000355",
    "text": "Component: v-guide\nSection: Color and variants\nType: documentation\n\n## v-guide - Color and variants\n\n| Value        | Example                                                  | Description                                                     |\n|--------------|----------------------------------------------------------|-----------------------------------------------------------------|\n| **elevated** | <v-chip color=\"primary\" variant=\"elevated\">Chip</v-chip> | Elevates the chip with a shadow                               |\n| **flat**     | <v-chip color=\"primary\" variant=\"flat\">Chip</v-chip>     | Removes chip shadow                                           |\n| **tonal**    | <v-chip color=\"primary\" variant=\"tonal\">Chip</v-chip>    | Background color is a lowered opacity of the current text color |\n| **outlined** | <v-chip color=\"primary\" variant=\"outlined\">Chip</v-chip> | Applies a thin border with the current text color               |\n| **text**     | <v-chip color=\"primary\" variant=\"text\">Chip</v-chip>     | Removes the background and removes shadow                       |\n| **plain**    | <v-chip color=\"primary\" variant=\"plain\">Chip</v-chip>    | Removes the background and lowers the opacity until hovered     |",
    "display_content": "## v-guide - Color and variants\n\n| Value        | Example                                                  | Description                                                     |\n|--------------|----------------------------------------------------------|-----------------------------------------------------------------|\n| **elevated** | <v-chip color=\"primary\" variant=\"elevated\">Chip</v-chip> | Elevates the chip with a shadow                               |\n| **flat**     | <v-chip color=\"primary\" variant=\"flat\">Chip</v-chip>     | Removes chip shadow                                           |\n| **tonal**    | <v-chip color=\"primary\" variant=\"tonal\">Chip</v-chip>    | Background color is a lowered opacity of the current text color |\n| **outlined** | <v-chip color=\"primary\" variant=\"outlined\">Chip</v-chip> | Applies a thin border with the current text color               |\n| **text**     | <v-chip color=\"primary\" variant=\"text\">Chip</v-chip>     | Removes the background and removes shadow                       |\n| **plain**    | <v-chip color=\"primary\" variant=\"plain\">Chip</v-chip>    | Removes the background and lowers the opacity until hovered     |",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Color and variants",
      "content_type": "documentation",
      "chunk_index": 1,
      "chunk_id": "vuetify_chunk_000355",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000356",
    "text": "Component: v-guide\nSection: Size and density\nType: documentation\n\n## v-guide - Size and density\n\nChips can have various sizes from `x-small` to `x-large`. `density` is used to adjust the vertical spacing without affecting width or font size.\n\n<ExamplesExample file=\"v-chip/prop-sizes\" />",
    "display_content": "## v-guide - Size and density\n\nChips can have various sizes from `x-small` to `x-large`. `density` is used to adjust the vertical spacing without affecting width or font size.\n\n<ExamplesExample file=\"v-chip/prop-sizes\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Size and density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000356",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000357",
    "text": "Component: v-guide\nSection: Draggable\nType: documentation\n\n## v-guide - Draggable\n\n`draggable` `v-chip` component can be dragged by mouse.\n\n<ExamplesExample file=\"v-chip/prop-draggable\" />",
    "display_content": "## v-guide - Draggable\n\n`draggable` `v-chip` component can be dragged by mouse.\n\n<ExamplesExample file=\"v-chip/prop-draggable\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Draggable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000357",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000358",
    "text": "Component: v-guide\nSection: Label\nType: documentation\n\n## v-guide - Label\n\nLabel chips use the `v-card` border-radius.\n\n<ExamplesExample file=\"v-chip/prop-label\" />",
    "display_content": "## v-guide - Label\n\nLabel chips use the `v-card` border-radius.\n\n<ExamplesExample file=\"v-chip/prop-label\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Label",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000358",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000359",
    "text": "Component: v-guide\nSection: No ripple\nType: documentation\n\n## v-guide - No ripple\n\n`v-chip` can be rendered without ripple if `ripple` prop is set to `false`.\n\n<ExamplesExample file=\"v-chip/prop-no-ripple\" />",
    "display_content": "## v-guide - No ripple\n\n`v-chip` can be rendered without ripple if `ripple` prop is set to `false`.\n\n<ExamplesExample file=\"v-chip/prop-no-ripple\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "No ripple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000359",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000360",
    "text": "Component: v-guide\nSection: Outlined\nType: documentation\n\n## v-guide - Outlined\n\nOutlined chips inherit their border color from the current text color.\n\n<ExamplesExample file=\"v-chip/prop-outlined\" />",
    "display_content": "## v-guide - Outlined\n\nOutlined chips inherit their border color from the current text color.\n\n<ExamplesExample file=\"v-chip/prop-outlined\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Outlined",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000360",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000361",
    "text": "Component: v-guide\nSection: Icon\nType: documentation\n\n## v-guide - Icon\n\nChips can use text or any icon available in the Material Icons font library.\n\n<ExamplesExample file=\"v-chip/slot-icon\" />",
    "display_content": "## v-guide - Icon\n\nChips can use text or any icon available in the Material Icons font library.\n\n<ExamplesExample file=\"v-chip/slot-icon\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000361",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000362",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-chip` component.\n\nAvailable sections: Action chips, Custom list, Expandable, Filtering, In selects, Event Action Chips, Usage, Misc Custom List, Misc Expandable, Misc Filtering, Misc In Selects, Prop Closable, Prop Colored, Prop Draggable, Prop Filter, Prop Label, Prop No Ripple, Prop Outlined, Prop Sizes, Slot Icon",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-chip` component.\n\nAvailable sections: Action chips, Custom list, Expandable, Filtering, In selects, Event Action Chips, Usage, Misc Custom List, Misc Expandable, Misc Filtering, Misc In Selects, Prop Closable, Prop Colored, Prop Draggable, Prop Filter, Prop Label, Prop No Ripple, Prop Outlined, Prop Sizes, Slot Icon",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000362",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000363",
    "text": "Component: v-examples\nSection: Action chips\nType: documentation\n\n## v-examples - Action chips\n\nChips can be used as actionable items. Provided with a _click_ event, the chip becomes interactive and can invoke methods.\n\n<ExamplesExample file=\"v-chip/event-action-chips\" />",
    "display_content": "## v-examples - Action chips\n\nChips can be used as actionable items. Provided with a _click_ event, the chip becomes interactive and can invoke methods.\n\n<ExamplesExample file=\"v-chip/event-action-chips\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Action chips",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000363",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000364",
    "text": "Component: v-examples\nSection: Custom list\nType: documentation\n\n## v-examples - Custom list\n\nIn this example we opt to use a customized list instead of [v-autocomplete](/components/autocompletes). This allows us to always display the options available while still providing the same functionality of search and selection.\n\n<ExamplesExample file=\"v-chip/misc-custom-list\" />",
    "display_content": "## v-examples - Custom list\n\nIn this example we opt to use a customized list instead of [v-autocomplete](/components/autocompletes). This allows us to always display the options available while still providing the same functionality of search and selection.\n\n<ExamplesExample file=\"v-chip/misc-custom-list\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom list",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000364",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000365",
    "text": "Component: v-examples\nSection: Expandable\nType: documentation\n\n## v-examples - Expandable\n\nChips can be combined with `v-menu` to enable a specific set of actions for a chip.\n\n<ExamplesExample file=\"v-chip/misc-expandable\" />",
    "display_content": "## v-examples - Expandable\n\nChips can be combined with `v-menu` to enable a specific set of actions for a chip.\n\n<ExamplesExample file=\"v-chip/misc-expandable\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Expandable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000365",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000366",
    "text": "Component: v-examples\nSection: Filtering\nType: documentation\n\n## v-examples - Filtering\n\nChips are great for providing supplementary actions to a particular task. In this instance, we are searching a list of items and collecting a subset of information to display available keywords.\n\n<ExamplesExample file=\"v-chip/misc-filtering\" />",
    "display_content": "## v-examples - Filtering\n\nChips are great for providing supplementary actions to a particular task. In this instance, we are searching a list of items and collecting a subset of information to display available keywords.\n\n<ExamplesExample file=\"v-chip/misc-filtering\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Filtering",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000366",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000367",
    "text": "Component: v-examples\nSection: In selects\nType: documentation\n\n## v-examples - In selects\n\nSelects can use chips to display the selected data. Try adding your own tags below.\n\n<ExamplesExample file=\"v-chip/misc-in-selects\" />",
    "display_content": "## v-examples - In selects\n\nSelects can use chips to display the selected data. Try adding your own tags below.\n\n<ExamplesExample file=\"v-chip/misc-in-selects\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "In selects",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000367",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000368",
    "text": "Component: v-examples\nSection: Event Action Chips\nType: code_example\n\n## v-examples - Event Action Chips\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"450\"\n  >\n    <v-img\n      :aspect-ratio=\"16/9\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/house.jpg\"\n      cover\n    >\n    </v-img>\n    <v-card-title class=\"flex-column align-start\">\n      <div class=\"text-h4 mb-2\">\n        Welcome Home...\n      </div>\n      <div class=\"text-h6 font-weight-regular text-grey\">\n        Monday, 12:30 PM, Mostly Sunny\n      </div>\n      <div class=\"d-flex align-center\">\n        <v-avatar\n          class=\"me-4\"\n          size=\"24\"\n        >\n          <v-img src=\"https://cdn.vuetifyjs.com/images/weather/part-cloud-48px.png\"></v-img>\n        </v-avatar>\n\n        <span class=\"text-body-2 text-grey\">81° / 62°</span>\n      </div>\n    </v-card-title>\n\n    <v-divider class=\"mx-4\"></v-divider>\n\n    <v-card-text class=\"d-flex justify-space-between\">\n      <v-chip\n        prepend-icon=\"mdi-brightness-5\"\n        @click=\"lights\"\n      >\n        Turn on lights\n      </v-chip>\n      <v-chip\n        prepend-icon=\"mdi-alarm-check\"\n        @click=\"alarm\"\n      >\n        Set alarm\n      </v-chip>\n      <v-chip\n        icon=\"mdi-blinds\"\n        @click=\"blinds\"\n      >\n        Close blinds\n      </v-chip>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    methods: {\n      alarm () {\n        alert('Turning on alarm...')\n      },\n      blinds () {\n        alert('Toggling blinds...')\n      },\n      lights () {\n        alert('Toggling lights...')\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Event Action Chips\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"450\"\n  >\n    <v-img\n      :aspect-ratio=\"16/9\"\n      src=\"https://cdn.vuetifyjs.com/images/cards/house.jpg\"\n      cover\n    >\n    </v-img>\n    <v-card-title class=\"flex-column align-start\">\n      <div class=\"text-h4 mb-2\">\n        Welcome Home...\n      </div>\n      <div class=\"text-h6 font-weight-regular text-grey\">\n        Monday, 12:30 PM, Mostly Sunny\n      </div>\n      <div class=\"d-flex align-center\">\n        <v-avatar\n          class=\"me-4\"\n          size=\"24\"\n        >\n          <v-img src=\"https://cdn.vuetifyjs.com/images/weather/part-cloud-48px.png\"></v-img>\n        </v-avatar>\n\n        <span class=\"text-body-2 text-grey\">81° / 62°</span>\n      </div>\n    </v-card-title>\n\n    <v-divider class=\"mx-4\"></v-divider>\n\n    <v-card-text class=\"d-flex justify-space-between\">\n      <v-chip\n        prepend-icon=\"mdi-brightness-5\"\n        @click=\"lights\"\n      >\n        Turn on lights\n      </v-chip>\n      <v-chip\n        prepend-icon=\"mdi-alarm-check\"\n        @click=\"alarm\"\n      >\n        Set alarm\n      </v-chip>\n      <v-chip\n        icon=\"mdi-blinds\"\n        @click=\"blinds\"\n      >\n        Close blinds\n      </v-chip>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    methods: {\n      alarm () {\n        alert('Turning on alarm...')\n      },\n      blinds () {\n        alert('Toggling blinds...')\n      },\n      lights () {\n        alert('Toggling lights...')\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Event Action Chips",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000368",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000369",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-chip v-bind=\"props\" v-model=\"chipModel\">\n        Chip\n      </v-chip>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"prepend\" label=\"Prepend icon\"></v-checkbox>\n      <v-checkbox v-model=\"append\" label=\"Append icon\"></v-checkbox>\n      <v-checkbox v-model=\"closable\" label=\"Closable\">\n        <template v-slot:append>\n          <v-fade-transition>\n            <v-btn v-if=\"!chipModel\" variant=\"plain\" @click=\"chipModel = true\">Reset</v-btn>\n          </v-fade-transition>\n        </template>\n      </v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const variants = ['outlined', 'elevated', 'text', 'plain']\n  const name = 'v-chip'\n  const model = ref('default')\n  const options = [...variants]\n  const block = ref(false)\n  const stacked = ref(false)\n  const prepend = ref(false)\n  const append = ref(false)\n  const closable = ref(false)\n  const props = computed(() => {\n    return {\n      block: block.value || undefined,\n      closable: closable.value || undefined,\n      stacked: stacked.value || undefined,\n      'prepend-icon': prepend.value ? '$vuetify' : undefined,\n      'append-icon': append.value ? '$vuetify' : undefined,\n      variant: variants.includes(model.value) ? model.value : undefined,\n    }\n  })\n\n  const chipModel = ref(true)\n\n  watch(stacked, val => val && (prepend.value = true))\n\n  const slots = computed(() => {\n    return `\n  Chip\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-chip v-bind=\"props\" v-model=\"chipModel\">\n        Chip\n      </v-chip>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"prepend\" label=\"Prepend icon\"></v-checkbox>\n      <v-checkbox v-model=\"append\" label=\"Append icon\"></v-checkbox>\n      <v-checkbox v-model=\"closable\" label=\"Closable\">\n        <template v-slot:append>\n          <v-fade-transition>\n            <v-btn v-if=\"!chipModel\" variant=\"plain\" @click=\"chipModel = true\">Reset</v-btn>\n          </v-fade-transition>\n        </template>\n      </v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const variants = ['outlined', 'elevated', 'text', 'plain']\n  const name = 'v-chip'\n  const model = ref('default')\n  const options = [...variants]\n  const block = ref(false)\n  const stacked = ref(false)\n  const prepend = ref(false)\n  const append = ref(false)\n  const closable = ref(false)\n  const props = computed(() => {\n    return {\n      block: block.value || undefined,\n      closable: closable.value || undefined,\n      stacked: stacked.value || undefined,\n      'prepend-icon': prepend.value ? '$vuetify' : undefined,\n      'append-icon': append.value ? '$vuetify' : undefined,\n      variant: variants.includes(model.value) ? model.value : undefined,\n    }\n  })\n\n  const chipModel = ref(true)\n\n  watch(stacked, val => val && (prepend.value = true))\n\n  const slots = computed(() => {\n    return `\n  Chip\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000369",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000370",
    "text": "Component: v-examples\nSection: Misc Custom List\nType: code_example\n\n## v-examples - Misc Custom List\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-toolbar\n      color=\"transparent\"\n      flat\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Photo Info</v-toolbar-title>\n\n      <v-btn\n        icon=\"mdi-magnify\"\n        @click=\"searchField.focus()\"\n      >\n      </v-btn>\n    </v-toolbar>\n\n    <v-container>\n      <v-row\n        align=\"center\"\n        justify=\"start\"\n      >\n        <v-col\n          v-for=\"(selection, i) in selections\"\n          :key=\"selection.text\"\n          class=\"py-1 pe-0\"\n          cols=\"auto\"\n        >\n          <v-chip\n            :disabled=\"loading\"\n            closable\n            @click:close=\"selected.splice(i, 1)\"\n          >\n            <v-icon\n              :icon=\"selection.icon\"\n              start\n            ></v-icon>\n\n            {{ selection.text }}\n          </v-chip>\n        </v-col>\n\n        <v-col\n          v-if=\"!allSelected\"\n          cols=\"12\"\n        >\n          <v-text-field\n            ref=\"searchField\"\n            v-model=\"search\"\n            label=\"Search\"\n            hide-details\n            single-line\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n\n    <v-divider v-if=\"!allSelected\"></v-divider>\n\n    <v-list>\n      <template v-for=\"item in categories\">\n        <v-list-item\n          v-if=\"!selected.includes(item)\"\n          :key=\"item.text\"\n          :disabled=\"loading\"\n          @click=\"selected.push(item)\"\n        >\n          <template v-slot:prepend>\n            <v-icon\n              :disabled=\"loading\"\n              :icon=\"item.icon\"\n            ></v-icon>\n          </template>\n\n          <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n        </v-list-item>\n      </template>\n    </v-list>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n\n      <v-btn\n        :disabled=\"!selected.length\"\n        :loading=\"loading\"\n        color=\"purple\"\n        variant=\"text\"\n        @click=\"next\"\n      >\n        Next\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref, watch } from 'vue'\n\n  const items = [\n    {\n      text: 'Nature',\n      icon: 'mdi-nature',\n    },\n    {\n      text: 'Nightlife',\n      icon: 'mdi-glass-wine',\n    },\n    {\n      text: 'November',\n      icon: 'mdi-calendar-range',\n    },\n    {\n      text: 'Portland',\n      icon: 'mdi-map-marker',\n    },\n    {\n      text: 'Biking',\n      icon: 'mdi-bike',\n    },\n  ]\n  const searchField = ref()\n\n  const loading = ref(false)\n  const search = ref('')\n  const selected = ref([])\n\n  const allSelected = computed(() => {\n    return selected.value.length === items.length\n  })\n  const categories = computed(() => {\n    const _search = search.value.toLowerCase()\n    if (!_search) return items\n    return items.filter(item => {\n      const text = item.text.toLowerCase()\n      return text.indexOf(_search) > -1\n    })\n  })\n  const selections = computed(() => {\n    const selections = []\n    for (const selection of selected.value) {\n      selections.push(selection)\n    }\n    return selections\n  })\n\n  watch(selected, () => {\n    search.value = ''\n  })\n\n  function next () {\n    loading.value = true\n    setTimeout(() => {\n      search.value = ''\n      selected.value = []\n      loading.value = false\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          text: 'Nature',\n          icon: 'mdi-nature',\n        },\n        {\n          text: 'Nightlife',\n          icon: 'mdi-glass-wine',\n        },\n        {\n          text: 'November',\n          icon: 'mdi-calendar-range',\n        },\n        {\n          text: 'Portland',\n          icon: 'mdi-map-marker',\n        },\n        {\n          text: 'Biking',\n          icon: 'mdi-bike',\n        },\n      ],\n      loading: false,\n      search: '',\n      selected: [],\n    }),\n\n    computed: {\n      allSelected () {\n        return this.selected.length === this.items.length\n      },\n      categories () {\n        const search = this.search.toLowerCase()\n\n        if (!search) return this.items\n\n        return this.items.filter(item => {\n          const text = item.text.toLowerCase()\n\n          return text.indexOf(search) > -1\n        })\n      },\n      selections () {\n        const selections = []\n\n        for (const selection of this.selected) {\n          selections.push(selection)\n        }\n\n        return selections\n      },\n    },\n\n    watch: {\n      selected () {\n        this.search = ''\n      },\n    },\n\n    methods: {\n      next () {\n        this.loading = true\n\n        setTimeout(() => {\n          this.search = ''\n          this.selected = []\n          this.loading = false\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Custom List\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-toolbar\n      color=\"transparent\"\n      flat\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Photo Info</v-toolbar-title>\n\n      <v-btn\n        icon=\"mdi-magnify\"\n        @click=\"searchField.focus()\"\n      >\n      </v-btn>\n    </v-toolbar>\n\n    <v-container>\n      <v-row\n        align=\"center\"\n        justify=\"start\"\n      >\n        <v-col\n          v-for=\"(selection, i) in selections\"\n          :key=\"selection.text\"\n          class=\"py-1 pe-0\"\n          cols=\"auto\"\n        >\n          <v-chip\n            :disabled=\"loading\"\n            closable\n            @click:close=\"selected.splice(i, 1)\"\n          >\n            <v-icon\n              :icon=\"selection.icon\"\n              start\n            ></v-icon>\n\n            {{ selection.text }}\n          </v-chip>\n        </v-col>\n\n        <v-col\n          v-if=\"!allSelected\"\n          cols=\"12\"\n        >\n          <v-text-field\n            ref=\"searchField\"\n            v-model=\"search\"\n            label=\"Search\"\n            hide-details\n            single-line\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n\n    <v-divider v-if=\"!allSelected\"></v-divider>\n\n    <v-list>\n      <template v-for=\"item in categories\">\n        <v-list-item\n          v-if=\"!selected.includes(item)\"\n          :key=\"item.text\"\n          :disabled=\"loading\"\n          @click=\"selected.push(item)\"\n        >\n          <template v-slot:prepend>\n            <v-icon\n              :disabled=\"loading\"\n              :icon=\"item.icon\"\n            ></v-icon>\n          </template>\n\n          <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n        </v-list-item>\n      </template>\n    </v-list>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n\n      <v-btn\n        :disabled=\"!selected.length\"\n        :loading=\"loading\"\n        color=\"purple\"\n        variant=\"text\"\n        @click=\"next\"\n      >\n        Next\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref, watch } from 'vue'\n\n  const items = [\n    {\n      text: 'Nature',\n      icon: 'mdi-nature',\n    },\n    {\n      text: 'Nightlife',\n      icon: 'mdi-glass-wine',\n    },\n    {\n      text: 'November',\n      icon: 'mdi-calendar-range',\n    },\n    {\n      text: 'Portland',\n      icon: 'mdi-map-marker',\n    },\n    {\n      text: 'Biking',\n      icon: 'mdi-bike',\n    },\n  ]\n  const searchField = ref()\n\n  const loading = ref(false)\n  const search = ref('')\n  const selected = ref([])\n\n  const allSelected = computed(() => {\n    return selected.value.length === items.length\n  })\n  const categories = computed(() => {\n    const _search = search.value.toLowerCase()\n    if (!_search) return items\n    return items.filter(item => {\n      const text = item.text.toLowerCase()\n      return text.indexOf(_search) > -1\n    })\n  })\n  const selections = computed(() => {\n    const selections = []\n    for (const selection of selected.value) {\n      selections.push(selection)\n    }\n    return selections\n  })\n\n  watch(selected, () => {\n    search.value = ''\n  })\n\n  function next () {\n    loading.value = true\n    setTimeout(() => {\n      search.value = ''\n      selected.value = []\n      loading.value = false\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          text: 'Nature',\n          icon: 'mdi-nature',\n        },\n        {\n          text: 'Nightlife',\n          icon: 'mdi-glass-wine',\n        },\n        {\n          text: 'November',\n          icon: 'mdi-calendar-range',\n        },\n        {\n          text: 'Portland',\n          icon: 'mdi-map-marker',\n        },\n        {\n          text: 'Biking',\n          icon: 'mdi-bike',\n        },\n      ],\n      loading: false,\n      search: '',\n      selected: [],\n    }),\n\n    computed: {\n      allSelected () {\n        return this.selected.length === this.items.length\n      },\n      categories () {\n        const search = this.search.toLowerCase()\n\n        if (!search) return this.items\n\n        return this.items.filter(item => {\n          const text = item.text.toLowerCase()\n\n          return text.indexOf(search) > -1\n        })\n      },\n      selections () {\n        const selections = []\n\n        for (const selection of this.selected) {\n          selections.push(selection)\n        }\n\n        return selections\n      },\n    },\n\n    watch: {\n      selected () {\n        this.search = ''\n      },\n    },\n\n    methods: {\n      next () {\n        this.loading = true\n\n        setTimeout(() => {\n          this.search = ''\n          this.selected = []\n          this.loading = false\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Custom List",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000370",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000371",
    "text": "Component: v-examples\nSection: Misc Expandable\nType: code_example\n\n## v-examples - Misc Expandable\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-row\n      align=\"center\"\n      class=\"pa-6\"\n    >\n      <span class=\"me-4\">To</span>\n\n      <v-menu\n        v-model=\"menu\"\n        location=\"top start\"\n        origin=\"top start\"\n        transition=\"scale-transition\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-chip\n            v-bind=\"props\"\n            link\n            pill\n          >\n            <v-avatar start>\n              <v-img src=\"https://cdn.vuetifyjs.com/images/john.png\"></v-img>\n            </v-avatar>\n\n            John Leider\n          </v-chip>\n        </template>\n\n        <v-card width=\"300\">\n          <v-list bg-color=\"black\">\n            <v-list-item>\n              <template v-slot:prepend>\n                <v-avatar image=\"https://cdn.vuetifyjs.com/images/john.png\"></v-avatar>\n              </template>\n\n              <v-list-item-title>John Leider</v-list-item-title>\n\n              <v-list-item-subtitle>john@google.com</v-list-item-subtitle>\n\n              <template v-slot:append>\n                <v-list-item-action>\n                  <v-btn\n                    variant=\"text\"\n                    icon\n                    @click=\"menu = false\"\n                  >\n                    <v-icon>mdi-close-circle</v-icon>\n                  </v-btn>\n                </v-list-item-action>\n              </template>\n            </v-list-item>\n          </v-list>\n\n          <v-list>\n            <v-list-item prepend-icon=\"mdi-briefcase\" link>\n              <v-list-item-subtitle>john@gmail.com</v-list-item-subtitle>\n            </v-list-item>\n          </v-list>\n        </v-card>\n      </v-menu>\n    </v-row>\n\n    <v-divider></v-divider>\n\n    <div class=\"pa-3\">\n      <v-text-field\n        label=\"Subject\"\n        model-value=\"Re: Vacation Request\"\n        variant=\"underlined\"\n        single-line\n      ></v-text-field>\n\n      <v-textarea\n        label=\"Message\"\n        variant=\"underlined\"\n        single-line\n      ></v-textarea>\n    </div>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const menu = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      menu: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Expandable\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-row\n      align=\"center\"\n      class=\"pa-6\"\n    >\n      <span class=\"me-4\">To</span>\n\n      <v-menu\n        v-model=\"menu\"\n        location=\"top start\"\n        origin=\"top start\"\n        transition=\"scale-transition\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-chip\n            v-bind=\"props\"\n            link\n            pill\n          >\n            <v-avatar start>\n              <v-img src=\"https://cdn.vuetifyjs.com/images/john.png\"></v-img>\n            </v-avatar>\n\n            John Leider\n          </v-chip>\n        </template>\n\n        <v-card width=\"300\">\n          <v-list bg-color=\"black\">\n            <v-list-item>\n              <template v-slot:prepend>\n                <v-avatar image=\"https://cdn.vuetifyjs.com/images/john.png\"></v-avatar>\n              </template>\n\n              <v-list-item-title>John Leider</v-list-item-title>\n\n              <v-list-item-subtitle>john@google.com</v-list-item-subtitle>\n\n              <template v-slot:append>\n                <v-list-item-action>\n                  <v-btn\n                    variant=\"text\"\n                    icon\n                    @click=\"menu = false\"\n                  >\n                    <v-icon>mdi-close-circle</v-icon>\n                  </v-btn>\n                </v-list-item-action>\n              </template>\n            </v-list-item>\n          </v-list>\n\n          <v-list>\n            <v-list-item prepend-icon=\"mdi-briefcase\" link>\n              <v-list-item-subtitle>john@gmail.com</v-list-item-subtitle>\n            </v-list-item>\n          </v-list>\n        </v-card>\n      </v-menu>\n    </v-row>\n\n    <v-divider></v-divider>\n\n    <div class=\"pa-3\">\n      <v-text-field\n        label=\"Subject\"\n        model-value=\"Re: Vacation Request\"\n        variant=\"underlined\"\n        single-line\n      ></v-text-field>\n\n      <v-textarea\n        label=\"Message\"\n        variant=\"underlined\"\n        single-line\n      ></v-textarea>\n    </div>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const menu = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      menu: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Expandable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000371",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000372",
    "text": "Component: v-examples\nSection: Misc Filtering\nType: code_example\n\n## v-examples - Misc Filtering\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"450\"\n  >\n    <v-toolbar\n      color=\"primary\"\n      height=\"88\"\n      flat\n    >\n      <template v-slot:prepend>\n        <v-btn icon=\"mdi-arrow-left\">\n        </v-btn>\n      </template>\n\n      <v-text-field\n        v-model=\"search\"\n        label=\"Search News\"\n        prepend-inner-icon=\"mdi-magnify\"\n        clearable\n        hide-details\n        single-line\n      ></v-text-field>\n\n      <template v-slot:append>\n        <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n      </template>\n    </v-toolbar>\n\n    <div v-if=\"keywords.length > 0\" class=\"py-3 px-4\">\n      <v-chip\n        v-for=\"(keyword, i) in keywords\"\n        :key=\"i\"\n        class=\"me-2\"\n      >\n        {{ keyword }}\n      </v-chip>\n\n    </div>\n\n    <v-divider></v-divider>\n\n    <v-list lines=\"three\">\n      <v-list-item\n        v-for=\"(item, i) in searching\"\n        :key=\"i\"\n        link\n      >\n        <template v-slot:prepend>\n          <v-avatar\n            class=\"me-4 mt-2\"\n            rounded=\"0\"\n          >\n            <v-img :src=\"item.image\" cover></v-img>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title\n          class=\"text-uppercase font-weight-regular text-caption\"\n          v-text=\"item.category\"\n        ></v-list-item-title>\n\n        <div v-text=\"item.title\"></div>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const items = [\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/globe.png',\n      title: 'TBI\\u2019s 5 Best: SF Mocktails to Finish Dry January Strong',\n      category: 'Travel',\n      keyword: 'Drinks',\n    },\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/cpu.png',\n      title: 'PWAs on iOS 12.2 beta: the good, the bad, and the \\u201Cnot sure yet if good\\u201D',\n      category: 'Technology',\n      keyword: 'Phones',\n    },\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/rocket.png',\n      title: 'How to Get Media Mentions for Your Business',\n      category: 'Media',\n      keyword: 'Social',\n    },\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/bulb.png',\n      title: 'The Pitfalls Of Outsourcing Self-Awareness To Artificial Intelligence',\n      category: 'Technology',\n      keyword: 'Military',\n    },\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/raft.png',\n      title: 'Degrees of Freedom and Sudoko',\n      category: 'Travel',\n      keyword: 'Social',\n    },\n  ]\n\n  const search = ref('')\n\n  const keywords = computed(() => {\n    if (!search.value) return []\n\n    const keywords = []\n\n    for (const search of searching.value) {\n      keywords.push(search.keyword)\n    }\n\n    return keywords\n  })\n  const searching = computed(() => {\n    if (!search.value) return items\n\n    const _search = search.value.toLowerCase()\n\n    return items.filter(item => {\n      const text = item.title.toLowerCase()\n      return text.indexOf(_search) > -1\n    })\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/globe.png',\n          title: 'TBI’s 5 Best: SF Mocktails to Finish Dry January Strong',\n          category: 'Travel',\n          keyword: 'Drinks',\n\n        },\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/cpu.png',\n          title: 'PWAs on iOS 12.2 beta: the good, the bad, and the “not sure yet if good”',\n          category: 'Technology',\n          keyword: 'Phones',\n        },\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/rocket.png',\n          title: 'How to Get Media Mentions for Your Business',\n          category: 'Media',\n          keyword: 'Social',\n        },\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/bulb.png',\n          title: 'The Pitfalls Of Outsourcing Self-Awareness To Artificial Intelligence',\n          category: 'Technology',\n          keyword: 'Military',\n        },\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/raft.png',\n          title: 'Degrees of Freedom and Sudoko',\n          category: 'Travel',\n          keyword: 'Social',\n        },\n      ],\n      search: '',\n    }),\n\n    computed: {\n      keywords () {\n        if (!this.search) return []\n\n        const keywords = []\n\n        for (const search of this.searching) {\n          keywords.push(search.keyword)\n        }\n\n        return keywords\n      },\n      searching () {\n        if (!this.search) return this.items\n\n        const search = this.search.toLowerCase()\n\n        return this.items.filter(item => {\n          const text = item.title.toLowerCase()\n\n          return text.indexOf(search) > -1\n        })\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Filtering\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"450\"\n  >\n    <v-toolbar\n      color=\"primary\"\n      height=\"88\"\n      flat\n    >\n      <template v-slot:prepend>\n        <v-btn icon=\"mdi-arrow-left\">\n        </v-btn>\n      </template>\n\n      <v-text-field\n        v-model=\"search\"\n        label=\"Search News\"\n        prepend-inner-icon=\"mdi-magnify\"\n        clearable\n        hide-details\n        single-line\n      ></v-text-field>\n\n      <template v-slot:append>\n        <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n      </template>\n    </v-toolbar>\n\n    <div v-if=\"keywords.length > 0\" class=\"py-3 px-4\">\n      <v-chip\n        v-for=\"(keyword, i) in keywords\"\n        :key=\"i\"\n        class=\"me-2\"\n      >\n        {{ keyword }}\n      </v-chip>\n\n    </div>\n\n    <v-divider></v-divider>\n\n    <v-list lines=\"three\">\n      <v-list-item\n        v-for=\"(item, i) in searching\"\n        :key=\"i\"\n        link\n      >\n        <template v-slot:prepend>\n          <v-avatar\n            class=\"me-4 mt-2\"\n            rounded=\"0\"\n          >\n            <v-img :src=\"item.image\" cover></v-img>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title\n          class=\"text-uppercase font-weight-regular text-caption\"\n          v-text=\"item.category\"\n        ></v-list-item-title>\n\n        <div v-text=\"item.title\"></div>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const items = [\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/globe.png',\n      title: 'TBI\\u2019s 5 Best: SF Mocktails to Finish Dry January Strong',\n      category: 'Travel',\n      keyword: 'Drinks',\n    },\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/cpu.png',\n      title: 'PWAs on iOS 12.2 beta: the good, the bad, and the \\u201Cnot sure yet if good\\u201D',\n      category: 'Technology',\n      keyword: 'Phones',\n    },\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/rocket.png',\n      title: 'How to Get Media Mentions for Your Business',\n      category: 'Media',\n      keyword: 'Social',\n    },\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/bulb.png',\n      title: 'The Pitfalls Of Outsourcing Self-Awareness To Artificial Intelligence',\n      category: 'Technology',\n      keyword: 'Military',\n    },\n    {\n      image: 'https://cdn.vuetifyjs.com/docs/images/chips/raft.png',\n      title: 'Degrees of Freedom and Sudoko',\n      category: 'Travel',\n      keyword: 'Social',\n    },\n  ]\n\n  const search = ref('')\n\n  const keywords = computed(() => {\n    if (!search.value) return []\n\n    const keywords = []\n\n    for (const search of searching.value) {\n      keywords.push(search.keyword)\n    }\n\n    return keywords\n  })\n  const searching = computed(() => {\n    if (!search.value) return items\n\n    const _search = search.value.toLowerCase()\n\n    return items.filter(item => {\n      const text = item.title.toLowerCase()\n      return text.indexOf(_search) > -1\n    })\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/globe.png',\n          title: 'TBI’s 5 Best: SF Mocktails to Finish Dry January Strong',\n          category: 'Travel',\n          keyword: 'Drinks',\n\n        },\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/cpu.png',\n          title: 'PWAs on iOS 12.2 beta: the good, the bad, and the “not sure yet if good”',\n          category: 'Technology',\n          keyword: 'Phones',\n        },\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/rocket.png',\n          title: 'How to Get Media Mentions for Your Business',\n          category: 'Media',\n          keyword: 'Social',\n        },\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/bulb.png',\n          title: 'The Pitfalls Of Outsourcing Self-Awareness To Artificial Intelligence',\n          category: 'Technology',\n          keyword: 'Military',\n        },\n        {\n          image: 'https://cdn.vuetifyjs.com/docs/images/chips/raft.png',\n          title: 'Degrees of Freedom and Sudoko',\n          category: 'Travel',\n          keyword: 'Social',\n        },\n      ],\n      search: '',\n    }),\n\n    computed: {\n      keywords () {\n        if (!this.search) return []\n\n        const keywords = []\n\n        for (const search of this.searching) {\n          keywords.push(search.keyword)\n        }\n\n        return keywords\n      },\n      searching () {\n        if (!this.search) return this.items\n\n        const search = this.search.toLowerCase()\n\n        return this.items.filter(item => {\n          const text = item.title.toLowerCase()\n\n          return text.indexOf(search) > -1\n        })\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Filtering",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000372",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000373",
    "text": "Component: v-examples\nSection: Misc In Selects\nType: code_example\n\n## v-examples - Misc In Selects\n\n```vue\n<template>\n  <v-combobox\n    v-model=\"chips\"\n    :items=\"items\"\n    label=\"Your favorite hobbies\"\n    prepend-icon=\"mdi-filter-variant\"\n    variant=\"solo\"\n    chips\n    clearable\n    closable-chips\n    multiple\n  >\n    <template v-slot:chip=\"{ props, item }\">\n      <v-chip v-bind=\"props\">\n        <strong>{{ item.raw }}</strong>&nbsp;\n        <span>(interest)</span>\n      </v-chip>\n    </template>\n  </v-combobox>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ['Streaming', 'Eating']\n\n  const chips = ref(['Programming', 'Playing video games', 'Watching movies', 'Sleeping'])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        chips: ['Programming', 'Playing video games', 'Watching movies', 'Sleeping'],\n        items: ['Streaming', 'Eating'],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc In Selects\n\n```vue\n<template>\n  <v-combobox\n    v-model=\"chips\"\n    :items=\"items\"\n    label=\"Your favorite hobbies\"\n    prepend-icon=\"mdi-filter-variant\"\n    variant=\"solo\"\n    chips\n    clearable\n    closable-chips\n    multiple\n  >\n    <template v-slot:chip=\"{ props, item }\">\n      <v-chip v-bind=\"props\">\n        <strong>{{ item.raw }}</strong>&nbsp;\n        <span>(interest)</span>\n      </v-chip>\n    </template>\n  </v-combobox>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ['Streaming', 'Eating']\n\n  const chips = ref(['Programming', 'Playing video games', 'Watching movies', 'Sleeping'])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        chips: ['Programming', 'Playing video games', 'Watching movies', 'Sleeping'],\n        items: ['Streaming', 'Eating'],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc In Selects",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000373",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000374",
    "text": "Component: v-examples\nSection: Prop Closable\nType: code_example\n\n## v-examples - Prop Closable\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip\n      v-if=\"chip\"\n      class=\"ma-2\"\n      closable\n      @click:close=\"chip = false\"\n    >\n      Closable\n    </v-chip>\n\n    <v-btn\n      v-if=\"!chip\"\n      color=\"primary\"\n      @click=\"chip = true\"\n    >\n      Reset Chip\n    </v-btn>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const chip = ref(true)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        chip: true,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Closable\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip\n      v-if=\"chip\"\n      class=\"ma-2\"\n      closable\n      @click:close=\"chip = false\"\n    >\n      Closable\n    </v-chip>\n\n    <v-btn\n      v-if=\"!chip\"\n      color=\"primary\"\n      @click=\"chip = true\"\n    >\n      Reset Chip\n    </v-btn>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const chip = ref(true)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        chip: true,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Closable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000374",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000375",
    "text": "Component: v-examples\nSection: Prop Colored\nType: code_example\n\n## v-examples - Prop Colored\n\n```vue\n<template>\n  <div class=\"d-flex justify-center ga-2\">\n    <v-chip>\n      Default\n    </v-chip>\n\n    <v-chip color=\"primary\">\n      Primary\n    </v-chip>\n\n    <v-chip color=\"secondary\">\n      Secondary\n    </v-chip>\n\n    <v-chip color=\"red\">\n      Red\n    </v-chip>\n\n    <v-chip color=\"green\">\n      Green\n    </v-chip>\n  </div>\n  <div class=\"d-flex justify-center ga-2 mt-2\">\n    <v-chip variant=\"flat\">\n      Default flat\n    </v-chip>\n\n    <v-chip color=\"primary\" variant=\"flat\">\n      Primary flat\n    </v-chip>\n\n    <v-chip color=\"secondary\" variant=\"flat\">\n      Secondary flat\n    </v-chip>\n\n    <v-chip color=\"red\" variant=\"flat\">\n      Red flat\n    </v-chip>\n\n    <v-chip color=\"green\" variant=\"flat\">\n      Green flat\n    </v-chip>\n  </div>\n</template>\n<script setup lang=\"ts\">\n</script>\n\n```",
    "display_content": "## v-examples - Prop Colored\n\n```vue\n<template>\n  <div class=\"d-flex justify-center ga-2\">\n    <v-chip>\n      Default\n    </v-chip>\n\n    <v-chip color=\"primary\">\n      Primary\n    </v-chip>\n\n    <v-chip color=\"secondary\">\n      Secondary\n    </v-chip>\n\n    <v-chip color=\"red\">\n      Red\n    </v-chip>\n\n    <v-chip color=\"green\">\n      Green\n    </v-chip>\n  </div>\n  <div class=\"d-flex justify-center ga-2 mt-2\">\n    <v-chip variant=\"flat\">\n      Default flat\n    </v-chip>\n\n    <v-chip color=\"primary\" variant=\"flat\">\n      Primary flat\n    </v-chip>\n\n    <v-chip color=\"secondary\" variant=\"flat\">\n      Secondary flat\n    </v-chip>\n\n    <v-chip color=\"red\" variant=\"flat\">\n      Red flat\n    </v-chip>\n\n    <v-chip color=\"green\" variant=\"flat\">\n      Green flat\n    </v-chip>\n  </div>\n</template>\n<script setup lang=\"ts\">\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Colored",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000375",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000376",
    "text": "Component: v-examples\nSection: Prop Draggable\nType: code_example\n\n## v-examples - Prop Draggable\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip draggable>\n      Default\n    </v-chip>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Draggable\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip draggable>\n      Default\n    </v-chip>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Draggable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000376",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000377",
    "text": "Component: v-examples\nSection: Prop Filter\nType: code_example\n\n## v-examples - Prop Filter\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    justify=\"space-around\"\n  >\n    <v-chip\n      :model-value=\"active\"\n      class=\"ma-2\"\n      filter\n    >\n      I'm v-chip\n    </v-chip>\n\n    <v-chip\n      :model-value=\"active\"\n      class=\"ma-2\"\n      filter-icon=\"mdi-plus\"\n      filter\n    >\n      I'm v-chip\n    </v-chip>\n\n    <v-chip\n      :model-value=\"active\"\n      class=\"ma-2\"\n      filter-icon=\"mdi-minus\"\n      filter\n    >\n      I'm v-chip\n    </v-chip>\n\n    <v-switch\n      v-model=\"active\"\n      label=\"Active\"\n    ></v-switch>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const active = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      active: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Filter\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    justify=\"space-around\"\n  >\n    <v-chip\n      :model-value=\"active\"\n      class=\"ma-2\"\n      filter\n    >\n      I'm v-chip\n    </v-chip>\n\n    <v-chip\n      :model-value=\"active\"\n      class=\"ma-2\"\n      filter-icon=\"mdi-plus\"\n      filter\n    >\n      I'm v-chip\n    </v-chip>\n\n    <v-chip\n      :model-value=\"active\"\n      class=\"ma-2\"\n      filter-icon=\"mdi-minus\"\n      filter\n    >\n      I'm v-chip\n    </v-chip>\n\n    <v-switch\n      v-model=\"active\"\n      label=\"Active\"\n    ></v-switch>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const active = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      active: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Filter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000377",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000378",
    "text": "Component: v-examples\nSection: Prop Label\nType: code_example\n\n## v-examples - Prop Label\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip\n      class=\"ma-2\"\n      label\n    >\n      Label\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"pink\"\n      label\n    >\n      <v-icon icon=\"mdi-label\" start></v-icon>\n      Tags\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"primary\"\n      label\n    >\n      <v-icon icon=\"mdi-account-circle-outline\" start></v-icon>\n      John Leider\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"cyan\"\n      closable\n      label\n    >\n      <v-icon icon=\"mdi-twitter\" start></v-icon>\n      New Tweets\n    </v-chip>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Label\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip\n      class=\"ma-2\"\n      label\n    >\n      Label\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"pink\"\n      label\n    >\n      <v-icon icon=\"mdi-label\" start></v-icon>\n      Tags\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"primary\"\n      label\n    >\n      <v-icon icon=\"mdi-account-circle-outline\" start></v-icon>\n      John Leider\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"cyan\"\n      closable\n      label\n    >\n      <v-icon icon=\"mdi-twitter\" start></v-icon>\n      New Tweets\n    </v-chip>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Label",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000378",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000379",
    "text": "Component: v-examples\nSection: Prop No Ripple\nType: code_example\n\n## v-examples - Prop No Ripple\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip :ripple=\"false\" link>\n      Default\n    </v-chip>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop No Ripple\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip :ripple=\"false\" link>\n      Default\n    </v-chip>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop No Ripple",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000379",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000380",
    "text": "Component: v-examples\nSection: Prop Outlined\nType: code_example\n\n## v-examples - Prop Outlined\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip\n      class=\"ma-2\"\n      color=\"success\"\n      variant=\"outlined\"\n    >\n      <v-icon icon=\"mdi-server-plus\" start></v-icon>\n      Server Status\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"primary\"\n      variant=\"outlined\"\n    >\n      User Account\n      <v-icon icon=\"mdi-account-outline\" end></v-icon>\n    </v-chip>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Outlined\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip\n      class=\"ma-2\"\n      color=\"success\"\n      variant=\"outlined\"\n    >\n      <v-icon icon=\"mdi-server-plus\" start></v-icon>\n      Server Status\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"primary\"\n      variant=\"outlined\"\n    >\n      User Account\n      <v-icon icon=\"mdi-account-outline\" end></v-icon>\n    </v-chip>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Outlined",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000380",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000381",
    "text": "Component: v-examples\nSection: Prop Sizes\nType: code_example\n\n## v-examples - Prop Sizes\n\n```vue\n<template>\n  <div class=\"d-flex justify-center align-center ga-2\">\n    <v-label style=\"width: 100px\">default</v-label>\n\n    <v-chip size=\"x-small\">\n      x-small\n    </v-chip>\n\n    <v-chip size=\"small\">\n      small\n    </v-chip>\n\n    <v-chip>\n      default\n    </v-chip>\n\n    <v-chip size=\"large\">\n      large\n    </v-chip>\n\n    <v-chip size=\"x-large\">\n      x-large\n    </v-chip>\n  </div>\n  <div class=\"d-flex justify-center align-center ga-2 mt-2\">\n    <v-label style=\"width: 100px\">comfortable</v-label>\n\n    <v-chip density=\"comfortable\" size=\"x-small\">\n      x-small\n    </v-chip>\n\n    <v-chip density=\"comfortable\" size=\"small\">\n      small\n    </v-chip>\n\n    <v-chip density=\"comfortable\">\n      default\n    </v-chip>\n\n    <v-chip density=\"comfortable\" size=\"large\">\n      large\n    </v-chip>\n\n    <v-chip density=\"comfortable\" size=\"x-large\">\n      x-large\n    </v-chip>\n  </div>\n  <div class=\"d-flex justify-center align-center ga-2 mt-2\">\n    <v-label style=\"width: 100px\">compact</v-label>\n\n    <v-chip density=\"compact\" size=\"x-small\">\n      x-small\n    </v-chip>\n\n    <v-chip density=\"compact\" size=\"small\">\n      small\n    </v-chip>\n\n    <v-chip density=\"compact\">\n      default\n    </v-chip>\n\n    <v-chip density=\"compact\" size=\"large\">\n      large\n    </v-chip>\n\n    <v-chip density=\"compact\" size=\"x-large\">\n      x-large\n    </v-chip>\n  </div>\n</template>\n<script setup lang=\"ts\">\n</script>\n\n```",
    "display_content": "## v-examples - Prop Sizes\n\n```vue\n<template>\n  <div class=\"d-flex justify-center align-center ga-2\">\n    <v-label style=\"width: 100px\">default</v-label>\n\n    <v-chip size=\"x-small\">\n      x-small\n    </v-chip>\n\n    <v-chip size=\"small\">\n      small\n    </v-chip>\n\n    <v-chip>\n      default\n    </v-chip>\n\n    <v-chip size=\"large\">\n      large\n    </v-chip>\n\n    <v-chip size=\"x-large\">\n      x-large\n    </v-chip>\n  </div>\n  <div class=\"d-flex justify-center align-center ga-2 mt-2\">\n    <v-label style=\"width: 100px\">comfortable</v-label>\n\n    <v-chip density=\"comfortable\" size=\"x-small\">\n      x-small\n    </v-chip>\n\n    <v-chip density=\"comfortable\" size=\"small\">\n      small\n    </v-chip>\n\n    <v-chip density=\"comfortable\">\n      default\n    </v-chip>\n\n    <v-chip density=\"comfortable\" size=\"large\">\n      large\n    </v-chip>\n\n    <v-chip density=\"comfortable\" size=\"x-large\">\n      x-large\n    </v-chip>\n  </div>\n  <div class=\"d-flex justify-center align-center ga-2 mt-2\">\n    <v-label style=\"width: 100px\">compact</v-label>\n\n    <v-chip density=\"compact\" size=\"x-small\">\n      x-small\n    </v-chip>\n\n    <v-chip density=\"compact\" size=\"small\">\n      small\n    </v-chip>\n\n    <v-chip density=\"compact\">\n      default\n    </v-chip>\n\n    <v-chip density=\"compact\" size=\"large\">\n      large\n    </v-chip>\n\n    <v-chip density=\"compact\" size=\"x-large\">\n      x-large\n    </v-chip>\n  </div>\n</template>\n<script setup lang=\"ts\">\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Sizes",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000381",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000382",
    "text": "Component: v-examples\nSection: Slot Icon\nType: code_example\n\n## v-examples - Slot Icon\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip\n      class=\"ma-2\"\n      color=\"indigo\"\n      prepend-icon=\"mdi-account-circle\"\n    >\n      Mike\n    </v-chip>\n\n    <v-chip\n      append-icon=\"mdi-star\"\n      class=\"ma-2\"\n      color=\"orange\"\n    >\n      Premium\n    </v-chip>\n\n    <v-chip\n      append-icon=\"mdi-cake-variant\"\n      class=\"ma-2\"\n      color=\"primary\"\n    >\n      1 Year\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"green\"\n    >\n      <template v-slot:prepend>\n        <v-avatar\n          class=\"green-darken-4\"\n        >\n          1\n        </v-avatar>\n      </template>\n      Years\n    </v-chip>\n\n    <v-chip\n      :model-value=\"true\"\n      class=\"ma-2\"\n      color=\"teal\"\n      prepend-icon=\"mdi-checkbox-marked-circle\"\n      closable\n    >\n      Confirmed\n    </v-chip>\n\n    <v-chip\n      :model-value=\"true\"\n      class=\"ma-2\"\n      close-icon=\"mdi-delete\"\n      color=\"teal\"\n      prepend-icon=\"mdi-checkbox-marked-circle\"\n      closable\n    >\n      Confirmed\n    </v-chip>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Icon\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-chip\n      class=\"ma-2\"\n      color=\"indigo\"\n      prepend-icon=\"mdi-account-circle\"\n    >\n      Mike\n    </v-chip>\n\n    <v-chip\n      append-icon=\"mdi-star\"\n      class=\"ma-2\"\n      color=\"orange\"\n    >\n      Premium\n    </v-chip>\n\n    <v-chip\n      append-icon=\"mdi-cake-variant\"\n      class=\"ma-2\"\n      color=\"primary\"\n    >\n      1 Year\n    </v-chip>\n\n    <v-chip\n      class=\"ma-2\"\n      color=\"green\"\n    >\n      <template v-slot:prepend>\n        <v-avatar\n          class=\"green-darken-4\"\n        >\n          1\n        </v-avatar>\n      </template>\n      Years\n    </v-chip>\n\n    <v-chip\n      :model-value=\"true\"\n      class=\"ma-2\"\n      color=\"teal\"\n      prepend-icon=\"mdi-checkbox-marked-circle\"\n      closable\n    >\n      Confirmed\n    </v-chip>\n\n    <v-chip\n      :model-value=\"true\"\n      class=\"ma-2\"\n      close-icon=\"mdi-delete\"\n      color=\"teal\"\n      prepend-icon=\"mdi-checkbox-marked-circle\"\n      closable\n    >\n      Confirmed\n    </v-chip>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Icon",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000382",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000383",
    "text": "Component: v-chip-groups\nType: component_overview\n\n# v-chip-groups\n\nThe `v-chip-group` supercharges the `v-chip` component by providing groupable functionality. It is used for creating groups of selections using chips.",
    "display_content": "# v-chip-groups\n\nThe `v-chip-group` supercharges the `v-chip` component by providing groupable functionality. It is used for creating groups of selections using chips.",
    "metadata": {
      "component": "v-chip-groups",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000383",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000384",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nChip groups make it easy for users to select filtering options for more complex implementations. By default `v-chip-group` will overflow to the right but can be changed to a **column** only mode.",
    "display_content": "# v-usage\n\nChip groups make it easy for users to select filtering options for more complex implementations. By default `v-chip-group` will overflow to the right but can be changed to a **column** only mode.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000384",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000385",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-chip-group](/api/v-chip-group/) | Primary component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-chip-group](/api/v-chip-group/) | Primary component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000385",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000386",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nChip groups with **column** prop can wrap their chips.\n\nAvailable sections: Column, Filter results, Mandatory, Multiple, Product card, Toothbrush card, Reddit style categories, Misc Product Card, Misc Reddit Categories, Misc Toothbrush Card, Prop Column, Prop Filter, Prop Mandatory, Prop Multiple, Usage",
    "display_content": "# v-examples\n\nChip groups with **column** prop can wrap their chips.\n\nAvailable sections: Column, Filter results, Mandatory, Multiple, Product card, Toothbrush card, Reddit style categories, Misc Product Card, Misc Reddit Categories, Misc Toothbrush Card, Prop Column, Prop Filter, Prop Mandatory, Prop Multiple, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000386",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000387",
    "text": "Component: v-examples\nSection: Column\nType: documentation\n\n## v-examples - Column\n\nChip groups with **column** prop can wrap their chips.\n\n<ExamplesExample file=\"v-chip-group/prop-column\" />",
    "display_content": "## v-examples - Column\n\nChip groups with **column** prop can wrap their chips.\n\n<ExamplesExample file=\"v-chip-group/prop-column\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Column",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000387",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000388",
    "text": "Component: v-examples\nSection: Filter results\nType: documentation\n\n## v-examples - Filter results\n\nEasily create chip groups that provide additional feedback with the **filter** prop. This creates an alternative visual style that communicates to the user that the chip is selected.\n\n<ExamplesExample file=\"v-chip-group/prop-filter\" />",
    "display_content": "## v-examples - Filter results\n\nEasily create chip groups that provide additional feedback with the **filter** prop. This creates an alternative visual style that communicates to the user that the chip is selected.\n\n<ExamplesExample file=\"v-chip-group/prop-filter\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Filter results",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000388",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000389",
    "text": "Component: v-examples\nSection: Mandatory\nType: documentation\n\n## v-examples - Mandatory\n\nChip groups with **mandatory** prop must always have a value selected.\n\n<ExamplesExample file=\"v-chip-group/prop-mandatory\" />",
    "display_content": "## v-examples - Mandatory\n\nChip groups with **mandatory** prop must always have a value selected.\n\n<ExamplesExample file=\"v-chip-group/prop-mandatory\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Mandatory",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000389",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000390",
    "text": "Component: v-examples\nSection: Multiple\nType: documentation\n\n## v-examples - Multiple\n\nChip groups with **multiple** prop can have many values selected.\n\n<ExamplesExample file=\"v-chip-group/prop-multiple\" />",
    "display_content": "## v-examples - Multiple\n\nChip groups with **multiple** prop can have many values selected.\n\n<ExamplesExample file=\"v-chip-group/prop-multiple\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Multiple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000390",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000391",
    "text": "Component: v-examples\nSection: Product card\nType: documentation\n\n## v-examples - Product card\n\nThe `v-chip` component can have an explicit value used for its model. This gets passed to the `v-chip-group` component and is useful for when you don't want to use the chips index as their values.\n\n<ExamplesExample file=\"v-chip-group/misc-product-card\" />",
    "display_content": "## v-examples - Product card\n\nThe `v-chip` component can have an explicit value used for its model. This gets passed to the `v-chip-group` component and is useful for when you don't want to use the chips index as their values.\n\n<ExamplesExample file=\"v-chip-group/misc-product-card\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Product card",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000391",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000392",
    "text": "Component: v-examples\nSection: Toothbrush card\nType: documentation\n\n## v-examples - Toothbrush card\n\nChip groups allow the creation of custom interfaces that perform the same actions as an item group or radio controls, but are stylistically different.\n\n<ExamplesExample file=\"v-chip-group/misc-toothbrush-card\" />",
    "display_content": "## v-examples - Toothbrush card\n\nChip groups allow the creation of custom interfaces that perform the same actions as an item group or radio controls, but are stylistically different.\n\n<ExamplesExample file=\"v-chip-group/misc-toothbrush-card\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Toothbrush card",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000392",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000393",
    "text": "Component: v-examples\nSection: Reddit style categories\nType: documentation\n\n## v-examples - Reddit style categories\n\nUse a combination of utility classes and emojis to create a Reddit-style category selection.\n\n<ExamplesExample file=\"v-chip-group/misc-reddit-categories\" />",
    "display_content": "## v-examples - Reddit style categories\n\nUse a combination of utility classes and emojis to create a Reddit-style category selection.\n\n<ExamplesExample file=\"v-chip-group/misc-reddit-categories\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Reddit style categories",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000393",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000394",
    "text": "Component: v-examples\nSection: Misc Product Card\nType: code_example\n\n## v-examples - Misc Product Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-card-title class=\"d-flex\">\n      <h2 class=\"text-h4\">Shirt Blouse</h2>\n\n      <v-spacer></v-spacer>\n\n      <span class=\"text-h6\">$44.50</span>\n    </v-card-title>\n\n    <v-card-text>\n      Our blouses are available in 8 colors. You can custom order a built-in arch support for any of the models.\n    </v-card-text>\n\n    <v-divider class=\"mx-4\"></v-divider>\n\n    <v-card-text>\n      <span class=\"subheading\">Select size</span>\n\n      <v-chip-group\n        v-model=\"selection\"\n        selected-class=\"text-deep-purple-accent-4\"\n        mandatory\n      >\n        <v-chip\n          v-for=\"size in sizes\"\n          :key=\"size\"\n          :text=\"size\"\n          :value=\"size\"\n          variant=\"outlined\"\n        ></v-chip>\n      </v-chip-group>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        text=\"Add to Cart\"\n        variant=\"flat\"\n        block\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const sizes = [\n    '04',\n    '06',\n    '08',\n    '10',\n    '12',\n    '14',\n  ]\n\n  const selection = ref('08')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      selection: '08',\n      sizes: [\n        '04', '06', '08', '10', '12', '14',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Product Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-card-title class=\"d-flex\">\n      <h2 class=\"text-h4\">Shirt Blouse</h2>\n\n      <v-spacer></v-spacer>\n\n      <span class=\"text-h6\">$44.50</span>\n    </v-card-title>\n\n    <v-card-text>\n      Our blouses are available in 8 colors. You can custom order a built-in arch support for any of the models.\n    </v-card-text>\n\n    <v-divider class=\"mx-4\"></v-divider>\n\n    <v-card-text>\n      <span class=\"subheading\">Select size</span>\n\n      <v-chip-group\n        v-model=\"selection\"\n        selected-class=\"text-deep-purple-accent-4\"\n        mandatory\n      >\n        <v-chip\n          v-for=\"size in sizes\"\n          :key=\"size\"\n          :text=\"size\"\n          :value=\"size\"\n          variant=\"outlined\"\n        ></v-chip>\n      </v-chip-group>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn\n        color=\"deep-purple-accent-4\"\n        text=\"Add to Cart\"\n        variant=\"flat\"\n        block\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const sizes = [\n    '04',\n    '06',\n    '08',\n    '10',\n    '12',\n    '14',\n  ]\n\n  const selection = ref('08')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      selection: '08',\n      sizes: [\n        '04', '06', '08', '10', '12', '14',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Product Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000394",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000395",
    "text": "Component: v-examples\nSection: Misc Reddit Categories\nType: code_example\n\n## v-examples - Misc Reddit Categories\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    max-width=\"400\"\n    rounded=\"xl\"\n    border\n  >\n    <div class=\"pa-4\">\n      <div class=\"text-h6\">What are you into?</div>\n\n      <div class=\"text-subtitle-1\">Select topics to continue</div>\n\n      <v-responsive class=\"overflow-y-auto\" max-height=\"280\">\n        <v-chip-group class=\"mt-3\" column>\n          <v-chip\n            v-for=\"topic in topics\"\n            :key=\"topic\"\n            :text=\"topic\"\n            :value=\"topic\"\n          ></v-chip>\n        </v-chip-group>\n      </v-responsive>\n    </div>\n\n    <v-divider></v-divider>\n\n    <div class=\"pa-2\">\n      <v-btn\n        color=\"orange-darken-1\"\n        rounded=\"t-0 b-xl\"\n        size=\"x-large\"\n        text=\"Continue\"\n        variant=\"flat\"\n        block\n      ></v-btn>\n    </div>\n  </v-sheet>\n</template>\n\n<script setup>\n  const topics = [\n    '🎤 Advice',\n    '🐕 Animals',\n    '🤖 Anime',\n    '🎨 Art & Design',\n    '💄 Beauty',\n    '🏢 Business',\n    '📚 Books',\n    '💡 Damn That\\'s Interesting',\n    '💃 Hobbies',\n    '🎮 Gaming',\n    '🎥 Movies',\n    '🎵 Music',\n    '📺 TV',\n    '🌮 Food',\n    '😂 Funny',\n    '💖 Health & Lifestyle',\n    '🎓 School',\n    '📰 News',\n    '🌲 Nature',\n    '🎨 Photography',\n    '🎏 Sports',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      topics: [\n        '🎤 Advice',\n        '🐕 Animals',\n        '🤖 Anime',\n        '🎨 Art & Design',\n        '💄 Beauty',\n        '🏢 Business',\n        '📚 Books',\n        '💡 Damn That\\'s Interesting',\n        '💃 Hobbies',\n        '🎮 Gaming',\n        '🎥 Movies',\n        '🎵 Music',\n        '📺 TV',\n        '🌮 Food',\n        '😂 Funny',\n        '💖 Health & Lifestyle',\n        '🎓 School',\n        '📰 News',\n        '🌲 Nature',\n        '🎨 Photography',\n        '🎏 Sports',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Reddit Categories\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    max-width=\"400\"\n    rounded=\"xl\"\n    border\n  >\n    <div class=\"pa-4\">\n      <div class=\"text-h6\">What are you into?</div>\n\n      <div class=\"text-subtitle-1\">Select topics to continue</div>\n\n      <v-responsive class=\"overflow-y-auto\" max-height=\"280\">\n        <v-chip-group class=\"mt-3\" column>\n          <v-chip\n            v-for=\"topic in topics\"\n            :key=\"topic\"\n            :text=\"topic\"\n            :value=\"topic\"\n          ></v-chip>\n        </v-chip-group>\n      </v-responsive>\n    </div>\n\n    <v-divider></v-divider>\n\n    <div class=\"pa-2\">\n      <v-btn\n        color=\"orange-darken-1\"\n        rounded=\"t-0 b-xl\"\n        size=\"x-large\"\n        text=\"Continue\"\n        variant=\"flat\"\n        block\n      ></v-btn>\n    </div>\n  </v-sheet>\n</template>\n\n<script setup>\n  const topics = [\n    '🎤 Advice',\n    '🐕 Animals',\n    '🤖 Anime',\n    '🎨 Art & Design',\n    '💄 Beauty',\n    '🏢 Business',\n    '📚 Books',\n    '💡 Damn That\\'s Interesting',\n    '💃 Hobbies',\n    '🎮 Gaming',\n    '🎥 Movies',\n    '🎵 Music',\n    '📺 TV',\n    '🌮 Food',\n    '😂 Funny',\n    '💖 Health & Lifestyle',\n    '🎓 School',\n    '📰 News',\n    '🌲 Nature',\n    '🎨 Photography',\n    '🎏 Sports',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      topics: [\n        '🎤 Advice',\n        '🐕 Animals',\n        '🤖 Anime',\n        '🎨 Art & Design',\n        '💄 Beauty',\n        '🏢 Business',\n        '📚 Books',\n        '💡 Damn That\\'s Interesting',\n        '💃 Hobbies',\n        '🎮 Gaming',\n        '🎥 Movies',\n        '🎵 Music',\n        '📺 TV',\n        '🌮 Food',\n        '😂 Funny',\n        '💖 Health & Lifestyle',\n        '🎓 School',\n        '📰 News',\n        '🌲 Nature',\n        '🎨 Photography',\n        '🎏 Sports',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Reddit Categories",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000395",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000396",
    "text": "Component: v-examples\nSection: Misc Toothbrush Card\nType: code_example\n\n## v-examples - Misc Toothbrush Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-card-title class=\"d-flex\">\n      <h2 class=\"text-h4\">Toothbrush</h2>\n\n      <v-spacer></v-spacer>\n\n      <span class=\"text-h6\">$4.99</span>\n    </v-card-title>\n\n    <v-card-text>\n      Our company takes pride in making handmade brushes.\n      Our toothbrushes are available in 4 different bristel types, from extra soft to hard.\n    </v-card-text>\n\n    <v-divider class=\"mx-4\"></v-divider>\n\n    <v-card-text>\n      <span class=\"subheading\">Select type</span>\n\n      <v-chip-group\n        v-model=\"selection\"\n        variant=\"flat\"\n        mandatory\n      >\n        <v-chip text=\"Extra Soft\" border></v-chip>\n        <v-chip text=\"Soft\" border></v-chip>\n        <v-chip text=\"Medium\" border></v-chip>\n        <v-chip text=\"Hard\" border></v-chip>\n      </v-chip-group>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn\n        color=\"secondary\"\n        text=\"Add to Cart\"\n        variant=\"flat\"\n        block\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const selection = shallowRef(2)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      selection: 2,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Toothbrush Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-card-title class=\"d-flex\">\n      <h2 class=\"text-h4\">Toothbrush</h2>\n\n      <v-spacer></v-spacer>\n\n      <span class=\"text-h6\">$4.99</span>\n    </v-card-title>\n\n    <v-card-text>\n      Our company takes pride in making handmade brushes.\n      Our toothbrushes are available in 4 different bristel types, from extra soft to hard.\n    </v-card-text>\n\n    <v-divider class=\"mx-4\"></v-divider>\n\n    <v-card-text>\n      <span class=\"subheading\">Select type</span>\n\n      <v-chip-group\n        v-model=\"selection\"\n        variant=\"flat\"\n        mandatory\n      >\n        <v-chip text=\"Extra Soft\" border></v-chip>\n        <v-chip text=\"Soft\" border></v-chip>\n        <v-chip text=\"Medium\" border></v-chip>\n        <v-chip text=\"Hard\" border></v-chip>\n      </v-chip-group>\n    </v-card-text>\n\n    <v-card-actions>\n      <v-btn\n        color=\"secondary\"\n        text=\"Add to Cart\"\n        variant=\"flat\"\n        block\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const selection = shallowRef(2)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      selection: 2,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Toothbrush Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000396",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000397",
    "text": "Component: v-examples\nSection: Prop Column\nType: code_example\n\n## v-examples - Prop Column\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"10\"\n    max-width=\"300\"\n    rounded=\"xl\"\n  >\n    <v-sheet\n      class=\"pa-3 bg-primary text-right\"\n      rounded=\"t-xl\"\n    >\n      <v-btn icon=\"mdi-content-save-cog-outline\"></v-btn>\n\n      <v-btn\n        class=\"ms-2\"\n        icon=\"mdi-check-bold\"\n      ></v-btn>\n    </v-sheet>\n\n    <div class=\"pa-4\">\n      <v-chip-group\n        selected-class=\"text-primary\"\n        column\n      >\n        <v-chip\n          v-for=\"tag in tags\"\n          :key=\"tag\"\n        >\n          {{ tag }}\n        </v-chip>\n      </v-chip-group>\n    </div>\n  </v-sheet>\n</template>\n\n<script setup>\n  const tags = [\n    'Work',\n    'Home Improvement',\n    'Vacation',\n    'Food',\n    'Drawers',\n    'Shopping',\n    'Art',\n    'Tech',\n    'Creative Writing',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tags: [\n        'Work',\n        'Home Improvement',\n        'Vacation',\n        'Food',\n        'Drawers',\n        'Shopping',\n        'Art',\n        'Tech',\n        'Creative Writing',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Column\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"10\"\n    max-width=\"300\"\n    rounded=\"xl\"\n  >\n    <v-sheet\n      class=\"pa-3 bg-primary text-right\"\n      rounded=\"t-xl\"\n    >\n      <v-btn icon=\"mdi-content-save-cog-outline\"></v-btn>\n\n      <v-btn\n        class=\"ms-2\"\n        icon=\"mdi-check-bold\"\n      ></v-btn>\n    </v-sheet>\n\n    <div class=\"pa-4\">\n      <v-chip-group\n        selected-class=\"text-primary\"\n        column\n      >\n        <v-chip\n          v-for=\"tag in tags\"\n          :key=\"tag\"\n        >\n          {{ tag }}\n        </v-chip>\n      </v-chip-group>\n    </div>\n  </v-sheet>\n</template>\n\n<script setup>\n  const tags = [\n    'Work',\n    'Home Improvement',\n    'Vacation',\n    'Food',\n    'Drawers',\n    'Shopping',\n    'Art',\n    'Tech',\n    'Creative Writing',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tags: [\n        'Work',\n        'Home Improvement',\n        'Vacation',\n        'Food',\n        'Drawers',\n        'Shopping',\n        'Art',\n        'Tech',\n        'Creative Writing',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Column",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000397",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000398",
    "text": "Component: v-examples\nSection: Prop Filter\nType: code_example\n\n## v-examples - Prop Filter\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-toolbar color=\"deep-purple-accent-4\">\n      <v-btn icon=\"mdi-close\"></v-btn>\n\n      <v-toolbar-title>Filter results</v-toolbar-title>\n    </v-toolbar>\n\n    <v-card-text>\n      <h2 class=\"text-h6 mb-2\">Choose amenities</h2>\n\n      <v-chip-group\n        v-model=\"amenities\"\n        column\n        multiple\n      >\n        <v-chip\n          text=\"Elevator\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Washer / Dryer\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Fireplace\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Wheelchair access\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Dogs ok\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Cats ok\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n      </v-chip-group>\n    </v-card-text>\n\n    <v-card-text>\n      <h2 class=\"text-h6 mb-2\">Choose neighborhoods</h2>\n\n      <v-chip-group\n        v-model=\"neighborhoods\"\n        column\n        multiple\n      >\n        <v-chip\n          text=\"Snowy Rock Place\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Honeylane Circle\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Donna Drive\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Elaine Street\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Court Street\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Kennedy Park\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n      </v-chip-group>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const amenities = shallowRef([1, 4])\n  const neighborhoods = shallowRef([1])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      amenities: [1, 4],\n      neighborhoods: [1],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Filter\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-toolbar color=\"deep-purple-accent-4\">\n      <v-btn icon=\"mdi-close\"></v-btn>\n\n      <v-toolbar-title>Filter results</v-toolbar-title>\n    </v-toolbar>\n\n    <v-card-text>\n      <h2 class=\"text-h6 mb-2\">Choose amenities</h2>\n\n      <v-chip-group\n        v-model=\"amenities\"\n        column\n        multiple\n      >\n        <v-chip\n          text=\"Elevator\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Washer / Dryer\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Fireplace\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Wheelchair access\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Dogs ok\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Cats ok\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n      </v-chip-group>\n    </v-card-text>\n\n    <v-card-text>\n      <h2 class=\"text-h6 mb-2\">Choose neighborhoods</h2>\n\n      <v-chip-group\n        v-model=\"neighborhoods\"\n        column\n        multiple\n      >\n        <v-chip\n          text=\"Snowy Rock Place\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Honeylane Circle\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Donna Drive\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Elaine Street\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Court Street\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n\n        <v-chip\n          text=\"Kennedy Park\"\n          variant=\"outlined\"\n          filter\n        ></v-chip>\n      </v-chip-group>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const amenities = shallowRef([1, 4])\n  const neighborhoods = shallowRef([1])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      amenities: [1, 4],\n      neighborhoods: [1],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Filter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000398",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000399",
    "text": "Component: v-examples\nSection: Prop Mandatory\nType: code_example\n\n## v-examples - Prop Mandatory\n\n```vue\n<template>\n  <v-sheet class=\"py-4 px-1\">\n    <v-chip-group\n      selected-class=\"text-primary\"\n      mandatory\n    >\n      <v-chip\n        v-for=\"tag in tags\"\n        :key=\"tag\"\n        :text=\"tag\"\n      ></v-chip>\n    </v-chip-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  const tags = [\n    'Work',\n    'Home Improvement',\n    'Vacation',\n    'Food',\n    'Drawers',\n    'Shopping',\n    'Art',\n    'Tech',\n    'Creative Writing',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tags: [\n        'Work',\n        'Home Improvement',\n        'Vacation',\n        'Food',\n        'Drawers',\n        'Shopping',\n        'Art',\n        'Tech',\n        'Creative Writing',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Mandatory\n\n```vue\n<template>\n  <v-sheet class=\"py-4 px-1\">\n    <v-chip-group\n      selected-class=\"text-primary\"\n      mandatory\n    >\n      <v-chip\n        v-for=\"tag in tags\"\n        :key=\"tag\"\n        :text=\"tag\"\n      ></v-chip>\n    </v-chip-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  const tags = [\n    'Work',\n    'Home Improvement',\n    'Vacation',\n    'Food',\n    'Drawers',\n    'Shopping',\n    'Art',\n    'Tech',\n    'Creative Writing',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tags: [\n        'Work',\n        'Home Improvement',\n        'Vacation',\n        'Food',\n        'Drawers',\n        'Shopping',\n        'Art',\n        'Tech',\n        'Creative Writing',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Mandatory",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000399",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000400",
    "text": "Component: v-examples\nSection: Prop Multiple\nType: code_example\n\n## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-sheet class=\"py-4 px-1\">\n    <v-chip-group\n      selected-class=\"text-primary\"\n      multiple\n    >\n      <v-chip\n        v-for=\"tag in tags\"\n        :key=\"tag\"\n        :text=\"tag\"\n      ></v-chip>\n    </v-chip-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  const tags = [\n    'Work',\n    'Home Improvement',\n    'Vacation',\n    'Food',\n    'Drawers',\n    'Shopping',\n    'Art',\n    'Tech',\n    'Creative Writing',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tags: [\n        'Work',\n        'Home Improvement',\n        'Vacation',\n        'Food',\n        'Drawers',\n        'Shopping',\n        'Art',\n        'Tech',\n        'Creative Writing',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-sheet class=\"py-4 px-1\">\n    <v-chip-group\n      selected-class=\"text-primary\"\n      multiple\n    >\n      <v-chip\n        v-for=\"tag in tags\"\n        :key=\"tag\"\n        :text=\"tag\"\n      ></v-chip>\n    </v-chip-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  const tags = [\n    'Work',\n    'Home Improvement',\n    'Vacation',\n    'Food',\n    'Drawers',\n    'Shopping',\n    'Art',\n    'Tech',\n    'Creative Writing',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tags: [\n        'Work',\n        'Home Improvement',\n        'Vacation',\n        'Food',\n        'Drawers',\n        'Shopping',\n        'Art',\n        'Tech',\n        'Creative Writing',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Multiple",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000400",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000401",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-chip-group v-bind=\"props\">\n        <v-chip>Chip 1</v-chip>\n\n        <v-chip>Chip 2</v-chip>\n\n        <v-chip>Chip 3</v-chip>\n      </v-chip-group>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-chip-group'\n  const model = ref('default')\n  const options = ['filter']\n  const props = computed(() => {\n    return {\n      filter: model.value === 'filter' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-chip>Chip 1</v-chip>\n\n  <v-chip>Chip 2</v-chip>\n\n  <v-chip>Chip 3</v-chip>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-chip-group v-bind=\"props\">\n        <v-chip>Chip 1</v-chip>\n\n        <v-chip>Chip 2</v-chip>\n\n        <v-chip>Chip 3</v-chip>\n      </v-chip-group>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-chip-group'\n  const model = ref('default')\n  const options = ['filter']\n  const props = computed(() => {\n    return {\n      filter: model.value === 'filter' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-chip>Chip 1</v-chip>\n\n  <v-chip>Chip 2</v-chip>\n\n  <v-chip>Chip 3</v-chip>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000401",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000402",
    "text": "Component: v-color-inputs\nType: component_overview\n\n# v-color-inputs\n\nThe `v-color-input` component combines a text field with a color picker..",
    "display_content": "# v-color-inputs\n\nThe `v-color-input` component combines a text field with a color picker..",
    "metadata": {
      "component": "v-color-inputs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000402",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000403",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nLabs components require a manual import and installation of the component.",
    "display_content": "# v-installation\n\nLabs components require a manual import and installation of the component.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000403",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000404",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nAt its core, the `v-color-input` component is a basic container that extends [v-text-field](/components/text-fields).",
    "display_content": "# v-usage\n\nAt its core, the `v-color-input` component is a basic container that extends [v-text-field](/components/text-fields).",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000404",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000405",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-color-input](/api/v-color-input/) | Primary component | | [v-color-picker](/api/v-color-picker/) | Color picker component | | [v-text-field](/api/v-text-field/) | Text field component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-color-input](/api/v-color-input/) | Primary component | | [v-color-picker](/api/v-color-picker/) | Color picker component | | [v-text-field](/api/v-text-field/) | Text field component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000405",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000406",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-color-input` component provides a clean interface for selecting colors.\n\nAvailable sections: Props, Pip icon, Color Pip, Prop Color Pip, Prop Model, Prop Prepend Icon, Usage",
    "display_content": "# v-guide\n\nThe `v-color-input` component provides a clean interface for selecting colors.\n\nAvailable sections: Props, Pip icon, Color Pip, Prop Color Pip, Prop Model, Prop Prepend Icon, Usage",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000406",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000407",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-color-input` component extends the [v-text-field](/components/text-fields/) and [v-color-picker](/components/color-pickers/) component; and supports all of their props.",
    "display_content": "## v-guide - Props\n\nThe `v-color-input` component extends the [v-text-field](/components/text-fields/) and [v-color-picker](/components/color-pickers/) component; and supports all of their props.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000407",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000408",
    "text": "Component: v-guide\nSection: Pip icon\nType: documentation\n\n## v-guide - Pip icon\n\nYou can move the pip icon within the input or entirely by utilizing the **prepend-icon** and **prepend-inner-icon** properties.\n\n<ExamplesExample file=\"v-color-input/prop-prepend-icon\" />",
    "display_content": "## v-guide - Pip icon\n\nYou can move the pip icon within the input or entirely by utilizing the **prepend-icon** and **prepend-inner-icon** properties.\n\n<ExamplesExample file=\"v-color-input/prop-prepend-icon\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Pip icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000408",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000409",
    "text": "Component: v-guide\nSection: Color Pip\nType: documentation\n\n## v-guide - Color Pip\n\nThe `color-pip` is a boolean that determines whether the pip icon color matches the selected color.\n\n<ExamplesExample file=\"v-color-input/prop-color-pip\" />",
    "display_content": "## v-guide - Color Pip\n\nThe `color-pip` is a boolean that determines whether the pip icon color matches the selected color.\n\n<ExamplesExample file=\"v-color-input/prop-color-pip\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Color Pip",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000409",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000410",
    "text": "Component: v-guide\nSection: Prop Color Pip\nType: code_example\n\n## v-guide - Prop Color Pip\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-color-input\n          hide-details=\"auto\"\n          label=\"Colored Pip\"\n        ></v-color-input>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-color-input\n          :color-pip=\"false\"\n          hide-details=\"auto\"\n          label=\"Non Colored Pip\"\n        ></v-color-input>\n      </v-col>\n    </v-row>\n  </v-container>\n\n</template>\n\n```",
    "display_content": "## v-guide - Prop Color Pip\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-color-input\n          hide-details=\"auto\"\n          label=\"Colored Pip\"\n        ></v-color-input>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-color-input\n          :color-pip=\"false\"\n          hide-details=\"auto\"\n          label=\"Non Colored Pip\"\n        ></v-color-input>\n      </v-col>\n    </v-row>\n  </v-container>\n\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Color Pip",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000410",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000411",
    "text": "Component: v-guide\nSection: Prop Model\nType: code_example\n\n## v-guide - Prop Model\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-color-input\n      v-model=\"model\"\n      label=\"Select a color\"\n      max-width=\"368\"\n    ></v-color-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Model\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-color-input\n      v-model=\"model\"\n      label=\"Select a color\"\n      max-width=\"368\"\n    ></v-color-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Model",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000411",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000412",
    "text": "Component: v-guide\nSection: Prop Prepend Icon\nType: code_example\n\n## v-guide - Prop Prepend Icon\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-color-input\n          hide-details=\"auto\"\n          label=\"Select a color\"\n        ></v-color-input>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-color-input\n          hide-details=\"auto\"\n          label=\"Select a color\"\n          prepend-inner-icon=\"\"\n        ></v-color-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Prepend Icon\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-color-input\n          hide-details=\"auto\"\n          label=\"Select a color\"\n        ></v-color-input>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-color-input\n          hide-details=\"auto\"\n          label=\"Select a color\"\n          prepend-inner-icon=\"\"\n        ></v-color-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Prepend Icon",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000412",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000413",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-color-input v-bind=\"props\"></v-color-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"colorPip\" label=\"Color Pip\"></v-checkbox>\n\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-color-input'\n  const model = ref('default')\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const clear = ref(false)\n  const colorPip = ref(true)\n  const counter = ref(false)\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      colorPip: colorPip.value || false,\n      counter: counter.value || undefined,\n      disabled: disabled.value || undefined,\n      label: 'Color input',\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-color-input v-bind=\"props\"></v-color-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"colorPip\" label=\"Color Pip\"></v-checkbox>\n\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-color-input'\n  const model = ref('default')\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const clear = ref(false)\n  const colorPip = ref(true)\n  const counter = ref(false)\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      colorPip: colorPip.value || false,\n      counter: counter.value || undefined,\n      disabled: disabled.value || undefined,\n      label: 'Color input',\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000413",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000414",
    "text": "Component: v-color-pickers\nType: component_overview\n\n# v-color-pickers\n\nThe `v-color-picker` allows you to select a color using a variety of input methods.",
    "display_content": "# v-color-pickers\n\nThe `v-color-picker` allows you to select a color using a variety of input methods.",
    "metadata": {
      "component": "v-color-pickers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000414",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000415",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-color-picker](/api/v-color-picker/) | Primary component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-color-picker](/api/v-color-picker/) | Primary component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000415",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000416",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThere are a number of props available to help you customize the component by hiding or showing the various parts of the picker. You can independently hide the canvas, the sliders, and the inputs. You can also show a collection of swatches.\n\nAvailable sections: Customizing the look of the picker, Elevation, Mode, Model, Swatches, Prop Canvas, Prop Elevation, Prop Mode, Prop Model, Prop Swatches, Usage",
    "display_content": "# v-examples\n\nThere are a number of props available to help you customize the component by hiding or showing the various parts of the picker. You can independently hide the canvas, the sliders, and the inputs. You can also show a collection of swatches.\n\nAvailable sections: Customizing the look of the picker, Elevation, Mode, Model, Swatches, Prop Canvas, Prop Elevation, Prop Mode, Prop Model, Prop Swatches, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000416",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000417",
    "text": "Component: v-examples\nSection: Customizing the look of the picker\nType: documentation\n\n## v-examples - Customizing the look of the picker\n\nThere are a number of props available to help you customize the component by hiding or showing the various parts of the picker. You can independently hide the canvas, the sliders, and the inputs. You can also show a collection of swatches.\n\n<ExamplesExample file=\"v-color-picker/prop-canvas\" />",
    "display_content": "## v-examples - Customizing the look of the picker\n\nThere are a number of props available to help you customize the component by hiding or showing the various parts of the picker. You can independently hide the canvas, the sliders, and the inputs. You can also show a collection of swatches.\n\n<ExamplesExample file=\"v-color-picker/prop-canvas\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Customizing the look of the picker",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000417",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000418",
    "text": "Component: v-examples\nSection: Elevation\nType: documentation\n\n## v-examples - Elevation\n\nAdjust the elevation of the `v-color-picker` component using the **elevation** or **flat** prop. The **flat** is equivalent to setting **elevation** to 0.\n\n<ExamplesExample file=\"v-color-picker/prop-elevation\" />",
    "display_content": "## v-examples - Elevation\n\nAdjust the elevation of the `v-color-picker` component using the **elevation** or **flat** prop. The **flat** is equivalent to setting **elevation** to 0.\n\n<ExamplesExample file=\"v-color-picker/prop-elevation\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Elevation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000418",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000419",
    "text": "Component: v-examples\nSection: Mode\nType: documentation\n\n## v-examples - Mode\n\nYou can specify which input modes are available to your users with the `modes` prop. If you only set a single mode, then the mode toggle will automatically be hidden. You can also control the current mode with the `mode` v-model.\n\n<ExamplesExample file=\"v-color-picker/prop-mode\" />",
    "display_content": "## v-examples - Mode\n\nYou can specify which input modes are available to your users with the `modes` prop. If you only set a single mode, then the mode toggle will automatically be hidden. You can also control the current mode with the `mode` v-model.\n\n<ExamplesExample file=\"v-color-picker/prop-mode\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Mode",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000419",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000420",
    "text": "Component: v-examples\nSection: Model\nType: documentation\n\n## v-examples - Model\n\nThe `v-color-picker` uses the `v-model` prop to control the color displayed. It supports hex strings such as **#FF00FF** and **#FF00FF00**, and objects representing **RGBA**, **HSLA** and **HSVA** values. The component will try to emit the color in the same format that was provided. If the value is null or an unsupported format, then the `v-color-picker` will default to emitting hex colors.\n\n<ExamplesExample file=\"v-color-picker/prop-model\" />",
    "display_content": "## v-examples - Model\n\nThe `v-color-picker` uses the `v-model` prop to control the color displayed. It supports hex strings such as **#FF00FF** and **#FF00FF00**, and objects representing **RGBA**, **HSLA** and **HSVA** values. The component will try to emit the color in the same format that was provided. If the value is null or an unsupported format, then the `v-color-picker` will default to emitting hex colors.\n\n<ExamplesExample file=\"v-color-picker/prop-model\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Model",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000420",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000421",
    "text": "Component: v-examples\nSection: Swatches\nType: documentation\n\n## v-examples - Swatches\n\nUsing the `show-swatches` prop you can display an array of color swatches that users can pick from. It is also possible to customize what colors are shown using the `swatches` prop. This prop accepts a two-dimensional array, where the first dimension defines a column, and second dimension defines the swatches from top to bottom by providing rgba hex strings. You can also set the max height of the swatches section with the `swatches-max-height` prop.\n\n<ExamplesExample file=\"v-color-picker/prop-swatches\" />",
    "display_content": "## v-examples - Swatches\n\nUsing the `show-swatches` prop you can display an array of color swatches that users can pick from. It is also possible to customize what colors are shown using the `swatches` prop. This prop accepts a two-dimensional array, where the first dimension defines a column, and second dimension defines the swatches from top to bottom by providing rgba hex strings. You can also set the max height of the swatches section with the `swatches-max-height` prop.\n\n<ExamplesExample file=\"v-color-picker/prop-swatches\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Swatches",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000421",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000422",
    "text": "Component: v-examples\nSection: Prop Canvas\nType: code_example\n\n## v-examples - Prop Canvas\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-color-picker\n      v-model=\"c1\"\n      hide-canvas\n      hide-sliders\n    ></v-color-picker>\n\n    <v-color-picker\n      v-model=\"c2\"\n      hide-inputs\n      show-swatches\n    ></v-color-picker>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const c1 = ref('#ff00ff')\n  const c2 = ref('#00ff00')\n</script>\n\n<script>\n\n  export default {\n    data: () => ({\n      c1: '#ff00ff',\n      c2: '#00ff00',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Canvas\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-color-picker\n      v-model=\"c1\"\n      hide-canvas\n      hide-sliders\n    ></v-color-picker>\n\n    <v-color-picker\n      v-model=\"c2\"\n      hide-inputs\n      show-swatches\n    ></v-color-picker>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const c1 = ref('#ff00ff')\n  const c2 = ref('#00ff00')\n</script>\n\n<script>\n\n  export default {\n    data: () => ({\n      c1: '#ff00ff',\n      c2: '#00ff00',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Canvas",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000422",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000423",
    "text": "Component: v-examples\nSection: Prop Elevation\nType: code_example\n\n## v-examples - Prop Elevation\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-color-picker\n      v-model=\"picker\"\n      elevation=\"0\"\n    ></v-color-picker>\n\n    <v-color-picker\n      v-model=\"picker\"\n      elevation=\"15\"\n    ></v-color-picker>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: null,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Elevation\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-color-picker\n      v-model=\"picker\"\n      elevation=\"0\"\n    ></v-color-picker>\n\n    <v-color-picker\n      v-model=\"picker\"\n      elevation=\"15\"\n    ></v-color-picker>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: null,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Elevation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000423",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000424",
    "text": "Component: v-examples\nSection: Prop Mode\nType: code_example\n\n## v-examples - Prop Mode\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-color-picker\n      v-model=\"color\"\n      :modes=\"['rgba']\"\n    ></v-color-picker>\n\n    <div class=\"d-flex flex-column\">\n      <v-color-picker\n        v-model=\"color\"\n        v-model:mode=\"mode\"\n      ></v-color-picker>\n      <v-select\n        v-model=\"mode\"\n        :items=\"modes\"\n        style=\"max-width: 300px\"\n      ></v-select>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const color = ref('#ff00ff')\n  const mode = ref('hsla')\n  const modes = ref(['hsla', 'rgba', 'hexa'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      color: '#ff00ff',\n      mode: 'hsla',\n      modes: ['hsla', 'rgba', 'hexa'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Mode\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-color-picker\n      v-model=\"color\"\n      :modes=\"['rgba']\"\n    ></v-color-picker>\n\n    <div class=\"d-flex flex-column\">\n      <v-color-picker\n        v-model=\"color\"\n        v-model:mode=\"mode\"\n      ></v-color-picker>\n      <v-select\n        v-model=\"mode\"\n        :items=\"modes\"\n        style=\"max-width: 300px\"\n      ></v-select>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const color = ref('#ff00ff')\n  const mode = ref('hsla')\n  const modes = ref(['hsla', 'rgba', 'hexa'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      color: '#ff00ff',\n      mode: 'hsla',\n      modes: ['hsla', 'rgba', 'hexa'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Mode",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000424",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000425",
    "text": "Component: v-examples\nSection: Prop Model\nType: code_example\n\n## v-examples - Prop Model\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-btn class=\"my-4\" block @click=\"color = null\">null</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = '#ff00ff'\">hex</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = '#ff00ffff'\">hexa</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = { r: 255, g: 0, b: 255, a: 1 }\">rgba</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = { h: 300, s: 1, l: 0.5, a: 1 }\">hsla</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = { h: 300, s: 1, v: 1, a: 1 }\">hsva</v-btn>\n      </v-col>\n      <v-col\n        class=\"d-flex justify-center\"\n      >\n        <v-color-picker v-model=\"color\"></v-color-picker>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-sheet\n          class=\"pa-4\"\n        >\n          <pre>{{ color }}</pre>\n        </v-sheet>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const color = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      color: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Model\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-btn class=\"my-4\" block @click=\"color = null\">null</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = '#ff00ff'\">hex</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = '#ff00ffff'\">hexa</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = { r: 255, g: 0, b: 255, a: 1 }\">rgba</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = { h: 300, s: 1, l: 0.5, a: 1 }\">hsla</v-btn>\n        <v-btn class=\"my-4\" block @click=\"color = { h: 300, s: 1, v: 1, a: 1 }\">hsva</v-btn>\n      </v-col>\n      <v-col\n        class=\"d-flex justify-center\"\n      >\n        <v-color-picker v-model=\"color\"></v-color-picker>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-sheet\n          class=\"pa-4\"\n        >\n          <pre>{{ color }}</pre>\n        </v-sheet>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const color = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      color: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Model",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000425",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000426",
    "text": "Component: v-examples\nSection: Prop Swatches\nType: code_example\n\n## v-examples - Prop Swatches\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-color-picker\n      class=\"ma-2\"\n      swatches-max-height=\"400px\"\n      show-swatches\n    ></v-color-picker>\n    <v-color-picker\n      :swatches=\"swatches\"\n      class=\"ma-2\"\n      show-swatches\n    ></v-color-picker>\n  </div>\n</template>\n\n<script setup>\n  const swatches = [\n    ['#FF0000', '#AA0000', '#550000'],\n    ['#FFFF00', '#AAAA00', '#555500'],\n    ['#00FF00', '#00AA00', '#005500'],\n    ['#00FFFF', '#00AAAA', '#005555'],\n    ['#0000FF', '#0000AA', '#000055'],\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      swatches: [\n        ['#FF0000', '#AA0000', '#550000'],\n        ['#FFFF00', '#AAAA00', '#555500'],\n        ['#00FF00', '#00AA00', '#005500'],\n        ['#00FFFF', '#00AAAA', '#005555'],\n        ['#0000FF', '#0000AA', '#000055'],\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Swatches\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-color-picker\n      class=\"ma-2\"\n      swatches-max-height=\"400px\"\n      show-swatches\n    ></v-color-picker>\n    <v-color-picker\n      :swatches=\"swatches\"\n      class=\"ma-2\"\n      show-swatches\n    ></v-color-picker>\n  </div>\n</template>\n\n<script setup>\n  const swatches = [\n    ['#FF0000', '#AA0000', '#550000'],\n    ['#FFFF00', '#AAAA00', '#555500'],\n    ['#00FF00', '#00AA00', '#005500'],\n    ['#00FFFF', '#00AAAA', '#005555'],\n    ['#0000FF', '#0000AA', '#000055'],\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      swatches: [\n        ['#FF0000', '#AA0000', '#550000'],\n        ['#FFFF00', '#AAAA00', '#555500'],\n        ['#00FF00', '#00AA00', '#005500'],\n        ['#00FFFF', '#00AAAA', '#005555'],\n        ['#0000FF', '#0000AA', '#000055'],\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Swatches",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000426",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000427",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"d-flex justify-center\">\n      <v-color-picker v-bind=\"props\"></v-color-picker>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"hideCanvas\" label=\"Hide canvas\"></v-checkbox>\n\n      <v-checkbox v-model=\"hideInputs\" label=\"Hide inputs\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-color-picker'\n  const model = ref('default')\n  const options = ['Disabled', 'Show swatches']\n  const hideCanvas = ref()\n  const hideInputs = ref()\n  const props = computed(() => {\n    return {\n      disabled: model.value === 'Disabled' ? true : undefined,\n      'hide-canvas': hideCanvas.value || undefined,\n      'hide-inputs': hideInputs.value || undefined,\n      'show-swatches': model.value === 'Show swatches' ? true : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"d-flex justify-center\">\n      <v-color-picker v-bind=\"props\"></v-color-picker>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"hideCanvas\" label=\"Hide canvas\"></v-checkbox>\n\n      <v-checkbox v-model=\"hideInputs\" label=\"Hide inputs\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-color-picker'\n  const model = ref('default')\n  const options = ['Disabled', 'Show swatches']\n  const hideCanvas = ref()\n  const hideInputs = ref()\n  const props = computed(() => {\n    return {\n      disabled: model.value === 'Disabled' ? true : undefined,\n      'hide-canvas': hideCanvas.value || undefined,\n      'hide-inputs': hideInputs.value || undefined,\n      'show-swatches': model.value === 'Show swatches' ? true : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000427",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000428",
    "text": "Component: v-combobox\nType: component_overview\n\n# v-combobox\n\nThe `v-combobox` component is a [v-text-field](/components/text-fields) that allows the user to select values from a provided **items** array, or to enter their own value. Created items will be returned as strings.",
    "display_content": "# v-combobox\n\nThe `v-combobox` component is a [v-text-field](/components/text-fields) that allows the user to select values from a provided **items** array, or to enter their own value. Created items will be returned as strings.",
    "metadata": {
      "component": "v-combobox",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000428",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000429",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nWith Combobox, you can allow a user to create new values that may not be present in a provided items list.",
    "display_content": "# v-usage\n\nWith Combobox, you can allow a user to create new values that may not be present in a provided items list.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000429",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000430",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-combobox](/api/v-combobox/) | Primary component | | [v-autocomplete](/api/v-autocomplete/) | A select component that allows for advanced filtering | | [v-select](/api/v-select/) | A replacement for the HTML <select></select> |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-combobox](/api/v-combobox/) | Primary component | | [v-autocomplete](/api/v-autocomplete/) | A select component that allows for advanced filtering | | [v-select](/api/v-select/) | A replacement for the HTML <select></select> |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000430",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000431",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: error As the Combobox allows user input, it **always** returns the full value provided to it (for example a list of Objects will always return an Object when selected). This is because there's no way to tell if a value is supposed to be user input or an object lookup [GitHub Issue](https://github.com/vuetifyjs/vuetify/issues/5479)",
    "display_content": "# v-caveats\n\n::: error As the Combobox allows user input, it **always** returns the full value provided to it (for example a list of Objects will always return an Object when selected). This is because there's no way to tell if a value is supposed to be user input or an object lookup [GitHub Issue](https://github.com/vuetifyjs/vuetify/issues/5479)",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000431",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000432",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can use `density` prop to adjust vertical spacing within the component.\n\nAvailable sections: Density, Multiple combobox, No data with chips, Advanced custom options, Misc Advanced, Prop Density, Prop Multiple, Slot No Data, Usage",
    "display_content": "# v-examples\n\nYou can use `density` prop to adjust vertical spacing within the component.\n\nAvailable sections: Density, Multiple combobox, No data with chips, Advanced custom options, Misc Advanced, Prop Density, Prop Multiple, Slot No Data, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000432",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000433",
    "text": "Component: v-examples\nSection: Density\nType: documentation\n\n## v-examples - Density\n\nYou can use `density` prop to adjust vertical spacing within the component.\n\n<ExamplesExample file=\"v-combobox/prop-density\" />",
    "display_content": "## v-examples - Density\n\nYou can use `density` prop to adjust vertical spacing within the component.\n\n<ExamplesExample file=\"v-combobox/prop-density\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000433",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000434",
    "text": "Component: v-examples\nSection: Multiple combobox\nType: documentation\n\n## v-examples - Multiple combobox\n\nPreviously known as **tags** - user is allowed to enter more than one value.\n\n<ExamplesExample file=\"v-combobox/prop-multiple\" />",
    "display_content": "## v-examples - Multiple combobox\n\nPreviously known as **tags** - user is allowed to enter more than one value.\n\n<ExamplesExample file=\"v-combobox/prop-multiple\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Multiple combobox",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000434",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000435",
    "text": "Component: v-examples\nSection: No data with chips\nType: documentation\n\n## v-examples - No data with chips\n\nIn this example we utilize a custom **no-data** slot to provide context to the user when searching / creating items.\n\n<ExamplesExample file=\"v-combobox/slot-no-data\" />",
    "display_content": "## v-examples - No data with chips\n\nIn this example we utilize a custom **no-data** slot to provide context to the user when searching / creating items.\n\n<ExamplesExample file=\"v-combobox/slot-no-data\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "No data with chips",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000435",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000436",
    "text": "Component: v-examples\nSection: Advanced custom options\nType: documentation\n\n## v-examples - Advanced custom options\n\nThe `v-combobox` improves upon the added functionality from `v-select` and `v-autocomplete`. This provides you with an expansive interface to create truly customized implementations. This example takes advantage of some more advanced features such as a custom **filter** algorithm, inline list editing and dynamic input items.\n\n<ExamplesExample file=\"v-combobox/misc-advanced\" />",
    "display_content": "## v-examples - Advanced custom options\n\nThe `v-combobox` improves upon the added functionality from `v-select` and `v-autocomplete`. This provides you with an expansive interface to create truly customized implementations. This example takes advantage of some more advanced features such as a custom **filter** algorithm, inline list editing and dynamic input items.\n\n<ExamplesExample file=\"v-combobox/misc-advanced\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Advanced custom options",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000436",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000437",
    "text": "Component: v-examples\nSection: Misc Advanced\nType: code_example\n\n## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-container fluid>\n    <v-combobox\n      v-model=\"model\"\n      v-model:search=\"search\"\n      :custom-filter=\"filter\"\n      :items=\"items\"\n      label=\"Search for an option\"\n      variant=\"solo\"\n      hide-selected\n      multiple\n    >\n      <template v-slot:selection=\"{ item, index }\">\n        <v-chip\n          v-if=\"item === Object(item)\"\n          :color=\"`${item.raw.color}-lighten-3`\"\n          :text=\"item.title\"\n          size=\"small\"\n          variant=\"flat\"\n          closable\n          label\n          @click:close=\"removeSelection(index)\"\n        ></v-chip>\n      </template>\n      <template v-slot:item=\"{ props, item }\">\n        <v-list-item v-if=\"item.raw.header && search\">\n          <span class=\"mr-3\">Create</span>\n          <v-chip\n            :color=\"`${colors[nonce - 1]}-lighten-3`\"\n            size=\"small\"\n            variant=\"flat\"\n            label\n          >\n            {{ search }}\n          </v-chip>\n        </v-list-item>\n        <v-list-subheader v-else-if=\"item.raw.header\" :title=\"item.title\"></v-list-subheader>\n        <v-list-item v-else @click=\"props.onClick\">\n          <v-text-field\n            v-if=\"editingItem === item.raw\"\n            v-model=\"editingItem.title\"\n            bg-color=\"transparent\"\n            class=\"mr-3\"\n            density=\"compact\"\n            variant=\"plain\"\n            autofocus\n            hide-details\n            @click.stop\n            @keydown.stop\n            @keyup.enter=\"edit(item.raw)\"\n          ></v-text-field>\n          <v-chip\n            v-else\n            :color=\"`${item.raw.color}-lighten-3`\"\n            :text=\"item.raw.title\"\n            variant=\"flat\"\n            label\n          ></v-chip>\n          <template v-slot:append>\n            <v-btn\n              :color=\"editingItem !== item.raw ? 'primary' : 'success'\"\n              :icon=\"editingItem !== item.raw ? 'mdi-pencil' : 'mdi-check'\"\n              size=\"small\"\n              variant=\"text\"\n              @click.stop.prevent=\"edit(item.raw)\"\n            ></v-btn>\n          </template>\n        </v-list-item>\n      </template>\n    </v-combobox>\n  </v-container>\n</template>\n\n<script setup>\n  import { onMounted, ref, watch } from 'vue'\n\n  const colors = ['green', 'purple', 'indigo', 'cyan', 'teal', 'orange']\n  const editingItem = ref(null)\n  const items = ref([\n    { header: true, title: 'Select an option or create one' },\n    { title: 'Foo', color: 'blue' },\n    { title: 'Bar', color: 'red' },\n  ])\n  const nonce = ref(1)\n  const model = ref([])\n  const search = ref(null)\n\n  onMounted(() => {\n    model.value.push(items.value[1])\n  })\n\n  watch(model, (val, prev) => {\n    if (val.length === prev.length) return\n\n    model.value = val.map(v => {\n      if (typeof v === 'string') {\n        v = {\n          title: v,\n          color: colors[nonce.value - 1],\n        }\n\n        items.value.push(v)\n\n        nonce.value++\n      }\n\n      return v\n    })\n  })\n\n  function edit (item) {\n    if (!editingItem.value) {\n      editingItem.value = item\n    } else {\n      editingItem.value = null\n    }\n  }\n\n  function filter (value, queryText, item) {\n    const toLowerCaseString = val =>\n      String(val != null ? val : '').toLowerCase()\n\n    const query = toLowerCaseString(queryText)\n\n    const availableOptions = items.value.filter(x => !model.value.includes(x))\n    const hasAnyMatch = availableOptions.some(\n      x => !x.header && toLowerCaseString(x.title).includes(query)\n    )\n    if (item.raw.header) return !hasAnyMatch\n\n    const text = toLowerCaseString(item.raw.title)\n\n    return text.includes(query)\n  }\n\n  function removeSelection (index) {\n    model.value.splice(index, 1)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      colors: ['green', 'purple', 'indigo', 'cyan', 'teal', 'orange'],\n      editingItem: null,\n      items: [\n        { header: true, title: 'Select an option or create one' },\n        {\n          title: 'Foo',\n          color: 'blue',\n        },\n        {\n          title: 'Bar',\n          color: 'red',\n        },\n      ],\n      nonce: 1,\n      model: [],\n      search: null,\n    }),\n\n    watch: {\n      model (val, prev) {\n        if (val.length === prev.length) return\n\n        this.model = val.map(v => {\n          if (typeof v === 'string') {\n            v = {\n              title: v,\n              color: this.colors[this.nonce - 1],\n            }\n\n            this.items.push(v)\n\n            this.nonce++\n          }\n\n          return v\n        })\n      },\n    },\n\n    mounted () {\n      this.model = [this.items[1]]\n    },\n\n    methods: {\n      edit (item) {\n        if (!this.editingItem) {\n          this.editingItem = item\n        } else {\n          this.editingItem = null\n        }\n      },\n      filter (value, queryText, item) {\n        const toLowerCaseString = val =>\n          String(val != null ? val : '').toLowerCase()\n\n        const query = toLowerCaseString(queryText)\n\n        const availableOptions = this.items.filter(x => !this.model.includes(x))\n        const hasAnyMatch = availableOptions.some(\n          x => !x.header && toLowerCaseString(x.title).includes(query)\n        )\n        if (item.raw.header) return !hasAnyMatch\n\n        const text = toLowerCaseString(item.raw.title)\n\n        return text.includes(query)\n      },\n      removeSelection (index) {\n        this.model.splice(index, 1)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-container fluid>\n    <v-combobox\n      v-model=\"model\"\n      v-model:search=\"search\"\n      :custom-filter=\"filter\"\n      :items=\"items\"\n      label=\"Search for an option\"\n      variant=\"solo\"\n      hide-selected\n      multiple\n    >\n      <template v-slot:selection=\"{ item, index }\">\n        <v-chip\n          v-if=\"item === Object(item)\"\n          :color=\"`${item.raw.color}-lighten-3`\"\n          :text=\"item.title\"\n          size=\"small\"\n          variant=\"flat\"\n          closable\n          label\n          @click:close=\"removeSelection(index)\"\n        ></v-chip>\n      </template>\n      <template v-slot:item=\"{ props, item }\">\n        <v-list-item v-if=\"item.raw.header && search\">\n          <span class=\"mr-3\">Create</span>\n          <v-chip\n            :color=\"`${colors[nonce - 1]}-lighten-3`\"\n            size=\"small\"\n            variant=\"flat\"\n            label\n          >\n            {{ search }}\n          </v-chip>\n        </v-list-item>\n        <v-list-subheader v-else-if=\"item.raw.header\" :title=\"item.title\"></v-list-subheader>\n        <v-list-item v-else @click=\"props.onClick\">\n          <v-text-field\n            v-if=\"editingItem === item.raw\"\n            v-model=\"editingItem.title\"\n            bg-color=\"transparent\"\n            class=\"mr-3\"\n            density=\"compact\"\n            variant=\"plain\"\n            autofocus\n            hide-details\n            @click.stop\n            @keydown.stop\n            @keyup.enter=\"edit(item.raw)\"\n          ></v-text-field>\n          <v-chip\n            v-else\n            :color=\"`${item.raw.color}-lighten-3`\"\n            :text=\"item.raw.title\"\n            variant=\"flat\"\n            label\n          ></v-chip>\n          <template v-slot:append>\n            <v-btn\n              :color=\"editingItem !== item.raw ? 'primary' : 'success'\"\n              :icon=\"editingItem !== item.raw ? 'mdi-pencil' : 'mdi-check'\"\n              size=\"small\"\n              variant=\"text\"\n              @click.stop.prevent=\"edit(item.raw)\"\n            ></v-btn>\n          </template>\n        </v-list-item>\n      </template>\n    </v-combobox>\n  </v-container>\n</template>\n\n<script setup>\n  import { onMounted, ref, watch } from 'vue'\n\n  const colors = ['green', 'purple', 'indigo', 'cyan', 'teal', 'orange']\n  const editingItem = ref(null)\n  const items = ref([\n    { header: true, title: 'Select an option or create one' },\n    { title: 'Foo', color: 'blue' },\n    { title: 'Bar', color: 'red' },\n  ])\n  const nonce = ref(1)\n  const model = ref([])\n  const search = ref(null)\n\n  onMounted(() => {\n    model.value.push(items.value[1])\n  })\n\n  watch(model, (val, prev) => {\n    if (val.length === prev.length) return\n\n    model.value = val.map(v => {\n      if (typeof v === 'string') {\n        v = {\n          title: v,\n          color: colors[nonce.value - 1],\n        }\n\n        items.value.push(v)\n\n        nonce.value++\n      }\n\n      return v\n    })\n  })\n\n  function edit (item) {\n    if (!editingItem.value) {\n      editingItem.value = item\n    } else {\n      editingItem.value = null\n    }\n  }\n\n  function filter (value, queryText, item) {\n    const toLowerCaseString = val =>\n      String(val != null ? val : '').toLowerCase()\n\n    const query = toLowerCaseString(queryText)\n\n    const availableOptions = items.value.filter(x => !model.value.includes(x))\n    const hasAnyMatch = availableOptions.some(\n      x => !x.header && toLowerCaseString(x.title).includes(query)\n    )\n    if (item.raw.header) return !hasAnyMatch\n\n    const text = toLowerCaseString(item.raw.title)\n\n    return text.includes(query)\n  }\n\n  function removeSelection (index) {\n    model.value.splice(index, 1)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      colors: ['green', 'purple', 'indigo', 'cyan', 'teal', 'orange'],\n      editingItem: null,\n      items: [\n        { header: true, title: 'Select an option or create one' },\n        {\n          title: 'Foo',\n          color: 'blue',\n        },\n        {\n          title: 'Bar',\n          color: 'red',\n        },\n      ],\n      nonce: 1,\n      model: [],\n      search: null,\n    }),\n\n    watch: {\n      model (val, prev) {\n        if (val.length === prev.length) return\n\n        this.model = val.map(v => {\n          if (typeof v === 'string') {\n            v = {\n              title: v,\n              color: this.colors[this.nonce - 1],\n            }\n\n            this.items.push(v)\n\n            this.nonce++\n          }\n\n          return v\n        })\n      },\n    },\n\n    mounted () {\n      this.model = [this.items[1]]\n    },\n\n    methods: {\n      edit (item) {\n        if (!this.editingItem) {\n          this.editingItem = item\n        } else {\n          this.editingItem = null\n        }\n      },\n      filter (value, queryText, item) {\n        const toLowerCaseString = val =>\n          String(val != null ? val : '').toLowerCase()\n\n        const query = toLowerCaseString(queryText)\n\n        const availableOptions = this.items.filter(x => !this.model.includes(x))\n        const hasAnyMatch = availableOptions.some(\n          x => !x.header && toLowerCaseString(x.title).includes(query)\n        )\n        if (item.raw.header) return !hasAnyMatch\n\n        const text = toLowerCaseString(item.raw.title)\n\n        return text.includes(query)\n      },\n      removeSelection (index) {\n        this.model.splice(index, 1)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Advanced",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000437",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000438",
    "text": "Component: v-examples\nSection: Prop Density\nType: code_example\n\n## v-examples - Prop Density\n\n```vue\n<template>\n  <v-card>\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-combobox\n            v-model=\"value\"\n            :items=\"items\"\n            label=\"Default\"\n          ></v-combobox>\n        </v-col>\n        <v-col cols=\"12\">\n          <v-combobox\n            v-model=\"value\"\n            :items=\"items\"\n            density=\"comfortable\"\n            label=\"Comfortable\"\n          ></v-combobox>\n        </v-col>\n        <v-col cols=\"12\">\n          <v-combobox\n            v-model=\"value\"\n            :items=\"items\"\n            density=\"compact\"\n            label=\"Compact\"\n          ></v-combobox>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ['foo', 'bar', 'fizz', 'buzz']\n\n  const value = ref('foo')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['foo', 'bar', 'fizz', 'buzz'],\n      value: 'foo',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Density\n\n```vue\n<template>\n  <v-card>\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-combobox\n            v-model=\"value\"\n            :items=\"items\"\n            label=\"Default\"\n          ></v-combobox>\n        </v-col>\n        <v-col cols=\"12\">\n          <v-combobox\n            v-model=\"value\"\n            :items=\"items\"\n            density=\"comfortable\"\n            label=\"Comfortable\"\n          ></v-combobox>\n        </v-col>\n        <v-col cols=\"12\">\n          <v-combobox\n            v-model=\"value\"\n            :items=\"items\"\n            density=\"compact\"\n            label=\"Compact\"\n          ></v-combobox>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ['foo', 'bar', 'fizz', 'buzz']\n\n  const value = ref('foo')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['foo', 'bar', 'fizz', 'buzz'],\n      value: 'foo',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Density",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000438",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000439",
    "text": "Component: v-examples\nSection: Prop Multiple\nType: code_example\n\n## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-combobox\n          v-model=\"select\"\n          :items=\"items\"\n          label=\"Select a favorite activity or create a new one\"\n          multiple\n        ></v-combobox>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-combobox\n          v-model=\"select\"\n          :items=\"items\"\n          label=\"I use chips\"\n          chips\n          multiple\n        ></v-combobox>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-combobox\n          v-model=\"select\"\n          :items=\"items\"\n          label=\"I use a scoped slot\"\n          multiple\n        >\n          <template v-slot:selection=\"data\">\n            <v-chip\n              :key=\"JSON.stringify(data.item)\"\n              v-bind=\"data.attrs\"\n              :disabled=\"data.disabled\"\n              :model-value=\"data.selected\"\n              size=\"small\"\n              @click:close=\"data.parent.selectItem(data.item)\"\n            >\n              <template v-slot:prepend>\n                <v-avatar\n                  class=\"bg-accent text-uppercase\"\n                  start\n                >{{ data.item.title.slice(0, 1) }}</v-avatar>\n              </template>\n              {{ data.item.title }}\n            </v-chip>\n          </template>\n        </v-combobox>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-combobox\n          v-model=\"select\"\n          label=\"I'm readonly\"\n          chips\n          multiple\n          readonly\n        ></v-combobox>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const select = ref(['Vuetify', 'Programming'])\n\n  const items = [\n    'Programming',\n    'Design',\n    'Vue',\n    'Vuetify',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        select: ['Vuetify', 'Programming'],\n        items: [\n          'Programming',\n          'Design',\n          'Vue',\n          'Vuetify',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-combobox\n          v-model=\"select\"\n          :items=\"items\"\n          label=\"Select a favorite activity or create a new one\"\n          multiple\n        ></v-combobox>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-combobox\n          v-model=\"select\"\n          :items=\"items\"\n          label=\"I use chips\"\n          chips\n          multiple\n        ></v-combobox>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-combobox\n          v-model=\"select\"\n          :items=\"items\"\n          label=\"I use a scoped slot\"\n          multiple\n        >\n          <template v-slot:selection=\"data\">\n            <v-chip\n              :key=\"JSON.stringify(data.item)\"\n              v-bind=\"data.attrs\"\n              :disabled=\"data.disabled\"\n              :model-value=\"data.selected\"\n              size=\"small\"\n              @click:close=\"data.parent.selectItem(data.item)\"\n            >\n              <template v-slot:prepend>\n                <v-avatar\n                  class=\"bg-accent text-uppercase\"\n                  start\n                >{{ data.item.title.slice(0, 1) }}</v-avatar>\n              </template>\n              {{ data.item.title }}\n            </v-chip>\n          </template>\n        </v-combobox>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-combobox\n          v-model=\"select\"\n          label=\"I'm readonly\"\n          chips\n          multiple\n          readonly\n        ></v-combobox>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const select = ref(['Vuetify', 'Programming'])\n\n  const items = [\n    'Programming',\n    'Design',\n    'Vue',\n    'Vuetify',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        select: ['Vuetify', 'Programming'],\n        items: [\n          'Programming',\n          'Design',\n          'Vue',\n          'Vuetify',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Multiple",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000439",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000440",
    "text": "Component: v-examples\nSection: Slot No Data\nType: code_example\n\n## v-examples - Slot No Data\n\n```vue\n<template>\n  <v-container fluid>\n    <v-combobox\n      v-model=\"model\"\n      v-model:search=\"search\"\n      :hide-no-data=\"false\"\n      :items=\"items\"\n      hint=\"Maximum of 5 tags\"\n      label=\"Add some tags\"\n      chips\n      hide-selected\n      multiple\n      persistent-hint\n    >\n      <template v-slot:no-data>\n        <v-list-item>\n          <v-list-item-title>\n            No results matching \"<strong>{{ search }}</strong>\". Press <kbd>enter</kbd> to create a new one\n          </v-list-item-title>\n        </v-list-item>\n      </template>\n    </v-combobox>\n  </v-container>\n</template>\n\n<script setup>\n  import { nextTick, ref, watch } from 'vue'\n\n  const items = ['Gaming', 'Programming', 'Vue', 'Vuetify']\n\n  const model = ref(['Vuetify'])\n  const search = ref(null)\n\n  watch(model, val => {\n    if (val.length > 5) {\n      nextTick(() => model.value.pop())\n    }\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Gaming', 'Programming', 'Vue', 'Vuetify'],\n      model: ['Vuetify'],\n      search: null,\n    }),\n\n    watch: {\n      model (val) {\n        if (val.length > 5) {\n          this.$nextTick(() => this.model.pop())\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot No Data\n\n```vue\n<template>\n  <v-container fluid>\n    <v-combobox\n      v-model=\"model\"\n      v-model:search=\"search\"\n      :hide-no-data=\"false\"\n      :items=\"items\"\n      hint=\"Maximum of 5 tags\"\n      label=\"Add some tags\"\n      chips\n      hide-selected\n      multiple\n      persistent-hint\n    >\n      <template v-slot:no-data>\n        <v-list-item>\n          <v-list-item-title>\n            No results matching \"<strong>{{ search }}</strong>\". Press <kbd>enter</kbd> to create a new one\n          </v-list-item-title>\n        </v-list-item>\n      </template>\n    </v-combobox>\n  </v-container>\n</template>\n\n<script setup>\n  import { nextTick, ref, watch } from 'vue'\n\n  const items = ['Gaming', 'Programming', 'Vue', 'Vuetify']\n\n  const model = ref(['Vuetify'])\n  const search = ref(null)\n\n  watch(model, val => {\n    if (val.length > 5) {\n      nextTick(() => model.value.pop())\n    }\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Gaming', 'Programming', 'Vue', 'Vuetify'],\n      model: ['Vuetify'],\n      search: null,\n    }),\n\n    watch: {\n      model (val) {\n        if (val.length > 5) {\n          this.$nextTick(() => this.model.pop())\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot No Data",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000440",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000441",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-combobox v-bind=\"props\"></v-combobox>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"chips\" label=\"Chips\"></v-checkbox>\n\n      <v-checkbox v-model=\"multiple\" label=\"Multiple\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-combobox'\n  const model = ref('default')\n  const clear = ref(false)\n  const chips = ref(false)\n  const multiple = ref(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      chips: chips.value || undefined,\n      multiple: multiple.value || undefined,\n      label: 'Combobox',\n      items: ['California', 'Colorado', 'Florida', 'Georgia', 'Texas', 'Wyoming'],\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-combobox v-bind=\"props\"></v-combobox>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"chips\" label=\"Chips\"></v-checkbox>\n\n      <v-checkbox v-model=\"multiple\" label=\"Multiple\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-combobox'\n  const model = ref('default')\n  const clear = ref(false)\n  const chips = ref(false)\n  const multiple = ref(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      chips: chips.value || undefined,\n      multiple: multiple.value || undefined,\n      label: 'Combobox',\n      items: ['California', 'Colorado', 'Florida', 'Georgia', 'Texas', 'Wyoming'],\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000441",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000442",
    "text": "Component: v-confirm-edit\nType: component_overview\n\n# v-confirm-edit\n\nThe `v-confirm-edit` component is used to allow the user to verify their changes before they are committed.",
    "display_content": "# v-confirm-edit\n\nThe `v-confirm-edit` component is used to allow the user to verify their changes before they are committed.",
    "metadata": {
      "component": "v-confirm-edit",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000442",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000443",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-confirm-edit](/api/v-confirm-edit/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-confirm-edit](/api/v-confirm-edit/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000443",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000444",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-confirm-edit` component is an intuitive way to capture a model's changes before they are committed. This is useful when you want to prevent accidental changes or to allow the user to cancel their changes.\n\nAvailable sections: Pickers, Disable actions, Misc Date Picker, Misc Disable Actions, Usage",
    "display_content": "# v-guide\n\nThe `v-confirm-edit` component is an intuitive way to capture a model's changes before they are committed. This is useful when you want to prevent accidental changes or to allow the user to cancel their changes.\n\nAvailable sections: Pickers, Disable actions, Misc Date Picker, Misc Disable Actions, Usage",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000444",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000445",
    "text": "Component: v-guide\nSection: Pickers\nType: documentation\n\n## v-guide - Pickers\n\nIt's easy to integrate pickers into the `v-confirm-edit` component. This allows you to provide a more user-friendly experience when selecting dates, times, or colors.\n\n<ExamplesExample file=\"v-confirm-edit/misc-date-picker\" />",
    "display_content": "## v-guide - Pickers\n\nIt's easy to integrate pickers into the `v-confirm-edit` component. This allows you to provide a more user-friendly experience when selecting dates, times, or colors.\n\n<ExamplesExample file=\"v-confirm-edit/misc-date-picker\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Pickers",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000445",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000446",
    "text": "Component: v-guide\nSection: Disable actions\nType: documentation\n\n## v-guide - Disable actions\n\nYou can control the disabled state of action buttons using **disabled** prop by either passing an array to disable targeted actions or a boolean value to disable all actions. If the **disabled** prop is not provided, the component will use internal logic to determine the disabled state.\n\n<ExamplesExample file=\"v-confirm-edit/misc-disable-actions\" />",
    "display_content": "## v-guide - Disable actions\n\nYou can control the disabled state of action buttons using **disabled** prop by either passing an array to disable targeted actions or a boolean value to disable all actions. If the **disabled** prop is not provided, the component will use internal logic to determine the disabled state.\n\n<ExamplesExample file=\"v-confirm-edit/misc-disable-actions\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Disable actions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000446",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000447",
    "text": "Component: v-guide\nSection: Misc Date Picker\nType: code_example\n\n## v-guide - Misc Date Picker\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"328\"\n    rounded=\"lg\"\n    border\n  >\n    <v-confirm-edit v-model=\"date\">\n      <template v-slot:default=\"{ model: proxyModel, actions }\">\n        <v-date-picker v-model=\"proxyModel.value\">\n          <template v-slot:actions>\n            <component :is=\"actions\"></component>\n          </template>\n        </v-date-picker>\n      </template>\n    </v-confirm-edit>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const date = shallowRef()\n</script>\n\n```",
    "display_content": "## v-guide - Misc Date Picker\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"328\"\n    rounded=\"lg\"\n    border\n  >\n    <v-confirm-edit v-model=\"date\">\n      <template v-slot:default=\"{ model: proxyModel, actions }\">\n        <v-date-picker v-model=\"proxyModel.value\">\n          <template v-slot:actions>\n            <component :is=\"actions\"></component>\n          </template>\n        </v-date-picker>\n      </template>\n    </v-confirm-edit>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const date = shallowRef()\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Date Picker",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000447",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000448",
    "text": "Component: v-guide\nSection: Misc Disable Actions\nType: code_example\n\n## v-guide - Misc Disable Actions\n\n```vue\n<template>\n  <div>\n    <div class=\"d-flex justify-center\">\n      <v-btn-toggle\n        density=\"comfortable\"\n        rounded=\"lg\"\n        border\n        divided\n      >\n        <v-btn\n          :active=\"Array.isArray(disabled) && disabled?.includes('cancel')\"\n          text=\"Toggle cancel\"\n          @click=\"onClick('cancel')\"\n        ></v-btn>\n\n        <v-btn\n          :active=\"Array.isArray(disabled) && disabled?.includes('save')\"\n          text=\"Toggle save\"\n          @click=\"onClick('save')\"\n        ></v-btn>\n\n        <v-btn\n          :active=\"typeof disabled === 'boolean'\"\n          text=\"Toggle Boolean\"\n          @click=\"disabled = !disabled\"\n        ></v-btn>\n\n        <v-btn\n          :active=\"disabled === undefined\"\n          text=\"Default\"\n          @click=\"disabled = undefined\"\n        ></v-btn>\n      </v-btn-toggle>\n    </div>\n\n    <div class=\"d-flex justify-center align-center py-4 ga-2\">\n      <strong>Disabled:</strong>\n      <span\n        class=\"bg-surface-light rounded rounded-md pa-1\"\n        size=\"small\"\n        v-text=\"disabled === undefined ? 'undefined' : disabled\"\n      ></span>\n    </div>\n\n    <v-sheet\n      class=\"pa-4\"\n      color=\"surface-light\"\n      rounded=\"lg\"\n    >\n      <v-confirm-edit\n        v-slot=\"{ model: proxyModel, actions }\"\n        v-model=\"value\"\n        :disabled=\"disabled\"\n      >\n        <v-card class=\"mx-auto\" max-width=\"400\" rounded=\"lg\" title=\"Update Field\">\n          <template v-slot:text>\n            <v-text-field\n              v-model=\"proxyModel.value\"\n              label=\"Name\"\n              prepend-icon=\"$vuetify\"\n              variant=\"outlined\"\n            ></v-text-field>\n          </template>\n\n          <v-divider></v-divider>\n\n          <template v-slot:actions>\n            <v-spacer></v-spacer>\n\n            <component :is=\"actions\"></component>\n          </template>\n        </v-card>\n      </v-confirm-edit>\n    </v-sheet>\n  </div>\n</template>\n\n<script setup>\n  import { ref, shallowRef } from 'vue'\n\n  const disabled = ref([])\n  const value = shallowRef('My Beach Vacation')\n\n  function onClick (action) {\n    if (!Array.isArray(disabled.value)) {\n      disabled.value = []\n    }\n\n    if (disabled.value.includes(action)) {\n      disabled.value = disabled.value.filter(item => item !== action)\n    } else {\n      disabled.value.push(action)\n    }\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        disabled: [],\n        value: 'My Beach Vacation',\n      }\n    },\n\n    methods: {\n      onClick (action) {\n        if (!Array.isArray(this.disabled)) {\n          this.disabled = []\n        }\n\n        if (this.disabled.includes(action)) {\n          this.disabled = this.disabled.filter(item => item !== action)\n        } else {\n          this.disabled.push(action)\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Disable Actions\n\n```vue\n<template>\n  <div>\n    <div class=\"d-flex justify-center\">\n      <v-btn-toggle\n        density=\"comfortable\"\n        rounded=\"lg\"\n        border\n        divided\n      >\n        <v-btn\n          :active=\"Array.isArray(disabled) && disabled?.includes('cancel')\"\n          text=\"Toggle cancel\"\n          @click=\"onClick('cancel')\"\n        ></v-btn>\n\n        <v-btn\n          :active=\"Array.isArray(disabled) && disabled?.includes('save')\"\n          text=\"Toggle save\"\n          @click=\"onClick('save')\"\n        ></v-btn>\n\n        <v-btn\n          :active=\"typeof disabled === 'boolean'\"\n          text=\"Toggle Boolean\"\n          @click=\"disabled = !disabled\"\n        ></v-btn>\n\n        <v-btn\n          :active=\"disabled === undefined\"\n          text=\"Default\"\n          @click=\"disabled = undefined\"\n        ></v-btn>\n      </v-btn-toggle>\n    </div>\n\n    <div class=\"d-flex justify-center align-center py-4 ga-2\">\n      <strong>Disabled:</strong>\n      <span\n        class=\"bg-surface-light rounded rounded-md pa-1\"\n        size=\"small\"\n        v-text=\"disabled === undefined ? 'undefined' : disabled\"\n      ></span>\n    </div>\n\n    <v-sheet\n      class=\"pa-4\"\n      color=\"surface-light\"\n      rounded=\"lg\"\n    >\n      <v-confirm-edit\n        v-slot=\"{ model: proxyModel, actions }\"\n        v-model=\"value\"\n        :disabled=\"disabled\"\n      >\n        <v-card class=\"mx-auto\" max-width=\"400\" rounded=\"lg\" title=\"Update Field\">\n          <template v-slot:text>\n            <v-text-field\n              v-model=\"proxyModel.value\"\n              label=\"Name\"\n              prepend-icon=\"$vuetify\"\n              variant=\"outlined\"\n            ></v-text-field>\n          </template>\n\n          <v-divider></v-divider>\n\n          <template v-slot:actions>\n            <v-spacer></v-spacer>\n\n            <component :is=\"actions\"></component>\n          </template>\n        </v-card>\n      </v-confirm-edit>\n    </v-sheet>\n  </div>\n</template>\n\n<script setup>\n  import { ref, shallowRef } from 'vue'\n\n  const disabled = ref([])\n  const value = shallowRef('My Beach Vacation')\n\n  function onClick (action) {\n    if (!Array.isArray(disabled.value)) {\n      disabled.value = []\n    }\n\n    if (disabled.value.includes(action)) {\n      disabled.value = disabled.value.filter(item => item !== action)\n    } else {\n      disabled.value.push(action)\n    }\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        disabled: [],\n        value: 'My Beach Vacation',\n      }\n    },\n\n    methods: {\n      onClick (action) {\n        if (!Array.isArray(this.disabled)) {\n          this.disabled = []\n        }\n\n        if (this.disabled.includes(action)) {\n          this.disabled = this.disabled.filter(item => item !== action)\n        } else {\n          this.disabled.push(action)\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Disable Actions",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000448",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000449",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :options=\"options\"\n    :script=\"script\"\n    name=\"v-avatar\"\n  >\n    <div>\n      <v-confirm-edit v-model=\"value\" v-bind=\"props\">\n        <template v-slot:default=\"{ model: proxyModel, actions }\">\n          <v-card\n            class=\"mx-auto\"\n            max-width=\"320\"\n            title=\"Update Field\"\n          >\n            <template v-slot:text>\n              <v-text-field\n                v-model=\"proxyModel.value\"\n                messages=\"Modify my value\"\n              ></v-text-field>\n            </template>\n\n            <template v-slot:actions>\n              <v-spacer></v-spacer>\n\n              <component :is=\"actions\"></component>\n            </template>\n          </v-card>\n        </template>\n      </v-confirm-edit>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"okText\" label=\"Ok text\"></v-text-field>\n      <v-text-field v-model=\"cancelText\" label=\"Cancel text\"></v-text-field>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const model = ref('default')\n  const options = []\n  const value = ref('Egg Plant')\n  const okText = ref('Ok')\n  const cancelText = ref('Cancel')\n\n  const props = computed(() => {\n    return {\n      'ok-text': okText.value === 'Ok' ? undefined : okText.value,\n      'cancel-text': cancelText.value === 'Cancel' ? undefined : cancelText.value,\n      'v-model': 'model',\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:default=\"{ model: proxyModel, actions }\">\n    <v-card\n      class=\"mx-auto\"\n      max-width=\"320\"\n      title=\"Update Field\"\n    >\n      <template v-slot:text>\n        <v-text-field\n          v-model=\"proxyModel.value\"\n          messages=\"Modify my value\"\n        ></v-text-field>\n      </template>\n\n      <template v-slot:actions>\n        <v-spacer></v-spacer>\n\n        <component :is=\"actions\"></component>\n      </template>\n    </v-card>\n  </template>\n`\n  })\n\n  const script = computed(() => {\n    return `<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef('Egg plant')\n<` + '/script>'\n  })\n\n  const code = computed(() => {\n    return `<v-confirm-edit${propsToString(props.value)}>${slots.value}</v-confirm-edit>`\n  })\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :options=\"options\"\n    :script=\"script\"\n    name=\"v-avatar\"\n  >\n    <div>\n      <v-confirm-edit v-model=\"value\" v-bind=\"props\">\n        <template v-slot:default=\"{ model: proxyModel, actions }\">\n          <v-card\n            class=\"mx-auto\"\n            max-width=\"320\"\n            title=\"Update Field\"\n          >\n            <template v-slot:text>\n              <v-text-field\n                v-model=\"proxyModel.value\"\n                messages=\"Modify my value\"\n              ></v-text-field>\n            </template>\n\n            <template v-slot:actions>\n              <v-spacer></v-spacer>\n\n              <component :is=\"actions\"></component>\n            </template>\n          </v-card>\n        </template>\n      </v-confirm-edit>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"okText\" label=\"Ok text\"></v-text-field>\n      <v-text-field v-model=\"cancelText\" label=\"Cancel text\"></v-text-field>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const model = ref('default')\n  const options = []\n  const value = ref('Egg Plant')\n  const okText = ref('Ok')\n  const cancelText = ref('Cancel')\n\n  const props = computed(() => {\n    return {\n      'ok-text': okText.value === 'Ok' ? undefined : okText.value,\n      'cancel-text': cancelText.value === 'Cancel' ? undefined : cancelText.value,\n      'v-model': 'model',\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:default=\"{ model: proxyModel, actions }\">\n    <v-card\n      class=\"mx-auto\"\n      max-width=\"320\"\n      title=\"Update Field\"\n    >\n      <template v-slot:text>\n        <v-text-field\n          v-model=\"proxyModel.value\"\n          messages=\"Modify my value\"\n        ></v-text-field>\n      </template>\n\n      <template v-slot:actions>\n        <v-spacer></v-spacer>\n\n        <component :is=\"actions\"></component>\n      </template>\n    </v-card>\n  </template>\n`\n  })\n\n  const script = computed(() => {\n    return `<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef('Egg plant')\n<` + '/script>'\n  })\n\n  const code = computed(() => {\n    return `<v-confirm-edit${propsToString(props.value)}>${slots.value}</v-confirm-edit>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000449",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000450",
    "text": "Component: v-data-iterators\nType: component_overview\n\n# v-data-iterators\n\nThe `v-data-iterator` component is used for displaying arbitrary data, and shares a majority of its functionality with the `v-data-table` component. Features include sorting, searching, pagination, and selection.",
    "display_content": "# v-data-iterators\n\nThe `v-data-iterator` component is used for displaying arbitrary data, and shares a majority of its functionality with the `v-data-table` component. Features include sorting, searching, pagination, and selection.",
    "metadata": {
      "component": "v-data-iterators",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000450",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000451",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-data-iterator` allows you to customize exactly how to display your data. In this example we are using a grid with cards.",
    "display_content": "# v-usage\n\nThe `v-data-iterator` allows you to customize exactly how to display your data. In this example we are using a grid with cards.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000451",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000452",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component                                | Description       | |------------------------------------------|-------------------| | [v-data-iterator](/api/v-data-iterator/) | Primary Component |",
    "display_content": "# v-api\n\n| Component                                | Description       | |------------------------------------------|-------------------| | [v-data-iterator](/api/v-data-iterator/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000452",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000453",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of a `v-data-iterator` are:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of a `v-data-iterator` are:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000453",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000454",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-data-iterator` component is used for displaying data, and shares a majority of its functionality with the `v-data-table` component. Features include sorting, searching, pagination, and selection.",
    "display_content": "# v-guide\n\nThe `v-data-iterator` component is used for displaying data, and shares a majority of its functionality with the `v-data-table` component. Features include sorting, searching, pagination, and selection.",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000454",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000455",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-data-iterator` component.\n\nAvailable sections: Slots, Default, Header and footer, Controllable props, Loader props, Misc Filter, Slot Default, Slot Header And Footer, Slot Loader, Usage",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-data-iterator` component.\n\nAvailable sections: Slots, Default, Header and footer, Controllable props, Loader props, Misc Filter, Slot Default, Slot Header And Footer, Slot Loader, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000455",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000456",
    "text": "Component: v-examples\nSection: Slots\nType: slots_reference\n\n## v-examples - Slots\n\nThe `v-data-iterator` component has 4 main slots",
    "display_content": "## v-examples - Slots\n\nThe `v-data-iterator` component has 4 main slots",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000456",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000457",
    "text": "Component: v-examples\nSection: Default\nType: documentation\n\n## v-examples - Default\n\nThe `v-data-iterator` has internal state for both selection and expansion, just like `v-data-table`. In this example we use the methods `isExpanded` and `toggleExpand` available on the default slot.\n\n<ExamplesExample file=\"v-data-iterator/slot-default\" />",
    "display_content": "## v-examples - Default\n\nThe `v-data-iterator` has internal state for both selection and expansion, just like `v-data-table`. In this example we use the methods `isExpanded` and `toggleExpand` available on the default slot.\n\n<ExamplesExample file=\"v-data-iterator/slot-default\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Default",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000457",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000458",
    "text": "Component: v-examples\nSection: Header and footer\nType: documentation\n\n## v-examples - Header and footer\n\nThe `v-data-iterator` has both a **header** and **footer** slot for adding extra content.\n\n<ExamplesExample file=\"v-data-iterator/slot-header-and-footer\" />",
    "display_content": "## v-examples - Header and footer\n\nThe `v-data-iterator` has both a **header** and **footer** slot for adding extra content.\n\n<ExamplesExample file=\"v-data-iterator/slot-header-and-footer\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Header and footer",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000458",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000459",
    "text": "Component: v-examples\nSection: Controllable props\nType: api_reference\n\n## v-examples - Controllable props\n\nSorting, filters and pagination can be controlled externally by using the individual props\n\n<ExamplesExample file=\"v-data-iterator/misc-filter\" />",
    "display_content": "## v-examples - Controllable props\n\nSorting, filters and pagination can be controlled externally by using the individual props\n\n<ExamplesExample file=\"v-data-iterator/misc-filter\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Controllable props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000459",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000460",
    "text": "Component: v-examples\nSection: Loader props\nType: api_reference\n\n## v-examples - Loader props\n\nLoader can be used to change loader on \"loading\" prop\n\n<ExamplesExample file=\"v-data-iterator/slot-loader\" />",
    "display_content": "## v-examples - Loader props\n\nLoader can be used to change loader on \"loading\" prop\n\n<ExamplesExample file=\"v-data-iterator/slot-loader\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Loader props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000460",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000461",
    "text": "Component: v-examples\nSection: Misc Filter\nType: code_example\n\n## v-examples - Misc Filter\n\n```vue\n<template>\n  <v-card>\n    <v-data-iterator\n      :items=\"games\"\n      :items-per-page=\"3\"\n      :search=\"search\"\n    >\n      <template v-slot:header>\n        <v-toolbar class=\"px-2\">\n          <v-text-field\n            v-model=\"search\"\n            density=\"comfortable\"\n            placeholder=\"Search\"\n            prepend-inner-icon=\"mdi-magnify\"\n            style=\"max-width: 300px;\"\n            variant=\"solo\"\n            clearable\n            hide-details\n          ></v-text-field>\n        </v-toolbar>\n      </template>\n\n      <template v-slot:default=\"{ items }\">\n        <v-container class=\"pa-2\" fluid>\n          <v-row dense>\n            <v-col\n              v-for=\"item in items\"\n              :key=\"item.title\"\n              cols=\"auto\"\n              md=\"4\"\n            >\n              <v-card class=\"pb-3\" border flat>\n                <v-img :src=\"item.raw.img\"></v-img>\n\n                <v-list-item :subtitle=\"item.raw.subtitle\" class=\"mb-2\">\n                  <template v-slot:title>\n                    <strong class=\"text-h6 mb-2\">{{ item.raw.title }}</strong>\n                  </template>\n                </v-list-item>\n\n                <div class=\"d-flex justify-space-between px-4\">\n                  <div class=\"d-flex align-center text-caption text-medium-emphasis me-1\">\n                    <v-icon icon=\"mdi-clock\" start></v-icon>\n\n                    <div class=\"text-truncate\">{{ item.raw.duration }}</div>\n                  </div>\n\n                  <v-btn\n                    class=\"text-none\"\n                    size=\"small\"\n                    text=\"Read\"\n                    variant=\"flat\"\n                    border\n                  >\n                  </v-btn>\n                </div>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-container>\n      </template>\n\n      <template v-slot:footer=\"{ page, pageCount, prevPage, nextPage }\">\n        <div class=\"d-flex align-center justify-center pa-4\">\n          <v-btn\n            :disabled=\"page === 1\"\n            density=\"comfortable\"\n            icon=\"mdi-arrow-left\"\n            variant=\"tonal\"\n            rounded\n            @click=\"prevPage\"\n          ></v-btn>\n\n          <div class=\"mx-2 text-caption\">\n            Page {{ page }} of {{ pageCount }}\n          </div>\n\n          <v-btn\n            :disabled=\"page >= pageCount\"\n            density=\"comfortable\"\n            icon=\"mdi-arrow-right\"\n            variant=\"tonal\"\n            rounded\n            @click=\"nextPage\"\n          ></v-btn>\n        </div>\n      </template>\n    </v-data-iterator>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const search = shallowRef('')\n  const games = [\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/4.png',\n      title: 'The Sci-Fi Shooter Experience',\n      subtitle: 'Dive into a futuristic world of intense battles and alien encounters.',\n      advanced: false,\n      duration: '8 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/2.png',\n      title: 'Epic Adventures in Open Worlds',\n      subtitle: 'Embark on a journey through vast, immersive landscapes and quests.',\n      advanced: true,\n      duration: '10 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/3.png',\n      title: 'Surviving the Space Station Horror',\n      subtitle: 'Navigate a haunted space station in this chilling survival horror game.',\n      advanced: false,\n      duration: '9 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/5.png',\n      title: 'Neon-Lit High-Speed Racing Thrills',\n      subtitle: 'Experience adrenaline-pumping races in a futuristic, neon-soaked city.',\n      advanced: true,\n      duration: '12 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/6.png',\n      title: 'Retro-Style Platformer Adventures',\n      subtitle: 'Jump and dash through pixelated worlds in this classic-style platformer.',\n      advanced: false,\n      duration: '11 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/7.png',\n      title: 'Medieval Strategic War Campaigns',\n      subtitle: 'Lead armies into epic battles and conquer kingdoms in this strategic war game.',\n      advanced: true,\n      duration: '10 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/1.png',\n      title: 'Underwater VR Exploration Adventure',\n      subtitle: 'Dive deep into the ocean and discover the mysteries of the underwater world.',\n      advanced: true,\n      duration: '11 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/8.png',\n      title: '1920s Mystery Detective Chronicles',\n      subtitle: 'Solve crimes and uncover secrets in the glamorous 1920s era.',\n      advanced: false,\n      duration: '9 minutes',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      search: '',\n      games: [\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/4.png',\n          title: 'The Sci-Fi Shooter Experience',\n          subtitle: 'Dive into a futuristic world of intense battles and alien encounters.',\n          advanced: false,\n          duration: '8 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/2.png',\n          title: 'Epic Adventures in Open Worlds',\n          subtitle: 'Embark on a journey through vast, immersive landscapes and quests.',\n          advanced: true,\n          duration: '10 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/3.png',\n          title: 'Surviving the Space Station Horror',\n          subtitle: 'Navigate a haunted space station in this chilling survival horror game.',\n          advanced: false,\n          duration: '9 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/5.png',\n          title: 'Neon-Lit High-Speed Racing Thrills',\n          subtitle: 'Experience adrenaline-pumping races in a futuristic, neon-soaked city.',\n          advanced: true,\n          duration: '12 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/6.png',\n          title: 'Retro-Style Platformer Adventures',\n          subtitle: 'Jump and dash through pixelated worlds in this classic-style platformer.',\n          advanced: false,\n          duration: '11 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/7.png',\n          title: 'Medieval Strategic War Campaigns',\n          subtitle: 'Lead armies into epic battles and conquer kingdoms in this strategic game.',\n          advanced: true,\n          duration: '10 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/1.png',\n          title: 'Underwater VR Exploration Adventure',\n          subtitle: 'Dive deep into the ocean and discover the mysteries of the underwater world.',\n          advanced: true,\n          duration: '11 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/8.png',\n          title: '1920s Mystery Detective Chronicles',\n          subtitle: 'Solve crimes and uncover secrets in the glamorous 1920s era.',\n          advanced: false,\n          duration: '9 minutes',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Filter\n\n```vue\n<template>\n  <v-card>\n    <v-data-iterator\n      :items=\"games\"\n      :items-per-page=\"3\"\n      :search=\"search\"\n    >\n      <template v-slot:header>\n        <v-toolbar class=\"px-2\">\n          <v-text-field\n            v-model=\"search\"\n            density=\"comfortable\"\n            placeholder=\"Search\"\n            prepend-inner-icon=\"mdi-magnify\"\n            style=\"max-width: 300px;\"\n            variant=\"solo\"\n            clearable\n            hide-details\n          ></v-text-field>\n        </v-toolbar>\n      </template>\n\n      <template v-slot:default=\"{ items }\">\n        <v-container class=\"pa-2\" fluid>\n          <v-row dense>\n            <v-col\n              v-for=\"item in items\"\n              :key=\"item.title\"\n              cols=\"auto\"\n              md=\"4\"\n            >\n              <v-card class=\"pb-3\" border flat>\n                <v-img :src=\"item.raw.img\"></v-img>\n\n                <v-list-item :subtitle=\"item.raw.subtitle\" class=\"mb-2\">\n                  <template v-slot:title>\n                    <strong class=\"text-h6 mb-2\">{{ item.raw.title }}</strong>\n                  </template>\n                </v-list-item>\n\n                <div class=\"d-flex justify-space-between px-4\">\n                  <div class=\"d-flex align-center text-caption text-medium-emphasis me-1\">\n                    <v-icon icon=\"mdi-clock\" start></v-icon>\n\n                    <div class=\"text-truncate\">{{ item.raw.duration }}</div>\n                  </div>\n\n                  <v-btn\n                    class=\"text-none\"\n                    size=\"small\"\n                    text=\"Read\"\n                    variant=\"flat\"\n                    border\n                  >\n                  </v-btn>\n                </div>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-container>\n      </template>\n\n      <template v-slot:footer=\"{ page, pageCount, prevPage, nextPage }\">\n        <div class=\"d-flex align-center justify-center pa-4\">\n          <v-btn\n            :disabled=\"page === 1\"\n            density=\"comfortable\"\n            icon=\"mdi-arrow-left\"\n            variant=\"tonal\"\n            rounded\n            @click=\"prevPage\"\n          ></v-btn>\n\n          <div class=\"mx-2 text-caption\">\n            Page {{ page }} of {{ pageCount }}\n          </div>\n\n          <v-btn\n            :disabled=\"page >= pageCount\"\n            density=\"comfortable\"\n            icon=\"mdi-arrow-right\"\n            variant=\"tonal\"\n            rounded\n            @click=\"nextPage\"\n          ></v-btn>\n        </div>\n      </template>\n    </v-data-iterator>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const search = shallowRef('')\n  const games = [\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/4.png',\n      title: 'The Sci-Fi Shooter Experience',\n      subtitle: 'Dive into a futuristic world of intense battles and alien encounters.',\n      advanced: false,\n      duration: '8 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/2.png',\n      title: 'Epic Adventures in Open Worlds',\n      subtitle: 'Embark on a journey through vast, immersive landscapes and quests.',\n      advanced: true,\n      duration: '10 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/3.png',\n      title: 'Surviving the Space Station Horror',\n      subtitle: 'Navigate a haunted space station in this chilling survival horror game.',\n      advanced: false,\n      duration: '9 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/5.png',\n      title: 'Neon-Lit High-Speed Racing Thrills',\n      subtitle: 'Experience adrenaline-pumping races in a futuristic, neon-soaked city.',\n      advanced: true,\n      duration: '12 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/6.png',\n      title: 'Retro-Style Platformer Adventures',\n      subtitle: 'Jump and dash through pixelated worlds in this classic-style platformer.',\n      advanced: false,\n      duration: '11 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/7.png',\n      title: 'Medieval Strategic War Campaigns',\n      subtitle: 'Lead armies into epic battles and conquer kingdoms in this strategic war game.',\n      advanced: true,\n      duration: '10 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/1.png',\n      title: 'Underwater VR Exploration Adventure',\n      subtitle: 'Dive deep into the ocean and discover the mysteries of the underwater world.',\n      advanced: true,\n      duration: '11 minutes',\n    },\n    {\n      img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/8.png',\n      title: '1920s Mystery Detective Chronicles',\n      subtitle: 'Solve crimes and uncover secrets in the glamorous 1920s era.',\n      advanced: false,\n      duration: '9 minutes',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      search: '',\n      games: [\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/4.png',\n          title: 'The Sci-Fi Shooter Experience',\n          subtitle: 'Dive into a futuristic world of intense battles and alien encounters.',\n          advanced: false,\n          duration: '8 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/2.png',\n          title: 'Epic Adventures in Open Worlds',\n          subtitle: 'Embark on a journey through vast, immersive landscapes and quests.',\n          advanced: true,\n          duration: '10 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/3.png',\n          title: 'Surviving the Space Station Horror',\n          subtitle: 'Navigate a haunted space station in this chilling survival horror game.',\n          advanced: false,\n          duration: '9 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/5.png',\n          title: 'Neon-Lit High-Speed Racing Thrills',\n          subtitle: 'Experience adrenaline-pumping races in a futuristic, neon-soaked city.',\n          advanced: true,\n          duration: '12 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/6.png',\n          title: 'Retro-Style Platformer Adventures',\n          subtitle: 'Jump and dash through pixelated worlds in this classic-style platformer.',\n          advanced: false,\n          duration: '11 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/7.png',\n          title: 'Medieval Strategic War Campaigns',\n          subtitle: 'Lead armies into epic battles and conquer kingdoms in this strategic game.',\n          advanced: true,\n          duration: '10 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/1.png',\n          title: 'Underwater VR Exploration Adventure',\n          subtitle: 'Dive deep into the ocean and discover the mysteries of the underwater world.',\n          advanced: true,\n          duration: '11 minutes',\n        },\n        {\n          img: 'https://cdn.vuetifyjs.com/docs/images/graphics/games/8.png',\n          title: '1920s Mystery Detective Chronicles',\n          subtitle: 'Solve crimes and uncover secrets in the glamorous 1920s era.',\n          advanced: false,\n          duration: '9 minutes',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Filter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000461",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000462",
    "text": "Component: v-examples\nSection: Slot Default\nType: code_example\n\n## v-examples - Slot Default\n\n```vue\n<template>\n  <v-data-iterator\n    :items=\"desserts\"\n    item-value=\"name\"\n  >\n    <template v-slot:default=\"{ items, isExpanded, toggleExpand }\">\n      <v-row>\n        <v-col\n          v-for=\"item in items\"\n          :key=\"item.raw.name\"\n          cols=\"12\"\n          md=\"6\"\n          sm=\"12\"\n        >\n          <v-card>\n            <v-card-title class=\"d-flex align-center\">\n              <v-icon\n                :color=\"item.raw.color\"\n                :icon=\"item.raw.icon\"\n                size=\"18\"\n                start\n              ></v-icon>\n\n              <h4>{{ item.raw.name }}</h4>\n            </v-card-title>\n\n            <v-card-text>\n              {{ item.raw.description }}\n            </v-card-text>\n\n            <div class=\"px-4\">\n              <v-switch\n                :label=\"`${isExpanded(item) ? 'Hide' : 'Show'} details`\"\n                :model-value=\"isExpanded(item)\"\n                density=\"compact\"\n                inset\n                @click=\"() => toggleExpand(item)\"\n              ></v-switch>\n            </div>\n\n            <v-divider></v-divider>\n\n            <v-expand-transition>\n              <div v-if=\"isExpanded(item)\">\n                <v-list :lines=\"false\" density=\"compact\">\n                  <v-list-item :title=\"`🔥 Calories: ${item.raw.calories}`\" active></v-list-item>\n                  <v-list-item :title=\"`🍔 Fat: ${item.raw.fat}`\"></v-list-item>\n                  <v-list-item :title=\"`🍞 Carbs: ${item.raw.carbs}`\"></v-list-item>\n                  <v-list-item :title=\"`🍗 Protein: ${item.raw.protein}`\"></v-list-item>\n                  <v-list-item :title=\"`🧂 Sodium: ${item.raw.sodium}`\"></v-list-item>\n                  <v-list-item :title=\"`🦴 Calcium: ${item.raw.calcium}`\"></v-list-item>\n                  <v-list-item :title=\"`🧲 Iron: ${item.raw.iron}`\"></v-list-item>\n                </v-list>\n              </div>\n            </v-expand-transition>\n          </v-card>\n        </v-col>\n      </v-row>\n    </template>\n  </v-data-iterator>\n</template>\n\n<script setup>\n  const desserts = [\n    {\n      name: 'Frozen Yogurt',\n      description: 'A tangy and creamy dessert made from yogurt and sometimes fruit, Frozen Yogurt is a lighter alternative to ice cream. Perfect for those who crave a sweet treat but want to keep it on the healthier side.',\n      icon: 'mdi-ice-cream',\n      color: '#6EC1E4',\n      calories: 159,\n      fat: 6,\n      carbs: 24,\n      protein: 4,\n      sodium: 87,\n      calcium: '14%',\n      iron: '1%',\n    },\n    {\n      name: 'Ice cream sandwich',\n      description: 'A classic treat featuring a layer of creamy ice cream sandwiched between two cookies or cake layers. Ideal for those hot summer days when you can\\'t decide between a cookie and ice cream.',\n      icon: 'mdi-cookie',\n      color: '#F4A261',\n      calories: 237,\n      fat: 9,\n      carbs: 37,\n      protein: 4.3,\n      sodium: 129,\n      calcium: '8%',\n      iron: '1%',\n    },\n    {\n      name: 'Eclair',\n      description: 'A small, individual cake topped with frosting and often adorned with sprinkles or other decorations. Great for parties or as a quick indulgence when you need a sugar fix.',\n      icon: 'mdi-cake-variant',\n      color: '#6D4C41',\n      calories: 262,\n      fat: 16,\n      carbs: 23,\n      protein: 6,\n      sodium: 337,\n      calcium: '6%',\n      iron: '7%',\n    },\n    {\n      name: 'Cupcake',\n      description: 'A small, individual cake topped with frosting and often adorned with sprinkles or other decorations. Great for parties or as a quick indulgence when you need a sugar fix.',\n      color: '#FFADAD',\n      icon: 'mdi-cupcake',\n      calories: 305,\n      fat: 3.7,\n      carbs: 67,\n      protein: 4.3,\n      sodium: 413,\n      calcium: '3%',\n      iron: '8%',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      desserts: [\n        {\n          name: 'Frozen Yogurt',\n          description: 'A tangy and creamy dessert made from yogurt and sometimes fruit, Frozen Yogurt is a lighter alternative to ice cream. Perfect for those who crave a sweet treat but want to keep it on the healthier side.',\n          icon: 'mdi-ice-cream',\n          color: '#6EC1E4',\n          calories: 159,\n          fat: 6,\n          carbs: 24,\n          protein: 4,\n          sodium: 87,\n          calcium: '14%',\n          iron: '1%',\n        },\n        {\n          name: 'Ice cream sandwich',\n          description: 'A classic treat featuring a layer of creamy ice cream sandwiched between two cookies or cake layers. Ideal for those hot summer days when you can\\'t decide between a cookie and ice cream.',\n          icon: 'mdi-cookie',\n          color: '#F4A261',\n          calories: 237,\n          fat: 9,\n          carbs: 37,\n          protein: 4.3,\n          sodium: 129,\n          calcium: '8%',\n          iron: '1%',\n        },\n        {\n          name: 'Eclair',\n          description: 'A small, individual cake topped with frosting and often adorned with sprinkles or other decorations. Great for parties or as a quick indulgence when you need a sugar fix.',\n          icon: 'mdi-cake-variant',\n          color: '#6D4C41',\n          calories: 262,\n          fat: 16,\n          carbs: 23,\n          protein: 6,\n          sodium: 337,\n          calcium: '6%',\n          iron: '7%',\n        },\n        {\n          name: 'Cupcake',\n          description: 'A small, individual cake topped with frosting and often adorned with sprinkles or other decorations. Great for parties or as a quick indulgence when you need a sugar fix.',\n          color: '#FFADAD',\n          icon: 'mdi-cupcake',\n          calories: 305,\n          fat: 3.7,\n          carbs: 67,\n          protein: 4.3,\n          sodium: 413,\n          calcium: '3%',\n          iron: '8%',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Default\n\n```vue\n<template>\n  <v-data-iterator\n    :items=\"desserts\"\n    item-value=\"name\"\n  >\n    <template v-slot:default=\"{ items, isExpanded, toggleExpand }\">\n      <v-row>\n        <v-col\n          v-for=\"item in items\"\n          :key=\"item.raw.name\"\n          cols=\"12\"\n          md=\"6\"\n          sm=\"12\"\n        >\n          <v-card>\n            <v-card-title class=\"d-flex align-center\">\n              <v-icon\n                :color=\"item.raw.color\"\n                :icon=\"item.raw.icon\"\n                size=\"18\"\n                start\n              ></v-icon>\n\n              <h4>{{ item.raw.name }}</h4>\n            </v-card-title>\n\n            <v-card-text>\n              {{ item.raw.description }}\n            </v-card-text>\n\n            <div class=\"px-4\">\n              <v-switch\n                :label=\"`${isExpanded(item) ? 'Hide' : 'Show'} details`\"\n                :model-value=\"isExpanded(item)\"\n                density=\"compact\"\n                inset\n                @click=\"() => toggleExpand(item)\"\n              ></v-switch>\n            </div>\n\n            <v-divider></v-divider>\n\n            <v-expand-transition>\n              <div v-if=\"isExpanded(item)\">\n                <v-list :lines=\"false\" density=\"compact\">\n                  <v-list-item :title=\"`🔥 Calories: ${item.raw.calories}`\" active></v-list-item>\n                  <v-list-item :title=\"`🍔 Fat: ${item.raw.fat}`\"></v-list-item>\n                  <v-list-item :title=\"`🍞 Carbs: ${item.raw.carbs}`\"></v-list-item>\n                  <v-list-item :title=\"`🍗 Protein: ${item.raw.protein}`\"></v-list-item>\n                  <v-list-item :title=\"`🧂 Sodium: ${item.raw.sodium}`\"></v-list-item>\n                  <v-list-item :title=\"`🦴 Calcium: ${item.raw.calcium}`\"></v-list-item>\n                  <v-list-item :title=\"`🧲 Iron: ${item.raw.iron}`\"></v-list-item>\n                </v-list>\n              </div>\n            </v-expand-transition>\n          </v-card>\n        </v-col>\n      </v-row>\n    </template>\n  </v-data-iterator>\n</template>\n\n<script setup>\n  const desserts = [\n    {\n      name: 'Frozen Yogurt',\n      description: 'A tangy and creamy dessert made from yogurt and sometimes fruit, Frozen Yogurt is a lighter alternative to ice cream. Perfect for those who crave a sweet treat but want to keep it on the healthier side.',\n      icon: 'mdi-ice-cream',\n      color: '#6EC1E4',\n      calories: 159,\n      fat: 6,\n      carbs: 24,\n      protein: 4,\n      sodium: 87,\n      calcium: '14%',\n      iron: '1%',\n    },\n    {\n      name: 'Ice cream sandwich',\n      description: 'A classic treat featuring a layer of creamy ice cream sandwiched between two cookies or cake layers. Ideal for those hot summer days when you can\\'t decide between a cookie and ice cream.',\n      icon: 'mdi-cookie',\n      color: '#F4A261',\n      calories: 237,\n      fat: 9,\n      carbs: 37,\n      protein: 4.3,\n      sodium: 129,\n      calcium: '8%',\n      iron: '1%',\n    },\n    {\n      name: 'Eclair',\n      description: 'A small, individual cake topped with frosting and often adorned with sprinkles or other decorations. Great for parties or as a quick indulgence when you need a sugar fix.',\n      icon: 'mdi-cake-variant',\n      color: '#6D4C41',\n      calories: 262,\n      fat: 16,\n      carbs: 23,\n      protein: 6,\n      sodium: 337,\n      calcium: '6%',\n      iron: '7%',\n    },\n    {\n      name: 'Cupcake',\n      description: 'A small, individual cake topped with frosting and often adorned with sprinkles or other decorations. Great for parties or as a quick indulgence when you need a sugar fix.',\n      color: '#FFADAD',\n      icon: 'mdi-cupcake',\n      calories: 305,\n      fat: 3.7,\n      carbs: 67,\n      protein: 4.3,\n      sodium: 413,\n      calcium: '3%',\n      iron: '8%',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      desserts: [\n        {\n          name: 'Frozen Yogurt',\n          description: 'A tangy and creamy dessert made from yogurt and sometimes fruit, Frozen Yogurt is a lighter alternative to ice cream. Perfect for those who crave a sweet treat but want to keep it on the healthier side.',\n          icon: 'mdi-ice-cream',\n          color: '#6EC1E4',\n          calories: 159,\n          fat: 6,\n          carbs: 24,\n          protein: 4,\n          sodium: 87,\n          calcium: '14%',\n          iron: '1%',\n        },\n        {\n          name: 'Ice cream sandwich',\n          description: 'A classic treat featuring a layer of creamy ice cream sandwiched between two cookies or cake layers. Ideal for those hot summer days when you can\\'t decide between a cookie and ice cream.',\n          icon: 'mdi-cookie',\n          color: '#F4A261',\n          calories: 237,\n          fat: 9,\n          carbs: 37,\n          protein: 4.3,\n          sodium: 129,\n          calcium: '8%',\n          iron: '1%',\n        },\n        {\n          name: 'Eclair',\n          description: 'A small, individual cake topped with frosting and often adorned with sprinkles or other decorations. Great for parties or as a quick indulgence when you need a sugar fix.',\n          icon: 'mdi-cake-variant',\n          color: '#6D4C41',\n          calories: 262,\n          fat: 16,\n          carbs: 23,\n          protein: 6,\n          sodium: 337,\n          calcium: '6%',\n          iron: '7%',\n        },\n        {\n          name: 'Cupcake',\n          description: 'A small, individual cake topped with frosting and often adorned with sprinkles or other decorations. Great for parties or as a quick indulgence when you need a sugar fix.',\n          color: '#FFADAD',\n          icon: 'mdi-cupcake',\n          calories: 305,\n          fat: 3.7,\n          carbs: 67,\n          protein: 4.3,\n          sodium: 413,\n          calcium: '3%',\n          iron: '8%',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Default",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000462",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000463",
    "text": "Component: v-examples\nSection: Slot Header And Footer\nType: code_example\n\n## v-examples - Slot Header And Footer\n\n```vue\n<template>\n  <v-data-iterator\n    :items=\"mice\"\n    :items-per-page=\"itemsPerPage\"\n  >\n    <template v-slot:header=\"{ page, pageCount, prevPage, nextPage }\">\n      <h1 class=\"text-h4 font-weight-bold d-flex justify-space-between mb-4 align-center\">\n        <div class=\"text-truncate\">\n          Most popular mice\n        </div>\n\n        <div class=\"d-flex align-center\">\n          <v-btn\n            class=\"me-8\"\n            variant=\"text\"\n            @click=\"onClickSeeAll\"\n          >\n            <span class=\"text-decoration-underline text-none\">See all</span>\n          </v-btn>\n\n          <div class=\"d-inline-flex\">\n            <v-btn\n              :disabled=\"page === 1\"\n              class=\"me-2\"\n              icon=\"mdi-arrow-left\"\n              size=\"small\"\n              variant=\"tonal\"\n              @click=\"prevPage\"\n            ></v-btn>\n\n            <v-btn\n              :disabled=\"page === pageCount\"\n              icon=\"mdi-arrow-right\"\n              size=\"small\"\n              variant=\"tonal\"\n              @click=\"nextPage\"\n            ></v-btn>\n          </div>\n        </div>\n      </h1>\n    </template>\n\n    <template v-slot:default=\"{ items }\">\n      <v-row>\n        <v-col\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          cols=\"12\"\n          sm=\"6\"\n          xl=\"3\"\n        >\n          <v-sheet border>\n            <v-img\n              :gradient=\"`to top right, rgba(255, 255, 255, .1), rgba(${item.raw.color}, .15)`\"\n              :src=\"item.raw.src\"\n              height=\"150\"\n              cover\n            ></v-img>\n\n            <v-list-item\n              :title=\"item.raw.name\"\n              density=\"comfortable\"\n              lines=\"two\"\n              subtitle=\"Lorem ipsum dil orei namdie dkaf\"\n            >\n              <template v-slot:title>\n                <strong class=\"text-h6\">\n                  {{ item.raw.name }}\n                </strong>\n              </template>\n            </v-list-item>\n\n            <v-table class=\"text-caption\" density=\"compact\">\n              <tbody>\n                <tr align=\"right\">\n                  <th>DPI:</th>\n\n                  <td>{{ item.raw.dpi }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Buttons:</th>\n\n                  <td>{{ item.raw.buttons }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Weight:</th>\n\n                  <td>{{ item.raw.weight }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Wireless:</th>\n\n                  <td>{{ item.raw.wireless ? 'Yes' : 'No' }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Price:</th>\n\n                  <td>${{ item.raw.price }}</td>\n                </tr>\n              </tbody>\n            </v-table>\n          </v-sheet>\n        </v-col>\n      </v-row>\n    </template>\n\n    <template v-slot:footer=\"{ page, pageCount }\">\n      <v-footer\n        class=\"justify-space-between text-body-2 mt-4\"\n        color=\"surface-variant\"\n      >\n        Total mice: {{ mice.length }}\n\n        <div>\n          Page {{ page }} of {{ pageCount }}\n        </div>\n      </v-footer>\n    </template>\n  </v-data-iterator>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const itemsPerPage = shallowRef(4)\n  const mice = [\n    {\n      name: 'Logitech G Pro X',\n      color: '14, 151, 210',\n      dpi: 16000,\n      buttons: 8,\n      weight: '63g',\n      wireless: true,\n      price: 149.99,\n      description: 'Logitech G Pro X',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/3.png',\n    },\n    {\n      name: 'Razer DeathAdder V2',\n      color: '12, 146, 47',\n      dpi: 20000,\n      buttons: 8,\n      weight: '82g',\n      wireless: false,\n      price: 69.99,\n      description: 'Razer DeathAdder V2',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/2.png',\n    },\n    {\n      name: 'Corsair Dark Core RGB',\n      color: '107, 187, 226',\n      dpi: 18000,\n      buttons: 9,\n      weight: '133g',\n      wireless: true,\n      price: 89.99,\n      description: 'Corsair Dark Core RGB',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/1.png',\n    },\n    {\n      name: 'SteelSeries Rival 3',\n      color: '228, 196, 69',\n      dpi: 8500,\n      buttons: 6,\n      weight: '77g',\n      wireless: false,\n      price: 29.99,\n      description: 'SteelSeries Rival 3',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/4.png',\n    },\n    {\n      name: 'HyperX Pulsefire FPS Pro',\n      color: '156, 82, 251',\n      dpi: 16000,\n      buttons: 6,\n      weight: '95g',\n      wireless: false,\n      price: 44.99,\n      description: 'HyperX Pulsefire FPS Pro',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/6.png',\n    },\n    {\n      name: 'Zowie EC2',\n      color: '166, 39, 222',\n      dpi: 3200,\n      buttons: 5,\n      weight: '90g',\n      wireless: false,\n      price: 69.99,\n      description: 'Zowie EC2',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/7.png',\n    },\n    {\n      name: 'Roccat Kone AIMO',\n      color: '131, 9, 10',\n      dpi: 16000,\n      buttons: 10,\n      weight: '130g',\n      wireless: false,\n      price: 79.99,\n      description: 'Roccat Kone AIMO',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/8.png',\n    },\n    {\n      name: 'Logitech G903',\n      color: '232, 94, 102',\n      dpi: 12000,\n      buttons: 11,\n      weight: '110g',\n      wireless: true,\n      price: 129.99,\n      description: 'Logitech G903',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/9.png',\n    },\n    {\n      name: 'Cooler Master MM711',\n      color: '58, 192, 239',\n      dpi: 16000,\n      buttons: 6,\n      weight: '60g',\n      wireless: false,\n      price: 49.99,\n      description: 'Cooler Master MM711',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/5.png',\n    },\n    {\n      name: 'Glorious Model O',\n      color: '161, 252, 250',\n      dpi: 12000,\n      buttons: 6,\n      weight: '67g',\n      wireless: false,\n      price: 49.99,\n      description: 'Glorious Model O',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/15.png',\n    },\n    {\n      name: 'HP Omen Photon',\n      color: '201, 1, 2',\n      dpi: 16000,\n      buttons: 11,\n      weight: '128g',\n      wireless: true,\n      price: 99.99,\n      description: 'HP Omen Photon',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/10.png',\n    },\n    {\n      name: 'Asus ROG Chakram',\n      color: '10, 181, 19',\n      dpi: 16000,\n      buttons: 9,\n      weight: '121g',\n      wireless: true,\n      price: 159.99,\n      description: 'Asus ROG Chakram',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/11.png',\n    },\n    {\n      name: 'Razer Naga X',\n      color: '100, 101, 102',\n      dpi: 16000,\n      buttons: 16,\n      weight: '85g',\n      wireless: false,\n      price: 79.99,\n      description: 'Razer Naga X',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/12.png',\n    },\n    {\n      name: 'Mad Catz R.A.T. 8+',\n      color: '136, 241, 242',\n      dpi: 16000,\n      buttons: 11,\n      weight: '145g',\n      wireless: false,\n      price: 99.99,\n      description: 'Mad Catz R.A.T. 8+',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/13.png',\n    },\n    {\n      name: 'Alienware 610M',\n      color: '109, 110, 114',\n      dpi: 16000,\n      buttons: 7,\n      weight: '120g',\n      wireless: true,\n      price: 99.99,\n      description: 'Alienware 610M',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/14.png',\n    },\n  ]\n\n  function onClickSeeAll () {\n    itemsPerPage.value = itemsPerPage.value === 4 ? mice.length : 4\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        itemsPerPage: 4,\n        mice: [\n          {\n            name: 'Logitech G Pro X',\n            color: '14, 151, 210',\n            dpi: 16000,\n            buttons: 8,\n            weight: '63g',\n            wireless: true,\n            price: 149.99,\n            description: 'Logitech G Pro X',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/3.png',\n          },\n          {\n            name: 'Razer DeathAdder V2',\n            color: '12, 146, 47',\n            dpi: 20000,\n            buttons: 8,\n            weight: '82g',\n            wireless: false,\n            price: 69.99,\n            description: 'Razer DeathAdder V2',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/2.png',\n          },\n          {\n            name: 'Corsair Dark Core RGB',\n            color: '107, 187, 226',\n            dpi: 18000,\n            buttons: 9,\n            weight: '133g',\n            wireless: true,\n            price: 89.99,\n            description: 'Corsair Dark Core RGB',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/1.png',\n          },\n          {\n            name: 'SteelSeries Rival 3',\n            color: '228, 196, 69',\n            dpi: 8500,\n            buttons: 6,\n            weight: '77g',\n            wireless: false,\n            price: 29.99,\n            description: 'SteelSeries Rival 3',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/4.png',\n          },\n          {\n            name: 'HyperX Pulsefire FPS Pro',\n            color: '156, 82, 251',\n            dpi: 16000,\n            buttons: 6,\n            weight: '95g',\n            wireless: false,\n            price: 44.99,\n            description: 'HyperX Pulsefire FPS Pro',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/6.png',\n          },\n          {\n            name: 'Zowie EC2',\n            color: '166, 39, 222',\n            dpi: 3200,\n            buttons: 5,\n            weight: '90g',\n            wireless: false,\n            price: 69.99,\n            description: 'Zowie EC2',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/7.png',\n          },\n          {\n            name: 'Roccat Kone AIMO',\n            color: '131, 9, 10',\n            dpi: 16000,\n            buttons: 10,\n            weight: '130g',\n            wireless: false,\n            price: 79.99,\n            description: 'Roccat Kone AIMO',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/8.png',\n          },\n          {\n            name: 'Logitech G903',\n            color: '232, 94, 102',\n            dpi: 12000,\n            buttons: 11,\n            weight: '110g',\n            wireless: true,\n            price: 129.99,\n            description: 'Logitech G903',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/9.png',\n          },\n          {\n            name: 'Cooler Master MM711',\n            color: '58, 192, 239',\n            dpi: 16000,\n            buttons: 6,\n            weight: '60g',\n            wireless: false,\n            price: 49.99,\n            description: 'Cooler Master MM711',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/5.png',\n          },\n          {\n            name: 'Glorious Model O',\n            color: '161, 252, 250',\n            dpi: 12000,\n            buttons: 6,\n            weight: '67g',\n            wireless: false,\n            price: 49.99,\n            description: 'Glorious Model O',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/15.png',\n          },\n          {\n            name: 'HP Omen Photon',\n            color: '201, 1, 2',\n            dpi: 16000,\n            buttons: 11,\n            weight: '128g',\n            wireless: true,\n            price: 99.99,\n            description: 'HP Omen Photon',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/10.png',\n          },\n          {\n            name: 'Asus ROG Chakram',\n            color: '10, 181, 19',\n            dpi: 16000,\n            buttons: 9,\n            weight: '121g',\n            wireless: true,\n            price: 159.99,\n            description: 'Asus ROG Chakram',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/11.png',\n          },\n          {\n            name: 'Razer Naga X',\n            color: '100, 101, 102',\n            dpi: 16000,\n            buttons: 16,\n            weight: '85g',\n            wireless: false,\n            price: 79.99,\n            description: 'Razer Naga X',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/12.png',\n          },\n          {\n            name: 'Mad Catz R.A.T. 8+',\n            color: '136, 241, 242',\n            dpi: 16000,\n            buttons: 11,\n            weight: '145g',\n            wireless: false,\n            price: 99.99,\n            description: 'Mad Catz R.A.T. 8+',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/13.png',\n          },\n          {\n            name: 'Alienware 610M',\n            color: '109, 110, 114',\n            dpi: 16000,\n            buttons: 7,\n            weight: '120g',\n            wireless: true,\n            price: 99.99,\n            description: 'Alienware 610M',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/14.png',\n          },\n        ],\n      }\n    },\n    methods: {\n      onClickSeeAll () {\n        this.itemsPerPage = this.itemsPerPage === 4 ? this.mice.length : 4\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Header And Footer\n\n```vue\n<template>\n  <v-data-iterator\n    :items=\"mice\"\n    :items-per-page=\"itemsPerPage\"\n  >\n    <template v-slot:header=\"{ page, pageCount, prevPage, nextPage }\">\n      <h1 class=\"text-h4 font-weight-bold d-flex justify-space-between mb-4 align-center\">\n        <div class=\"text-truncate\">\n          Most popular mice\n        </div>\n\n        <div class=\"d-flex align-center\">\n          <v-btn\n            class=\"me-8\"\n            variant=\"text\"\n            @click=\"onClickSeeAll\"\n          >\n            <span class=\"text-decoration-underline text-none\">See all</span>\n          </v-btn>\n\n          <div class=\"d-inline-flex\">\n            <v-btn\n              :disabled=\"page === 1\"\n              class=\"me-2\"\n              icon=\"mdi-arrow-left\"\n              size=\"small\"\n              variant=\"tonal\"\n              @click=\"prevPage\"\n            ></v-btn>\n\n            <v-btn\n              :disabled=\"page === pageCount\"\n              icon=\"mdi-arrow-right\"\n              size=\"small\"\n              variant=\"tonal\"\n              @click=\"nextPage\"\n            ></v-btn>\n          </div>\n        </div>\n      </h1>\n    </template>\n\n    <template v-slot:default=\"{ items }\">\n      <v-row>\n        <v-col\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          cols=\"12\"\n          sm=\"6\"\n          xl=\"3\"\n        >\n          <v-sheet border>\n            <v-img\n              :gradient=\"`to top right, rgba(255, 255, 255, .1), rgba(${item.raw.color}, .15)`\"\n              :src=\"item.raw.src\"\n              height=\"150\"\n              cover\n            ></v-img>\n\n            <v-list-item\n              :title=\"item.raw.name\"\n              density=\"comfortable\"\n              lines=\"two\"\n              subtitle=\"Lorem ipsum dil orei namdie dkaf\"\n            >\n              <template v-slot:title>\n                <strong class=\"text-h6\">\n                  {{ item.raw.name }}\n                </strong>\n              </template>\n            </v-list-item>\n\n            <v-table class=\"text-caption\" density=\"compact\">\n              <tbody>\n                <tr align=\"right\">\n                  <th>DPI:</th>\n\n                  <td>{{ item.raw.dpi }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Buttons:</th>\n\n                  <td>{{ item.raw.buttons }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Weight:</th>\n\n                  <td>{{ item.raw.weight }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Wireless:</th>\n\n                  <td>{{ item.raw.wireless ? 'Yes' : 'No' }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Price:</th>\n\n                  <td>${{ item.raw.price }}</td>\n                </tr>\n              </tbody>\n            </v-table>\n          </v-sheet>\n        </v-col>\n      </v-row>\n    </template>\n\n    <template v-slot:footer=\"{ page, pageCount }\">\n      <v-footer\n        class=\"justify-space-between text-body-2 mt-4\"\n        color=\"surface-variant\"\n      >\n        Total mice: {{ mice.length }}\n\n        <div>\n          Page {{ page }} of {{ pageCount }}\n        </div>\n      </v-footer>\n    </template>\n  </v-data-iterator>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const itemsPerPage = shallowRef(4)\n  const mice = [\n    {\n      name: 'Logitech G Pro X',\n      color: '14, 151, 210',\n      dpi: 16000,\n      buttons: 8,\n      weight: '63g',\n      wireless: true,\n      price: 149.99,\n      description: 'Logitech G Pro X',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/3.png',\n    },\n    {\n      name: 'Razer DeathAdder V2',\n      color: '12, 146, 47',\n      dpi: 20000,\n      buttons: 8,\n      weight: '82g',\n      wireless: false,\n      price: 69.99,\n      description: 'Razer DeathAdder V2',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/2.png',\n    },\n    {\n      name: 'Corsair Dark Core RGB',\n      color: '107, 187, 226',\n      dpi: 18000,\n      buttons: 9,\n      weight: '133g',\n      wireless: true,\n      price: 89.99,\n      description: 'Corsair Dark Core RGB',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/1.png',\n    },\n    {\n      name: 'SteelSeries Rival 3',\n      color: '228, 196, 69',\n      dpi: 8500,\n      buttons: 6,\n      weight: '77g',\n      wireless: false,\n      price: 29.99,\n      description: 'SteelSeries Rival 3',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/4.png',\n    },\n    {\n      name: 'HyperX Pulsefire FPS Pro',\n      color: '156, 82, 251',\n      dpi: 16000,\n      buttons: 6,\n      weight: '95g',\n      wireless: false,\n      price: 44.99,\n      description: 'HyperX Pulsefire FPS Pro',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/6.png',\n    },\n    {\n      name: 'Zowie EC2',\n      color: '166, 39, 222',\n      dpi: 3200,\n      buttons: 5,\n      weight: '90g',\n      wireless: false,\n      price: 69.99,\n      description: 'Zowie EC2',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/7.png',\n    },\n    {\n      name: 'Roccat Kone AIMO',\n      color: '131, 9, 10',\n      dpi: 16000,\n      buttons: 10,\n      weight: '130g',\n      wireless: false,\n      price: 79.99,\n      description: 'Roccat Kone AIMO',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/8.png',\n    },\n    {\n      name: 'Logitech G903',\n      color: '232, 94, 102',\n      dpi: 12000,\n      buttons: 11,\n      weight: '110g',\n      wireless: true,\n      price: 129.99,\n      description: 'Logitech G903',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/9.png',\n    },\n    {\n      name: 'Cooler Master MM711',\n      color: '58, 192, 239',\n      dpi: 16000,\n      buttons: 6,\n      weight: '60g',\n      wireless: false,\n      price: 49.99,\n      description: 'Cooler Master MM711',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/5.png',\n    },\n    {\n      name: 'Glorious Model O',\n      color: '161, 252, 250',\n      dpi: 12000,\n      buttons: 6,\n      weight: '67g',\n      wireless: false,\n      price: 49.99,\n      description: 'Glorious Model O',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/15.png',\n    },\n    {\n      name: 'HP Omen Photon',\n      color: '201, 1, 2',\n      dpi: 16000,\n      buttons: 11,\n      weight: '128g',\n      wireless: true,\n      price: 99.99,\n      description: 'HP Omen Photon',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/10.png',\n    },\n    {\n      name: 'Asus ROG Chakram',\n      color: '10, 181, 19',\n      dpi: 16000,\n      buttons: 9,\n      weight: '121g',\n      wireless: true,\n      price: 159.99,\n      description: 'Asus ROG Chakram',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/11.png',\n    },\n    {\n      name: 'Razer Naga X',\n      color: '100, 101, 102',\n      dpi: 16000,\n      buttons: 16,\n      weight: '85g',\n      wireless: false,\n      price: 79.99,\n      description: 'Razer Naga X',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/12.png',\n    },\n    {\n      name: 'Mad Catz R.A.T. 8+',\n      color: '136, 241, 242',\n      dpi: 16000,\n      buttons: 11,\n      weight: '145g',\n      wireless: false,\n      price: 99.99,\n      description: 'Mad Catz R.A.T. 8+',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/13.png',\n    },\n    {\n      name: 'Alienware 610M',\n      color: '109, 110, 114',\n      dpi: 16000,\n      buttons: 7,\n      weight: '120g',\n      wireless: true,\n      price: 99.99,\n      description: 'Alienware 610M',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/14.png',\n    },\n  ]\n\n  function onClickSeeAll () {\n    itemsPerPage.value = itemsPerPage.value === 4 ? mice.length : 4\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        itemsPerPage: 4,\n        mice: [\n          {\n            name: 'Logitech G Pro X',\n            color: '14, 151, 210',\n            dpi: 16000,\n            buttons: 8,\n            weight: '63g',\n            wireless: true,\n            price: 149.99,\n            description: 'Logitech G Pro X',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/3.png',\n          },\n          {\n            name: 'Razer DeathAdder V2',\n            color: '12, 146, 47',\n            dpi: 20000,\n            buttons: 8,\n            weight: '82g',\n            wireless: false,\n            price: 69.99,\n            description: 'Razer DeathAdder V2',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/2.png',\n          },\n          {\n            name: 'Corsair Dark Core RGB',\n            color: '107, 187, 226',\n            dpi: 18000,\n            buttons: 9,\n            weight: '133g',\n            wireless: true,\n            price: 89.99,\n            description: 'Corsair Dark Core RGB',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/1.png',\n          },\n          {\n            name: 'SteelSeries Rival 3',\n            color: '228, 196, 69',\n            dpi: 8500,\n            buttons: 6,\n            weight: '77g',\n            wireless: false,\n            price: 29.99,\n            description: 'SteelSeries Rival 3',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/4.png',\n          },\n          {\n            name: 'HyperX Pulsefire FPS Pro',\n            color: '156, 82, 251',\n            dpi: 16000,\n            buttons: 6,\n            weight: '95g',\n            wireless: false,\n            price: 44.99,\n            description: 'HyperX Pulsefire FPS Pro',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/6.png',\n          },\n          {\n            name: 'Zowie EC2',\n            color: '166, 39, 222',\n            dpi: 3200,\n            buttons: 5,\n            weight: '90g',\n            wireless: false,\n            price: 69.99,\n            description: 'Zowie EC2',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/7.png',\n          },\n          {\n            name: 'Roccat Kone AIMO',\n            color: '131, 9, 10',\n            dpi: 16000,\n            buttons: 10,\n            weight: '130g',\n            wireless: false,\n            price: 79.99,\n            description: 'Roccat Kone AIMO',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/8.png',\n          },\n          {\n            name: 'Logitech G903',\n            color: '232, 94, 102',\n            dpi: 12000,\n            buttons: 11,\n            weight: '110g',\n            wireless: true,\n            price: 129.99,\n            description: 'Logitech G903',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/9.png',\n          },\n          {\n            name: 'Cooler Master MM711',\n            color: '58, 192, 239',\n            dpi: 16000,\n            buttons: 6,\n            weight: '60g',\n            wireless: false,\n            price: 49.99,\n            description: 'Cooler Master MM711',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/5.png',\n          },\n          {\n            name: 'Glorious Model O',\n            color: '161, 252, 250',\n            dpi: 12000,\n            buttons: 6,\n            weight: '67g',\n            wireless: false,\n            price: 49.99,\n            description: 'Glorious Model O',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/15.png',\n          },\n          {\n            name: 'HP Omen Photon',\n            color: '201, 1, 2',\n            dpi: 16000,\n            buttons: 11,\n            weight: '128g',\n            wireless: true,\n            price: 99.99,\n            description: 'HP Omen Photon',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/10.png',\n          },\n          {\n            name: 'Asus ROG Chakram',\n            color: '10, 181, 19',\n            dpi: 16000,\n            buttons: 9,\n            weight: '121g',\n            wireless: true,\n            price: 159.99,\n            description: 'Asus ROG Chakram',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/11.png',\n          },\n          {\n            name: 'Razer Naga X',\n            color: '100, 101, 102',\n            dpi: 16000,\n            buttons: 16,\n            weight: '85g',\n            wireless: false,\n            price: 79.99,\n            description: 'Razer Naga X',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/12.png',\n          },\n          {\n            name: 'Mad Catz R.A.T. 8+',\n            color: '136, 241, 242',\n            dpi: 16000,\n            buttons: 11,\n            weight: '145g',\n            wireless: false,\n            price: 99.99,\n            description: 'Mad Catz R.A.T. 8+',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/13.png',\n          },\n          {\n            name: 'Alienware 610M',\n            color: '109, 110, 114',\n            dpi: 16000,\n            buttons: 7,\n            weight: '120g',\n            wireless: true,\n            price: 99.99,\n            description: 'Alienware 610M',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/14.png',\n          },\n        ],\n      }\n    },\n    methods: {\n      onClickSeeAll () {\n        this.itemsPerPage = this.itemsPerPage === 4 ? this.mice.length : 4\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Header And Footer",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000463",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000464",
    "text": "Component: v-examples\nSection: Slot Loader\nType: code_example\n\n## v-examples - Slot Loader\n\n```vue\n<template>\n  <v-data-iterator\n    :items=\"mice\"\n    :items-per-page=\"itemsPerPage\"\n    :loading=\"true\"\n  >\n    <template v-slot:default=\"{ items }\">\n      <v-row>\n        <v-col\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          cols=\"12\"\n          sm=\"6\"\n          xl=\"3\"\n        >\n          <v-sheet border>\n            <v-img\n              :gradient=\"`to top right, rgba(255, 255, 255, .1), rgba(${item.raw.color}, .15)`\"\n              :src=\"item.raw.src\"\n              height=\"150\"\n              cover\n            ></v-img>\n\n            <v-list-item\n              :title=\"item.raw.name\"\n              density=\"comfortable\"\n              lines=\"two\"\n              subtitle=\"Lorem ipsum dil orei namdie dkaf\"\n            >\n              <template v-slot:title>\n                <strong class=\"text-h6\">\n                  {{ item.raw.name }}\n                </strong>\n              </template>\n            </v-list-item>\n\n            <v-table class=\"text-caption\" density=\"compact\">\n              <tbody>\n                <tr align=\"right\">\n                  <th>DPI:</th>\n\n                  <td>{{ item.raw.dpi }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Buttons:</th>\n\n                  <td>{{ item.raw.buttons }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Weight:</th>\n\n                  <td>{{ item.raw.weight }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Wireless:</th>\n\n                  <td>{{ item.raw.wireless ? 'Yes' : 'No' }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Price:</th>\n\n                  <td>${{ item.raw.price }}</td>\n                </tr>\n              </tbody>\n            </v-table>\n          </v-sheet>\n        </v-col>\n      </v-row>\n    </template>\n\n    <template v-slot:loader>\n      <v-row>\n        <v-col\n          v-for=\"(_, k) in [0, 1, 2, 3]\"\n          :key=\"k\"\n          cols=\"12\"\n          sm=\"6\"\n          xl=\"3\"\n        >\n          <v-skeleton-loader\n            class=\"border\"\n            type=\"image, article\"\n          ></v-skeleton-loader>\n        </v-col>\n      </v-row>\n    </template>\n\n  </v-data-iterator>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const itemsPerPage = shallowRef(4)\n  const mice = [\n    {\n      name: 'Logitech G Pro X',\n      color: '14, 151, 210',\n      dpi: 16000,\n      buttons: 8,\n      weight: '63g',\n      wireless: true,\n      price: 149.99,\n      description: 'Logitech G Pro X',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/1.png',\n    },\n    {\n      name: 'Razer DeathAdder V2',\n      color: '12, 146, 47',\n      dpi: 20000,\n      buttons: 8,\n      weight: '82g',\n      wireless: false,\n      price: 69.99,\n      description: 'Razer DeathAdder V2',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/2.png',\n    },\n    {\n      name: 'Corsair Dark Core RGB',\n      color: '107, 187, 226',\n      dpi: 18000,\n      buttons: 9,\n      weight: '133g',\n      wireless: true,\n      price: 89.99,\n      description: 'Corsair Dark Core RGB',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/3.png',\n    },\n    {\n      name: 'SteelSeries Rival 3',\n      color: '228, 196, 69',\n      dpi: 8500,\n      buttons: 6,\n      weight: '77g',\n      wireless: false,\n      price: 29.99,\n      description: 'SteelSeries Rival 3',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/4.png',\n    },\n    {\n      name: 'HyperX Pulsefire FPS Pro',\n      color: '156, 82, 251',\n      dpi: 16000,\n      buttons: 6,\n      weight: '95g',\n      wireless: false,\n      price: 44.99,\n      description: 'HyperX Pulsefire FPS Pro',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/5.png',\n    },\n    {\n      name: 'Zowie EC2',\n      color: '166, 39, 222',\n      dpi: 3200,\n      buttons: 5,\n      weight: '90g',\n      wireless: false,\n      price: 69.99,\n      description: 'Zowie EC2',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/6.png',\n    },\n    {\n      name: 'Roccat Kone AIMO',\n      color: '131, 9, 10',\n      dpi: 16000,\n      buttons: 10,\n      weight: '130g',\n      wireless: false,\n      price: 79.99,\n      description: 'Roccat Kone AIMO',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/7.png',\n    },\n    {\n      name: 'Logitech G903',\n      color: '232, 94, 102',\n      dpi: 12000,\n      buttons: 11,\n      weight: '110g',\n      wireless: true,\n      price: 129.99,\n      description: 'Logitech G903',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/8.png',\n    },\n    {\n      name: 'Cooler Master MM711',\n      color: '58, 192, 239',\n      dpi: 16000,\n      buttons: 6,\n      weight: '60g',\n      wireless: false,\n      price: 49.99,\n      description: 'Cooler Master MM711',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/9.png',\n    },\n    {\n      name: 'Glorious Model O',\n      color: '161, 252, 250',\n      dpi: 12000,\n      buttons: 6,\n      weight: '67g',\n      wireless: false,\n      price: 49.99,\n      description: 'Glorious Model O',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/10.png',\n    },\n    {\n      name: 'HP Omen Photon',\n      color: '201, 1, 2',\n      dpi: 16000,\n      buttons: 11,\n      weight: '128g',\n      wireless: true,\n      price: 99.99,\n      description: 'HP Omen Photon',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/11.png',\n    },\n    {\n      name: 'Asus ROG Chakram',\n      color: '10, 181, 19',\n      dpi: 16000,\n      buttons: 9,\n      weight: '121g',\n      wireless: true,\n      price: 159.99,\n      description: 'Asus ROG Chakram',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/12.png',\n    },\n    {\n      name: 'Razer Naga X',\n      color: '100, 101, 102',\n      dpi: 16000,\n      buttons: 16,\n      weight: '85g',\n      wireless: false,\n      price: 79.99,\n      description: 'Razer Naga X',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/13.png',\n    },\n    {\n      name: 'Mad Catz R.A.T. 8+',\n      color: '136, 241, 242',\n      dpi: 16000,\n      buttons: 11,\n      weight: '145g',\n      wireless: false,\n      price: 99.99,\n      description: 'Mad Catz R.A.T. 8+',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/14.png',\n    },\n    {\n      name: 'Alienware 610M',\n      color: '109, 110, 114',\n      dpi: 16000,\n      buttons: 7,\n      weight: '120g',\n      wireless: true,\n      price: 99.99,\n      description: 'Alienware 610M',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/15.png',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        itemsPerPage: 4,\n        mice: [\n          {\n            name: 'Logitech G Pro X',\n            color: '14, 151, 210',\n            dpi: 16000,\n            buttons: 8,\n            weight: '63g',\n            wireless: true,\n            price: 149.99,\n            description: 'Logitech G Pro X',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/1.png',\n          },\n          {\n            name: 'Razer DeathAdder V2',\n            color: '12, 146, 47',\n            dpi: 20000,\n            buttons: 8,\n            weight: '82g',\n            wireless: false,\n            price: 69.99,\n            description: 'Razer DeathAdder V2',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/2.png',\n          },\n          {\n            name: 'Corsair Dark Core RGB',\n            color: '107, 187, 226',\n            dpi: 18000,\n            buttons: 9,\n            weight: '133g',\n            wireless: true,\n            price: 89.99,\n            description: 'Corsair Dark Core RGB',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/3.png',\n          },\n          {\n            name: 'SteelSeries Rival 3',\n            color: '228, 196, 69',\n            dpi: 8500,\n            buttons: 6,\n            weight: '77g',\n            wireless: false,\n            price: 29.99,\n            description: 'SteelSeries Rival 3',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/4.png',\n          },\n          {\n            name: 'HyperX Pulsefire FPS Pro',\n            color: '156, 82, 251',\n            dpi: 16000,\n            buttons: 6,\n            weight: '95g',\n            wireless: false,\n            price: 44.99,\n            description: 'HyperX Pulsefire FPS Pro',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/5.png',\n          },\n          {\n            name: 'Zowie EC2',\n            color: '166, 39, 222',\n            dpi: 3200,\n            buttons: 5,\n            weight: '90g',\n            wireless: false,\n            price: 69.99,\n            description: 'Zowie EC2',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/6.png',\n          },\n          {\n            name: 'Roccat Kone AIMO',\n            color: '131, 9, 10',\n            dpi: 16000,\n            buttons: 10,\n            weight: '130g',\n            wireless: false,\n            price: 79.99,\n            description: 'Roccat Kone AIMO',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/7.png',\n          },\n          {\n            name: 'Logitech G903',\n            color: '232, 94, 102',\n            dpi: 12000,\n            buttons: 11,\n            weight: '110g',\n            wireless: true,\n            price: 129.99,\n            description: 'Logitech G903',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/8.png',\n          },\n          {\n            name: 'Cooler Master MM711',\n            color: '58, 192, 239',\n            dpi: 16000,\n            buttons: 6,\n            weight: '60g',\n            wireless: false,\n            price: 49.99,\n            description: 'Cooler Master MM711',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/9.png',\n          },\n          {\n            name: 'Glorious Model O',\n            color: '161, 252, 250',\n            dpi: 12000,\n            buttons: 6,\n            weight: '67g',\n            wireless: false,\n            price: 49.99,\n            description: 'Glorious Model O',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/10.png',\n          },\n          {\n            name: 'HP Omen Photon',\n            color: '201, 1, 2',\n            dpi: 16000,\n            buttons: 11,\n            weight: '128g',\n            wireless: true,\n            price: 99.99,\n            description: 'HP Omen Photon',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/11.png',\n          },\n          {\n            name: 'Asus ROG Chakram',\n            color: '10, 181, 19',\n            dpi: 16000,\n            buttons: 9,\n            weight: '121g',\n            wireless: true,\n            price: 159.99,\n            description: 'Asus ROG Chakram',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/12.png',\n          },\n          {\n            name: 'Razer Naga X',\n            color: '100, 101, 102',\n            dpi: 16000,\n            buttons: 16,\n            weight: '85g',\n            wireless: false,\n            price: 79.99,\n            description: 'Razer Naga X',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/13.png',\n          },\n          {\n            name: 'Mad Catz R.A.T. 8+',\n            color: '136, 241, 242',\n            dpi: 16000,\n            buttons: 11,\n            weight: '145g',\n            wireless: false,\n            price: 99.99,\n            description: 'Mad Catz R.A.T. 8+',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/14.png',\n          },\n          {\n            name: 'Alienware 610M',\n            color: '109, 110, 114',\n            dpi: 16000,\n            buttons: 7,\n            weight: '120g',\n            wireless: true,\n            price: 99.99,\n            description: 'Alienware 610M',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/15.png',\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Loader\n\n```vue\n<template>\n  <v-data-iterator\n    :items=\"mice\"\n    :items-per-page=\"itemsPerPage\"\n    :loading=\"true\"\n  >\n    <template v-slot:default=\"{ items }\">\n      <v-row>\n        <v-col\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          cols=\"12\"\n          sm=\"6\"\n          xl=\"3\"\n        >\n          <v-sheet border>\n            <v-img\n              :gradient=\"`to top right, rgba(255, 255, 255, .1), rgba(${item.raw.color}, .15)`\"\n              :src=\"item.raw.src\"\n              height=\"150\"\n              cover\n            ></v-img>\n\n            <v-list-item\n              :title=\"item.raw.name\"\n              density=\"comfortable\"\n              lines=\"two\"\n              subtitle=\"Lorem ipsum dil orei namdie dkaf\"\n            >\n              <template v-slot:title>\n                <strong class=\"text-h6\">\n                  {{ item.raw.name }}\n                </strong>\n              </template>\n            </v-list-item>\n\n            <v-table class=\"text-caption\" density=\"compact\">\n              <tbody>\n                <tr align=\"right\">\n                  <th>DPI:</th>\n\n                  <td>{{ item.raw.dpi }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Buttons:</th>\n\n                  <td>{{ item.raw.buttons }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Weight:</th>\n\n                  <td>{{ item.raw.weight }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Wireless:</th>\n\n                  <td>{{ item.raw.wireless ? 'Yes' : 'No' }}</td>\n                </tr>\n\n                <tr align=\"right\">\n                  <th>Price:</th>\n\n                  <td>${{ item.raw.price }}</td>\n                </tr>\n              </tbody>\n            </v-table>\n          </v-sheet>\n        </v-col>\n      </v-row>\n    </template>\n\n    <template v-slot:loader>\n      <v-row>\n        <v-col\n          v-for=\"(_, k) in [0, 1, 2, 3]\"\n          :key=\"k\"\n          cols=\"12\"\n          sm=\"6\"\n          xl=\"3\"\n        >\n          <v-skeleton-loader\n            class=\"border\"\n            type=\"image, article\"\n          ></v-skeleton-loader>\n        </v-col>\n      </v-row>\n    </template>\n\n  </v-data-iterator>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const itemsPerPage = shallowRef(4)\n  const mice = [\n    {\n      name: 'Logitech G Pro X',\n      color: '14, 151, 210',\n      dpi: 16000,\n      buttons: 8,\n      weight: '63g',\n      wireless: true,\n      price: 149.99,\n      description: 'Logitech G Pro X',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/1.png',\n    },\n    {\n      name: 'Razer DeathAdder V2',\n      color: '12, 146, 47',\n      dpi: 20000,\n      buttons: 8,\n      weight: '82g',\n      wireless: false,\n      price: 69.99,\n      description: 'Razer DeathAdder V2',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/2.png',\n    },\n    {\n      name: 'Corsair Dark Core RGB',\n      color: '107, 187, 226',\n      dpi: 18000,\n      buttons: 9,\n      weight: '133g',\n      wireless: true,\n      price: 89.99,\n      description: 'Corsair Dark Core RGB',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/3.png',\n    },\n    {\n      name: 'SteelSeries Rival 3',\n      color: '228, 196, 69',\n      dpi: 8500,\n      buttons: 6,\n      weight: '77g',\n      wireless: false,\n      price: 29.99,\n      description: 'SteelSeries Rival 3',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/4.png',\n    },\n    {\n      name: 'HyperX Pulsefire FPS Pro',\n      color: '156, 82, 251',\n      dpi: 16000,\n      buttons: 6,\n      weight: '95g',\n      wireless: false,\n      price: 44.99,\n      description: 'HyperX Pulsefire FPS Pro',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/5.png',\n    },\n    {\n      name: 'Zowie EC2',\n      color: '166, 39, 222',\n      dpi: 3200,\n      buttons: 5,\n      weight: '90g',\n      wireless: false,\n      price: 69.99,\n      description: 'Zowie EC2',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/6.png',\n    },\n    {\n      name: 'Roccat Kone AIMO',\n      color: '131, 9, 10',\n      dpi: 16000,\n      buttons: 10,\n      weight: '130g',\n      wireless: false,\n      price: 79.99,\n      description: 'Roccat Kone AIMO',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/7.png',\n    },\n    {\n      name: 'Logitech G903',\n      color: '232, 94, 102',\n      dpi: 12000,\n      buttons: 11,\n      weight: '110g',\n      wireless: true,\n      price: 129.99,\n      description: 'Logitech G903',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/8.png',\n    },\n    {\n      name: 'Cooler Master MM711',\n      color: '58, 192, 239',\n      dpi: 16000,\n      buttons: 6,\n      weight: '60g',\n      wireless: false,\n      price: 49.99,\n      description: 'Cooler Master MM711',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/9.png',\n    },\n    {\n      name: 'Glorious Model O',\n      color: '161, 252, 250',\n      dpi: 12000,\n      buttons: 6,\n      weight: '67g',\n      wireless: false,\n      price: 49.99,\n      description: 'Glorious Model O',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/10.png',\n    },\n    {\n      name: 'HP Omen Photon',\n      color: '201, 1, 2',\n      dpi: 16000,\n      buttons: 11,\n      weight: '128g',\n      wireless: true,\n      price: 99.99,\n      description: 'HP Omen Photon',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/11.png',\n    },\n    {\n      name: 'Asus ROG Chakram',\n      color: '10, 181, 19',\n      dpi: 16000,\n      buttons: 9,\n      weight: '121g',\n      wireless: true,\n      price: 159.99,\n      description: 'Asus ROG Chakram',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/12.png',\n    },\n    {\n      name: 'Razer Naga X',\n      color: '100, 101, 102',\n      dpi: 16000,\n      buttons: 16,\n      weight: '85g',\n      wireless: false,\n      price: 79.99,\n      description: 'Razer Naga X',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/13.png',\n    },\n    {\n      name: 'Mad Catz R.A.T. 8+',\n      color: '136, 241, 242',\n      dpi: 16000,\n      buttons: 11,\n      weight: '145g',\n      wireless: false,\n      price: 99.99,\n      description: 'Mad Catz R.A.T. 8+',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/14.png',\n    },\n    {\n      name: 'Alienware 610M',\n      color: '109, 110, 114',\n      dpi: 16000,\n      buttons: 7,\n      weight: '120g',\n      wireless: true,\n      price: 99.99,\n      description: 'Alienware 610M',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/15.png',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        itemsPerPage: 4,\n        mice: [\n          {\n            name: 'Logitech G Pro X',\n            color: '14, 151, 210',\n            dpi: 16000,\n            buttons: 8,\n            weight: '63g',\n            wireless: true,\n            price: 149.99,\n            description: 'Logitech G Pro X',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/1.png',\n          },\n          {\n            name: 'Razer DeathAdder V2',\n            color: '12, 146, 47',\n            dpi: 20000,\n            buttons: 8,\n            weight: '82g',\n            wireless: false,\n            price: 69.99,\n            description: 'Razer DeathAdder V2',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/2.png',\n          },\n          {\n            name: 'Corsair Dark Core RGB',\n            color: '107, 187, 226',\n            dpi: 18000,\n            buttons: 9,\n            weight: '133g',\n            wireless: true,\n            price: 89.99,\n            description: 'Corsair Dark Core RGB',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/3.png',\n          },\n          {\n            name: 'SteelSeries Rival 3',\n            color: '228, 196, 69',\n            dpi: 8500,\n            buttons: 6,\n            weight: '77g',\n            wireless: false,\n            price: 29.99,\n            description: 'SteelSeries Rival 3',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/4.png',\n          },\n          {\n            name: 'HyperX Pulsefire FPS Pro',\n            color: '156, 82, 251',\n            dpi: 16000,\n            buttons: 6,\n            weight: '95g',\n            wireless: false,\n            price: 44.99,\n            description: 'HyperX Pulsefire FPS Pro',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/5.png',\n          },\n          {\n            name: 'Zowie EC2',\n            color: '166, 39, 222',\n            dpi: 3200,\n            buttons: 5,\n            weight: '90g',\n            wireless: false,\n            price: 69.99,\n            description: 'Zowie EC2',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/6.png',\n          },\n          {\n            name: 'Roccat Kone AIMO',\n            color: '131, 9, 10',\n            dpi: 16000,\n            buttons: 10,\n            weight: '130g',\n            wireless: false,\n            price: 79.99,\n            description: 'Roccat Kone AIMO',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/7.png',\n          },\n          {\n            name: 'Logitech G903',\n            color: '232, 94, 102',\n            dpi: 12000,\n            buttons: 11,\n            weight: '110g',\n            wireless: true,\n            price: 129.99,\n            description: 'Logitech G903',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/8.png',\n          },\n          {\n            name: 'Cooler Master MM711',\n            color: '58, 192, 239',\n            dpi: 16000,\n            buttons: 6,\n            weight: '60g',\n            wireless: false,\n            price: 49.99,\n            description: 'Cooler Master MM711',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/9.png',\n          },\n          {\n            name: 'Glorious Model O',\n            color: '161, 252, 250',\n            dpi: 12000,\n            buttons: 6,\n            weight: '67g',\n            wireless: false,\n            price: 49.99,\n            description: 'Glorious Model O',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/10.png',\n          },\n          {\n            name: 'HP Omen Photon',\n            color: '201, 1, 2',\n            dpi: 16000,\n            buttons: 11,\n            weight: '128g',\n            wireless: true,\n            price: 99.99,\n            description: 'HP Omen Photon',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/11.png',\n          },\n          {\n            name: 'Asus ROG Chakram',\n            color: '10, 181, 19',\n            dpi: 16000,\n            buttons: 9,\n            weight: '121g',\n            wireless: true,\n            price: 159.99,\n            description: 'Asus ROG Chakram',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/12.png',\n          },\n          {\n            name: 'Razer Naga X',\n            color: '100, 101, 102',\n            dpi: 16000,\n            buttons: 16,\n            weight: '85g',\n            wireless: false,\n            price: 79.99,\n            description: 'Razer Naga X',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/13.png',\n          },\n          {\n            name: 'Mad Catz R.A.T. 8+',\n            color: '136, 241, 242',\n            dpi: 16000,\n            buttons: 11,\n            weight: '145g',\n            wireless: false,\n            price: 99.99,\n            description: 'Mad Catz R.A.T. 8+',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/14.png',\n          },\n          {\n            name: 'Alienware 610M',\n            color: '109, 110, 114',\n            dpi: 16000,\n            buttons: 7,\n            weight: '120g',\n            wireless: true,\n            price: 99.99,\n            description: 'Alienware 610M',\n            src: 'https://cdn.vuetifyjs.com/docs/images/graphics/mice/15.png',\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Loader",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000464",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000465",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n    :script=\"script\"\n  >\n    <div>\n      <v-data-iterator\n        v-bind=\"props\"\n        :items=\"cards\"\n        :page=\"page\"\n        items-per-page=\"3\"\n      >\n        <template v-slot:default=\"{ items }\">\n          <template\n            v-for=\"(item, i) in items\"\n            :key=\"i\"\n          >\n            <v-card v-bind=\"item.raw\"></v-card>\n\n            <br>\n          </template>\n        </template>\n\n        <template v-slot:footer=\"{ pageCount }\">\n          <v-pagination v-model=\"page\" :length=\"pageCount\"></v-pagination>\n        </template>\n      </v-data-iterator>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-data-iterator'\n  const model = ref('default')\n  const options = []\n\n  const page = ref(1)\n\n  const cards = Array.from({ length: 15 }, (k, v) => ({\n    title: `Item ${v + 1}`,\n    text: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!',\n  }))\n\n  const props = computed(() => {\n    return {\n      items: 'items',\n      page: 'page',\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:default=\"{ items }\">\n    <template\n      v-for=\"(item, i) in items\"\n      :key=\"i\"\n    >\n      <v-card v-bind=\"item.raw\"></v-card>\n\n      <br>\n    </template>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-data-iterator${propsToString(props.value, ['items'])}>${slots.value}</v-data-iterator>`\n  })\n\n  const script = computed(() => {\n    return `<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n  const items = Array.from({ length: 15 }, (k, v) => ({\n    title: 'Item ' + v + 1,\n    text: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!',\n  }))\n<` + '/script>'\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n    :script=\"script\"\n  >\n    <div>\n      <v-data-iterator\n        v-bind=\"props\"\n        :items=\"cards\"\n        :page=\"page\"\n        items-per-page=\"3\"\n      >\n        <template v-slot:default=\"{ items }\">\n          <template\n            v-for=\"(item, i) in items\"\n            :key=\"i\"\n          >\n            <v-card v-bind=\"item.raw\"></v-card>\n\n            <br>\n          </template>\n        </template>\n\n        <template v-slot:footer=\"{ pageCount }\">\n          <v-pagination v-model=\"page\" :length=\"pageCount\"></v-pagination>\n        </template>\n      </v-data-iterator>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-data-iterator'\n  const model = ref('default')\n  const options = []\n\n  const page = ref(1)\n\n  const cards = Array.from({ length: 15 }, (k, v) => ({\n    title: `Item ${v + 1}`,\n    text: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!',\n  }))\n\n  const props = computed(() => {\n    return {\n      items: 'items',\n      page: 'page',\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:default=\"{ items }\">\n    <template\n      v-for=\"(item, i) in items\"\n      :key=\"i\"\n    >\n      <v-card v-bind=\"item.raw\"></v-card>\n\n      <br>\n    </template>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-data-iterator${propsToString(props.value, ['items'])}>${slots.value}</v-data-iterator>`\n  })\n\n  const script = computed(() => {\n    return `<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n  const items = Array.from({ length: 15 }, (k, v) => ({\n    title: 'Item ' + v + 1,\n    text: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!',\n  }))\n<` + '/script>'\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000465",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000466",
    "text": "Component: v-date-inputs\nType: component_overview\n\n# v-date-inputs\n\nThe `v-date-input` component combines a text field with a date picker. It is meant to be a direct replacement for a standard date input.",
    "display_content": "# v-date-inputs\n\nThe `v-date-input` component combines a text field with a date picker. It is meant to be a direct replacement for a standard date input.",
    "metadata": {
      "component": "v-date-inputs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000466",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000467",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "display_content": "# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000467",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000468",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nAt its core, the `v-date-input` component is a basic container that extends [v-text-field](/components/text-fields).",
    "display_content": "# v-usage\n\nAt its core, the `v-date-input` component is a basic container that extends [v-text-field](/components/text-fields).",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000468",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000469",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-date-input](/api/v-date-input/) | Primary component | | [v-date-picker](/api/v-date-picker/) | Date picker component | | [v-text-field](/api/v-text-field/) | Text field component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-date-input](/api/v-date-input/) | Primary component | | [v-date-picker](/api/v-date-picker/) | Date picker component | | [v-text-field](/api/v-text-field/) | Text field component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000469",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000470",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-date-input` component is a replacement for the standard date input. It provides a clean interface for selecting dates and shows detailed selection information.\n\nAvailable sections: Props, Model, Multiple, Range, Calendar icon, Display format",
    "display_content": "# v-guide\n\nThe `v-date-input` component is a replacement for the standard date input. It provides a clean interface for selecting dates and shows detailed selection information.\n\nAvailable sections: Props, Model, Multiple, Range, Calendar icon, Display format",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000470",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000471",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-date-input` component extends the [v-text-field](/components/text-fields/) and [v-date-picker](/components/date-pickers/) component; and supports all of their props.",
    "display_content": "## v-guide - Props\n\nThe `v-date-input` component extends the [v-text-field](/components/text-fields/) and [v-date-picker](/components/date-pickers/) component; and supports all of their props.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000471",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000472",
    "text": "Component: v-guide\nSection: Model\nType: documentation\n\n## v-guide - Model\n\nThe default model value is a Date object, but is displayed as formatted text in the input..\n\n<ExamplesExample file=\"v-date-input/prop-model\" />",
    "display_content": "## v-guide - Model\n\nThe default model value is a Date object, but is displayed as formatted text in the input..\n\n<ExamplesExample file=\"v-date-input/prop-model\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Model",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000472",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000473",
    "text": "Component: v-guide\nSection: Multiple\nType: documentation\n\n## v-guide - Multiple\n\nUsing the **multiple** prop, the default model value is an empty array.\n\n<ExamplesExample file=\"v-date-input/prop-multiple\" />",
    "display_content": "## v-guide - Multiple\n\nUsing the **multiple** prop, the default model value is an empty array.\n\n<ExamplesExample file=\"v-date-input/prop-multiple\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Multiple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000473",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000474",
    "text": "Component: v-guide\nSection: Range\nType: documentation\n\n## v-guide - Range\n\nUsing the multiple prop with a value of **range**, select 2 dates to select them and all the dates between them.\n\n<ExamplesExample file=\"v-date-input/prop-multiple-range\" />\n\n::: tip\n\nOn mobile devices, when the menu is open, clicking the input a second time will enable editing mode.\n\n:::",
    "display_content": "## v-guide - Range\n\nUsing the multiple prop with a value of **range**, select 2 dates to select them and all the dates between them.\n\n<ExamplesExample file=\"v-date-input/prop-multiple-range\" />\n\n::: tip\n\nOn mobile devices, when the menu is open, clicking the input a second time will enable editing mode.\n\n:::",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Range",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000474",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000475",
    "text": "Component: v-guide\nSection: Calendar icon\nType: documentation\n\n## v-guide - Calendar icon\n\nYou can move the calendar icon within the input or entirely by utilizing the **prepend-icon** and **prepend-inner-icon** properties.\n\n<ExamplesExample file=\"v-date-input/prop-prepend-icon\" />",
    "display_content": "## v-guide - Calendar icon\n\nYou can move the calendar icon within the input or entirely by utilizing the **prepend-icon** and **prepend-inner-icon** properties.\n\n<ExamplesExample file=\"v-date-input/prop-prepend-icon\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Calendar icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000475",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000476",
    "text": "Component: v-guide\nSection: Display format\nType: documentation\n\n## v-guide - Display format\n\nYou can use the **display-format** prop in conjunction with the [date composable](/features/dates/) to change the displayed format of the date in the input.\n\n<ExamplesExample file=\"v-date-input/prop-display-format\" />",
    "display_content": "## v-guide - Display format\n\nYou can use the **display-format** prop in conjunction with the [date composable](/features/dates/) to change the displayed format of the date in the input.\n\n<ExamplesExample file=\"v-date-input/prop-display-format\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Display format",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000476",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000477",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-date-input` component.\n\nAvailable sections: Passenger, Misc Passenger, Prop Display Format, Prop Model, Prop Multiple Range, Prop Multiple, Prop Prepend Icon, Usage",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-date-input` component.\n\nAvailable sections: Passenger, Misc Passenger, Prop Display Format, Prop Model, Prop Multiple Range, Prop Multiple, Prop Prepend Icon, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000477",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000478",
    "text": "Component: v-examples\nSection: Passenger\nType: documentation\n\n## v-examples - Passenger\n\nIn this example, the `v-date-input` component is used to select a date of birth.\n\n<ExamplesExample file=\"v-date-input/misc-passenger\" />",
    "display_content": "## v-examples - Passenger\n\nIn this example, the `v-date-input` component is used to select a date of birth.\n\n<ExamplesExample file=\"v-date-input/misc-passenger\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Passenger",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000478",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000479",
    "text": "Component: v-examples\nSection: Misc Passenger\nType: code_example\n\n## v-examples - Misc Passenger\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"420\">\n    <v-layout>\n      <v-system-bar color=\"#4603c0\">\n        <v-icon icon=\"mdi-square\"></v-icon>\n\n        <v-icon icon=\"mdi-circle\"></v-icon>\n\n        <v-icon icon=\"mdi-triangle\"></v-icon>\n      </v-system-bar>\n\n      <v-app-bar color=\"#6200ee\" title=\"Passenger information\" flat>\n        <template v-slot:prepend>\n          <v-btn icon=\"mdi-arrow-left\"></v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <v-container class=\"pt-8\">\n          <v-text-field\n            label=\"Name\"\n            model-value=\"John Leider\"\n            variant=\"outlined\"\n          ></v-text-field>\n\n          <v-date-input\n            label=\"Date of birth\"\n            prepend-icon=\"\"\n            variant=\"outlined\"\n            persistent-placeholder\n          ></v-date-input>\n\n          <v-text-field label=\"Address\" variant=\"outlined\"></v-text-field>\n          <v-text-field label=\"City\" variant=\"outlined\"></v-text-field>\n\n          <div class=\"d-flex ga-2\">\n            <v-text-field label=\"State\" variant=\"outlined\"></v-text-field>\n\n            <v-text-field label=\"Zip code\" variant=\"outlined\"></v-text-field>\n          </div>\n        </v-container>\n      </v-main>\n    </v-layout>\n\n    <template v-slot:actions>\n      <v-btn color=\"#4603c0\" disabled>Prev</v-btn>\n\n      <v-spacer></v-spacer>\n\n      <v-btn color=\"#4603c0\">Next</v-btn>\n    </template>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Passenger\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"420\">\n    <v-layout>\n      <v-system-bar color=\"#4603c0\">\n        <v-icon icon=\"mdi-square\"></v-icon>\n\n        <v-icon icon=\"mdi-circle\"></v-icon>\n\n        <v-icon icon=\"mdi-triangle\"></v-icon>\n      </v-system-bar>\n\n      <v-app-bar color=\"#6200ee\" title=\"Passenger information\" flat>\n        <template v-slot:prepend>\n          <v-btn icon=\"mdi-arrow-left\"></v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <v-container class=\"pt-8\">\n          <v-text-field\n            label=\"Name\"\n            model-value=\"John Leider\"\n            variant=\"outlined\"\n          ></v-text-field>\n\n          <v-date-input\n            label=\"Date of birth\"\n            prepend-icon=\"\"\n            variant=\"outlined\"\n            persistent-placeholder\n          ></v-date-input>\n\n          <v-text-field label=\"Address\" variant=\"outlined\"></v-text-field>\n          <v-text-field label=\"City\" variant=\"outlined\"></v-text-field>\n\n          <div class=\"d-flex ga-2\">\n            <v-text-field label=\"State\" variant=\"outlined\"></v-text-field>\n\n            <v-text-field label=\"Zip code\" variant=\"outlined\"></v-text-field>\n          </div>\n        </v-container>\n      </v-main>\n    </v-layout>\n\n    <template v-slot:actions>\n      <v-btn color=\"#4603c0\" disabled>Prev</v-btn>\n\n      <v-spacer></v-spacer>\n\n      <v-btn color=\"#4603c0\">Next</v-btn>\n    </template>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Passenger",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000479",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000480",
    "text": "Component: v-examples\nSection: Prop Display Format\nType: code_example\n\n## v-examples - Prop Display Format\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-date-input\n      v-model=\"model\"\n      :display-format=\"format\"\n      max-width=\"368\"\n      prefix=\"ISO Date:\"\n    ></v-date-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n  import { useDate } from 'vuetify'\n\n  const adapter = useDate()\n  const model = shallowRef(adapter.parseISO('2025-02-25'))\n\n  function format (date) {\n    return adapter.toISO(date)\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Display Format\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-date-input\n      v-model=\"model\"\n      :display-format=\"format\"\n      max-width=\"368\"\n      prefix=\"ISO Date:\"\n    ></v-date-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n  import { useDate } from 'vuetify'\n\n  const adapter = useDate()\n  const model = shallowRef(adapter.parseISO('2025-02-25'))\n\n  function format (date) {\n    return adapter.toISO(date)\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Display Format",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000480",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000481",
    "text": "Component: v-examples\nSection: Prop Model\nType: code_example\n\n## v-examples - Prop Model\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-date-input\n      v-model=\"model\"\n      label=\"Select a date\"\n      max-width=\"368\"\n    ></v-date-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Model\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-date-input\n      v-model=\"model\"\n      label=\"Select a date\"\n      max-width=\"368\"\n    ></v-date-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Model",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000481",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000482",
    "text": "Component: v-examples\nSection: Prop Multiple Range\nType: code_example\n\n## v-examples - Prop Multiple Range\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-date-input\n      v-model=\"model\"\n      label=\"Select range\"\n      max-width=\"368\"\n      multiple=\"range\"\n    ></v-date-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Multiple Range\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-date-input\n      v-model=\"model\"\n      label=\"Select range\"\n      max-width=\"368\"\n      multiple=\"range\"\n    ></v-date-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Multiple Range",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000482",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000483",
    "text": "Component: v-examples\nSection: Prop Multiple\nType: code_example\n\n## v-examples - Prop Multiple\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-date-input\n      v-model=\"model\"\n      label=\"Select day(s)\"\n      max-width=\"368\"\n      multiple\n    ></v-date-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Multiple\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-date-input\n      v-model=\"model\"\n      label=\"Select day(s)\"\n      max-width=\"368\"\n      multiple\n    ></v-date-input>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Multiple",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000483",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000484",
    "text": "Component: v-examples\nSection: Prop Prepend Icon\nType: code_example\n\n## v-examples - Prop Prepend Icon\n\n```vue\n<template>\n  <v-row dense>\n    <v-col cols=\"12\" md=\"6\">\n      <v-date-input\n        label=\"Select a date\"\n        prepend-icon=\"\"\n        prepend-inner-icon=\"$calendar\"\n        variant=\"solo\"\n      ></v-date-input>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"6\">\n      <v-date-input\n        label=\"Select a date\"\n        prepend-icon=\"\"\n        variant=\"solo\"\n      ></v-date-input>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Prepend Icon\n\n```vue\n<template>\n  <v-row dense>\n    <v-col cols=\"12\" md=\"6\">\n      <v-date-input\n        label=\"Select a date\"\n        prepend-icon=\"\"\n        prepend-inner-icon=\"$calendar\"\n        variant=\"solo\"\n      ></v-date-input>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"6\">\n      <v-date-input\n        label=\"Select a date\"\n        prepend-icon=\"\"\n        variant=\"solo\"\n      ></v-date-input>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Prepend Icon",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000484",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000485",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-date-input v-bind=\"props\"></v-date-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-date-input'\n  const model = ref('default')\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const clear = ref(false)\n  const counter = ref(false)\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      counter: counter.value || undefined,\n      disabled: disabled.value || undefined,\n      label: 'Date input',\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-date-input v-bind=\"props\"></v-date-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-date-input'\n  const model = ref('default')\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const clear = ref(false)\n  const counter = ref(false)\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      counter: counter.value || undefined,\n      disabled: disabled.value || undefined,\n      label: 'Date input',\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000485",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000486",
    "text": "Component: v-date-pickers\nType: component_overview\n\n# v-date-pickers\n\n`v-date-picker` is a fully featured date selection component that lets users select a date.",
    "display_content": "# v-date-pickers\n\n`v-date-picker` is a fully featured date selection component that lets users select a date.",
    "metadata": {
      "component": "v-date-pickers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000486",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000487",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nDate pickers come in two orientation variations, portrait **(default)** and landscape. By default they are emitting `input` event when the day (for date picker) or month (for month picker), but with **reactive** prop they can update the model even after clicking year/month.",
    "display_content": "# v-usage\n\nDate pickers come in two orientation variations, portrait **(default)** and landscape. By default they are emitting `input` event when the day (for date picker) or month (for month picker), but with **reactive** prop they can update the model even after clicking year/month.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000487",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000488",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-date-picker](/api/v-date-picker/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-date-picker](/api/v-date-picker/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000488",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000489",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-date-picker` component is a stand-alone interface that allows the selection of a date, month and year. This component is built using the [Date composable](/features/dates/).\n\nAvailable sections: Props, Elevation, Width, Show sibling months, Colors, Allowed dates, Internationalization, Parsing dates, Event Button Events, Event Events, Guide Locale, Usage, Misc Birthday, Misc Dialog And Menu, Misc Formatting External Libraries, Misc Formatting, Misc Internationalization, Misc Orientation, Prop Allowed Dates, Prop Colors, Prop Elevation, Prop Icons, Prop Multiple, Prop Picker Date, Prop Range, Prop Readonly, Prop Show Adjacent Months, Prop Show Current, Prop Width",
    "display_content": "# v-guide\n\nThe `v-date-picker` component is a stand-alone interface that allows the selection of a date, month and year. This component is built using the [Date composable](/features/dates/).\n\nAvailable sections: Props, Elevation, Width, Show sibling months, Colors, Allowed dates, Internationalization, Parsing dates, Event Button Events, Event Events, Guide Locale, Usage, Misc Birthday, Misc Dialog And Menu, Misc Formatting External Libraries, Misc Formatting, Misc Internationalization, Misc Orientation, Prop Allowed Dates, Prop Colors, Prop Elevation, Prop Icons, Prop Multiple, Prop Picker Date, Prop Range, Prop Readonly, Prop Show Adjacent Months, Prop Show Current, Prop Width",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000489",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000490",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-date-picker` component supports multiple props for configuring dates that can be selected, date formats, translations and more.",
    "display_content": "## v-guide - Props\n\nThe `v-date-picker` component supports multiple props for configuring dates that can be selected, date formats, translations and more.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000490",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000491",
    "text": "Component: v-guide\nSection: Elevation\nType: documentation\n\n## v-guide - Elevation\n\nThe `v-date-picker` component supports elevation up to a maximum value of 24. For more information on elevations, visit the official [Material Design elevations](https://material.io/design/environment/elevation.html) page.\n\n<ExamplesExample file=\"v-date-picker/prop-elevation\" />",
    "display_content": "## v-guide - Elevation\n\nThe `v-date-picker` component supports elevation up to a maximum value of 24. For more information on elevations, visit the official [Material Design elevations](https://material.io/design/environment/elevation.html) page.\n\n<ExamplesExample file=\"v-date-picker/prop-elevation\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Elevation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000491",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000492",
    "text": "Component: v-guide\nSection: Width\nType: documentation\n\n## v-guide - Width\n\nYou can specify the picker's width or make it full width.\n\n<ExamplesExample file=\"v-date-picker/prop-width\" />",
    "display_content": "## v-guide - Width\n\nYou can specify the picker's width or make it full width.\n\n<ExamplesExample file=\"v-date-picker/prop-width\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Width",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000492",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000493",
    "text": "Component: v-guide\nSection: Show sibling months\nType: documentation\n\n## v-guide - Show sibling months\n\nBy default days from previous and next months are not visible. They can be displayed using the **show-adjacent-months** prop.\n\n<ExamplesExample file=\"v-date-picker/prop-show-adjacent-months\" />",
    "display_content": "## v-guide - Show sibling months\n\nBy default days from previous and next months are not visible. They can be displayed using the **show-adjacent-months** prop.\n\n<ExamplesExample file=\"v-date-picker/prop-show-adjacent-months\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Show sibling months",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000493",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000494",
    "text": "Component: v-guide\nSection: Colors\nType: documentation\n\n## v-guide - Colors\n\nDate picker colors can be set using the **color** props.\n\n<ExamplesExample file=\"v-date-picker/prop-colors\" />",
    "display_content": "## v-guide - Colors\n\nDate picker colors can be set using the **color** props.\n\n<ExamplesExample file=\"v-date-picker/prop-colors\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000494",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000495",
    "text": "Component: v-guide\nSection: Allowed dates\nType: documentation\n\n## v-guide - Allowed dates\n\nSpecify allowed dates using objects or functions. When using objects, accepts a date string in the format of YYYY-MM-DD. When using functions, accepts a date object as a parameter and should return a boolean.\n\n<ExamplesExample file=\"v-date-picker/prop-allowed-dates\" />",
    "display_content": "## v-guide - Allowed dates\n\nSpecify allowed dates using objects or functions. When using objects, accepts a date string in the format of YYYY-MM-DD. When using functions, accepts a date object as a parameter and should return a boolean.\n\n<ExamplesExample file=\"v-date-picker/prop-allowed-dates\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Allowed dates",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000495",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000496",
    "text": "Component: v-guide\nSection: Internationalization\nType: code_example\n\n## v-guide - Internationalization\n\nVuetify components can localize date formats by utilizing the [i18n](/features/internationalization) feature. This determines the appropriate locale for date display. When the default date adapter is in use, localization is managed automatically.\n\nFor those not using the default date adapter, you need to create a mapping between the i18n locale string and your chosen date library's locale. This can be done in the Vuetify options as shown below:\n\n```js\nimport DateFnsAdapter from '@date-io/date-fns'\nimport enUS from 'date-fns/locale/en-US'\nimport svSE from 'date-fns/locale/sv'\n\ncreateVuetify({\n  date: {\n    adapter: DateFnsAdapter,\n    locale: {\n      en: enUS,\n      sv: svSE,\n    },\n  },\n})\n```",
    "display_content": "## v-guide - Internationalization\n\nVuetify components can localize date formats by utilizing the [i18n](/features/internationalization) feature. This determines the appropriate locale for date display. When the default date adapter is in use, localization is managed automatically.\n\nFor those not using the default date adapter, you need to create a mapping between the i18n locale string and your chosen date library's locale. This can be done in the Vuetify options as shown below:\n\n```js\nimport DateFnsAdapter from '@date-io/date-fns'\nimport enUS from 'date-fns/locale/en-US'\nimport svSE from 'date-fns/locale/sv'\n\ncreateVuetify({\n  date: {\n    adapter: DateFnsAdapter,\n    locale: {\n      en: enUS,\n      sv: svSE,\n    },\n  },\n})\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Internationalization",
      "content_type": "code_example",
      "language": "js",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000496",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000497",
    "text": "Component: v-guide\nSection: Parsing dates\nType: code_example\n\n## v-guide - Parsing dates\n\nIt's recommended that you use the [Date composable](/features/dates/) for parsing and formatting when working with string dates. The following example uses the parseISO function to convert a string date to a Date object.\n\n```js\nimport { useDate } from 'vuetify'\n\nconst adapter = useDate()\nconst date = '2023-11-30'\n\nconsole.log(new Date(date)) // Wed Nov 29 2023 18:00:00 GMT-0600\nconsole.log(adapter.parseISO(date)) // Thu Nov 30 2023 00:00:00 GMT-0600\n```",
    "display_content": "## v-guide - Parsing dates\n\nIt's recommended that you use the [Date composable](/features/dates/) for parsing and formatting when working with string dates. The following example uses the parseISO function to convert a string date to a Date object.\n\n```js\nimport { useDate } from 'vuetify'\n\nconst adapter = useDate()\nconst date = '2023-11-30'\n\nconsole.log(new Date(date)) // Wed Nov 29 2023 18:00:00 GMT-0600\nconsole.log(adapter.parseISO(date)) // Thu Nov 30 2023 00:00:00 GMT-0600\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Parsing dates",
      "content_type": "code_example",
      "language": "js",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000497",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000498",
    "text": "Component: v-guide\nSection: Event Button Events\nType: code_example\n\n## v-guide - Event Button Events\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      class=\"my-2 px-1\"\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-date-picker\n        v-model=\"date\"\n        @contextmenu:year=\"contextMenu\"\n        @dblclick:date=\"dblClick\"\n        @mouseenter:month=\"mouseEnter\"\n        @mouseleave:month=\"mouseLeave\"\n      ></v-date-picker>\n    </v-col>\n\n    <v-col\n      class=\"my-2 px-1\"\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <div class=\"text-body-1 mb-2\">\n        <v-icon size=\"small\">\n          {{ done[0] ? '$checkboxOn' : '$checkboxOff' }}\n        </v-icon>\n        Double click on any date\n      </div>\n\n      <div class=\"text-body-1\">\n        <v-icon size=\"small\">\n          {{ done[1] ? '$checkboxOn' : '$checkboxOff' }}\n        </v-icon>\n        Move mouse cursor over any month button\n      </div>\n\n      <div class=\"text-h6 mb-2\">\n        Mouse pointer is located on: {{ mouseMonth || '-' }}\n      </div>\n\n      <div class=\"text-body-1\">\n        <v-icon size=\"small\">\n          {{ done[2] ? '$checkboxOn' : '$checkboxOff' }}\n        </v-icon>\n        Right click on any year\n      </div>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const done = ref([false, false, false])\n  const mouseMonth = ref(null)\n\n  function contextMenu (year, event) {\n    done.value[2] = true\n    event.preventDefault()\n    alert(`You have activated context menu for year ${year}`)\n  }\n  function dblClick (date) {\n    done.value[0] = true\n    alert(`You have just double clicked the following date: ${date}`)\n  }\n  function mouseEnter (month) {\n    done.value[1] = true\n    mouseMonth.value = month\n  }\n  function mouseLeave () {\n    mouseMonth.value = null\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      done: [false, false, false],\n      mouseMonth: null,\n    }),\n\n    methods: {\n      contextMenu (year, event) {\n        this.done[2] = true\n\n        event.preventDefault()\n\n        alert(`You have activated context menu for year ${year}`)\n      },\n      dblClick (date) {\n        this.done[0] = true\n\n        alert(`You have just double clicked the following date: ${date}`)\n      },\n      mouseEnter (month) {\n        this.done[1] = true\n        this.mouseMonth = month\n      },\n      mouseLeave () {\n        this.mouseMonth = null\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Event Button Events\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      class=\"my-2 px-1\"\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-date-picker\n        v-model=\"date\"\n        @contextmenu:year=\"contextMenu\"\n        @dblclick:date=\"dblClick\"\n        @mouseenter:month=\"mouseEnter\"\n        @mouseleave:month=\"mouseLeave\"\n      ></v-date-picker>\n    </v-col>\n\n    <v-col\n      class=\"my-2 px-1\"\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <div class=\"text-body-1 mb-2\">\n        <v-icon size=\"small\">\n          {{ done[0] ? '$checkboxOn' : '$checkboxOff' }}\n        </v-icon>\n        Double click on any date\n      </div>\n\n      <div class=\"text-body-1\">\n        <v-icon size=\"small\">\n          {{ done[1] ? '$checkboxOn' : '$checkboxOff' }}\n        </v-icon>\n        Move mouse cursor over any month button\n      </div>\n\n      <div class=\"text-h6 mb-2\">\n        Mouse pointer is located on: {{ mouseMonth || '-' }}\n      </div>\n\n      <div class=\"text-body-1\">\n        <v-icon size=\"small\">\n          {{ done[2] ? '$checkboxOn' : '$checkboxOff' }}\n        </v-icon>\n        Right click on any year\n      </div>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const done = ref([false, false, false])\n  const mouseMonth = ref(null)\n\n  function contextMenu (year, event) {\n    done.value[2] = true\n    event.preventDefault()\n    alert(`You have activated context menu for year ${year}`)\n  }\n  function dblClick (date) {\n    done.value[0] = true\n    alert(`You have just double clicked the following date: ${date}`)\n  }\n  function mouseEnter (month) {\n    done.value[1] = true\n    mouseMonth.value = month\n  }\n  function mouseLeave () {\n    mouseMonth.value = null\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      done: [false, false, false],\n      mouseMonth: null,\n    }),\n\n    methods: {\n      contextMenu (year, event) {\n        this.done[2] = true\n\n        event.preventDefault()\n\n        alert(`You have activated context menu for year ${year}`)\n      },\n      dblClick (date) {\n        this.done[0] = true\n\n        alert(`You have just double clicked the following date: ${date}`)\n      },\n      mouseEnter (month) {\n        this.done[1] = true\n        this.mouseMonth = month\n      },\n      mouseLeave () {\n        this.mouseMonth = null\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Event Button Events",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000498",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000499",
    "text": "Component: v-guide\nSection: Event Events\nType: code_example\n\n## v-guide - Event Events\n\n```vue\n<template>\n  <v-row justify=\"space-between\">\n    <div>\n      <div class=\"subheading\">\n        Defined by array\n      </div>\n      <v-date-picker\n        v-model=\"date1\"\n        :events=\"arrayEvents\"\n        event-color=\"green lighten-1\"\n      ></v-date-picker>\n    </div>\n    <div>\n      <div class=\"subheading\">\n        Defined by function\n      </div>\n      <v-date-picker\n        v-model=\"date2\"\n        :event-color=\"date => date[9] % 2 ? 'red' : 'yellow'\"\n        :events=\"functionEvents\"\n      ></v-date-picker>\n    </div>\n  </v-row>\n</template>\n\n<script setup>\n  import { onMounted, ref } from 'vue'\n\n  const arrayEvents = ref(null)\n  const date1 = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const date2 = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  function functionEvents (date) {\n    const [, , day] = date.split('-')\n    if ([12, 17, 28].includes(parseInt(day, 10))) return true\n    if ([1, 19, 22].includes(parseInt(day, 10))) return ['red', '#00f']\n    return false\n  }\n  onMounted(() => {\n    arrayEvents.value = [...Array(6)].map(() => {\n      const day = Math.floor(Math.random() * 30)\n      const d = new Date()\n      d.setDate(day)\n      return d.toISOString().substr(0, 10)\n    })\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      arrayEvents: null,\n      date1: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      date2: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n    }),\n\n    mounted () {\n      this.arrayEvents = [...Array(6)].map(() => {\n        const day = Math.floor(Math.random() * 30)\n        const d = new Date()\n        d.setDate(day)\n        return d.toISOString().substr(0, 10)\n      })\n    },\n\n    methods: {\n      functionEvents (date) {\n        const [,, day] = date.split('-')\n        if ([12, 17, 28].includes(parseInt(day, 10))) return true\n        if ([1, 19, 22].includes(parseInt(day, 10))) return ['red', '#00f']\n        return false\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Event Events\n\n```vue\n<template>\n  <v-row justify=\"space-between\">\n    <div>\n      <div class=\"subheading\">\n        Defined by array\n      </div>\n      <v-date-picker\n        v-model=\"date1\"\n        :events=\"arrayEvents\"\n        event-color=\"green lighten-1\"\n      ></v-date-picker>\n    </div>\n    <div>\n      <div class=\"subheading\">\n        Defined by function\n      </div>\n      <v-date-picker\n        v-model=\"date2\"\n        :event-color=\"date => date[9] % 2 ? 'red' : 'yellow'\"\n        :events=\"functionEvents\"\n      ></v-date-picker>\n    </div>\n  </v-row>\n</template>\n\n<script setup>\n  import { onMounted, ref } from 'vue'\n\n  const arrayEvents = ref(null)\n  const date1 = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const date2 = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  function functionEvents (date) {\n    const [, , day] = date.split('-')\n    if ([12, 17, 28].includes(parseInt(day, 10))) return true\n    if ([1, 19, 22].includes(parseInt(day, 10))) return ['red', '#00f']\n    return false\n  }\n  onMounted(() => {\n    arrayEvents.value = [...Array(6)].map(() => {\n      const day = Math.floor(Math.random() * 30)\n      const d = new Date()\n      d.setDate(day)\n      return d.toISOString().substr(0, 10)\n    })\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      arrayEvents: null,\n      date1: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      date2: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n    }),\n\n    mounted () {\n      this.arrayEvents = [...Array(6)].map(() => {\n        const day = Math.floor(Math.random() * 30)\n        const d = new Date()\n        d.setDate(day)\n        return d.toISOString().substr(0, 10)\n      })\n    },\n\n    methods: {\n      functionEvents (date) {\n        const [,, day] = date.split('-')\n        if ([12, 17, 28].includes(parseInt(day, 10))) return true\n        if ([1, 19, 22].includes(parseInt(day, 10))) return ['red', '#00f']\n        return false\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Event Events",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000499",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000500",
    "text": "Component: v-guide\nSection: Guide Locale\nType: code_example\n\n## v-guide - Guide Locale\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-locale-provider locale=\"sv\">\n      <v-date-picker></v-date-picker>\n    </v-locale-provider>\n  </div>\n</template>\n\n<playground-resources lang=\"json\">\n{\n  \"imports\": {\n    \"vuetify/locale\": \"https://cdn.jsdelivr.net/npm/vuetify/lib/locale/index.js/+esm\",\n    \"@date-io/date-fns\": \"https://cdn.jsdelivr.net/npm/@date-io/date-fns@2.17.0/build/index.esm.js/+esm\",\n    \"date-fns/locale/en-US\": \"https://cdn.jsdelivr.net/npm/date-fns@2.30.0/esm/locale/en-US/index.js/+esm\",\n    \"date-fns/locale/sv\": \"https://cdn.jsdelivr.net/npm/date-fns@2.30.0/esm/locale/sv/index.js/+esm\"\n  }\n}\n</playground-resources>\n\n<playground-setup>\nimport { createVuetify } from 'vuetify'\nimport { sv } from 'vuetify/locale'\nimport DateFnsAdapter from '@date-io/date-fns'\nimport enUS from 'date-fns/locale/en-US'\nimport svSE from 'date-fns/locale/sv'\n\nexport const vuetify = createVuetify({\n  locale: {\n    messages: { sv },\n  },\n  date: {\n    adapter: DateFnsAdapter,\n    locale: {\n      en: enUS,\n      sv: svSE,\n    },\n  },\n})\n</playground-setup>\n\n```",
    "display_content": "## v-guide - Guide Locale\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-locale-provider locale=\"sv\">\n      <v-date-picker></v-date-picker>\n    </v-locale-provider>\n  </div>\n</template>\n\n<playground-resources lang=\"json\">\n{\n  \"imports\": {\n    \"vuetify/locale\": \"https://cdn.jsdelivr.net/npm/vuetify/lib/locale/index.js/+esm\",\n    \"@date-io/date-fns\": \"https://cdn.jsdelivr.net/npm/@date-io/date-fns@2.17.0/build/index.esm.js/+esm\",\n    \"date-fns/locale/en-US\": \"https://cdn.jsdelivr.net/npm/date-fns@2.30.0/esm/locale/en-US/index.js/+esm\",\n    \"date-fns/locale/sv\": \"https://cdn.jsdelivr.net/npm/date-fns@2.30.0/esm/locale/sv/index.js/+esm\"\n  }\n}\n</playground-resources>\n\n<playground-setup>\nimport { createVuetify } from 'vuetify'\nimport { sv } from 'vuetify/locale'\nimport DateFnsAdapter from '@date-io/date-fns'\nimport enUS from 'date-fns/locale/en-US'\nimport svSE from 'date-fns/locale/sv'\n\nexport const vuetify = createVuetify({\n  locale: {\n    messages: { sv },\n  },\n  date: {\n    adapter: DateFnsAdapter,\n    locale: {\n      en: enUS,\n      sv: svSE,\n    },\n  },\n})\n</playground-setup>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Guide Locale",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000500",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000501",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-date-picker\n      v-bind=\"props\"\n      v-model=\"date\"\n      class=\"mx-auto\"\n    ></v-date-picker>\n\n    <template v-slot:configuration>\n      <!-- <v-checkbox v-model=\"hideActions\" label=\"Hide actions\"></v-checkbox> -->\n      <v-checkbox v-model=\"adjacent\" label=\"Show adjacent months\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-date-picker'\n  const model = ref('default')\n  const date = ref()\n  const options = []\n  // const hideActions = ref(false)\n  const adjacent = ref(false)\n\n  const props = computed(() => {\n    return {\n      // 'hide-actions': hideActions.value || undefined,\n      'show-adjacent-months': adjacent.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-date-picker${propsToString(props.value)}>${slots.value}</v-date-picker>`\n  })\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-date-picker\n      v-bind=\"props\"\n      v-model=\"date\"\n      class=\"mx-auto\"\n    ></v-date-picker>\n\n    <template v-slot:configuration>\n      <!-- <v-checkbox v-model=\"hideActions\" label=\"Hide actions\"></v-checkbox> -->\n      <v-checkbox v-model=\"adjacent\" label=\"Show adjacent months\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-date-picker'\n  const model = ref('default')\n  const date = ref()\n  const options = []\n  // const hideActions = ref(false)\n  const adjacent = ref(false)\n\n  const props = computed(() => {\n    return {\n      // 'hide-actions': hideActions.value || undefined,\n      'show-adjacent-months': adjacent.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-date-picker${propsToString(props.value)}>${slots.value}</v-date-picker>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000501",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000502",
    "text": "Component: v-guide\nSection: Misc Birthday\nType: code_example\n\n## v-guide - Misc Birthday\n\n```vue\n<template>\n  <div>\n    <div class=\"mb-6\">Active picker: <code>{{ activePicker || 'null' }}</code></div>\n    <v-menu\n      ref=\"menu\"\n      v-model=\"menuActive\"\n      :close-on-content-click=\"false\"\n      min-width=\"auto\"\n      transition=\"scale-transition\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-text-field\n          v-model=\"date\"\n          label=\"Birthday date\"\n          prepend-icon=\"mdi-calendar\"\n          readonly\n          v-bind=\"props\"\n        ></v-text-field>\n      </template>\n      <v-date-picker\n        v-model=\"date\"\n        v-model:active-picker=\"activePicker\"\n        :max=\"(new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)\"\n        min=\"1950-01-01\"\n        @change=\"save\"\n      ></v-date-picker>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const menu = ref()\n\n  const activePicker = ref(null)\n  const date = ref(null)\n  const menuActive = ref(false)\n\n  watch(menuActive, val => {\n    val && setTimeout(() => (activePicker.value = 'YEAR'))\n  })\n\n  function save (date) {\n    menu.value.save(date)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      activePicker: null,\n      date: null,\n      menuActive: false,\n    }),\n    watch: {\n      menuActive (val) {\n        val && setTimeout(() => (this.activePicker = 'YEAR'))\n      },\n    },\n    methods: {\n      save (date) {\n        this.$refs.menu.save(date)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Birthday\n\n```vue\n<template>\n  <div>\n    <div class=\"mb-6\">Active picker: <code>{{ activePicker || 'null' }}</code></div>\n    <v-menu\n      ref=\"menu\"\n      v-model=\"menuActive\"\n      :close-on-content-click=\"false\"\n      min-width=\"auto\"\n      transition=\"scale-transition\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-text-field\n          v-model=\"date\"\n          label=\"Birthday date\"\n          prepend-icon=\"mdi-calendar\"\n          readonly\n          v-bind=\"props\"\n        ></v-text-field>\n      </template>\n      <v-date-picker\n        v-model=\"date\"\n        v-model:active-picker=\"activePicker\"\n        :max=\"(new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)\"\n        min=\"1950-01-01\"\n        @change=\"save\"\n      ></v-date-picker>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const menu = ref()\n\n  const activePicker = ref(null)\n  const date = ref(null)\n  const menuActive = ref(false)\n\n  watch(menuActive, val => {\n    val && setTimeout(() => (activePicker.value = 'YEAR'))\n  })\n\n  function save (date) {\n    menu.value.save(date)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      activePicker: null,\n      date: null,\n      menuActive: false,\n    }),\n    watch: {\n      menuActive (val) {\n        val && setTimeout(() => (this.activePicker = 'YEAR'))\n      },\n    },\n    methods: {\n      save (date) {\n        this.$refs.menu.save(date)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Birthday",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000502",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000503",
    "text": "Component: v-guide\nSection: Misc Dialog And Menu\nType: code_example\n\n## v-guide - Misc Dialog And Menu\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      md=\"4\"\n      sm=\"6\"\n    >\n      <v-menu\n        ref=\"menu\"\n        v-model=\"menuActive\"\n        v-model:return-value=\"date\"\n        :close-on-content-click=\"false\"\n        min-width=\"auto\"\n        transition=\"scale-transition\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-text-field\n            v-model=\"date\"\n            label=\"Picker in menu\"\n            prepend-icon=\"mdi-calendar\"\n            readonly\n            v-bind=\"props\"\n          ></v-text-field>\n        </template>\n        <v-date-picker\n          v-model=\"date\"\n          no-title\n          scrollable\n        >\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu.save(date)\"\n          >\n            OK\n          </v-btn>\n        </v-date-picker>\n      </v-menu>\n    </v-col>\n    <v-spacer></v-spacer>\n    <v-col\n      cols=\"12\"\n      md=\"4\"\n      sm=\"6\"\n    >\n      <v-dialog\n        ref=\"dialog\"\n        v-model=\"modal\"\n        width=\"290px\"\n        persistent\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-text-field\n            v-model=\"date\"\n            label=\"Picker in dialog\"\n            prepend-icon=\"mdi-calendar\"\n            readonly\n            v-bind=\"props\"\n          ></v-text-field>\n        </template>\n        <v-date-picker\n          v-model=\"date\"\n          scrollable\n        >\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"modal = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"dialog.save(date)\"\n          >\n            OK\n          </v-btn>\n        </v-date-picker>\n      </v-dialog>\n    </v-col>\n    <v-col\n      cols=\"12\"\n      md=\"4\"\n      sm=\"6\"\n    >\n      <v-menu\n        v-model=\"menu2\"\n        :close-on-content-click=\"false\"\n        min-width=\"auto\"\n        transition=\"scale-transition\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-text-field\n            v-model=\"date\"\n            label=\"Picker without buttons\"\n            prepend-icon=\"mdi-calendar\"\n            readonly\n            v-bind=\"props\"\n          ></v-text-field>\n        </template>\n        <v-date-picker\n          v-model=\"date\"\n          @change=\"menu2 = false\"\n        ></v-date-picker>\n      </v-menu>\n    </v-col>\n    <v-spacer></v-spacer>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const menu = ref()\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const menuActive = ref(false)\n  const modal = ref(false)\n  const menu2 = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      menuActive: false,\n      modal: false,\n      menu2: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Dialog And Menu\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      md=\"4\"\n      sm=\"6\"\n    >\n      <v-menu\n        ref=\"menu\"\n        v-model=\"menuActive\"\n        v-model:return-value=\"date\"\n        :close-on-content-click=\"false\"\n        min-width=\"auto\"\n        transition=\"scale-transition\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-text-field\n            v-model=\"date\"\n            label=\"Picker in menu\"\n            prepend-icon=\"mdi-calendar\"\n            readonly\n            v-bind=\"props\"\n          ></v-text-field>\n        </template>\n        <v-date-picker\n          v-model=\"date\"\n          no-title\n          scrollable\n        >\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu.save(date)\"\n          >\n            OK\n          </v-btn>\n        </v-date-picker>\n      </v-menu>\n    </v-col>\n    <v-spacer></v-spacer>\n    <v-col\n      cols=\"12\"\n      md=\"4\"\n      sm=\"6\"\n    >\n      <v-dialog\n        ref=\"dialog\"\n        v-model=\"modal\"\n        width=\"290px\"\n        persistent\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-text-field\n            v-model=\"date\"\n            label=\"Picker in dialog\"\n            prepend-icon=\"mdi-calendar\"\n            readonly\n            v-bind=\"props\"\n          ></v-text-field>\n        </template>\n        <v-date-picker\n          v-model=\"date\"\n          scrollable\n        >\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"modal = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"dialog.save(date)\"\n          >\n            OK\n          </v-btn>\n        </v-date-picker>\n      </v-dialog>\n    </v-col>\n    <v-col\n      cols=\"12\"\n      md=\"4\"\n      sm=\"6\"\n    >\n      <v-menu\n        v-model=\"menu2\"\n        :close-on-content-click=\"false\"\n        min-width=\"auto\"\n        transition=\"scale-transition\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-text-field\n            v-model=\"date\"\n            label=\"Picker without buttons\"\n            prepend-icon=\"mdi-calendar\"\n            readonly\n            v-bind=\"props\"\n          ></v-text-field>\n        </template>\n        <v-date-picker\n          v-model=\"date\"\n          @change=\"menu2 = false\"\n        ></v-date-picker>\n      </v-menu>\n    </v-col>\n    <v-spacer></v-spacer>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const menu = ref()\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const menuActive = ref(false)\n  const modal = ref(false)\n  const menu2 = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      menuActive: false,\n      modal: false,\n      menu2: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Dialog And Menu",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000503",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000504",
    "text": "Component: v-guide\nSection: Misc Formatting External Libraries\nType: code_example\n\n## v-guide - Misc Formatting External Libraries\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <v-menu\n          v-model=\"menu1\"\n          :close-on-content-click=\"false\"\n          max-width=\"290\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-text-field\n              :model-value=\"computedDateFormattedMomentjs\"\n              label=\"Formatted with Moment.js\"\n              clearable\n              readonly\n              v-bind=\"props\"\n              @click:clear=\"date = null\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"date\"\n            @change=\"menu1 = false\"\n          ></v-date-picker>\n        </v-menu>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <v-menu\n          v-model=\"menu2\"\n          :close-on-content-click=\"false\"\n          max-width=\"290\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-text-field\n              :model-value=\"computedDateFormattedDatefns\"\n              label=\"Formatted with datefns\"\n              clearable\n              readonly\n              v-bind=\"props\"\n              @click:clear=\"date = null\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"date\"\n            @change=\"menu2 = false\"\n          ></v-date-picker>\n        </v-menu>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n  import moment from 'moment'\n  import { format, parseISO } from 'date-fns'\n\n  const date = ref(format(parseISO(new Date().toISOString()), 'yyyy-MM-dd'))\n  const menu1 = ref(false)\n  const menu2 = ref(false)\n\n  const computedDateFormattedMomentjs = computed(() => {\n    return date.value ? moment(date.value).format('dddd, MMMM Do YYYY') : ''\n  })\n  const computedDateFormattedDatefns = computed(() => {\n    return date.value ? format(parseISO(date.value), 'EEEE, MMMM do yyyy') : ''\n  })\n</script>\n\n<script>\n  import moment from 'moment'\n  import { format, parseISO } from 'date-fns'\n\n  export default {\n    data: () => ({\n      // https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\n      date: format(parseISO(new Date().toISOString()), 'yyyy-MM-dd'),\n      menu1: false,\n      menu2: false,\n    }),\n\n    computed: {\n      computedDateFormattedMomentjs () {\n        return this.date ? moment(this.date).format('dddd, MMMM Do YYYY') : ''\n      },\n      computedDateFormattedDatefns () {\n        return this.date ? format(parseISO(this.date), 'EEEE, MMMM do yyyy') : ''\n      },\n    },\n  }\n</script>\n\n<playground-resources lang=\"json\">\n  {\n    \"imports\": {\n      \"moment\": \"https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js\",\n      \"date-fns\": \"https://cdn.jsdelivr.net/npm/date-fns@2.30.0/esm/index.js/+esm\"\n    }\n  }\n</playground-resources>\n\n```",
    "display_content": "## v-guide - Misc Formatting External Libraries\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <v-menu\n          v-model=\"menu1\"\n          :close-on-content-click=\"false\"\n          max-width=\"290\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-text-field\n              :model-value=\"computedDateFormattedMomentjs\"\n              label=\"Formatted with Moment.js\"\n              clearable\n              readonly\n              v-bind=\"props\"\n              @click:clear=\"date = null\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"date\"\n            @change=\"menu1 = false\"\n          ></v-date-picker>\n        </v-menu>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <v-menu\n          v-model=\"menu2\"\n          :close-on-content-click=\"false\"\n          max-width=\"290\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-text-field\n              :model-value=\"computedDateFormattedDatefns\"\n              label=\"Formatted with datefns\"\n              clearable\n              readonly\n              v-bind=\"props\"\n              @click:clear=\"date = null\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"date\"\n            @change=\"menu2 = false\"\n          ></v-date-picker>\n        </v-menu>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n  import moment from 'moment'\n  import { format, parseISO } from 'date-fns'\n\n  const date = ref(format(parseISO(new Date().toISOString()), 'yyyy-MM-dd'))\n  const menu1 = ref(false)\n  const menu2 = ref(false)\n\n  const computedDateFormattedMomentjs = computed(() => {\n    return date.value ? moment(date.value).format('dddd, MMMM Do YYYY') : ''\n  })\n  const computedDateFormattedDatefns = computed(() => {\n    return date.value ? format(parseISO(date.value), 'EEEE, MMMM do yyyy') : ''\n  })\n</script>\n\n<script>\n  import moment from 'moment'\n  import { format, parseISO } from 'date-fns'\n\n  export default {\n    data: () => ({\n      // https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\n      date: format(parseISO(new Date().toISOString()), 'yyyy-MM-dd'),\n      menu1: false,\n      menu2: false,\n    }),\n\n    computed: {\n      computedDateFormattedMomentjs () {\n        return this.date ? moment(this.date).format('dddd, MMMM Do YYYY') : ''\n      },\n      computedDateFormattedDatefns () {\n        return this.date ? format(parseISO(this.date), 'EEEE, MMMM do yyyy') : ''\n      },\n    },\n  }\n</script>\n\n<playground-resources lang=\"json\">\n  {\n    \"imports\": {\n      \"moment\": \"https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js\",\n      \"date-fns\": \"https://cdn.jsdelivr.net/npm/date-fns@2.30.0/esm/index.js/+esm\"\n    }\n  }\n</playground-resources>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Formatting External Libraries",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000504",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000505",
    "text": "Component: v-guide\nSection: Misc Formatting\nType: code_example\n\n## v-guide - Misc Formatting\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <v-menu\n          ref=\"menu1\"\n          v-model=\"menu1Active\"\n          :close-on-content-click=\"false\"\n          max-width=\"290px\"\n          min-width=\"auto\"\n          transition=\"scale-transition\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-text-field\n              v-model=\"dateFormatted\"\n              hint=\"MM/DD/YYYY format\"\n              label=\"Date\"\n              prepend-icon=\"mdi-calendar\"\n              persistent-hint\n              v-bind=\"props\"\n              @blur=\"date = parseDate(dateFormatted)\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"date\"\n            no-title\n            @input=\"menu1 = false\"\n          ></v-date-picker>\n        </v-menu>\n        <p>Date in ISO format: <strong>{{ date }}</strong></p>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <v-menu\n          v-model=\"menu2\"\n          :close-on-content-click=\"false\"\n          max-width=\"290px\"\n          min-width=\"auto\"\n          transition=\"scale-transition\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-text-field\n              v-model=\"computedDateFormatted\"\n              hint=\"MM/DD/YYYY format\"\n              label=\"Date (read only text field)\"\n              prepend-icon=\"mdi-calendar\"\n              persistent-hint\n              readonly\n              v-bind=\"props\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"date\"\n            no-title\n            @input=\"menu2 = false\"\n          ></v-date-picker>\n        </v-menu>\n        <p>Date in ISO format: <strong>{{ date }}</strong></p>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref, watch } from 'vue'\n\n  const menu1 = ref()\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const dateFormatted = ref(formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)))\n  const menu1Active = ref(false)\n  const menu2 = ref(false)\n\n  const computedDateFormatted = computed(() => {\n    return formatDate(date.value)\n  })\n\n  watch(date, val => {\n    dateFormatted.value = formatDate(val)\n  })\n\n  function formatDate (date) {\n    if (!date) return null\n    const [year, month, day] = date.split('-')\n    return `${month}/${day}/${year}`\n  }\n  function parseDate (date) {\n    if (!date) return null\n    const [month, day, year] = date.split('/')\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n  }\n</script>\n\n<script>\n  export default {\n    data: vm => ({\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      dateFormatted: vm.formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)),\n      menu1: false,\n      menu2: false,\n    }),\n\n    computed: {\n      computedDateFormatted () {\n        return this.formatDate(this.date)\n      },\n    },\n\n    watch: {\n      date (val) {\n        this.dateFormatted = this.formatDate(this.date)\n      },\n    },\n\n    methods: {\n      formatDate (date) {\n        if (!date) return null\n\n        const [year, month, day] = date.split('-')\n        return `${month}/${day}/${year}`\n      },\n      parseDate (date) {\n        if (!date) return null\n\n        const [month, day, year] = date.split('/')\n        return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Formatting\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <v-menu\n          ref=\"menu1\"\n          v-model=\"menu1Active\"\n          :close-on-content-click=\"false\"\n          max-width=\"290px\"\n          min-width=\"auto\"\n          transition=\"scale-transition\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-text-field\n              v-model=\"dateFormatted\"\n              hint=\"MM/DD/YYYY format\"\n              label=\"Date\"\n              prepend-icon=\"mdi-calendar\"\n              persistent-hint\n              v-bind=\"props\"\n              @blur=\"date = parseDate(dateFormatted)\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"date\"\n            no-title\n            @input=\"menu1 = false\"\n          ></v-date-picker>\n        </v-menu>\n        <p>Date in ISO format: <strong>{{ date }}</strong></p>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <v-menu\n          v-model=\"menu2\"\n          :close-on-content-click=\"false\"\n          max-width=\"290px\"\n          min-width=\"auto\"\n          transition=\"scale-transition\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-text-field\n              v-model=\"computedDateFormatted\"\n              hint=\"MM/DD/YYYY format\"\n              label=\"Date (read only text field)\"\n              prepend-icon=\"mdi-calendar\"\n              persistent-hint\n              readonly\n              v-bind=\"props\"\n            ></v-text-field>\n          </template>\n          <v-date-picker\n            v-model=\"date\"\n            no-title\n            @input=\"menu2 = false\"\n          ></v-date-picker>\n        </v-menu>\n        <p>Date in ISO format: <strong>{{ date }}</strong></p>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref, watch } from 'vue'\n\n  const menu1 = ref()\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const dateFormatted = ref(formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)))\n  const menu1Active = ref(false)\n  const menu2 = ref(false)\n\n  const computedDateFormatted = computed(() => {\n    return formatDate(date.value)\n  })\n\n  watch(date, val => {\n    dateFormatted.value = formatDate(val)\n  })\n\n  function formatDate (date) {\n    if (!date) return null\n    const [year, month, day] = date.split('-')\n    return `${month}/${day}/${year}`\n  }\n  function parseDate (date) {\n    if (!date) return null\n    const [month, day, year] = date.split('/')\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n  }\n</script>\n\n<script>\n  export default {\n    data: vm => ({\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      dateFormatted: vm.formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)),\n      menu1: false,\n      menu2: false,\n    }),\n\n    computed: {\n      computedDateFormatted () {\n        return this.formatDate(this.date)\n      },\n    },\n\n    watch: {\n      date (val) {\n        this.dateFormatted = this.formatDate(this.date)\n      },\n    },\n\n    methods: {\n      formatDate (date) {\n        if (!date) return null\n\n        const [year, month, day] = date.split('-')\n        return `${month}/${day}/${year}`\n      },\n      parseDate (date) {\n        if (!date) return null\n\n        const [month, day, year] = date.split('/')\n        return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Formatting",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000505",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000506",
    "text": "Component: v-guide\nSection: Misc Internationalization\nType: code_example\n\n## v-guide - Misc Internationalization\n\n```vue\n<template>\n  <v-row justify=\"space-around\">\n    <v-date-picker\n      v-model=\"picker\"\n      :first-day-of-week=\"0\"\n      locale=\"zh-cn\"\n    ></v-date-picker>\n    <v-date-picker\n      v-model=\"picker\"\n      :first-day-of-week=\"1\"\n      locale=\"sv-se\"\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Internationalization\n\n```vue\n<template>\n  <v-row justify=\"space-around\">\n    <v-date-picker\n      v-model=\"picker\"\n      :first-day-of-week=\"0\"\n      locale=\"zh-cn\"\n    ></v-date-picker>\n    <v-date-picker\n      v-model=\"picker\"\n      :first-day-of-week=\"1\"\n      locale=\"sv-se\"\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Internationalization",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000506",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000507",
    "text": "Component: v-guide\nSection: Misc Orientation\nType: code_example\n\n## v-guide - Misc Orientation\n\n```vue\n<template>\n  <v-row align=\"center\">\n    <v-checkbox\n      v-model=\"landscape\"\n      label=\"Landscape\"\n    ></v-checkbox>\n    <v-date-picker\n      v-model=\"picker\"\n      :landscape=\"landscape\"\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(new Date().toISOString().substr(0, 7))\n  const landscape = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: new Date().toISOString().substr(0, 7),\n        landscape: false,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Orientation\n\n```vue\n<template>\n  <v-row align=\"center\">\n    <v-checkbox\n      v-model=\"landscape\"\n      label=\"Landscape\"\n    ></v-checkbox>\n    <v-date-picker\n      v-model=\"picker\"\n      :landscape=\"landscape\"\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(new Date().toISOString().substr(0, 7))\n  const landscape = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: new Date().toISOString().substr(0, 7),\n        landscape: false,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Orientation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000507",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000508",
    "text": "Component: v-guide\nSection: Prop Allowed Dates\nType: code_example\n\n## v-guide - Prop Allowed Dates\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-date-picker\n        v-model=\"date\"\n        :allowed-dates=\"allowedDates\"\n        max=\"2018-03-20\"\n        min=\"2016-06-15\"\n      ></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { useDate } from 'vuetify'\n  import { ref } from 'vue'\n\n  const date = ref(new Date('2018-03-02'))\n  const adapter = useDate()\n\n  function allowedDates (val) {\n    return parseInt(adapter.toISO(val).split('-')[2], 10) % 2 === 0\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      date: new Date('2018-03-02'),\n    }),\n\n    methods: {\n      allowedDates: val => {\n        return parseInt(this.$vuetify.date.toISO(val).split('-')[2], 10) % 2 === 0\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Allowed Dates\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-date-picker\n        v-model=\"date\"\n        :allowed-dates=\"allowedDates\"\n        max=\"2018-03-20\"\n        min=\"2016-06-15\"\n      ></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { useDate } from 'vuetify'\n  import { ref } from 'vue'\n\n  const date = ref(new Date('2018-03-02'))\n  const adapter = useDate()\n\n  function allowedDates (val) {\n    return parseInt(adapter.toISO(val).split('-')[2], 10) % 2 === 0\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      date: new Date('2018-03-02'),\n    }),\n\n    methods: {\n      allowedDates: val => {\n        return parseInt(this.$vuetify.date.toISO(val).split('-')[2], 10) % 2 === 0\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Allowed Dates",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000508",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000509",
    "text": "Component: v-guide\nSection: Prop Colors\nType: code_example\n\n## v-guide - Prop Colors\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-date-picker\n        color=\"primary\"\n      ></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Colors\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-date-picker\n        color=\"primary\"\n      ></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Colors",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000509",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000510",
    "text": "Component: v-guide\nSection: Prop Elevation\nType: code_example\n\n## v-guide - Prop Elevation\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-date-picker elevation=\"24\"></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Elevation\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-date-picker elevation=\"24\"></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Elevation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000510",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000511",
    "text": "Component: v-guide\nSection: Prop Icons\nType: code_example\n\n## v-guide - Prop Icons\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-date-picker\n      v-model=\"picker\"\n      next-icon=\"mdi-skip-next\"\n      prev-icon=\"mdi-skip-previous\"\n      year-icon=\"mdi-calendar-blank\"\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Icons\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-date-picker\n      v-model=\"picker\"\n      next-icon=\"mdi-skip-next\"\n      prev-icon=\"mdi-skip-previous\"\n      year-icon=\"mdi-calendar-blank\"\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000511",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000512",
    "text": "Component: v-guide\nSection: Prop Multiple\nType: code_example\n\n## v-guide - Prop Multiple\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-date-picker\n        v-model=\"dates\"\n        multiple\n      ></v-date-picker>\n    </v-col>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-menu\n        ref=\"menu\"\n        v-model=\"menuActive\"\n        v-model:return-value=\"dates\"\n        :close-on-content-click=\"false\"\n        min-width=\"auto\"\n        transition=\"scale-transition\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-combobox\n            v-model=\"dates\"\n            label=\"Multiple picker in menu\"\n            prepend-icon=\"mdi-calendar\"\n            chips\n            multiple\n            readonly\n            v-bind=\"props\"\n          ></v-combobox>\n        </template>\n        <v-date-picker\n          v-model=\"dates\"\n          multiple\n          no-title\n          scrollable\n        >\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu.save(dates)\"\n          >\n            OK\n          </v-btn>\n        </v-date-picker>\n      </v-menu>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const menu = ref()\n\n  const dates = ref(['2018-09-15', '2018-09-20'])\n  const menuActive = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dates: ['2018-09-15', '2018-09-20'],\n      menuActive: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Multiple\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-date-picker\n        v-model=\"dates\"\n        multiple\n      ></v-date-picker>\n    </v-col>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-menu\n        ref=\"menu\"\n        v-model=\"menuActive\"\n        v-model:return-value=\"dates\"\n        :close-on-content-click=\"false\"\n        min-width=\"auto\"\n        transition=\"scale-transition\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-combobox\n            v-model=\"dates\"\n            label=\"Multiple picker in menu\"\n            prepend-icon=\"mdi-calendar\"\n            chips\n            multiple\n            readonly\n            v-bind=\"props\"\n          ></v-combobox>\n        </template>\n        <v-date-picker\n          v-model=\"dates\"\n          multiple\n          no-title\n          scrollable\n        >\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu.save(dates)\"\n          >\n            OK\n          </v-btn>\n        </v-date-picker>\n      </v-menu>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const menu = ref()\n\n  const dates = ref(['2018-09-15', '2018-09-20'])\n  const menuActive = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dates: ['2018-09-15', '2018-09-20'],\n      menuActive: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Multiple",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000512",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000513",
    "text": "Component: v-guide\nSection: Prop Picker Date\nType: code_example\n\n## v-guide - Prop Picker Date\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      class=\"my-2 px-1\"\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-date-picker\n        ref=\"picker\"\n        v-model=\"date\"\n        v-model:picker-date=\"pickerDate\"\n        full-width\n      ></v-date-picker>\n    </v-col>\n    <v-col\n      class=\"my-2 px-1\"\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <div class=\"text-h6\">\n        Month news ({{ pickerDate || 'change month...' }})\n      </div>\n      <div class=\"subheading\">\n        Change month to see other news\n      </div>\n      <ul class=\"ma-4\">\n        <li\n          v-for=\"note in notes\"\n          :key=\"note\"\n        >\n          {{ note }}\n        </li>\n      </ul>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const allNotes = [\n    'President met with prime minister',\n    'New power plant opened',\n    'Rocket launch announced',\n    'Global warming discussion cancelled',\n    'Company changed its location',\n  ]\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const pickerDate = ref(null)\n  const notes = ref([])\n\n  watch(pickerDate, val => {\n    notes.value = [\n      allNotes[Math.floor(Math.random() * 5)],\n      allNotes[Math.floor(Math.random() * 5)],\n      allNotes[Math.floor(Math.random() * 5)],\n    ].filter((value, index, self) => self.indexOf(value) === index)\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      pickerDate: null,\n      notes: [],\n      allNotes: [\n        'President met with prime minister',\n        'New power plant opened',\n        'Rocket launch announced',\n        'Global warming discussion cancelled',\n        'Company changed its location',\n      ],\n    }),\n    watch: {\n      pickerDate (val) {\n        this.notes = [\n          this.allNotes[Math.floor(Math.random() * 5)],\n          this.allNotes[Math.floor(Math.random() * 5)],\n          this.allNotes[Math.floor(Math.random() * 5)],\n        ].filter((value, index, self) => self.indexOf(value) === index)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Picker Date\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      class=\"my-2 px-1\"\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-date-picker\n        ref=\"picker\"\n        v-model=\"date\"\n        v-model:picker-date=\"pickerDate\"\n        full-width\n      ></v-date-picker>\n    </v-col>\n    <v-col\n      class=\"my-2 px-1\"\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <div class=\"text-h6\">\n        Month news ({{ pickerDate || 'change month...' }})\n      </div>\n      <div class=\"subheading\">\n        Change month to see other news\n      </div>\n      <ul class=\"ma-4\">\n        <li\n          v-for=\"note in notes\"\n          :key=\"note\"\n        >\n          {{ note }}\n        </li>\n      </ul>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const allNotes = [\n    'President met with prime minister',\n    'New power plant opened',\n    'Rocket launch announced',\n    'Global warming discussion cancelled',\n    'Company changed its location',\n  ]\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const pickerDate = ref(null)\n  const notes = ref([])\n\n  watch(pickerDate, val => {\n    notes.value = [\n      allNotes[Math.floor(Math.random() * 5)],\n      allNotes[Math.floor(Math.random() * 5)],\n      allNotes[Math.floor(Math.random() * 5)],\n    ].filter((value, index, self) => self.indexOf(value) === index)\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      pickerDate: null,\n      notes: [],\n      allNotes: [\n        'President met with prime minister',\n        'New power plant opened',\n        'Rocket launch announced',\n        'Global warming discussion cancelled',\n        'Company changed its location',\n      ],\n    }),\n    watch: {\n      pickerDate (val) {\n        this.notes = [\n          this.allNotes[Math.floor(Math.random() * 5)],\n          this.allNotes[Math.floor(Math.random() * 5)],\n          this.allNotes[Math.floor(Math.random() * 5)],\n        ].filter((value, index, self) => self.indexOf(value) === index)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Picker Date",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000513",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000514",
    "text": "Component: v-guide\nSection: Prop Range\nType: code_example\n\n## v-guide - Prop Range\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-date-picker\n        v-model=\"dates\"\n        range\n      ></v-date-picker>\n    </v-col>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-text-field\n        v-model=\"dateRangeText\"\n        label=\"Date range\"\n        prepend-icon=\"mdi-calendar\"\n        readonly\n      ></v-text-field>\n      model: {{ dates }}\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const dates = ref(['2019-09-10', '2019-09-20'])\n  const dateRangeText = computed(() => {\n    return dates.value.join(' ~ ')\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dates: ['2019-09-10', '2019-09-20'],\n    }),\n    computed: {\n      dateRangeText () {\n        return this.dates.join(' ~ ')\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Range\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-date-picker\n        v-model=\"dates\"\n        range\n      ></v-date-picker>\n    </v-col>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-text-field\n        v-model=\"dateRangeText\"\n        label=\"Date range\"\n        prepend-icon=\"mdi-calendar\"\n        readonly\n      ></v-text-field>\n      model: {{ dates }}\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const dates = ref(['2019-09-10', '2019-09-20'])\n  const dateRangeText = computed(() => {\n    return dates.value.join(' ~ ')\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dates: ['2019-09-10', '2019-09-20'],\n    }),\n    computed: {\n      dateRangeText () {\n        return this.dates.join(' ~ ')\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Range",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000514",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000515",
    "text": "Component: v-guide\nSection: Prop Readonly\nType: code_example\n\n## v-guide - Prop Readonly\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-date-picker\n      v-model=\"date\"\n      readonly\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Readonly\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-date-picker\n      v-model=\"date\"\n      readonly\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const date = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Readonly",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000515",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000516",
    "text": "Component: v-guide\nSection: Prop Show Adjacent Months\nType: code_example\n\n## v-guide - Prop Show Adjacent Months\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-date-picker show-adjacent-months></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Show Adjacent Months\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-date-picker show-adjacent-months></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Show Adjacent Months",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000516",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000517",
    "text": "Component: v-guide\nSection: Prop Show Current\nType: code_example\n\n## v-guide - Prop Show Current\n\n```vue\n<template>\n  <v-row justify=\"space-around\">\n    <v-date-picker\n      v-model=\"date1\"\n      :show-current=\"false\"\n    ></v-date-picker>\n    <v-date-picker\n      v-model=\"date2\"\n      show-current=\"2013-07-13\"\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const date1 = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const date2 = ref('2013-07-29')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        date1: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n        date2: '2013-07-29',\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Show Current\n\n```vue\n<template>\n  <v-row justify=\"space-around\">\n    <v-date-picker\n      v-model=\"date1\"\n      :show-current=\"false\"\n    ></v-date-picker>\n    <v-date-picker\n      v-model=\"date2\"\n      show-current=\"2013-07-13\"\n    ></v-date-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const date1 = ref((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10))\n  const date2 = ref('2013-07-29')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        date1: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n        date2: '2013-07-29',\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Show Current",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000517",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000518",
    "text": "Component: v-guide\nSection: Prop Width\nType: code_example\n\n## v-guide - Prop Width\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-date-picker width=\"400\"></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Width\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-date-picker width=\"400\"></v-date-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Width",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000518",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000519",
    "text": "Component: v-defaults-providers\nType: component_overview\n\n# v-defaults-providers\n\nThe defaults provider allows you to provide specific default prop values to components in a section of your application",
    "display_content": "# v-defaults-providers\n\nThe defaults provider allows you to provide specific default prop values to components in a section of your application",
    "metadata": {
      "component": "v-defaults-providers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000519",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000520",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-defaults-provider` component is used to provide default props to components within its scope. It hooks into the [Global configuration](/features/global-configuration/) feature and makes it easy to assign multiple properties at once or scope out all incoming changes to any children.",
    "display_content": "# v-usage\n\nThe `v-defaults-provider` component is used to provide default props to components within its scope. It hooks into the [Global configuration](/features/global-configuration/) feature and makes it easy to assign multiple properties at once or scope out all incoming changes to any children.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000520",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000521",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-defaults-provider](/api/v-defaults-provider/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-defaults-provider](/api/v-defaults-provider/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000521",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000522",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe `v-defaults-provider` expects a prop **defaults** which looks the same as the **defaults** object that you can pass to `createVuetify` when creating your application.\n\nAvailable sections: Defaults, Prop Defaults, Usage",
    "display_content": "# v-examples\n\nThe `v-defaults-provider` expects a prop **defaults** which looks the same as the **defaults** object that you can pass to `createVuetify` when creating your application.\n\nAvailable sections: Defaults, Prop Defaults, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000522",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000523",
    "text": "Component: v-examples\nSection: Defaults\nType: documentation\n\n## v-examples - Defaults\n\nThe `v-defaults-provider` expects a prop **defaults** which looks the same as the **defaults** object that you can pass to `createVuetify` when creating your application.\n\n<ExamplesExample file=\"v-defaults-provider/prop-defaults\" />",
    "display_content": "## v-examples - Defaults\n\nThe `v-defaults-provider` expects a prop **defaults** which looks the same as the **defaults** object that you can pass to `createVuetify` when creating your application.\n\n<ExamplesExample file=\"v-defaults-provider/prop-defaults\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Defaults",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000523",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000524",
    "text": "Component: v-examples\nSection: Prop Defaults\nType: code_example\n\n## v-examples - Prop Defaults\n\n```vue\n<template>\n  <div>\n    <v-card class=\"ma-10\" subtitle=\"Subtitle\" title=\"Title\"></v-card>\n    <v-defaults-provider :defaults=\"defaults\">\n      <v-card class=\"ma-10\" subtitle=\"Subtitle\" title=\"Title\"></v-card>\n    </v-defaults-provider>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const defaults = ref({\n    global: {\n      elevation: 10,\n    },\n    VCard: {\n      color: 'secondary',\n    },\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      defaults: {\n        global: {\n          elevation: 10,\n        },\n        VCard: {\n          color: 'secondary',\n        },\n      },\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Defaults\n\n```vue\n<template>\n  <div>\n    <v-card class=\"ma-10\" subtitle=\"Subtitle\" title=\"Title\"></v-card>\n    <v-defaults-provider :defaults=\"defaults\">\n      <v-card class=\"ma-10\" subtitle=\"Subtitle\" title=\"Title\"></v-card>\n    </v-defaults-provider>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const defaults = ref({\n    global: {\n      elevation: 10,\n    },\n    VCard: {\n      color: 'secondary',\n    },\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      defaults: {\n        global: {\n          elevation: 10,\n        },\n        VCard: {\n          color: 'secondary',\n        },\n      },\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Defaults",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000524",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000525",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-defaults-provider\n        :defaults=\"{\n          VBtn: !button ? {} : {\n            color: 'primary',\n            size: 'large',\n            variant: 'tonal',\n          },\n        }\"\n      >\n        <v-btn>Button</v-btn>\n      </v-defaults-provider>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"button\" label=\"Use v-btn defaults\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-defaults-provider'\n  const model = ref('default')\n  const button = ref(false)\n  const options = []\n  const props = computed(() => {\n    return {\n      defaults: button.value ? {\n        VBtn: {\n          color: 'primary',\n          size: 'large',\n          variant: 'tonal',\n        },\n      } : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-btn>Button</v-btn>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-defaults-provider\n        :defaults=\"{\n          VBtn: !button ? {} : {\n            color: 'primary',\n            size: 'large',\n            variant: 'tonal',\n          },\n        }\"\n      >\n        <v-btn>Button</v-btn>\n      </v-defaults-provider>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"button\" label=\"Use v-btn defaults\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-defaults-provider'\n  const model = ref('default')\n  const button = ref(false)\n  const options = []\n  const props = computed(() => {\n    return {\n      defaults: button.value ? {\n        VBtn: {\n          color: 'primary',\n          size: 'large',\n          variant: 'tonal',\n        },\n      } : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-btn>Button</v-btn>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000525",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000526",
    "text": "Component: v-dialogs\nType: component_overview\n\n# v-dialogs\n\nThe `v-dialog` component inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks. Use dialogs sparingly because they are interruptive.",
    "display_content": "# v-dialogs\n\nThe `v-dialog` component inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks. Use dialogs sparingly because they are interruptive.",
    "metadata": {
      "component": "v-dialogs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000526",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000527",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nIn this basic example we use the **activator** slot to render a button that is used to open the dialog. When using the **activator** slot it is important that you bind the **props** object from the slot (using `v-bind`) to the element that will activate the dialog. See the examples below for more ways of activating a dialog.",
    "display_content": "# v-usage\n\nIn this basic example we use the **activator** slot to render a button that is used to open the dialog. When using the **activator** slot it is important that you bind the **props** object from the slot (using `v-bind`) to the element that will activate the dialog. See the examples below for more ways of activating a dialog.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000527",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000528",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-dialog](/api/v-dialog/) | Primary component | | [v-overlay](/api/v-overlay/) | Extended component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-dialog](/api/v-dialog/) | Primary component | | [v-overlay](/api/v-overlay/) | Extended component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000528",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000529",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended components to use inside of a `v-dialog` are:",
    "display_content": "# v-anatomy\n\nThe recommended components to use inside of a `v-dialog` are:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000529",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000530",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-dialog` component is used to inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks. They are controlled by a **v-model** and/or an activator.\n\nAvailable sections: Props, v-model, Persistent, Transitions, Nesting, Overflowed, Slots, Default, Activator",
    "display_content": "# v-guide\n\nThe `v-dialog` component is used to inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks. They are controlled by a **v-model** and/or an activator.\n\nAvailable sections: Props, v-model, Persistent, Transitions, Nesting, Overflowed, Slots, Default, Activator",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000530",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000531",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-dialog` component extends [v-overlay](/components/overlays/) and has access to all of its props.",
    "display_content": "## v-guide - Props\n\nThe `v-dialog` component extends [v-overlay](/components/overlays/) and has access to all of its props.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000531",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000532",
    "text": "Component: v-guide\nSection: v-model\nType: documentation\n\n## v-guide - v-model\n\nYou can also trigger a dialog by simply updating the v-model, without using either **activator** slot or prop. In this case, the dialog will not appear to be activated by any specific element, and will simply appear in the middle of the screen.\n\n<ExamplesExample file=\"v-dialog/prop-model\" />",
    "display_content": "## v-guide - v-model\n\nYou can also trigger a dialog by simply updating the v-model, without using either **activator** slot or prop. In this case, the dialog will not appear to be activated by any specific element, and will simply appear in the middle of the screen.\n\n<ExamplesExample file=\"v-dialog/prop-model\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "v-model",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000532",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000533",
    "text": "Component: v-guide\nSection: Persistent\nType: documentation\n\n## v-guide - Persistent\n\nPersistent dialogs are not dismissed when touching outside or pressing the **esc** key.\n\n<ExamplesExample file=\"v-dialog/prop-persistent\" />",
    "display_content": "## v-guide - Persistent\n\nPersistent dialogs are not dismissed when touching outside or pressing the **esc** key.\n\n<ExamplesExample file=\"v-dialog/prop-persistent\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Persistent",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000533",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000534",
    "text": "Component: v-guide\nSection: Transitions\nType: documentation\n\n## v-guide - Transitions\n\nYou can make the dialog appear from the top or the bottom.\n\n<ExamplesExample file=\"v-dialog/prop-transitions\" />",
    "display_content": "## v-guide - Transitions\n\nYou can make the dialog appear from the top or the bottom.\n\n<ExamplesExample file=\"v-dialog/prop-transitions\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Transitions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000534",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000535",
    "text": "Component: v-guide\nSection: Nesting\nType: documentation\n\n## v-guide - Nesting\n\nDialogs can be nested: you can open one dialog from another.\n\n<ExamplesExample file=\"v-dialog/misc-nesting\" />",
    "display_content": "## v-guide - Nesting\n\nDialogs can be nested: you can open one dialog from another.\n\n<ExamplesExample file=\"v-dialog/misc-nesting\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Nesting",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000535",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000536",
    "text": "Component: v-guide\nSection: Overflowed\nType: documentation\n\n## v-guide - Overflowed\n\nModals that do not fit within the available window space will scroll the container.\n\n<ExamplesExample file=\"v-dialog/misc-overflowed\" />",
    "display_content": "## v-guide - Overflowed\n\nModals that do not fit within the available window space will scroll the container.\n\n<ExamplesExample file=\"v-dialog/misc-overflowed\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Overflowed",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000536",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000537",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe `v-dialog` component has 2 slots, **activator** and **default**. The **activator** slot is used to designate an element that will activate the dialog. The **default** slot provides an **isActive** ref which is tied to the current state of the dialog.",
    "display_content": "## v-guide - Slots\n\nThe `v-dialog` component has 2 slots, **activator** and **default**. The **activator** slot is used to designate an element that will activate the dialog. The **default** slot provides an **isActive** ref which is tied to the current state of the dialog.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000537",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000538",
    "text": "Component: v-guide\nSection: Default\nType: documentation\n\n## v-guide - Default\n\n<ExamplesExample file=\"v-dialog/slot-default\" />",
    "display_content": "## v-guide - Default\n\n<ExamplesExample file=\"v-dialog/slot-default\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Default",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000538",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000539",
    "text": "Component: v-guide\nSection: Activator\nType: documentation\n\n## v-guide - Activator\n\nIn addition using the **activator** slot, we can instead use the **activator** prop to activate a dialog. By placing the dialog component inside the button, and setting the **activator** prop value to **\"parent\"** we can designate the parent (button) as the activator.\n\n<ExamplesExample file=\"v-dialog/prop-activator\" />",
    "display_content": "## v-guide - Activator\n\nIn addition using the **activator** slot, we can instead use the **activator** prop to activate a dialog. By placing the dialog component inside the button, and setting the **activator** prop value to **\"parent\"** we can designate the parent (button) as the activator.\n\n<ExamplesExample file=\"v-dialog/prop-activator\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Activator",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000539",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000540",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-dialog` component.\n\nAvailable sections: Scrollable, Form, Loader, Fullscreen, Invite dialog, Data Table, Misc Data Table, Misc Form, Misc Invite Dialog, Misc Loader, Misc Nesting, Misc Overflowed, Misc Without Activator, Prop Activator, Prop Fullscreen, Prop Model, Prop Persistent, Prop Scrollable, Prop Transitions, Slot Default, Usage",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-dialog` component.\n\nAvailable sections: Scrollable, Form, Loader, Fullscreen, Invite dialog, Data Table, Misc Data Table, Misc Form, Misc Invite Dialog, Misc Loader, Misc Nesting, Misc Overflowed, Misc Without Activator, Prop Activator, Prop Fullscreen, Prop Model, Prop Persistent, Prop Scrollable, Prop Transitions, Slot Default, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000540",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000541",
    "text": "Component: v-examples\nSection: Scrollable\nType: documentation\n\n## v-examples - Scrollable\n\nExample of a dialog with scrollable content.\n\n<ExamplesExample file=\"v-dialog/prop-scrollable\" />",
    "display_content": "## v-examples - Scrollable\n\nExample of a dialog with scrollable content.\n\n<ExamplesExample file=\"v-dialog/prop-scrollable\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Scrollable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000541",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000542",
    "text": "Component: v-examples\nSection: Form\nType: documentation\n\n## v-examples - Form\n\nA simple example of a form in a dialog.\n\n<ExamplesExample file=\"v-dialog/misc-form\" />",
    "display_content": "## v-examples - Form\n\nA simple example of a form in a dialog.\n\n<ExamplesExample file=\"v-dialog/misc-form\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Form",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000542",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000543",
    "text": "Component: v-examples\nSection: Loader\nType: documentation\n\n## v-examples - Loader\n\nThe `v-dialog` component makes it easy to create a customized loading experience for your application.\n\n<ExamplesExample file=\"v-dialog/misc-loader\" />",
    "display_content": "## v-examples - Loader\n\nThe `v-dialog` component makes it easy to create a customized loading experience for your application.\n\n<ExamplesExample file=\"v-dialog/misc-loader\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Loader",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000543",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000544",
    "text": "Component: v-examples\nSection: Fullscreen\nType: documentation\n\n## v-examples - Fullscreen\n\nDue to limited space, full-screen dialogs may be more appropriate for mobile devices than dialogs used on devices with larger screens.\n\n<ExamplesExample file=\"v-dialog/prop-fullscreen\" />",
    "display_content": "## v-examples - Fullscreen\n\nDue to limited space, full-screen dialogs may be more appropriate for mobile devices than dialogs used on devices with larger screens.\n\n<ExamplesExample file=\"v-dialog/prop-fullscreen\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Fullscreen",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000544",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000545",
    "text": "Component: v-examples\nSection: Invite dialog\nType: documentation\n\n## v-examples - Invite dialog\n\nThis example demonstrates a dialog that is used to invite users to a group.\n\n<ExamplesExample file=\"v-dialog/misc-invite-dialog\" />",
    "display_content": "## v-examples - Invite dialog\n\nThis example demonstrates a dialog that is used to invite users to a group.\n\n<ExamplesExample file=\"v-dialog/misc-invite-dialog\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Invite dialog",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000545",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000546",
    "text": "Component: v-examples\nSection: Data Table\nType: documentation\n\n## v-examples - Data Table\n\nThe **activator** prop allows you to use just one instance of the `v-dialog` component. For example, a row in a `v-data-table` can trigger the same dialog.\n\n<ExamplesExample file=\"v-dialog/misc-data-table\"/>",
    "display_content": "## v-examples - Data Table\n\nThe **activator** prop allows you to use just one instance of the `v-dialog` component. For example, a row in a `v-data-table` can trigger the same dialog.\n\n<ExamplesExample file=\"v-dialog/misc-data-table\"/>",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Data Table",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000546",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000547",
    "text": "Component: v-examples\nSection: Misc Data Table\nType: code_example\n\n## v-examples - Misc Data Table\n\n```vue\n<template>\n  <v-data-table :headers=\"headers\" :items=\"items\">\n    <template v-slot:item.progress=\"{ item }\">\n      <v-progress-linear\n        :color=\"color(item.progress)\"\n        :model-value=\"item.progress\"\n        height=\"25\"\n      >\n        <template v-slot:default=\"{ value }\">\n          <strong>{{ value }}%</strong>\n        </template>\n      </v-progress-linear>\n    </template>\n\n    <template v-slot:item.actions=\"{ item }\">\n      <v-btn\n        variant=\"text\"\n        icon\n        @click=\"edit(item)\"\n        @mouseenter=\"register($event)\"\n      >\n        <v-icon>mdi-pencil</v-icon>\n      </v-btn>\n\n      <v-btn variant=\"text\" icon @click=\"remove(item.id)\">\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n    </template>\n  </v-data-table>\n\n  <v-dialog v-model=\"dialog\" :activator=\"activator\" max-width=\"500\">\n    <v-confirm-edit\n      ref=\"confirm\"\n      v-model=\"model\"\n      ok-text=\"save\"\n      @cancel=\"dialog = false\"\n      @save=\"save\"\n    >\n      <template v-slot:default=\"{ model: proxyModel, actions }\">\n        <v-card title=\"Modify Data\">\n          <v-card-text>\n            <v-text-field\n              v-model=\"proxyModel.value.name\"\n              label=\"Modify name\"\n            ></v-text-field>\n\n            <v-number-input\n              v-model=\"proxyModel.value.progress\"\n              label=\"Modify progress\"\n              max=\"100\"\n              min=\"0\"\n            ></v-number-input>\n          </v-card-text>\n\n          <template v-slot:actions>\n            <v-spacer></v-spacer>\n            <component :is=\"actions\"></component>\n          </template>\n        </v-card>\n      </template>\n    </v-confirm-edit>\n  </v-dialog>\n</template>\n\n<script setup>\n  // v-dialog\n  const dialog = ref(false)\n  const activator = ref(null)\n\n  // v-confirm-edit\n  const confirm = ref(null)\n\n  const model = ref({\n    name: '',\n    progress: 0,\n  })\n\n  const selected = ref()\n\n  const headers = [\n    { title: 'ID', value: 'id' },\n    { title: 'Name', value: 'name' },\n    { title: 'Progress', value: 'progress' },\n    { title: 'Actions', value: 'actions' },\n  ]\n\n  const items = ref([\n    { id: 1, name: 'Tumwater', progress: 50 },\n    { id: 2, name: 'Siena', progress: 73 },\n    { id: 3, name: 'Cold Harbor', progress: 100 },\n    { id: 4, name: 'Cairns', progress: 92 },\n    { id: 5, name: 'Allentown', progress: 40 },\n  ])\n\n  // Adjust progress bar color based on progress\n  const color = computed(() => progress => {\n    if (progress === 100) return 'green-lighten-2'\n    if (progress >= 90) return 'green-lighten-4'\n    if (progress >= 70) return 'light-green-lighten-2'\n    if (progress >= 50) return 'light-green-lighten-4'\n    return 'blue-grey'\n  })\n\n  // Register current, hovered row to activator\n  // Preferrably called before edit()\n  function register (event) {\n    activator.value = event.currentTarget\n  }\n\n  // Select & load data to be edited\n  function edit (item) {\n    selected.value = item.id\n    model.value = { name: item.name, progress: item.progress }\n  }\n\n  // Update item data\n  function save () {\n    dialog.value = false\n\n    items.value = items.value.map(item =>\n      item.id === selected.value\n        ? { ...item, name: model.value.name, progress: model.value.progress }\n        : item\n    )\n  }\n\n  function remove (id) {\n    items.value = items.value.filter(item => item.id !== id)\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Data Table\n\n```vue\n<template>\n  <v-data-table :headers=\"headers\" :items=\"items\">\n    <template v-slot:item.progress=\"{ item }\">\n      <v-progress-linear\n        :color=\"color(item.progress)\"\n        :model-value=\"item.progress\"\n        height=\"25\"\n      >\n        <template v-slot:default=\"{ value }\">\n          <strong>{{ value }}%</strong>\n        </template>\n      </v-progress-linear>\n    </template>\n\n    <template v-slot:item.actions=\"{ item }\">\n      <v-btn\n        variant=\"text\"\n        icon\n        @click=\"edit(item)\"\n        @mouseenter=\"register($event)\"\n      >\n        <v-icon>mdi-pencil</v-icon>\n      </v-btn>\n\n      <v-btn variant=\"text\" icon @click=\"remove(item.id)\">\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n    </template>\n  </v-data-table>\n\n  <v-dialog v-model=\"dialog\" :activator=\"activator\" max-width=\"500\">\n    <v-confirm-edit\n      ref=\"confirm\"\n      v-model=\"model\"\n      ok-text=\"save\"\n      @cancel=\"dialog = false\"\n      @save=\"save\"\n    >\n      <template v-slot:default=\"{ model: proxyModel, actions }\">\n        <v-card title=\"Modify Data\">\n          <v-card-text>\n            <v-text-field\n              v-model=\"proxyModel.value.name\"\n              label=\"Modify name\"\n            ></v-text-field>\n\n            <v-number-input\n              v-model=\"proxyModel.value.progress\"\n              label=\"Modify progress\"\n              max=\"100\"\n              min=\"0\"\n            ></v-number-input>\n          </v-card-text>\n\n          <template v-slot:actions>\n            <v-spacer></v-spacer>\n            <component :is=\"actions\"></component>\n          </template>\n        </v-card>\n      </template>\n    </v-confirm-edit>\n  </v-dialog>\n</template>\n\n<script setup>\n  // v-dialog\n  const dialog = ref(false)\n  const activator = ref(null)\n\n  // v-confirm-edit\n  const confirm = ref(null)\n\n  const model = ref({\n    name: '',\n    progress: 0,\n  })\n\n  const selected = ref()\n\n  const headers = [\n    { title: 'ID', value: 'id' },\n    { title: 'Name', value: 'name' },\n    { title: 'Progress', value: 'progress' },\n    { title: 'Actions', value: 'actions' },\n  ]\n\n  const items = ref([\n    { id: 1, name: 'Tumwater', progress: 50 },\n    { id: 2, name: 'Siena', progress: 73 },\n    { id: 3, name: 'Cold Harbor', progress: 100 },\n    { id: 4, name: 'Cairns', progress: 92 },\n    { id: 5, name: 'Allentown', progress: 40 },\n  ])\n\n  // Adjust progress bar color based on progress\n  const color = computed(() => progress => {\n    if (progress === 100) return 'green-lighten-2'\n    if (progress >= 90) return 'green-lighten-4'\n    if (progress >= 70) return 'light-green-lighten-2'\n    if (progress >= 50) return 'light-green-lighten-4'\n    return 'blue-grey'\n  })\n\n  // Register current, hovered row to activator\n  // Preferrably called before edit()\n  function register (event) {\n    activator.value = event.currentTarget\n  }\n\n  // Select & load data to be edited\n  function edit (item) {\n    selected.value = item.id\n    model.value = { name: item.name, progress: item.progress }\n  }\n\n  // Update item data\n  function save () {\n    dialog.value = false\n\n    items.value = items.value.map(item =>\n      item.id === selected.value\n        ? { ...item, name: model.value.name, progress: model.value.progress }\n        : item\n    )\n  }\n\n  function remove (id) {\n    items.value = items.value.filter(item => item.id !== id)\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Data Table",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000547",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000548",
    "text": "Component: v-examples\nSection: Misc Form\nType: code_example\n\n## v-examples - Misc Form\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"600\"\n    >\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn\n          class=\"text-none font-weight-regular\"\n          prepend-icon=\"mdi-account\"\n          text=\"Edit Profile\"\n          variant=\"tonal\"\n          v-bind=\"activatorProps\"\n        ></v-btn>\n      </template>\n\n      <v-card\n        prepend-icon=\"mdi-account\"\n        title=\"User Profile\"\n      >\n        <v-card-text>\n          <v-row dense>\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                label=\"First name*\"\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                hint=\"example of helper text only on focus\"\n                label=\"Middle name\"\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                hint=\"example of persistent helper text\"\n                label=\"Last name*\"\n                persistent-hint\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                label=\"Email*\"\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                label=\"Password*\"\n                type=\"password\"\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                label=\"Confirm Password*\"\n                type=\"password\"\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              sm=\"6\"\n            >\n              <v-select\n                :items=\"['0-17', '18-29', '30-54', '54+']\"\n                label=\"Age*\"\n                required\n              ></v-select>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              sm=\"6\"\n            >\n              <v-autocomplete\n                :items=\"['Skiing', 'Ice hockey', 'Soccer', 'Basketball', 'Hockey', 'Reading', 'Writing', 'Coding', 'Basejump']\"\n                label=\"Interests\"\n                auto-select-first\n                multiple\n              ></v-autocomplete>\n            </v-col>\n          </v-row>\n\n          <small class=\"text-caption text-medium-emphasis\">*indicates required field</small>\n        </v-card-text>\n\n        <v-divider></v-divider>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            text=\"Close\"\n            variant=\"plain\"\n            @click=\"dialog = false\"\n          ></v-btn>\n\n          <v-btn\n            color=\"primary\"\n            text=\"Save\"\n            variant=\"tonal\"\n            @click=\"dialog = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const dialog = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dialog: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Form\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"600\"\n    >\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn\n          class=\"text-none font-weight-regular\"\n          prepend-icon=\"mdi-account\"\n          text=\"Edit Profile\"\n          variant=\"tonal\"\n          v-bind=\"activatorProps\"\n        ></v-btn>\n      </template>\n\n      <v-card\n        prepend-icon=\"mdi-account\"\n        title=\"User Profile\"\n      >\n        <v-card-text>\n          <v-row dense>\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                label=\"First name*\"\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                hint=\"example of helper text only on focus\"\n                label=\"Middle name\"\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                hint=\"example of persistent helper text\"\n                label=\"Last name*\"\n                persistent-hint\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                label=\"Email*\"\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                label=\"Password*\"\n                type=\"password\"\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              md=\"4\"\n              sm=\"6\"\n            >\n              <v-text-field\n                label=\"Confirm Password*\"\n                type=\"password\"\n                required\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              sm=\"6\"\n            >\n              <v-select\n                :items=\"['0-17', '18-29', '30-54', '54+']\"\n                label=\"Age*\"\n                required\n              ></v-select>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              sm=\"6\"\n            >\n              <v-autocomplete\n                :items=\"['Skiing', 'Ice hockey', 'Soccer', 'Basketball', 'Hockey', 'Reading', 'Writing', 'Coding', 'Basejump']\"\n                label=\"Interests\"\n                auto-select-first\n                multiple\n              ></v-autocomplete>\n            </v-col>\n          </v-row>\n\n          <small class=\"text-caption text-medium-emphasis\">*indicates required field</small>\n        </v-card-text>\n\n        <v-divider></v-divider>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            text=\"Close\"\n            variant=\"plain\"\n            @click=\"dialog = false\"\n          ></v-btn>\n\n          <v-btn\n            color=\"primary\"\n            text=\"Save\"\n            variant=\"tonal\"\n            @click=\"dialog = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const dialog = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dialog: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Form",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000548",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000549",
    "text": "Component: v-examples\nSection: Misc Invite Dialog\nType: code_example\n\n## v-examples - Misc Invite Dialog\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-btn-group\n      color=\"#b2d7ef\"\n      density=\"comfortable\"\n      rounded=\"pill\"\n      divided\n    >\n      <v-btn\n        class=\"pe-2\"\n        prepend-icon=\"mdi-account-multiple-outline\"\n        variant=\"flat\"\n      >\n        <div class=\"text-none font-weight-regular\">\n          Share\n        </div>\n\n        <v-dialog activator=\"parent\" max-width=\"500\">\n          <template v-slot:default=\"{ isActive }\">\n            <v-card rounded=\"lg\">\n              <v-card-title class=\"d-flex justify-space-between align-center\">\n                <div class=\"text-h5 text-medium-emphasis ps-2\">\n                  Invite John to connect\n                </div>\n\n                <v-btn\n                  icon=\"mdi-close\"\n                  variant=\"text\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </v-card-title>\n\n              <v-divider class=\"mb-4\"></v-divider>\n\n              <v-card-text>\n                <div class=\"text-medium-emphasis mb-4\">\n                  Invite collaborators to your network and grow your connections.\n                </div>\n\n                <div class=\"mb-2\">Message (optional)</div>\n\n                <v-textarea\n                  :counter=\"300\"\n                  class=\"mb-2\"\n                  rows=\"2\"\n                  variant=\"outlined\"\n                  persistent-counter\n                ></v-textarea>\n\n                <div class=\"text-overline mb-2\">💎 PREMIUM</div>\n\n                <div class=\"text-medium-emphasis mb-1\">\n                  Share with unlimited people and get more insights about your network. Try Premium Free for 30 days.\n                </div>\n\n                <v-btn\n                  class=\"text-none font-weight-bold ms-n4\"\n                  color=\"primary\"\n                  text=\"Retry Premium Free\"\n                  variant=\"text\"\n                ></v-btn>\n              </v-card-text>\n\n              <v-divider class=\"mt-2\"></v-divider>\n\n              <v-card-actions class=\"my-2 d-flex justify-end\">\n                <v-btn\n                  class=\"text-none\"\n                  rounded=\"xl\"\n                  text=\"Cancel\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n\n                <v-btn\n                  class=\"text-none\"\n                  color=\"primary\"\n                  rounded=\"xl\"\n                  text=\"Send\"\n                  variant=\"flat\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </v-card-actions>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-btn>\n\n      <v-btn\n        size=\"small\"\n        icon\n      >\n        <v-icon icon=\"mdi-menu-down\"></v-icon>\n\n        <v-menu\n          activator=\"parent\"\n          location=\"bottom end\"\n          transition=\"fade-transition\"\n        >\n          <v-list\n            density=\"compact\"\n            min-width=\"250\"\n            rounded=\"lg\"\n            slim\n          >\n            <v-list-item\n              prepend-icon=\"mdi-link\"\n              title=\"Copy link\"\n              link\n            ></v-list-item>\n\n            <v-divider class=\"my-2\"></v-divider>\n\n            <v-list-item min-height=\"24\">\n              <template v-slot:subtitle>\n                <div class=\"text-caption\">\n                  Shared with John + 1 more\n                </div>\n              </template>\n            </v-list-item>\n          </v-list>\n        </v-menu>\n      </v-btn>\n    </v-btn-group>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Invite Dialog\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-btn-group\n      color=\"#b2d7ef\"\n      density=\"comfortable\"\n      rounded=\"pill\"\n      divided\n    >\n      <v-btn\n        class=\"pe-2\"\n        prepend-icon=\"mdi-account-multiple-outline\"\n        variant=\"flat\"\n      >\n        <div class=\"text-none font-weight-regular\">\n          Share\n        </div>\n\n        <v-dialog activator=\"parent\" max-width=\"500\">\n          <template v-slot:default=\"{ isActive }\">\n            <v-card rounded=\"lg\">\n              <v-card-title class=\"d-flex justify-space-between align-center\">\n                <div class=\"text-h5 text-medium-emphasis ps-2\">\n                  Invite John to connect\n                </div>\n\n                <v-btn\n                  icon=\"mdi-close\"\n                  variant=\"text\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </v-card-title>\n\n              <v-divider class=\"mb-4\"></v-divider>\n\n              <v-card-text>\n                <div class=\"text-medium-emphasis mb-4\">\n                  Invite collaborators to your network and grow your connections.\n                </div>\n\n                <div class=\"mb-2\">Message (optional)</div>\n\n                <v-textarea\n                  :counter=\"300\"\n                  class=\"mb-2\"\n                  rows=\"2\"\n                  variant=\"outlined\"\n                  persistent-counter\n                ></v-textarea>\n\n                <div class=\"text-overline mb-2\">💎 PREMIUM</div>\n\n                <div class=\"text-medium-emphasis mb-1\">\n                  Share with unlimited people and get more insights about your network. Try Premium Free for 30 days.\n                </div>\n\n                <v-btn\n                  class=\"text-none font-weight-bold ms-n4\"\n                  color=\"primary\"\n                  text=\"Retry Premium Free\"\n                  variant=\"text\"\n                ></v-btn>\n              </v-card-text>\n\n              <v-divider class=\"mt-2\"></v-divider>\n\n              <v-card-actions class=\"my-2 d-flex justify-end\">\n                <v-btn\n                  class=\"text-none\"\n                  rounded=\"xl\"\n                  text=\"Cancel\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n\n                <v-btn\n                  class=\"text-none\"\n                  color=\"primary\"\n                  rounded=\"xl\"\n                  text=\"Send\"\n                  variant=\"flat\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </v-card-actions>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-btn>\n\n      <v-btn\n        size=\"small\"\n        icon\n      >\n        <v-icon icon=\"mdi-menu-down\"></v-icon>\n\n        <v-menu\n          activator=\"parent\"\n          location=\"bottom end\"\n          transition=\"fade-transition\"\n        >\n          <v-list\n            density=\"compact\"\n            min-width=\"250\"\n            rounded=\"lg\"\n            slim\n          >\n            <v-list-item\n              prepend-icon=\"mdi-link\"\n              title=\"Copy link\"\n              link\n            ></v-list-item>\n\n            <v-divider class=\"my-2\"></v-divider>\n\n            <v-list-item min-height=\"24\">\n              <template v-slot:subtitle>\n                <div class=\"text-caption\">\n                  Shared with John + 1 more\n                </div>\n              </template>\n            </v-list-item>\n          </v-list>\n        </v-menu>\n      </v-btn>\n    </v-btn-group>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Invite Dialog",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000549",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000550",
    "text": "Component: v-examples\nSection: Misc Loader\nType: code_example\n\n## v-examples - Misc Loader\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-btn\n      :disabled=\"dialog\"\n      color=\"primary\"\n      icon=\"mdi-refresh\"\n      text=\"Start loading\"\n      @click=\"dialog = true\"\n    ></v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"320\"\n      persistent\n    >\n      <v-list\n        class=\"py-2\"\n        color=\"primary\"\n        elevation=\"12\"\n        rounded=\"lg\"\n      >\n        <v-list-item\n          prepend-icon=\"$vuetify-outline\"\n          title=\"Refreshing Application...\"\n        >\n          <template v-slot:prepend>\n            <div class=\"pe-4\">\n              <v-icon color=\"primary\" size=\"x-large\"></v-icon>\n            </div>\n          </template>\n\n          <template v-slot:append>\n            <v-progress-circular\n              color=\"primary\"\n              indeterminate=\"disable-shrink\"\n              size=\"16\"\n              width=\"2\"\n            ></v-progress-circular>\n          </template>\n        </v-list-item>\n      </v-list>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef, watch } from 'vue'\n\n  const dialog = shallowRef(false)\n  watch(dialog, val => {\n    if (!val) return\n    setTimeout(() => (dialog.value = false), 4000)\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n\n    watch: {\n      dialog (val) {\n        if (!val) return\n\n        setTimeout(() => (this.dialog = false), 4000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Loader\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-btn\n      :disabled=\"dialog\"\n      color=\"primary\"\n      icon=\"mdi-refresh\"\n      text=\"Start loading\"\n      @click=\"dialog = true\"\n    ></v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"320\"\n      persistent\n    >\n      <v-list\n        class=\"py-2\"\n        color=\"primary\"\n        elevation=\"12\"\n        rounded=\"lg\"\n      >\n        <v-list-item\n          prepend-icon=\"$vuetify-outline\"\n          title=\"Refreshing Application...\"\n        >\n          <template v-slot:prepend>\n            <div class=\"pe-4\">\n              <v-icon color=\"primary\" size=\"x-large\"></v-icon>\n            </div>\n          </template>\n\n          <template v-slot:append>\n            <v-progress-circular\n              color=\"primary\"\n              indeterminate=\"disable-shrink\"\n              size=\"16\"\n              width=\"2\"\n            ></v-progress-circular>\n          </template>\n        </v-list-item>\n      </v-list>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef, watch } from 'vue'\n\n  const dialog = shallowRef(false)\n  watch(dialog, val => {\n    if (!val) return\n    setTimeout(() => (dialog.value = false), 4000)\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n\n    watch: {\n      dialog (val) {\n        if (!val) return\n\n        setTimeout(() => (this.dialog = false), 4000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Loader",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000550",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000551",
    "text": "Component: v-examples\nSection: Misc Nesting\nType: code_example\n\n## v-examples - Misc Nesting\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-btn\n      text=\"Open Dialog 1\"\n      @click=\"dialog = true\"\n    ></v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"480\"\n    >\n      <v-card title=\"Dialog 1\">\n        <template v-slot:text>\n          <v-btn\n            class=\"my-2\"\n            text=\"Open Dialog 2\"\n            @click=\"dialog2 = true\"\n          ></v-btn>\n        </template>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"dialog = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      v-model=\"dialog2\"\n      max-width=\"240\"\n    >\n      <v-card title=\"Dialog 2\">\n        <template v-slot:text>\n          <v-btn\n            class=\"my-2\"\n            text=\"Open Dialog 3\"\n            @click=\"dialog3 = !dialog3\"\n          ></v-btn>\n        </template>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"dialog2 = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      v-model=\"dialog3\"\n      width=\"auto\"\n    >\n      <v-card title=\"Dialog 3\">\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"dialog3 = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const dialog = shallowRef(false)\n  const dialog2 = shallowRef(false)\n  const dialog3 = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n        dialog2: false,\n        dialog3: false,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Nesting\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-btn\n      text=\"Open Dialog 1\"\n      @click=\"dialog = true\"\n    ></v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"480\"\n    >\n      <v-card title=\"Dialog 1\">\n        <template v-slot:text>\n          <v-btn\n            class=\"my-2\"\n            text=\"Open Dialog 2\"\n            @click=\"dialog2 = true\"\n          ></v-btn>\n        </template>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"dialog = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      v-model=\"dialog2\"\n      max-width=\"240\"\n    >\n      <v-card title=\"Dialog 2\">\n        <template v-slot:text>\n          <v-btn\n            class=\"my-2\"\n            text=\"Open Dialog 3\"\n            @click=\"dialog3 = !dialog3\"\n          ></v-btn>\n        </template>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"dialog2 = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      v-model=\"dialog3\"\n      width=\"auto\"\n    >\n      <v-card title=\"Dialog 3\">\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            text=\"Close\"\n            variant=\"text\"\n            @click=\"dialog3 = false\"\n          ></v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const dialog = shallowRef(false)\n  const dialog2 = shallowRef(false)\n  const dialog3 = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n        dialog2: false,\n        dialog3: false,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Nesting",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000551",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000552",
    "text": "Component: v-examples\nSection: Misc Overflowed\nType: code_example\n\n## v-examples - Misc Overflowed\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-dialog max-width=\"800\">\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn\n          v-bind=\"activatorProps\"\n          text=\"Open Dialog\"\n        ></v-btn>\n      </template>\n\n      <template v-slot:default=\"{ isActive }\">\n        <v-card title=\"Use Google's location service?\">\n          <template v-slot:text>\n            Lorem ipsum dolor sit amet, semper quis, sapien id natoque elit. Nostra urna at, magna at neque sed sed ante imperdiet, dolor mauris cursus velit, velit non, sem nec. Volutpat sem ridiculus placerat leo, augue in, duis erat proin condimentum in a eget, sed fermentum sed vestibulum varius ac, vestibulum volutpat orci ut elit eget tortor. Ultrices nascetur nulla gravida ante arcu. Pharetra rhoncus morbi ipsum, nunc tempor debitis, ipsum pellentesque, vitae id quam ut mauris dui tempor, aptent non. Quisque turpis. Phasellus quis lectus luctus orci eget rhoncus. Amet donec vestibulum mattis commodo, nulla aliquet, nibh praesent, elementum nulla. Sit lacus pharetra tempus magna neque pellentesque, nulla vel erat.\n\n            <br>\n\n            Justo ex quisque nulla accusamus venenatis, sed quis. Nibh phasellus gravida metus in, fusce aenean ut erat commodo eros. Ut turpis, dui integer, nonummy pede placeat nec in sit leo. Faucibus porttitor illo taciti odio, amet viverra scelerisque quis quis et tortor, curabitur morbi a. Enim tempor at, rutrum elit condimentum, amet rutrum vitae tempor torquent nunc. Praesent vestibulum integer maxime felis. Neque aenean quia vitae nostra, tempus elit enim id dui, at egestas pulvinar. Integer libero vestibulum, quis blandit scelerisque mattis fermentum nulla, tortor donec vestibulum dolor amet eget, elit nullam. Aliquam leo phasellus aliquam curabitur metus a, nulla justo mattis duis interdum vel, mollis vitae et id, vestibulum erat ridiculus sit pulvinar justo sed. Vehicula convallis, et nulla wisi, amet vestibulum risus, quam ac egestas.\n\n            <br>\n\n            Et vitae, nulla gravida erat scelerisque nullam nunc pellentesque, a dictumst cras augue, purus imperdiet non. Varius montes cursus varius vel tortor, nec leo a qui, magni cras, velit vel consectetuer lobortis vel. Nibh erat et wisi felis leo porttitor, sapien nibh sapien pede mi, sed eget porttitor, repellendus arcu ac quis. Luctus vulputate aut est sem magna, placerat accumsan nunc vestibulum ipsum ac auctor, maecenas lorem in ut nec mauris tortor, doloribus varius sem tortor vestibulum mollis, eleifend tortor felis tempus lacus eu eu. Eleifend vel eu, nullam maecenas mauris nec nunc euismod, tortor porta ridiculus potenti, massa tristique nam magna, et wisi placerat et erat ante. Eget pede erat in facilisis, fermentum venenatis sodales. Ac tortor sociis et non animi tristique, rhoncus malesuada, ut arcu volutpat scelerisque sollicitudin, elit curabitur dui pede purus dolor, integer aenean risus taciti nulla eleifend accumsan. At pulvinar diam parturient, interdum mi velit aliquet et a. Arcu at ac placerat eget justo semper, purus sociis curabitur mi ipsum consequat ut, mollis vestibulum, est ante ornare lacus sem. Neque magna mauris, commodo quisque, praesent semper suscipit lobortis nam. Justo malesuada cursus ac nunc litora nunc. Tellus ac, in lobortis nunc, montes lectus purus fermentum.\n\n            <br>\n\n            Ac sit wisi. Sodales aliquam, sed vestibulum nullam arcu sit risus arcu, id luctus vitae lorem nibh, integer nec nullam class cursus mi, purus arcu lectus. Vel ante suscipit volutpat potenti mattis sed, wisi eu placerat aliquam erat, lectus morbi lobortis at assumenda. Consequat neque purus ipsum voluptas odio, netus vestibulum ut nec, suspendisse pellentesque nec enim in. Wisi dictum sed semper a, ipsum erat tellus habitasse est, erat sem ornare, vitae quisque ultricies. Dui sed blandit. Tempor et faucibus justo sed luctus, nec vitae vitae. Nunc nibh pede, ipsum vestibulum aenean leo ante ultricies, nam cras quis sed penatibus amet. In mauris a. Integer metus mauris tortor, et rutrum vestibulum ultricies, ut phasellus in ullamcorper ut mollit, eu justo. Cursus pretium venenatis.\n            Cras pellentesque vel sodales accumsan aenean. Feugiat metus sit nec in aliquet amet, porttitor pretium vulputate massa. Consequat ipsum luctus quisque adipiscing libero. Wisi sollicitudin. Eget vitae ac lobortis, lorem natoque vestibulum et, aliquet faucibus at morbi nibh, vel condimentum. Massa unde orci sed id sed, odio donec congue nec praesent amet. Hymenaeos velit lacus, quis vivamus libero tempus duis, eu nisi eu, ipsum at accumsan pede justo morbi donec, massa et libero sit risus neque tortor. Ut sed sed etiam hendrerit dapibus, quis metus suspendisse nibh.\n\n            <br>\n\n            Fringilla tempor felis augue magna. Cum arcu a, id vitae. Pellentesque pharetra in cras sociis adipiscing est. Nibh nec mattis at maecenas, nisl orci aliquam nulla justo egestas venenatis, elementum duis vel porta eros, massa vitae, eligendi imperdiet amet. Nec neque luctus suscipit, justo sem praesent, ut nisl quisque, volutpat torquent wisi tellus aliquam reprehenderit, curabitur cras at quis massa porttitor mauris. Eros sed ultrices. Amet dignissim justo urna feugiat mauris litora, etiam accumsan, lobortis a orci suspendisse. Semper ac mauris, varius bibendum pretium, orci urna nunc ullamcorper auctor, saepe sem integer quam, at feugiat egestas duis. Urna ligula ante. Leo elementum nonummy. Sagittis mauris est in ipsum, nulla amet non justo, proin id potenti platea posuere sit ut, nunc sit erat bibendum. Nibh id auctor, ab nulla vivamus ultrices, posuere morbi nunc tellus gravida vivamus.\n\n            <br>\n\n            Mauris nec, facilisi quam fermentum, ut mauris integer, orci tellus tempus diam ut in pellentesque. Wisi faucibus tempor et odio leo diam, eleifend quis integer curabitur sit scelerisque ac, mauris consequat luctus quam penatibus fringilla dis, vitae lacus in, est eu ac tempus. Consectetuer amet ipsum amet dui, sed blandit id sed. Tellus integer, dignissim id pede sodales quis, felis dolorem id mauris orci, orci tempus ut. Nullam hymenaeos. Curabitur in a, tortor ut praesent placerat tincidunt interdum, ac dignissim metus nonummy hendrerit wisi, etiam ut.\n\n            <br>\n\n            Semper praesent integer fusce, tortor suspendisse, augue ligula orci ante asperiores ullamcorper. In sit per mi sed sed, mi vestibulum mus nam, morbi mauris neque vitae aliquam proin senectus. Ac amet arcu mollis ante congue elementum, inceptos eget optio quam pellentesque quis lobortis, sollicitudin sed vestibulum sollicitudin, lectus parturient nullam, leo orci ligula ultrices. At tincidunt enim, suspendisse est sit sem ac. Amet tellus molestie est purus magna augue, non etiam et in wisi id. Non commodo, metus lorem facilisi lobortis ac velit, montes neque sed risus consectetuer fringilla dolor. Quam justo et integer aliquam, cursus nulla enim orci, nam cursus adipiscing, integer torquent non, fringilla per maecenas. Libero ipsum sed tellus purus et. Duis molestie placerat erat donec ut. Dolor enim erat massa faucibus ultrices in, ante ultricies orci lacus, libero consectetuer mauris magna feugiat neque dapibus, donec pretium et. Aptent dui, aliquam et et amet nostra ligula.\n\n            <br>\n\n            Augue curabitur duis dui volutpat, tempus sed ut pede donec. Interdum luctus, lectus nulla aenean elit, id sit magna, vulputate ultrices pellentesque vel id fermentum morbi. Tortor et. Adipiscing augue lorem cum non lacus, rutrum sodales laoreet duis tortor, modi placerat facilisis et malesuada eros ipsum, vehicula tempus. Ac vivamus amet non aliquam venenatis lectus, sociosqu adipiscing consequat nec arcu odio. Blandit orci nec nec, posuere in pretium, enim ut, consectetuer nullam urna, risus vel. Nullam odio vehicula massa sed, etiam sociis mauris, lacus ullamcorper, libero imperdiet non sodales placerat justo vehicula. Nec morbi imperdiet. Fermentum sem libero iaculis bibendum et eros, eget maecenas non nunc, ad pellentesque. Ut nec diam elementum interdum. Elementum vitae tellus lacus vitae, ipsum phasellus, corporis vehicula in ac sed massa vivamus, rutrum elit, ultricies metus volutpat.\n\n            <br>\n\n            Semper wisi et, sollicitudin nunc vestibulum, cursus accumsan nunc pede tempus mi ipsum, ligula sed. Non condimentum ac dolor sit. Mollis eu aliquam, vel mattis mollis massa ut dolor ante, tempus lacinia arcu. Urna vestibulum lorem, nulla fermentum, iaculis ut congue ac vivamus. Nam libero orci, pulvinar nulla, enim pellentesque consectetuer leo, feugiat rhoncus rhoncus vel. Magna sociosqu donec, dictum cursus ullamcorper viverra. Ultricies quis orci lorem, suspendisse ut vestibulum integer, purus sed lorem pulvinar habitasse turpis.\n          </template>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n\n            <v-btn\n              text=\"Disagree\"\n              variant=\"text\"\n              @click=\"isActive.value = false\"\n            ></v-btn>\n\n            <v-btn\n              color=\"surface-variant\"\n              text=\"Agree\"\n              variant=\"flat\"\n              @click=\"isActive.value = false\"\n            ></v-btn>\n          </v-card-actions>\n        </v-card>\n      </template>\n    </v-dialog>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Overflowed\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-dialog max-width=\"800\">\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn\n          v-bind=\"activatorProps\"\n          text=\"Open Dialog\"\n        ></v-btn>\n      </template>\n\n      <template v-slot:default=\"{ isActive }\">\n        <v-card title=\"Use Google's location service?\">\n          <template v-slot:text>\n            Lorem ipsum dolor sit amet, semper quis, sapien id natoque elit. Nostra urna at, magna at neque sed sed ante imperdiet, dolor mauris cursus velit, velit non, sem nec. Volutpat sem ridiculus placerat leo, augue in, duis erat proin condimentum in a eget, sed fermentum sed vestibulum varius ac, vestibulum volutpat orci ut elit eget tortor. Ultrices nascetur nulla gravida ante arcu. Pharetra rhoncus morbi ipsum, nunc tempor debitis, ipsum pellentesque, vitae id quam ut mauris dui tempor, aptent non. Quisque turpis. Phasellus quis lectus luctus orci eget rhoncus. Amet donec vestibulum mattis commodo, nulla aliquet, nibh praesent, elementum nulla. Sit lacus pharetra tempus magna neque pellentesque, nulla vel erat.\n\n            <br>\n\n            Justo ex quisque nulla accusamus venenatis, sed quis. Nibh phasellus gravida metus in, fusce aenean ut erat commodo eros. Ut turpis, dui integer, nonummy pede placeat nec in sit leo. Faucibus porttitor illo taciti odio, amet viverra scelerisque quis quis et tortor, curabitur morbi a. Enim tempor at, rutrum elit condimentum, amet rutrum vitae tempor torquent nunc. Praesent vestibulum integer maxime felis. Neque aenean quia vitae nostra, tempus elit enim id dui, at egestas pulvinar. Integer libero vestibulum, quis blandit scelerisque mattis fermentum nulla, tortor donec vestibulum dolor amet eget, elit nullam. Aliquam leo phasellus aliquam curabitur metus a, nulla justo mattis duis interdum vel, mollis vitae et id, vestibulum erat ridiculus sit pulvinar justo sed. Vehicula convallis, et nulla wisi, amet vestibulum risus, quam ac egestas.\n\n            <br>\n\n            Et vitae, nulla gravida erat scelerisque nullam nunc pellentesque, a dictumst cras augue, purus imperdiet non. Varius montes cursus varius vel tortor, nec leo a qui, magni cras, velit vel consectetuer lobortis vel. Nibh erat et wisi felis leo porttitor, sapien nibh sapien pede mi, sed eget porttitor, repellendus arcu ac quis. Luctus vulputate aut est sem magna, placerat accumsan nunc vestibulum ipsum ac auctor, maecenas lorem in ut nec mauris tortor, doloribus varius sem tortor vestibulum mollis, eleifend tortor felis tempus lacus eu eu. Eleifend vel eu, nullam maecenas mauris nec nunc euismod, tortor porta ridiculus potenti, massa tristique nam magna, et wisi placerat et erat ante. Eget pede erat in facilisis, fermentum venenatis sodales. Ac tortor sociis et non animi tristique, rhoncus malesuada, ut arcu volutpat scelerisque sollicitudin, elit curabitur dui pede purus dolor, integer aenean risus taciti nulla eleifend accumsan. At pulvinar diam parturient, interdum mi velit aliquet et a. Arcu at ac placerat eget justo semper, purus sociis curabitur mi ipsum consequat ut, mollis vestibulum, est ante ornare lacus sem. Neque magna mauris, commodo quisque, praesent semper suscipit lobortis nam. Justo malesuada cursus ac nunc litora nunc. Tellus ac, in lobortis nunc, montes lectus purus fermentum.\n\n            <br>\n\n            Ac sit wisi. Sodales aliquam, sed vestibulum nullam arcu sit risus arcu, id luctus vitae lorem nibh, integer nec nullam class cursus mi, purus arcu lectus. Vel ante suscipit volutpat potenti mattis sed, wisi eu placerat aliquam erat, lectus morbi lobortis at assumenda. Consequat neque purus ipsum voluptas odio, netus vestibulum ut nec, suspendisse pellentesque nec enim in. Wisi dictum sed semper a, ipsum erat tellus habitasse est, erat sem ornare, vitae quisque ultricies. Dui sed blandit. Tempor et faucibus justo sed luctus, nec vitae vitae. Nunc nibh pede, ipsum vestibulum aenean leo ante ultricies, nam cras quis sed penatibus amet. In mauris a. Integer metus mauris tortor, et rutrum vestibulum ultricies, ut phasellus in ullamcorper ut mollit, eu justo. Cursus pretium venenatis.\n            Cras pellentesque vel sodales accumsan aenean. Feugiat metus sit nec in aliquet amet, porttitor pretium vulputate massa. Consequat ipsum luctus quisque adipiscing libero. Wisi sollicitudin. Eget vitae ac lobortis, lorem natoque vestibulum et, aliquet faucibus at morbi nibh, vel condimentum. Massa unde orci sed id sed, odio donec congue nec praesent amet. Hymenaeos velit lacus, quis vivamus libero tempus duis, eu nisi eu, ipsum at accumsan pede justo morbi donec, massa et libero sit risus neque tortor. Ut sed sed etiam hendrerit dapibus, quis metus suspendisse nibh.\n\n            <br>\n\n            Fringilla tempor felis augue magna. Cum arcu a, id vitae. Pellentesque pharetra in cras sociis adipiscing est. Nibh nec mattis at maecenas, nisl orci aliquam nulla justo egestas venenatis, elementum duis vel porta eros, massa vitae, eligendi imperdiet amet. Nec neque luctus suscipit, justo sem praesent, ut nisl quisque, volutpat torquent wisi tellus aliquam reprehenderit, curabitur cras at quis massa porttitor mauris. Eros sed ultrices. Amet dignissim justo urna feugiat mauris litora, etiam accumsan, lobortis a orci suspendisse. Semper ac mauris, varius bibendum pretium, orci urna nunc ullamcorper auctor, saepe sem integer quam, at feugiat egestas duis. Urna ligula ante. Leo elementum nonummy. Sagittis mauris est in ipsum, nulla amet non justo, proin id potenti platea posuere sit ut, nunc sit erat bibendum. Nibh id auctor, ab nulla vivamus ultrices, posuere morbi nunc tellus gravida vivamus.\n\n            <br>\n\n            Mauris nec, facilisi quam fermentum, ut mauris integer, orci tellus tempus diam ut in pellentesque. Wisi faucibus tempor et odio leo diam, eleifend quis integer curabitur sit scelerisque ac, mauris consequat luctus quam penatibus fringilla dis, vitae lacus in, est eu ac tempus. Consectetuer amet ipsum amet dui, sed blandit id sed. Tellus integer, dignissim id pede sodales quis, felis dolorem id mauris orci, orci tempus ut. Nullam hymenaeos. Curabitur in a, tortor ut praesent placerat tincidunt interdum, ac dignissim metus nonummy hendrerit wisi, etiam ut.\n\n            <br>\n\n            Semper praesent integer fusce, tortor suspendisse, augue ligula orci ante asperiores ullamcorper. In sit per mi sed sed, mi vestibulum mus nam, morbi mauris neque vitae aliquam proin senectus. Ac amet arcu mollis ante congue elementum, inceptos eget optio quam pellentesque quis lobortis, sollicitudin sed vestibulum sollicitudin, lectus parturient nullam, leo orci ligula ultrices. At tincidunt enim, suspendisse est sit sem ac. Amet tellus molestie est purus magna augue, non etiam et in wisi id. Non commodo, metus lorem facilisi lobortis ac velit, montes neque sed risus consectetuer fringilla dolor. Quam justo et integer aliquam, cursus nulla enim orci, nam cursus adipiscing, integer torquent non, fringilla per maecenas. Libero ipsum sed tellus purus et. Duis molestie placerat erat donec ut. Dolor enim erat massa faucibus ultrices in, ante ultricies orci lacus, libero consectetuer mauris magna feugiat neque dapibus, donec pretium et. Aptent dui, aliquam et et amet nostra ligula.\n\n            <br>\n\n            Augue curabitur duis dui volutpat, tempus sed ut pede donec. Interdum luctus, lectus nulla aenean elit, id sit magna, vulputate ultrices pellentesque vel id fermentum morbi. Tortor et. Adipiscing augue lorem cum non lacus, rutrum sodales laoreet duis tortor, modi placerat facilisis et malesuada eros ipsum, vehicula tempus. Ac vivamus amet non aliquam venenatis lectus, sociosqu adipiscing consequat nec arcu odio. Blandit orci nec nec, posuere in pretium, enim ut, consectetuer nullam urna, risus vel. Nullam odio vehicula massa sed, etiam sociis mauris, lacus ullamcorper, libero imperdiet non sodales placerat justo vehicula. Nec morbi imperdiet. Fermentum sem libero iaculis bibendum et eros, eget maecenas non nunc, ad pellentesque. Ut nec diam elementum interdum. Elementum vitae tellus lacus vitae, ipsum phasellus, corporis vehicula in ac sed massa vivamus, rutrum elit, ultricies metus volutpat.\n\n            <br>\n\n            Semper wisi et, sollicitudin nunc vestibulum, cursus accumsan nunc pede tempus mi ipsum, ligula sed. Non condimentum ac dolor sit. Mollis eu aliquam, vel mattis mollis massa ut dolor ante, tempus lacinia arcu. Urna vestibulum lorem, nulla fermentum, iaculis ut congue ac vivamus. Nam libero orci, pulvinar nulla, enim pellentesque consectetuer leo, feugiat rhoncus rhoncus vel. Magna sociosqu donec, dictum cursus ullamcorper viverra. Ultricies quis orci lorem, suspendisse ut vestibulum integer, purus sed lorem pulvinar habitasse turpis.\n          </template>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n\n            <v-btn\n              text=\"Disagree\"\n              variant=\"text\"\n              @click=\"isActive.value = false\"\n            ></v-btn>\n\n            <v-btn\n              color=\"surface-variant\"\n              text=\"Agree\"\n              variant=\"flat\"\n              @click=\"isActive.value = false\"\n            ></v-btn>\n          </v-card-actions>\n        </v-card>\n      </template>\n    </v-dialog>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Overflowed",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000552",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000553",
    "text": "Component: v-examples\nSection: Misc Without Activator\nType: code_example\n\n## v-examples - Misc Without Activator\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-btn\n      color=\"primary\"\n      @click.stop=\"dialog = true\"\n    >\n      Open Dialog\n    </v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"290\"\n    >\n      <v-card>\n        <v-card-title class=\"text-h5\">\n          Use Google's location service?\n        </v-card-title>\n\n        <v-card-text>\n          Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            color=\"green-darken-1\"\n            variant=\"text\"\n            @click=\"dialog = false\"\n          >\n            Disagree\n          </v-btn>\n\n          <v-btn\n            color=\"green-darken-1\"\n            variant=\"text\"\n            @click=\"dialog = false\"\n          >\n            Agree\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Without Activator\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-btn\n      color=\"primary\"\n      @click.stop=\"dialog = true\"\n    >\n      Open Dialog\n    </v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"290\"\n    >\n      <v-card>\n        <v-card-title class=\"text-h5\">\n          Use Google's location service?\n        </v-card-title>\n\n        <v-card-text>\n          Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            color=\"green-darken-1\"\n            variant=\"text\"\n            @click=\"dialog = false\"\n          >\n            Disagree\n          </v-btn>\n\n          <v-btn\n            color=\"green-darken-1\"\n            variant=\"text\"\n            @click=\"dialog = false\"\n          >\n            Agree\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Without Activator",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000553",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000554",
    "text": "Component: v-examples\nSection: Prop Activator\nType: code_example\n\n## v-examples - Prop Activator\n\n```vue\n<template>\n  <v-container>\n    <v-row class=\"text-center\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-dialog max-width=\"340\">\n          <template v-slot:activator=\"{ props: activatorProps }\">\n            <v-btn\n              v-bind=\"activatorProps\"\n              prepend-icon=\"mdi-package\"\n              width=\"204\"\n            >\n              Slot Activator\n            </v-btn>\n          </template>\n\n          <template v-slot:default=\"{ isActive }\">\n            <v-card\n              prepend-icon=\"mdi-package\"\n              text=\"When using the activator slot, you must bind the slot props to the activator element.\"\n              title=\"Slot Activator\"\n            >\n              <template v-slot:actions>\n                <v-btn\n                  class=\"ml-auto\"\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </template>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-btn\n          prepend-icon=\"mdi-picture-in-picture-bottom-right\"\n          width=\"204\"\n        >\n          Parent Activator\n\n          <v-dialog activator=\"parent\" max-width=\"340\">\n            <template v-slot:default=\"{ isActive }\">\n              <v-card\n                prepend-icon=\"mdi-picture-in-picture-bottom-right\"\n                text=\"When using the parent as the activator, the dialog will bind its listeners to the parent element.\"\n                title=\"Parent Activator\"\n              >\n                <template v-slot:actions>\n                  <v-btn\n                    class=\"ml-auto\"\n                    text=\"Close\"\n                    @click=\"isActive.value = false\"\n                  ></v-btn>\n                </template>\n              </v-card>\n            </template>\n          </v-dialog>\n        </v-btn>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-btn\n          ref=\"btn\"\n          prepend-icon=\"mdi-variable\"\n          width=\"204\"\n        >\n          Ref Activator\n        </v-btn>\n\n        <v-dialog :activator=\"btn\" max-width=\"340\">\n          <template v-slot:default=\"{ isActive }\">\n            <v-card\n              prepend-icon=\"mdi-variable\"\n              text=\"When using a ref, the dialog will bind its listeners to the ref element. This works for any element and custom components.\"\n              title=\"Ref Activator\"\n            >\n              <template v-slot:actions>\n                <v-btn\n                  class=\"ml-auto\"\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </template>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-btn\n          id=\"activator-target\"\n          prepend-icon=\"mdi-bullseye-arrow\"\n          width=\"204\"\n        >\n          Target Activator\n        </v-btn>\n\n        <v-dialog activator=\"#activator-target\" max-width=\"340\">\n          <template v-slot:default=\"{ isActive }\">\n            <v-card\n              prepend-icon=\"mdi-bullseye-arrow\"\n              text=\"Pass any valid querySelector to the activator prop to bind the dialog to the target element.\"\n              title=\"Target Activator\"\n            >\n              <template v-slot:actions>\n                <v-btn\n                  class=\"ml-auto\"\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </template>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const btn = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        btn: null,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Activator\n\n```vue\n<template>\n  <v-container>\n    <v-row class=\"text-center\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-dialog max-width=\"340\">\n          <template v-slot:activator=\"{ props: activatorProps }\">\n            <v-btn\n              v-bind=\"activatorProps\"\n              prepend-icon=\"mdi-package\"\n              width=\"204\"\n            >\n              Slot Activator\n            </v-btn>\n          </template>\n\n          <template v-slot:default=\"{ isActive }\">\n            <v-card\n              prepend-icon=\"mdi-package\"\n              text=\"When using the activator slot, you must bind the slot props to the activator element.\"\n              title=\"Slot Activator\"\n            >\n              <template v-slot:actions>\n                <v-btn\n                  class=\"ml-auto\"\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </template>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-btn\n          prepend-icon=\"mdi-picture-in-picture-bottom-right\"\n          width=\"204\"\n        >\n          Parent Activator\n\n          <v-dialog activator=\"parent\" max-width=\"340\">\n            <template v-slot:default=\"{ isActive }\">\n              <v-card\n                prepend-icon=\"mdi-picture-in-picture-bottom-right\"\n                text=\"When using the parent as the activator, the dialog will bind its listeners to the parent element.\"\n                title=\"Parent Activator\"\n              >\n                <template v-slot:actions>\n                  <v-btn\n                    class=\"ml-auto\"\n                    text=\"Close\"\n                    @click=\"isActive.value = false\"\n                  ></v-btn>\n                </template>\n              </v-card>\n            </template>\n          </v-dialog>\n        </v-btn>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-btn\n          ref=\"btn\"\n          prepend-icon=\"mdi-variable\"\n          width=\"204\"\n        >\n          Ref Activator\n        </v-btn>\n\n        <v-dialog :activator=\"btn\" max-width=\"340\">\n          <template v-slot:default=\"{ isActive }\">\n            <v-card\n              prepend-icon=\"mdi-variable\"\n              text=\"When using a ref, the dialog will bind its listeners to the ref element. This works for any element and custom components.\"\n              title=\"Ref Activator\"\n            >\n              <template v-slot:actions>\n                <v-btn\n                  class=\"ml-auto\"\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </template>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-btn\n          id=\"activator-target\"\n          prepend-icon=\"mdi-bullseye-arrow\"\n          width=\"204\"\n        >\n          Target Activator\n        </v-btn>\n\n        <v-dialog activator=\"#activator-target\" max-width=\"340\">\n          <template v-slot:default=\"{ isActive }\">\n            <v-card\n              prepend-icon=\"mdi-bullseye-arrow\"\n              text=\"Pass any valid querySelector to the activator prop to bind the dialog to the target element.\"\n              title=\"Target Activator\"\n            >\n              <template v-slot:actions>\n                <v-btn\n                  class=\"ml-auto\"\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </template>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const btn = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        btn: null,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Activator",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000554",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000555",
    "text": "Component: v-examples\nSection: Prop Fullscreen\nType: code_example\n\n## v-examples - Prop Fullscreen\n\n```vue\n<template>\n  <div class=\"text-center pa-4\">\n    <v-dialog\n      v-model=\"dialog\"\n      transition=\"dialog-bottom-transition\"\n      fullscreen\n    >\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn\n          prepend-icon=\"mdi-cog\"\n          size=\"small\"\n          text=\"Settings\"\n          v-bind=\"activatorProps\"\n        ></v-btn>\n      </template>\n\n      <v-card>\n        <v-toolbar>\n          <v-btn\n            icon=\"mdi-close\"\n            @click=\"dialog = false\"\n          ></v-btn>\n\n          <v-toolbar-title>Settings</v-toolbar-title>\n\n          <v-toolbar-items>\n            <v-btn\n              text=\"Save\"\n              variant=\"text\"\n              @click=\"dialog = false\"\n            ></v-btn>\n          </v-toolbar-items>\n        </v-toolbar>\n\n        <v-list lines=\"two\">\n          <v-list-subheader>User Controls</v-list-subheader>\n\n          <v-list-item\n            subtitle=\"Set the content filtering level to restrict apps that can be downloaded\"\n            title=\"Content filtering\"\n            link\n          ></v-list-item>\n\n          <v-list-item\n            subtitle=\"Require password for purchase or use password to restrict purchase\"\n            title=\"Password\"\n            link\n          ></v-list-item>\n\n          <v-divider></v-divider>\n\n          <v-list-subheader>General</v-list-subheader>\n\n          <v-list-item\n            subtitle=\"Notify me about updates to apps or games that I downloaded\"\n            title=\"Notifications\"\n            @click=\"notifications = !notifications\"\n          >\n            <template v-slot:prepend>\n              <v-list-item-action start>\n                <v-checkbox-btn v-model=\"notifications\" color=\"primary\"></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n          </v-list-item>\n\n          <v-list-item\n            subtitle=\"Auto-update apps at any time. Data charges may apply\"\n            title=\"Sound\"\n            @click=\"sound = !sound\"\n          >\n            <template v-slot:prepend>\n              <v-list-item-action start>\n                <v-checkbox-btn v-model=\"sound\" color=\"primary\"></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n          </v-list-item>\n\n          <v-list-item\n            subtitle=\"Automatically add home screen widgets\"\n            title=\"Auto-add widgets\"\n            @click=\"widgets = !widgets\"\n          >\n            <template v-slot:prepend>\n              <v-list-item-action start>\n                <v-checkbox-btn v-model=\"widgets\" color=\"primary\"></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const dialog = shallowRef(false)\n  const notifications = shallowRef(false)\n  const sound = shallowRef(true)\n  const widgets = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n        notifications: false,\n        sound: true,\n        widgets: false,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Fullscreen\n\n```vue\n<template>\n  <div class=\"text-center pa-4\">\n    <v-dialog\n      v-model=\"dialog\"\n      transition=\"dialog-bottom-transition\"\n      fullscreen\n    >\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn\n          prepend-icon=\"mdi-cog\"\n          size=\"small\"\n          text=\"Settings\"\n          v-bind=\"activatorProps\"\n        ></v-btn>\n      </template>\n\n      <v-card>\n        <v-toolbar>\n          <v-btn\n            icon=\"mdi-close\"\n            @click=\"dialog = false\"\n          ></v-btn>\n\n          <v-toolbar-title>Settings</v-toolbar-title>\n\n          <v-toolbar-items>\n            <v-btn\n              text=\"Save\"\n              variant=\"text\"\n              @click=\"dialog = false\"\n            ></v-btn>\n          </v-toolbar-items>\n        </v-toolbar>\n\n        <v-list lines=\"two\">\n          <v-list-subheader>User Controls</v-list-subheader>\n\n          <v-list-item\n            subtitle=\"Set the content filtering level to restrict apps that can be downloaded\"\n            title=\"Content filtering\"\n            link\n          ></v-list-item>\n\n          <v-list-item\n            subtitle=\"Require password for purchase or use password to restrict purchase\"\n            title=\"Password\"\n            link\n          ></v-list-item>\n\n          <v-divider></v-divider>\n\n          <v-list-subheader>General</v-list-subheader>\n\n          <v-list-item\n            subtitle=\"Notify me about updates to apps or games that I downloaded\"\n            title=\"Notifications\"\n            @click=\"notifications = !notifications\"\n          >\n            <template v-slot:prepend>\n              <v-list-item-action start>\n                <v-checkbox-btn v-model=\"notifications\" color=\"primary\"></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n          </v-list-item>\n\n          <v-list-item\n            subtitle=\"Auto-update apps at any time. Data charges may apply\"\n            title=\"Sound\"\n            @click=\"sound = !sound\"\n          >\n            <template v-slot:prepend>\n              <v-list-item-action start>\n                <v-checkbox-btn v-model=\"sound\" color=\"primary\"></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n          </v-list-item>\n\n          <v-list-item\n            subtitle=\"Automatically add home screen widgets\"\n            title=\"Auto-add widgets\"\n            @click=\"widgets = !widgets\"\n          >\n            <template v-slot:prepend>\n              <v-list-item-action start>\n                <v-checkbox-btn v-model=\"widgets\" color=\"primary\"></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const dialog = shallowRef(false)\n  const notifications = shallowRef(false)\n  const sound = shallowRef(true)\n  const widgets = shallowRef(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n        notifications: false,\n        sound: true,\n        widgets: false,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Fullscreen",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000555",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000556",
    "text": "Component: v-examples\nSection: Prop Model\nType: code_example\n\n## v-examples - Prop Model\n\n```vue\n<template>\n  <div class=\"text-center pa-4\">\n    <v-btn @click=\"dialog = true\">\n      Open Dialog\n    </v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      width=\"auto\"\n    >\n      <v-card\n        max-width=\"400\"\n        prepend-icon=\"mdi-update\"\n        text=\"Your application will relaunch automatically after the update is complete.\"\n        title=\"Update in progress\"\n      >\n        <template v-slot:actions>\n          <v-btn\n            class=\"ms-auto\"\n            text=\"Ok\"\n            @click=\"dialog = false\"\n          ></v-btn>\n        </template>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Model\n\n```vue\n<template>\n  <div class=\"text-center pa-4\">\n    <v-btn @click=\"dialog = true\">\n      Open Dialog\n    </v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      width=\"auto\"\n    >\n      <v-card\n        max-width=\"400\"\n        prepend-icon=\"mdi-update\"\n        text=\"Your application will relaunch automatically after the update is complete.\"\n        title=\"Update in progress\"\n      >\n        <template v-slot:actions>\n          <v-btn\n            class=\"ms-auto\"\n            text=\"Ok\"\n            @click=\"dialog = false\"\n          ></v-btn>\n        </template>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Model",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000556",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000557",
    "text": "Component: v-examples\nSection: Prop Persistent\nType: code_example\n\n## v-examples - Prop Persistent\n\n```vue\n<template>\n  <div class=\"text-center pa-4\">\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"400\"\n      persistent\n    >\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn v-bind=\"activatorProps\">\n          Open Dialog\n        </v-btn>\n      </template>\n\n      <v-card\n        prepend-icon=\"mdi-map-marker\"\n        text=\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        title=\"Use Google's location service?\"\n      >\n        <template v-slot:actions>\n          <v-spacer></v-spacer>\n\n          <v-btn @click=\"dialog = false\">\n            Disagree\n          </v-btn>\n\n          <v-btn @click=\"dialog = false\">\n            Agree\n          </v-btn>\n        </template>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Persistent\n\n```vue\n<template>\n  <div class=\"text-center pa-4\">\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"400\"\n      persistent\n    >\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn v-bind=\"activatorProps\">\n          Open Dialog\n        </v-btn>\n      </template>\n\n      <v-card\n        prepend-icon=\"mdi-map-marker\"\n        text=\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        title=\"Use Google's location service?\"\n      >\n        <template v-slot:actions>\n          <v-spacer></v-spacer>\n\n          <v-btn @click=\"dialog = false\">\n            Disagree\n          </v-btn>\n\n          <v-btn @click=\"dialog = false\">\n            Agree\n          </v-btn>\n        </template>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Persistent",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000557",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000558",
    "text": "Component: v-examples\nSection: Prop Scrollable\nType: code_example\n\n## v-examples - Prop Scrollable\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-dialog\n      width=\"auto\"\n      scrollable\n    >\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn\n          color=\"brown\"\n          prepend-icon=\"mdi-earth\"\n          text=\"Select Country\"\n          variant=\"outlined\"\n          v-bind=\"activatorProps\"\n        ></v-btn>\n      </template>\n\n      <template v-slot:default=\"{ isActive }\">\n        <v-card\n          prepend-icon=\"mdi-earth\"\n          title=\"Select Country\"\n        >\n          <v-divider class=\"mt-3\"></v-divider>\n\n          <v-card-text class=\"px-4\" style=\"height: 300px;\">\n            <v-radio-group\n              v-model=\"dialog\"\n              messages=\"Select a Country from the radio group\"\n            >\n              <v-radio\n                label=\"Bahamas, The\"\n                value=\"bahamas\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bahrain\"\n                value=\"bahrain\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bangladesh\"\n                value=\"bangladesh\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Barbados\"\n                value=\"barbados\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Belarus\"\n                value=\"belarus\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Belgium\"\n                value=\"belgium\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Belize\"\n                value=\"belize\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Benin\"\n                value=\"benin\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bhutan\"\n                value=\"bhutan\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bolivia\"\n                value=\"bolivia\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bosnia and Herzegovina\"\n                value=\"bosnia\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Botswana\"\n                value=\"botswana\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Brazil\"\n                value=\"brazil\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Brunei\"\n                value=\"brunei\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bulgaria\"\n                value=\"bulgaria\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Burkina Faso\"\n                value=\"burkina\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Burma\"\n                value=\"burma\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Burundi\"\n                value=\"burundi\"\n              ></v-radio>\n            </v-radio-group>\n          </v-card-text>\n\n          <v-divider></v-divider>\n\n          <v-card-actions>\n            <v-btn\n              text=\"Close\"\n              @click=\"isActive.value = false\"\n            ></v-btn>\n\n            <v-spacer></v-spacer>\n\n            <v-btn\n              color=\"surface-variant\"\n              text=\"Save\"\n              variant=\"flat\"\n              @click=\"isActive.value = false\"\n            ></v-btn>\n          </v-card-actions>\n        </v-card>\n      </template>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref('')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: '',\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Scrollable\n\n```vue\n<template>\n  <div class=\"pa-4 text-center\">\n    <v-dialog\n      width=\"auto\"\n      scrollable\n    >\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-btn\n          color=\"brown\"\n          prepend-icon=\"mdi-earth\"\n          text=\"Select Country\"\n          variant=\"outlined\"\n          v-bind=\"activatorProps\"\n        ></v-btn>\n      </template>\n\n      <template v-slot:default=\"{ isActive }\">\n        <v-card\n          prepend-icon=\"mdi-earth\"\n          title=\"Select Country\"\n        >\n          <v-divider class=\"mt-3\"></v-divider>\n\n          <v-card-text class=\"px-4\" style=\"height: 300px;\">\n            <v-radio-group\n              v-model=\"dialog\"\n              messages=\"Select a Country from the radio group\"\n            >\n              <v-radio\n                label=\"Bahamas, The\"\n                value=\"bahamas\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bahrain\"\n                value=\"bahrain\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bangladesh\"\n                value=\"bangladesh\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Barbados\"\n                value=\"barbados\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Belarus\"\n                value=\"belarus\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Belgium\"\n                value=\"belgium\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Belize\"\n                value=\"belize\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Benin\"\n                value=\"benin\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bhutan\"\n                value=\"bhutan\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bolivia\"\n                value=\"bolivia\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bosnia and Herzegovina\"\n                value=\"bosnia\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Botswana\"\n                value=\"botswana\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Brazil\"\n                value=\"brazil\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Brunei\"\n                value=\"brunei\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Bulgaria\"\n                value=\"bulgaria\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Burkina Faso\"\n                value=\"burkina\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Burma\"\n                value=\"burma\"\n              ></v-radio>\n\n              <v-radio\n                label=\"Burundi\"\n                value=\"burundi\"\n              ></v-radio>\n            </v-radio-group>\n          </v-card-text>\n\n          <v-divider></v-divider>\n\n          <v-card-actions>\n            <v-btn\n              text=\"Close\"\n              @click=\"isActive.value = false\"\n            ></v-btn>\n\n            <v-spacer></v-spacer>\n\n            <v-btn\n              color=\"surface-variant\"\n              text=\"Save\"\n              variant=\"flat\"\n              @click=\"isActive.value = false\"\n            ></v-btn>\n          </v-card-actions>\n        </v-card>\n      </template>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref('')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: '',\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Scrollable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000558",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000559",
    "text": "Component: v-examples\nSection: Prop Transitions\nType: code_example\n\n## v-examples - Prop Transitions\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-dialog\n          transition=\"dialog-bottom-transition\"\n          width=\"auto\"\n        >\n          <template v-slot:activator=\"{ props: activatorProps }\">\n            <v-btn\n              v-bind=\"activatorProps\"\n              text=\"Transition from Bottom\"\n              block\n            ></v-btn>\n          </template>\n\n          <template v-slot:default=\"{ isActive }\">\n            <v-card>\n              <v-toolbar title=\"Opening from the Bottom\"></v-toolbar>\n\n              <v-card-text class=\"text-h2 pa-12\">\n                Hello world!\n              </v-card-text>\n\n              <v-card-actions class=\"justify-end\">\n                <v-btn\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </v-card-actions>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-dialog\n          transition=\"dialog-top-transition\"\n          width=\"auto\"\n        >\n          <template v-slot:activator=\"{ props: activatorProps }\">\n            <v-btn\n              v-bind=\"activatorProps\"\n              text=\"Transition from Top\"\n              block\n            ></v-btn>\n          </template>\n          <template v-slot:default=\"{ isActive }\">\n            <v-card>\n              <v-toolbar title=\"Opening from the Top\"></v-toolbar>\n\n              <v-card-text class=\"text-h2 pa-12\">\n                Hello world!\n              </v-card-text>\n\n              <v-card-actions class=\"justify-end\">\n                <v-btn\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </v-card-actions>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Transitions\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-dialog\n          transition=\"dialog-bottom-transition\"\n          width=\"auto\"\n        >\n          <template v-slot:activator=\"{ props: activatorProps }\">\n            <v-btn\n              v-bind=\"activatorProps\"\n              text=\"Transition from Bottom\"\n              block\n            ></v-btn>\n          </template>\n\n          <template v-slot:default=\"{ isActive }\">\n            <v-card>\n              <v-toolbar title=\"Opening from the Bottom\"></v-toolbar>\n\n              <v-card-text class=\"text-h2 pa-12\">\n                Hello world!\n              </v-card-text>\n\n              <v-card-actions class=\"justify-end\">\n                <v-btn\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </v-card-actions>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-dialog\n          transition=\"dialog-top-transition\"\n          width=\"auto\"\n        >\n          <template v-slot:activator=\"{ props: activatorProps }\">\n            <v-btn\n              v-bind=\"activatorProps\"\n              text=\"Transition from Top\"\n              block\n            ></v-btn>\n          </template>\n          <template v-slot:default=\"{ isActive }\">\n            <v-card>\n              <v-toolbar title=\"Opening from the Top\"></v-toolbar>\n\n              <v-card-text class=\"text-h2 pa-12\">\n                Hello world!\n              </v-card-text>\n\n              <v-card-actions class=\"justify-end\">\n                <v-btn\n                  text=\"Close\"\n                  @click=\"isActive.value = false\"\n                ></v-btn>\n              </v-card-actions>\n            </v-card>\n          </template>\n        </v-dialog>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Transitions",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000559",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000560",
    "text": "Component: v-examples\nSection: Slot Default\nType: code_example\n\n## v-examples - Slot Default\n\n```vue\n<template>\n  <div class=\"text-center pa-4\">\n    <v-btn @click=\"dialog = true\">\n      Open Dialog\n    </v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      width=\"auto\"\n    >\n      <v-card\n        max-width=\"400\"\n        prepend-icon=\"mdi-update\"\n        text=\"Your application will relaunch automatically after the update is complete.\"\n        title=\"Update in progress\"\n      >\n        <template v-slot:actions>\n          <v-btn\n            class=\"ms-auto\"\n            text=\"Ok\"\n            @click=\"dialog = false\"\n          ></v-btn>\n        </template>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Default\n\n```vue\n<template>\n  <div class=\"text-center pa-4\">\n    <v-btn @click=\"dialog = true\">\n      Open Dialog\n    </v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      width=\"auto\"\n    >\n      <v-card\n        max-width=\"400\"\n        prepend-icon=\"mdi-update\"\n        text=\"Your application will relaunch automatically after the update is complete.\"\n        title=\"Update in progress\"\n      >\n        <template v-slot:actions>\n          <v-btn\n            class=\"ms-auto\"\n            text=\"Ok\"\n            @click=\"dialog = false\"\n          ></v-btn>\n        </template>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dialog = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Default",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000560",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000561",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-dialog\n        v-model=\"dialog\"\n        v-bind=\"props\"\n      >\n        <template v-slot:activator=\"{ props: activatorProps }\">\n          <v-btn v-bind=\"activatorProps\">\n            Open Dialog\n          </v-btn>\n        </template>\n\n        <template v-slot:default=\"{ isActive }\">\n          <v-card title=\"Dialog\">\n            <v-card-text>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </v-card-text>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n\n              <v-btn\n                text=\"Close Dialog\"\n                @click=\"isActive.value = false\"\n              ></v-btn>\n            </v-card-actions>\n          </v-card>\n        </template>\n      </v-dialog>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-dialog'\n  const model = ref('default')\n  const dialog = ref(false)\n  const options = []\n\n  const props = computed(() => {\n    return {\n      'max-width': '500',\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:activator=\"{ props: activatorProps }\">\n    <v-btn\n      v-bind=\"activatorProps\"\n      color=\"surface-variant\"\n      text=\"Open Dialog\"\n      variant=\"flat\"\n    ></v-btn>\n  </template>\n\n  <template v-slot:default=\"{ isActive }\">\n    <v-card title=\"Dialog\">\n      <v-card-text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n      </v-card-text>\n\n      <v-card-actions>\n        <v-spacer></v-spacer>\n\n        <v-btn\n          text=\"Close Dialog\"\n          @click=\"isActive.value = false\"\n        ></v-btn>\n      </v-card-actions>\n    </v-card>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-dialog${propsToString(props.value)}>${slots.value}</v-dialog>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-dialog\n        v-model=\"dialog\"\n        v-bind=\"props\"\n      >\n        <template v-slot:activator=\"{ props: activatorProps }\">\n          <v-btn v-bind=\"activatorProps\">\n            Open Dialog\n          </v-btn>\n        </template>\n\n        <template v-slot:default=\"{ isActive }\">\n          <v-card title=\"Dialog\">\n            <v-card-text>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </v-card-text>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n\n              <v-btn\n                text=\"Close Dialog\"\n                @click=\"isActive.value = false\"\n              ></v-btn>\n            </v-card-actions>\n          </v-card>\n        </template>\n      </v-dialog>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-dialog'\n  const model = ref('default')\n  const dialog = ref(false)\n  const options = []\n\n  const props = computed(() => {\n    return {\n      'max-width': '500',\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:activator=\"{ props: activatorProps }\">\n    <v-btn\n      v-bind=\"activatorProps\"\n      color=\"surface-variant\"\n      text=\"Open Dialog\"\n      variant=\"flat\"\n    ></v-btn>\n  </template>\n\n  <template v-slot:default=\"{ isActive }\">\n    <v-card title=\"Dialog\">\n      <v-card-text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n      </v-card-text>\n\n      <v-card-actions>\n        <v-spacer></v-spacer>\n\n        <v-btn\n          text=\"Close Dialog\"\n          @click=\"isActive.value = false\"\n        ></v-btn>\n      </v-card-actions>\n    </v-card>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-dialog${propsToString(props.value)}>${slots.value}</v-dialog>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000561",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000562",
    "text": "Component: v-dividers\nType: component_overview\n\n# v-dividers\n\nThe `v-divider` component is used to separate sections of lists or layouts.",
    "display_content": "# v-dividers\n\nThe `v-divider` component is used to separate sections of lists or layouts.",
    "metadata": {
      "component": "v-dividers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000562",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000563",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nDividers in their simplest form display a horizontal line.",
    "display_content": "# v-usage\n\nDividers in their simplest form display a horizontal line.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000563",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000564",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-divider](/api/v-divider/) | The divider component. |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-divider](/api/v-divider/) | The divider component. |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000564",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000565",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nInset dividers are moved 72px to the right. This will cause them to line up with list items.\n\nAvailable sections: Inset, Vertical, Thickness, Portrait View, Subheaders",
    "display_content": "# v-examples\n\nInset dividers are moved 72px to the right. This will cause them to line up with list items.\n\nAvailable sections: Inset, Vertical, Thickness, Portrait View, Subheaders",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000565",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000566",
    "text": "Component: v-examples\nSection: Inset\nType: documentation\n\n## v-examples - Inset\n\nInset dividers are moved 72px to the right. This will cause them to line up with list items.\n\n<ExamplesExample file=\"v-divider/prop-inset\" />",
    "display_content": "## v-examples - Inset\n\nInset dividers are moved 72px to the right. This will cause them to line up with list items.\n\n<ExamplesExample file=\"v-divider/prop-inset\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Inset",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000566",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000567",
    "text": "Component: v-examples\nSection: Vertical\nType: documentation\n\n## v-examples - Vertical\n\nVertical dividers give you more tools for unique layouts.\n\n<ExamplesExample file=\"v-divider/prop-vertical\" />",
    "display_content": "## v-examples - Vertical\n\nVertical dividers give you more tools for unique layouts.\n\n<ExamplesExample file=\"v-divider/prop-vertical\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Vertical",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000567",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000568",
    "text": "Component: v-examples\nSection: Thickness\nType: documentation\n\n## v-examples - Thickness\n\nBy using the **thickness** prop, the thickness of the divider can be adjusted to the desired value.",
    "display_content": "## v-examples - Thickness\n\nBy using the **thickness** prop, the thickness of the divider can be adjusted to the desired value.",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Thickness",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000568",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000569",
    "text": "Component: v-examples\nSection: Portrait View\nType: documentation\n\n## v-examples - Portrait View\n\nCreate custom cards to fit any use-case.\n\n<ExamplesExample file=\"v-divider/misc-portrait-view\" />",
    "display_content": "## v-examples - Portrait View\n\nCreate custom cards to fit any use-case.\n\n<ExamplesExample file=\"v-divider/misc-portrait-view\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Portrait View",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000569",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000570",
    "text": "Component: v-examples\nSection: Subheaders\nType: documentation\n\n## v-examples - Subheaders\n\nDividers and subheaders can help break up content and can optionally line up with one another by using the same `inset` prop.\n\n<ExamplesExample file=\"v-divider/misc-subheaders\" />",
    "display_content": "## v-examples - Subheaders\n\nDividers and subheaders can help break up content and can optionally line up with one another by using the same `inset` prop.\n\n<ExamplesExample file=\"v-divider/misc-subheaders\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Subheaders",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000570",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000571",
    "text": "Component: v-accessibility\nType: component_overview\n\n# v-accessibility\n\nBy default, `v-divider` components are assigned the [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/) role of [**separator**](https://www.w3.org/TR/wai-aria/#separator) which denotes that the divider \"separates and distinguishes sections of content or groups of menu items.\" However, sometimes a divider is just a way to make an interface look nice. In those cases, the role of [**presentation**](https://www.w3.org/TR/wai-aria/#presentation) should be used which denotes \"an element whose implicit native role semantics will not be mapped to the accessibility API.\" To override the default **separator** role in a `v-divider`, simply add a `role=\"presentation\"` prop to your component. In addition, `v-divider` components have an `aria-orientation=\"horizontal\"`. If `vertical=\"true\"`, then `aria-orientation=\"vertical\"` will be set automatically as well. If `role=\"presentation\"`, `aria-orientation=\"undefined\"`, its default value.\n\nAvailable sections: Misc Portrait View, Misc Subheaders, Prop Inset, Prop Vertical, Usage",
    "display_content": "# v-accessibility\n\nBy default, `v-divider` components are assigned the [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/) role of [**separator**](https://www.w3.org/TR/wai-aria/#separator) which denotes that the divider \"separates and distinguishes sections of content or groups of menu items.\" However, sometimes a divider is just a way to make an interface look nice. In those cases, the role of [**presentation**](https://www.w3.org/TR/wai-aria/#presentation) should be used which denotes \"an element whose implicit native role semantics will not be mapped to the accessibility API.\" To override the default **separator** role in a `v-divider`, simply add a `role=\"presentation\"` prop to your component. In addition, `v-divider` components have an `aria-orientation=\"horizontal\"`. If `vertical=\"true\"`, then `aria-orientation=\"vertical\"` will be set automatically as well. If `role=\"presentation\"`, `aria-orientation=\"undefined\"`, its default value.\n\nAvailable sections: Misc Portrait View, Misc Subheaders, Prop Inset, Prop Vertical, Usage",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000571",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000572",
    "text": "Component: v-accessibility\nSection: Misc Portrait View\nType: code_example\n\n## v-accessibility - Misc Portrait View\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-card-item class=\"bg-cyan-darken-1\">\n      <v-card-title>\n        <span class=\"text-h5\">Sarah Mcbeal</span>\n      </v-card-title>\n\n      <template v-slot:append>\n        <v-defaults-provider\n          :defaults=\"{\n            VBtn: {\n              variant: 'text',\n              density: 'comfortable',\n            }\n          }\"\n        >\n          <v-btn icon=\"mdi-chevron-left\"></v-btn>\n\n          <v-btn icon=\"mdi-pencil\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </v-defaults-provider>\n      </template>\n    </v-card-item>\n\n    <v-list>\n      <v-list-item\n        append-icon=\"mdi-message-text\"\n        prepend-icon=\"mdi-phone\"\n        title=\"(650) 555-1234\"\n      ></v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        append-icon=\"mdi-message-text\"\n        prepend-icon=\"mdi-phone\"\n        title=\"(323) 555-6789\"\n      ></v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        prepend-icon=\"mdi-email\"\n        title=\"mcbeal@example.com\"\n      ></v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        prepend-icon=\"mdi-map-marker\"\n        title=\"Orlando, FL 79938\"\n      ></v-list-item>\n    </v-list>\n\n    <v-img\n      height=\"200\"\n      src=\"https://picsum.photos/700?image=996\"\n      cover\n    ></v-img>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-accessibility - Misc Portrait View\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-card-item class=\"bg-cyan-darken-1\">\n      <v-card-title>\n        <span class=\"text-h5\">Sarah Mcbeal</span>\n      </v-card-title>\n\n      <template v-slot:append>\n        <v-defaults-provider\n          :defaults=\"{\n            VBtn: {\n              variant: 'text',\n              density: 'comfortable',\n            }\n          }\"\n        >\n          <v-btn icon=\"mdi-chevron-left\"></v-btn>\n\n          <v-btn icon=\"mdi-pencil\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </v-defaults-provider>\n      </template>\n    </v-card-item>\n\n    <v-list>\n      <v-list-item\n        append-icon=\"mdi-message-text\"\n        prepend-icon=\"mdi-phone\"\n        title=\"(650) 555-1234\"\n      ></v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        append-icon=\"mdi-message-text\"\n        prepend-icon=\"mdi-phone\"\n        title=\"(323) 555-6789\"\n      ></v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        prepend-icon=\"mdi-email\"\n        title=\"mcbeal@example.com\"\n      ></v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        prepend-icon=\"mdi-map-marker\"\n        title=\"Orlando, FL 79938\"\n      ></v-list-item>\n    </v-list>\n\n    <v-img\n      height=\"200\"\n      src=\"https://picsum.photos/700?image=996\"\n      cover\n    ></v-img>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Misc Portrait View",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000572",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000573",
    "text": "Component: v-accessibility\nSection: Misc Subheaders\nType: code_example\n\n## v-accessibility - Misc Subheaders\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-toolbar\n      color=\"orange-lighten-1\"\n      dark\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Message Board</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-list lines=\"two\">\n      <template v-for=\"(item, index) in items\">\n        <v-list-subheader\n          v-if=\"item.header\"\n          :key=\"item.header\"\n          inset\n        >\n          {{ item.header }}\n        </v-list-subheader>\n\n        <v-divider\n          v-else-if=\"item.divider\"\n          :key=\"index\"\n          inset\n        ></v-divider>\n\n        <v-list-item\n          v-else\n          :key=\"item.title\"\n          :prepend-avatar=\"item.avatar\"\n          ripple\n        >\n          <template v-slot:title>\n            <div v-html=\"item.title\"></div>\n          </template>\n\n          <template v-slot:subtitle>\n            <div v-html=\"item.subtitle\"></div>\n          </template>\n        </v-list-item>\n      </template>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      header: 'Today',\n    },\n    { divider: true },\n    {\n      avatar: 'https://picsum.photos/250/300?image=660',\n      title: 'Meeting @ Noon',\n      subtitle: `<span class=\"font-weight-bold\">Spike Lee</span> &mdash; I'll be in your neighborhood`,\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=821',\n      title: 'Summer BBQ <span class=\"text-grey-lighten-1\"></span>',\n      subtitle: '<span class=\"font-weight-bold\">to Operations support</span> &mdash; Wish I could come.',\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=783',\n      title: 'Yes yes',\n      subtitle: '<span class=\"font-weight-bold\">Bella</span> &mdash; Do you have Paris recommendations',\n    },\n    {\n      header: 'Yesterday',\n    },\n    { divider: true },\n    {\n      avatar: 'https://picsum.photos/250/300?image=1006',\n      title: 'Dinner tonight?',\n      subtitle: '<span class=\"font-weight-bold\">LaToya</span> &mdash; Do you want to hang out?',\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=146',\n      title: 'So long',\n      subtitle: '<span class=\"font-weight-bold\">Nancy</span> &mdash; Do you see what time it is?',\n    },\n    {\n      header: 'Last Week',\n    },\n    { divider: true },\n    {\n      avatar: 'https://picsum.photos/250/300?image=1008',\n      title: 'Breakfast?',\n      subtitle: '<span class=\"font-weight-bold\">LaToya</span> &mdash; Do you want to hang out?',\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=839',\n      title: 'Winter Porridge <span class=\"text-grey-lighten-1\"></span>',\n      subtitle: '<span class=\"font-weight-bold\">cc: Daniel</span> &mdash; Tell me more...',\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=145',\n      title: 'Oui oui',\n      subtitle: '<span class=\"font-weight-bold\">Nancy</span> &mdash; Do you see what time it is?',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          header: 'Today',\n        },\n        { divider: true },\n        {\n          avatar: 'https://picsum.photos/250/300?image=660',\n          title: 'Meeting @ Noon',\n          subtitle: `<span class=\"font-weight-bold\">Spike Lee</span> &mdash; I'll be in your neighborhood`,\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=821',\n          title: 'Summer BBQ <span class=\"text-grey-lighten-1\"></span>',\n          subtitle: '<span class=\"font-weight-bold\">to Operations support</span> &mdash; Wish I could come.',\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=783',\n          title: 'Yes yes',\n          subtitle: '<span class=\"font-weight-bold\">Bella</span> &mdash; Do you have Paris recommendations',\n        },\n        {\n          header: 'Yesterday',\n        },\n        { divider: true },\n        {\n          avatar: 'https://picsum.photos/250/300?image=1006',\n          title: 'Dinner tonight?',\n          subtitle: '<span class=\"font-weight-bold\">LaToya</span> &mdash; Do you want to hang out?',\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=146',\n          title: 'So long',\n          subtitle: '<span class=\"font-weight-bold\">Nancy</span> &mdash; Do you see what time it is?',\n        },\n        {\n          header: 'Last Week',\n        },\n        { divider: true },\n        {\n          avatar: 'https://picsum.photos/250/300?image=1008',\n          title: 'Breakfast?',\n          subtitle: '<span class=\"font-weight-bold\">LaToya</span> &mdash; Do you want to hang out?',\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=839',\n          title: 'Winter Porridge <span class=\"text-grey-lighten-1\"></span>',\n          subtitle: '<span class=\"font-weight-bold\">cc: Daniel</span> &mdash; Tell me more...',\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=145',\n          title: 'Oui oui',\n          subtitle: '<span class=\"font-weight-bold\">Nancy</span> &mdash; Do you see what time it is?',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-accessibility - Misc Subheaders\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-toolbar\n      color=\"orange-lighten-1\"\n      dark\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Message Board</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-list lines=\"two\">\n      <template v-for=\"(item, index) in items\">\n        <v-list-subheader\n          v-if=\"item.header\"\n          :key=\"item.header\"\n          inset\n        >\n          {{ item.header }}\n        </v-list-subheader>\n\n        <v-divider\n          v-else-if=\"item.divider\"\n          :key=\"index\"\n          inset\n        ></v-divider>\n\n        <v-list-item\n          v-else\n          :key=\"item.title\"\n          :prepend-avatar=\"item.avatar\"\n          ripple\n        >\n          <template v-slot:title>\n            <div v-html=\"item.title\"></div>\n          </template>\n\n          <template v-slot:subtitle>\n            <div v-html=\"item.subtitle\"></div>\n          </template>\n        </v-list-item>\n      </template>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      header: 'Today',\n    },\n    { divider: true },\n    {\n      avatar: 'https://picsum.photos/250/300?image=660',\n      title: 'Meeting @ Noon',\n      subtitle: `<span class=\"font-weight-bold\">Spike Lee</span> &mdash; I'll be in your neighborhood`,\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=821',\n      title: 'Summer BBQ <span class=\"text-grey-lighten-1\"></span>',\n      subtitle: '<span class=\"font-weight-bold\">to Operations support</span> &mdash; Wish I could come.',\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=783',\n      title: 'Yes yes',\n      subtitle: '<span class=\"font-weight-bold\">Bella</span> &mdash; Do you have Paris recommendations',\n    },\n    {\n      header: 'Yesterday',\n    },\n    { divider: true },\n    {\n      avatar: 'https://picsum.photos/250/300?image=1006',\n      title: 'Dinner tonight?',\n      subtitle: '<span class=\"font-weight-bold\">LaToya</span> &mdash; Do you want to hang out?',\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=146',\n      title: 'So long',\n      subtitle: '<span class=\"font-weight-bold\">Nancy</span> &mdash; Do you see what time it is?',\n    },\n    {\n      header: 'Last Week',\n    },\n    { divider: true },\n    {\n      avatar: 'https://picsum.photos/250/300?image=1008',\n      title: 'Breakfast?',\n      subtitle: '<span class=\"font-weight-bold\">LaToya</span> &mdash; Do you want to hang out?',\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=839',\n      title: 'Winter Porridge <span class=\"text-grey-lighten-1\"></span>',\n      subtitle: '<span class=\"font-weight-bold\">cc: Daniel</span> &mdash; Tell me more...',\n    },\n    {\n      avatar: 'https://picsum.photos/250/300?image=145',\n      title: 'Oui oui',\n      subtitle: '<span class=\"font-weight-bold\">Nancy</span> &mdash; Do you see what time it is?',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          header: 'Today',\n        },\n        { divider: true },\n        {\n          avatar: 'https://picsum.photos/250/300?image=660',\n          title: 'Meeting @ Noon',\n          subtitle: `<span class=\"font-weight-bold\">Spike Lee</span> &mdash; I'll be in your neighborhood`,\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=821',\n          title: 'Summer BBQ <span class=\"text-grey-lighten-1\"></span>',\n          subtitle: '<span class=\"font-weight-bold\">to Operations support</span> &mdash; Wish I could come.',\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=783',\n          title: 'Yes yes',\n          subtitle: '<span class=\"font-weight-bold\">Bella</span> &mdash; Do you have Paris recommendations',\n        },\n        {\n          header: 'Yesterday',\n        },\n        { divider: true },\n        {\n          avatar: 'https://picsum.photos/250/300?image=1006',\n          title: 'Dinner tonight?',\n          subtitle: '<span class=\"font-weight-bold\">LaToya</span> &mdash; Do you want to hang out?',\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=146',\n          title: 'So long',\n          subtitle: '<span class=\"font-weight-bold\">Nancy</span> &mdash; Do you see what time it is?',\n        },\n        {\n          header: 'Last Week',\n        },\n        { divider: true },\n        {\n          avatar: 'https://picsum.photos/250/300?image=1008',\n          title: 'Breakfast?',\n          subtitle: '<span class=\"font-weight-bold\">LaToya</span> &mdash; Do you want to hang out?',\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=839',\n          title: 'Winter Porridge <span class=\"text-grey-lighten-1\"></span>',\n          subtitle: '<span class=\"font-weight-bold\">cc: Daniel</span> &mdash; Tell me more...',\n        },\n        {\n          avatar: 'https://picsum.photos/250/300?image=145',\n          title: 'Oui oui',\n          subtitle: '<span class=\"font-weight-bold\">Nancy</span> &mdash; Do you see what time it is?',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Misc Subheaders",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000573",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000574",
    "text": "Component: v-accessibility\nSection: Prop Inset\nType: code_example\n\n## v-accessibility - Prop Inset\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"425\"\n  >\n    <v-list lines=\"two\">\n      <v-list-subheader>Today</v-list-subheader>\n\n      <v-list-item\n        prepend-avatar=\"https://cdn.vuetifyjs.com/images/lists/1.jpg\"\n        title=\"Brunch this weekend?\"\n      >\n        <template v-slot:subtitle>\n          <span class=\"font-weight-bold\">Ali Connors</span> &mdash; I'll be in your neighborhood doing errands this weekend. Do you want to hang out?\n        </template>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        prepend-avatar=\"https://cdn.vuetifyjs.com/images/lists/2.jpg\"\n      >\n        <template v-slot:title>\n          Summer BBQ <span class=\"text-grey-lighten-1\">4</span>\n        </template>\n\n        <template v-slot:subtitle>\n          <span class=\"font-weight-bold\">to Alex, Scott, Jennifer</span> &mdash; Wish I could come, but I'm out of town this weekend.\n        </template>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        prepend-avatar=\"https://cdn.vuetifyjs.com/images/lists/3.jpg\"\n        title=\"Oui oui\"\n      >\n        <template v-slot:subtitle>\n          <span class=\"font-weight-bold\">Sandra Adams</span> &mdash; Do you have Paris recommendations? Have you ever been?\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Inset\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"425\"\n  >\n    <v-list lines=\"two\">\n      <v-list-subheader>Today</v-list-subheader>\n\n      <v-list-item\n        prepend-avatar=\"https://cdn.vuetifyjs.com/images/lists/1.jpg\"\n        title=\"Brunch this weekend?\"\n      >\n        <template v-slot:subtitle>\n          <span class=\"font-weight-bold\">Ali Connors</span> &mdash; I'll be in your neighborhood doing errands this weekend. Do you want to hang out?\n        </template>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        prepend-avatar=\"https://cdn.vuetifyjs.com/images/lists/2.jpg\"\n      >\n        <template v-slot:title>\n          Summer BBQ <span class=\"text-grey-lighten-1\">4</span>\n        </template>\n\n        <template v-slot:subtitle>\n          <span class=\"font-weight-bold\">to Alex, Scott, Jennifer</span> &mdash; Wish I could come, but I'm out of town this weekend.\n        </template>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item\n        prepend-avatar=\"https://cdn.vuetifyjs.com/images/lists/3.jpg\"\n        title=\"Oui oui\"\n      >\n        <template v-slot:subtitle>\n          <span class=\"font-weight-bold\">Sandra Adams</span> &mdash; Do you have Paris recommendations? Have you ever been?\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Inset",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000574",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000575",
    "text": "Component: v-accessibility\nSection: Prop Vertical\nType: code_example\n\n## v-accessibility - Prop Vertical\n\n```vue\n<template>\n  <div class=\"text-body-2 mb-1\">dividers with <v-code>vertical</v-code></div>\n  <v-toolbar color=\"purple\">\n    <template v-slot:prepend>\n      <div class=\"text-h5 px-3\">Title</div>\n    </template>\n\n    <v-divider class=\"mx-3\" vertical></v-divider>\n    <v-toolbar-title>My Home</v-toolbar-title>\n\n    <v-toolbar-items>\n      <v-btn variant=\"text\">News</v-btn>\n      <v-divider vertical></v-divider>\n      <v-btn variant=\"text\">Blog</v-btn>\n      <v-divider vertical></v-divider>\n      <v-btn variant=\"text\">Music</v-btn>\n    </v-toolbar-items>\n    <v-divider vertical></v-divider>\n    <v-app-bar-nav-icon class=\"ms-2\"></v-app-bar-nav-icon>\n  </v-toolbar>\n\n  <div class=\"text-body-2 mt-3 mb-1\">dividers with <v-code>vertical</v-code> and <v-code>inset</v-code></div>\n  <v-toolbar color=\"teal\">\n    <template v-slot:prepend>\n      <div class=\"text-h5 px-3\">Title</div>\n    </template>\n\n    <v-divider class=\"mx-3\" inset vertical></v-divider>\n    <v-toolbar-title>My Home</v-toolbar-title>\n\n    <v-toolbar-items>\n      <v-btn variant=\"text\">News</v-btn>\n      <v-divider inset vertical></v-divider>\n      <v-btn variant=\"text\">Blog</v-btn>\n      <v-divider inset vertical></v-divider>\n      <v-btn variant=\"text\">Music</v-btn>\n    </v-toolbar-items>\n    <v-divider inset vertical></v-divider>\n    <v-app-bar-nav-icon class=\"ms-2\"></v-app-bar-nav-icon>\n  </v-toolbar>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Vertical\n\n```vue\n<template>\n  <div class=\"text-body-2 mb-1\">dividers with <v-code>vertical</v-code></div>\n  <v-toolbar color=\"purple\">\n    <template v-slot:prepend>\n      <div class=\"text-h5 px-3\">Title</div>\n    </template>\n\n    <v-divider class=\"mx-3\" vertical></v-divider>\n    <v-toolbar-title>My Home</v-toolbar-title>\n\n    <v-toolbar-items>\n      <v-btn variant=\"text\">News</v-btn>\n      <v-divider vertical></v-divider>\n      <v-btn variant=\"text\">Blog</v-btn>\n      <v-divider vertical></v-divider>\n      <v-btn variant=\"text\">Music</v-btn>\n    </v-toolbar-items>\n    <v-divider vertical></v-divider>\n    <v-app-bar-nav-icon class=\"ms-2\"></v-app-bar-nav-icon>\n  </v-toolbar>\n\n  <div class=\"text-body-2 mt-3 mb-1\">dividers with <v-code>vertical</v-code> and <v-code>inset</v-code></div>\n  <v-toolbar color=\"teal\">\n    <template v-slot:prepend>\n      <div class=\"text-h5 px-3\">Title</div>\n    </template>\n\n    <v-divider class=\"mx-3\" inset vertical></v-divider>\n    <v-toolbar-title>My Home</v-toolbar-title>\n\n    <v-toolbar-items>\n      <v-btn variant=\"text\">News</v-btn>\n      <v-divider inset vertical></v-divider>\n      <v-btn variant=\"text\">Blog</v-btn>\n      <v-divider inset vertical></v-divider>\n      <v-btn variant=\"text\">Music</v-btn>\n    </v-toolbar-items>\n    <v-divider inset vertical></v-divider>\n    <v-app-bar-nav-icon class=\"ms-2\"></v-app-bar-nav-icon>\n  </v-toolbar>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Vertical",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000575",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000576",
    "text": "Component: v-accessibility\nSection: Usage\nType: code_example\n\n## v-accessibility - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"d-flex align-center justify-center\" style=\"height: 200px;\">\n      <v-divider v-bind=\"props\"></v-divider>\n    </div>\n\n    <template v-slot:configuration>\n      <v-slider v-model=\"thickness\" label=\"Thickness\" max=\"20\" min=\"1\"></v-slider>\n\n      <v-select v-model=\"opacity\" :items=\"opacities\" label=\"Opacity\"></v-select>\n\n      <v-select v-model=\"color\" :items=\"colors\" label=\"Color\"></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-divider'\n  const model = ref('default')\n  const color = ref()\n  const opacity = ref('default')\n  const thickness = ref(1)\n  const colors = [\n    'success',\n    'info',\n    'warning',\n    'error',\n  ]\n  const opacities = [100, 75, 50, 25, 'default', 0]\n  const options = ['inset', 'vertical']\n  const props = computed(() => {\n    let classes\n\n    if (opacity.value != null && opacity.value !== 'default') {\n      classes = `border-opacity-${opacity.value}`\n    }\n    return {\n      thickness: thickness.value !== 1 ? thickness.value : undefined,\n      class: classes || undefined,\n      color: color.value || undefined,\n      inset: model.value === 'inset' || undefined,\n      vertical: model.value === 'vertical' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-accessibility - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"d-flex align-center justify-center\" style=\"height: 200px;\">\n      <v-divider v-bind=\"props\"></v-divider>\n    </div>\n\n    <template v-slot:configuration>\n      <v-slider v-model=\"thickness\" label=\"Thickness\" max=\"20\" min=\"1\"></v-slider>\n\n      <v-select v-model=\"opacity\" :items=\"opacities\" label=\"Opacity\"></v-select>\n\n      <v-select v-model=\"color\" :items=\"colors\" label=\"Color\"></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-divider'\n  const model = ref('default')\n  const color = ref()\n  const opacity = ref('default')\n  const thickness = ref(1)\n  const colors = [\n    'success',\n    'info',\n    'warning',\n    'error',\n  ]\n  const opacities = [100, 75, 50, 25, 'default', 0]\n  const options = ['inset', 'vertical']\n  const props = computed(() => {\n    let classes\n\n    if (opacity.value != null && opacity.value !== 'default') {\n      classes = `border-opacity-${opacity.value}`\n    }\n    return {\n      thickness: thickness.value !== 1 ? thickness.value : undefined,\n      class: classes || undefined,\n      color: color.value || undefined,\n      inset: model.value === 'inset' || undefined,\n      vertical: model.value === 'vertical' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000576",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000577",
    "text": "Component: v-empty-states\nType: component_overview\n\n# v-empty-states\n\nThe `v-empty-state` component is used to indicate that a list is empty or that no search results were found.",
    "display_content": "# v-empty-states\n\nThe `v-empty-state` component is used to indicate that a list is empty or that no search results were found.",
    "metadata": {
      "component": "v-empty-states",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000577",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000578",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nA basic empty state is composed of a title and a description. It can also include an icon and a button.",
    "display_content": "# v-usage\n\nA basic empty state is composed of a title and a description. It can also include an icon and a button.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000578",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000579",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-empty-state](/api/v-empty-state/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-empty-state](/api/v-empty-state/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000579",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000580",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-empty-state` component is used to indicate that a page or list is empty or that no search results were found. It can be used in a variety of contexts, such as a list of items, a search results page, or a page with no content.\n\nAvailable sections: Props, Content, Media, Actions, Slots, Default, Title, Custom Actions",
    "display_content": "# v-guide\n\nThe `v-empty-state` component is used to indicate that a page or list is empty or that no search results were found. It can be used in a variety of contexts, such as a list of items, a search results page, or a page with no content.\n\nAvailable sections: Props, Content, Media, Actions, Slots, Default, Title, Custom Actions",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000580",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000581",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-empty-state` component has a multitude of props that allow you to customize its appearance and behavior.",
    "display_content": "## v-guide - Props\n\nThe `v-empty-state` component has a multitude of props that allow you to customize its appearance and behavior.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000581",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000582",
    "text": "Component: v-guide\nSection: Content\nType: documentation\n\n## v-guide - Content\n\nThere are three main properties for configuring text content, **title**, **subtitle**, and **text**.\n\n<ExamplesExample file=\"v-empty-state/prop-content\" />",
    "display_content": "## v-guide - Content\n\nThere are three main properties for configuring text content, **title**, **subtitle**, and **text**.\n\n<ExamplesExample file=\"v-empty-state/prop-content\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Content",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000582",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000583",
    "text": "Component: v-guide\nSection: Media\nType: documentation\n\n## v-guide - Media\n\nAdd an icon or image to the empty state to help convey its purpose.\n\n<ExamplesExample file=\"v-empty-state/prop-media\" />",
    "display_content": "## v-guide - Media\n\nAdd an icon or image to the empty state to help convey its purpose.\n\n<ExamplesExample file=\"v-empty-state/prop-media\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Media",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000583",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000584",
    "text": "Component: v-guide\nSection: Actions\nType: documentation\n\n## v-guide - Actions\n\nAdd a button to the empty state to help users take action.\n\n<ExamplesExample file=\"v-empty-state/prop-actions\" />",
    "display_content": "## v-guide - Actions\n\nAdd a button to the empty state to help users take action.\n\n<ExamplesExample file=\"v-empty-state/prop-actions\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Actions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000584",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000585",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe `v-empty-state` component has numerous slots that make it easy to customize the default behavior.\n\n| Slot | Description |\n| - | - |\n| 1. Default | The default slot |\n| 2. Media | The media slot is for images or icons |\n| 3. Title | The main title slot |\n| 4. Subtitle | The subtitle slot |\n| 5. Text | The text slot |\n| 6. Actions | The actions slot |",
    "display_content": "## v-guide - Slots\n\nThe `v-empty-state` component has numerous slots that make it easy to customize the default behavior.\n\n| Slot | Description |\n| - | - |\n| 1. Default | The default slot |\n| 2. Media | The media slot is for images or icons |\n| 3. Title | The main title slot |\n| 4. Subtitle | The subtitle slot |\n| 5. Text | The text slot |\n| 6. Actions | The actions slot |",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000585",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000586",
    "text": "Component: v-guide\nSection: Default\nType: documentation\n\n## v-guide - Default\n\nThe default slot is positioned between **text** and **actions**.\n\n<ExamplesExample file=\"v-empty-state/slot-default\" />",
    "display_content": "## v-guide - Default\n\nThe default slot is positioned between **text** and **actions**.\n\n<ExamplesExample file=\"v-empty-state/slot-default\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Default",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000586",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000587",
    "text": "Component: v-guide\nSection: Title\nType: documentation\n\n## v-guide - Title\n\nIt's simple to customize the font-sizing of the title using utility classes.\n\n<ExamplesExample file=\"v-empty-state/slot-title\" />",
    "display_content": "## v-guide - Title\n\nIt's simple to customize the font-sizing of the title using utility classes.\n\n<ExamplesExample file=\"v-empty-state/slot-title\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Title",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000587",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000588",
    "text": "Component: v-guide\nSection: Custom Actions\nType: documentation\n\n## v-guide - Custom Actions\n\nBy default, only 1 action is displayed through configuration. To add more options, utilize the **actions** slot.\n\n<ExamplesExample file=\"v-empty-state/slot-actions\" />",
    "display_content": "## v-guide - Custom Actions\n\nBy default, only 1 action is displayed through configuration. To add more options, utilize the **actions** slot.\n\n<ExamplesExample file=\"v-empty-state/slot-actions\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Custom Actions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000588",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000589",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-empty-state` component.\n\nAvailable sections: Astro dog, Astro cat, Misc Astro Cat, Misc Astro Dog, Prop Actions, Prop Content, Prop Media, Slot Actions, Slot Default, Slot Title, Usage",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-empty-state` component.\n\nAvailable sections: Astro dog, Astro cat, Misc Astro Cat, Misc Astro Dog, Prop Actions, Prop Content, Prop Media, Slot Actions, Slot Default, Slot Title, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000589",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000590",
    "text": "Component: v-examples\nSection: Astro dog\nType: documentation\n\n## v-examples - Astro dog\n\nThis example demonstrates how to use the `v-empty-state` component to create a fun and engaging empty state.\n\n<ExamplesExample file=\"v-empty-state/misc-astro-dog\" />",
    "display_content": "## v-examples - Astro dog\n\nThis example demonstrates how to use the `v-empty-state` component to create a fun and engaging empty state.\n\n<ExamplesExample file=\"v-empty-state/misc-astro-dog\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Astro dog",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000590",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000591",
    "text": "Component: v-examples\nSection: Astro cat\nType: documentation\n\n## v-examples - Astro cat\n\nThis example utilizes components such as [v-tabs](/components/tabs/) and [v-window](/components/windows/) to create a more complex empty state.\n\n<ExamplesExample file=\"v-empty-state/misc-astro-cat\" />",
    "display_content": "## v-examples - Astro cat\n\nThis example utilizes components such as [v-tabs](/components/tabs/) and [v-window](/components/windows/) to create a more complex empty state.\n\n<ExamplesExample file=\"v-empty-state/misc-astro-cat\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Astro cat",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000591",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000592",
    "text": "Component: v-examples\nSection: Misc Astro Cat\nType: code_example\n\n## v-examples - Misc Astro Cat\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"360\"\n    variant=\"flat\"\n    border\n  >\n    <v-layout>\n      <v-system-bar class=\"ga-1\" color=\"surface-light\">\n        <v-icon icon=\"mdi-square\" size=\"x-small\"></v-icon>\n\n        <v-icon icon=\"mdi-circle\" size=\"x-small\"></v-icon>\n\n        <v-icon icon=\"mdi-triangle\" size=\"x-small\"></v-icon>\n      </v-system-bar>\n\n      <v-app-bar title=\"My Library\">\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <template v-slot:extension>\n          <v-tabs v-model=\"tabs\" color=\"#4c00d5\" grow>\n            <v-tab text=\"My Movies\"></v-tab>\n\n            <v-tab text=\"My Tv Shows\"></v-tab>\n          </v-tabs>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <div class=\"pt-4 pb-16\">\n          <v-window v-model=\"tabs\">\n            <v-window-item class=\"pa-2\" value=\"0\">\n              <v-card>\n                <v-empty-state\n                  class=\"pa-0\"\n                  image=\"https://vuetifyjs.b-cdn.net/docs/images/components/v-empty-state/astro-cat.svg\"\n                  size=\"200\"\n                >\n                  <template v-slot:media>\n                    <v-sheet class=\"py-4 mb-4\" color=\"#fdefff\">\n                      <v-img></v-img>\n                    </v-sheet>\n                  </template>\n\n                  <template v-slot:title>\n                    <div class=\"text-h6 text-high-emphasis\">Get Started</div>\n                  </template>\n\n                  <template v-slot:text>\n                    <div class=\"text-body-2 font-weight-medium text-medium-emphasis\">\n                      Find a great movie, then relax and enjoy with the Movies & TV app.\n                    </div>\n                  </template>\n\n                  <template v-slot:actions>\n                    <v-spacer></v-spacer>\n\n                    <v-btn color=\"#4c00d5\" text=\"Shop Movies\"></v-btn>\n\n                    <v-spacer></v-spacer>\n                  </template>\n                </v-empty-state>\n              </v-card>\n            </v-window-item>\n\n            <v-window-item class=\"pa-2\" value=\"0\">\n              <v-card>\n                <v-empty-state\n                  class=\"pa-0\"\n                  image=\"https://vuetifyjs.b-cdn.net/docs/images/components/v-empty-state/astro-dog.svg\"\n                  size=\"200\"\n                >\n                  <template v-slot:media>\n                    <v-sheet class=\"py-4 mb-4\" color=\"#fdefff\">\n                      <v-img></v-img>\n                    </v-sheet>\n                  </template>\n\n                  <template v-slot:title>\n                    <div class=\"text-h6 text-high-emphasis\">Get Started</div>\n                  </template>\n\n                  <template v-slot:text>\n                    <div class=\"text-body-2 font-weight-medium text-medium-emphasis\">\n                      Watch your favorite TV Shows with the Movies & TV app.\n                    </div>\n                  </template>\n\n                  <template v-slot:actions>\n                    <v-spacer></v-spacer>\n\n                    <v-btn color=\"#4c00d5\" text=\"Shop TV Shows\"></v-btn>\n\n                    <v-spacer></v-spacer>\n                  </template>\n                </v-empty-state>\n              </v-card>\n            </v-window-item>\n          </v-window>\n        </div>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const tabs = shallowRef(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tabs: 0,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Astro Cat\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"360\"\n    variant=\"flat\"\n    border\n  >\n    <v-layout>\n      <v-system-bar class=\"ga-1\" color=\"surface-light\">\n        <v-icon icon=\"mdi-square\" size=\"x-small\"></v-icon>\n\n        <v-icon icon=\"mdi-circle\" size=\"x-small\"></v-icon>\n\n        <v-icon icon=\"mdi-triangle\" size=\"x-small\"></v-icon>\n      </v-system-bar>\n\n      <v-app-bar title=\"My Library\">\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <template v-slot:extension>\n          <v-tabs v-model=\"tabs\" color=\"#4c00d5\" grow>\n            <v-tab text=\"My Movies\"></v-tab>\n\n            <v-tab text=\"My Tv Shows\"></v-tab>\n          </v-tabs>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <div class=\"pt-4 pb-16\">\n          <v-window v-model=\"tabs\">\n            <v-window-item class=\"pa-2\" value=\"0\">\n              <v-card>\n                <v-empty-state\n                  class=\"pa-0\"\n                  image=\"https://vuetifyjs.b-cdn.net/docs/images/components/v-empty-state/astro-cat.svg\"\n                  size=\"200\"\n                >\n                  <template v-slot:media>\n                    <v-sheet class=\"py-4 mb-4\" color=\"#fdefff\">\n                      <v-img></v-img>\n                    </v-sheet>\n                  </template>\n\n                  <template v-slot:title>\n                    <div class=\"text-h6 text-high-emphasis\">Get Started</div>\n                  </template>\n\n                  <template v-slot:text>\n                    <div class=\"text-body-2 font-weight-medium text-medium-emphasis\">\n                      Find a great movie, then relax and enjoy with the Movies & TV app.\n                    </div>\n                  </template>\n\n                  <template v-slot:actions>\n                    <v-spacer></v-spacer>\n\n                    <v-btn color=\"#4c00d5\" text=\"Shop Movies\"></v-btn>\n\n                    <v-spacer></v-spacer>\n                  </template>\n                </v-empty-state>\n              </v-card>\n            </v-window-item>\n\n            <v-window-item class=\"pa-2\" value=\"0\">\n              <v-card>\n                <v-empty-state\n                  class=\"pa-0\"\n                  image=\"https://vuetifyjs.b-cdn.net/docs/images/components/v-empty-state/astro-dog.svg\"\n                  size=\"200\"\n                >\n                  <template v-slot:media>\n                    <v-sheet class=\"py-4 mb-4\" color=\"#fdefff\">\n                      <v-img></v-img>\n                    </v-sheet>\n                  </template>\n\n                  <template v-slot:title>\n                    <div class=\"text-h6 text-high-emphasis\">Get Started</div>\n                  </template>\n\n                  <template v-slot:text>\n                    <div class=\"text-body-2 font-weight-medium text-medium-emphasis\">\n                      Watch your favorite TV Shows with the Movies & TV app.\n                    </div>\n                  </template>\n\n                  <template v-slot:actions>\n                    <v-spacer></v-spacer>\n\n                    <v-btn color=\"#4c00d5\" text=\"Shop TV Shows\"></v-btn>\n\n                    <v-spacer></v-spacer>\n                  </template>\n                </v-empty-state>\n              </v-card>\n            </v-window-item>\n          </v-window>\n        </div>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const tabs = shallowRef(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tabs: 0,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Astro Cat",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000592",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000593",
    "text": "Component: v-examples\nSection: Misc Astro Dog\nType: code_example\n\n## v-examples - Misc Astro Dog\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"360\">\n    <v-layout>\n      <v-system-bar class=\"ga-1\" color=\"#4c00d5\">\n        <v-icon icon=\"mdi-square\" size=\"x-small\"></v-icon>\n\n        <v-icon icon=\"mdi-circle\" size=\"x-small\"></v-icon>\n\n        <v-icon icon=\"mdi-triangle\" size=\"x-small\"></v-icon>\n      </v-system-bar>\n\n      <v-app-bar color=\"#6200ee\" title=\"Drafts\">\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <template v-slot:append>\n          <v-btn icon=\"mdi-magnify\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <v-empty-state\n          image=\"https://vuetifyjs.b-cdn.net/docs/images/components/v-empty-state/astro-dog.svg\"\n          size=\"200\"\n          text-width=\"250\"\n        >\n          <template v-slot:media>\n            <v-img class=\"mb-8\"></v-img>\n          </template>\n\n          <template v-slot:title>\n            <div class=\"text-h6 text-high-emphasis\">Empty in drafts</div>\n          </template>\n\n          <template v-slot:text>\n            <div class=\"text-body-1\">Save a draft message and it will show up here</div>\n          </template>\n        </v-empty-state>\n      </v-main>\n\n      <v-layout-item\n        class=\"text-end\"\n        position=\"bottom\"\n        size=\"80\"\n        model-value\n      >\n        <v-btn\n          class=\"ma-4\"\n          color=\"#4c00d5\"\n          elevation=\"8\"\n          icon=\"mdi-plus\"\n        ></v-btn>\n      </v-layout-item>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Astro Dog\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"360\">\n    <v-layout>\n      <v-system-bar class=\"ga-1\" color=\"#4c00d5\">\n        <v-icon icon=\"mdi-square\" size=\"x-small\"></v-icon>\n\n        <v-icon icon=\"mdi-circle\" size=\"x-small\"></v-icon>\n\n        <v-icon icon=\"mdi-triangle\" size=\"x-small\"></v-icon>\n      </v-system-bar>\n\n      <v-app-bar color=\"#6200ee\" title=\"Drafts\">\n        <template v-slot:prepend>\n          <v-app-bar-nav-icon></v-app-bar-nav-icon>\n        </template>\n\n        <template v-slot:append>\n          <v-btn icon=\"mdi-magnify\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-app-bar>\n\n      <v-main>\n        <v-empty-state\n          image=\"https://vuetifyjs.b-cdn.net/docs/images/components/v-empty-state/astro-dog.svg\"\n          size=\"200\"\n          text-width=\"250\"\n        >\n          <template v-slot:media>\n            <v-img class=\"mb-8\"></v-img>\n          </template>\n\n          <template v-slot:title>\n            <div class=\"text-h6 text-high-emphasis\">Empty in drafts</div>\n          </template>\n\n          <template v-slot:text>\n            <div class=\"text-body-1\">Save a draft message and it will show up here</div>\n          </template>\n        </v-empty-state>\n      </v-main>\n\n      <v-layout-item\n        class=\"text-end\"\n        position=\"bottom\"\n        size=\"80\"\n        model-value\n      >\n        <v-btn\n          class=\"ma-4\"\n          color=\"#4c00d5\"\n          elevation=\"8\"\n          icon=\"mdi-plus\"\n        ></v-btn>\n      </v-layout-item>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Astro Dog",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000593",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000594",
    "text": "Component: v-examples\nSection: Prop Actions\nType: code_example\n\n## v-examples - Prop Actions\n\n```vue\n<template>\n  <v-empty-state\n    action-text=\"Retry Request\"\n    image=\"https://cdn.vuetifyjs.com/docs/images/components/v-empty-state/connection.svg\"\n    text=\"There might be a problem with your connection or our servers. Please check your internet connection or try again later. We appreciate your patience.\"\n    title=\"Something Went Wrong\"\n    @click:action=\"onClickAction\"\n  ></v-empty-state>\n</template>\n\n<script setup>\n  function onClickAction () {\n    alert('You clicked the action button')\n  }\n</script>\n\n<script>\n  export default {\n    methods: {\n      onClickAction () {\n        alert('You clicked the action button')\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Actions\n\n```vue\n<template>\n  <v-empty-state\n    action-text=\"Retry Request\"\n    image=\"https://cdn.vuetifyjs.com/docs/images/components/v-empty-state/connection.svg\"\n    text=\"There might be a problem with your connection or our servers. Please check your internet connection or try again later. We appreciate your patience.\"\n    title=\"Something Went Wrong\"\n    @click:action=\"onClickAction\"\n  ></v-empty-state>\n</template>\n\n<script setup>\n  function onClickAction () {\n    alert('You clicked the action button')\n  }\n</script>\n\n<script>\n  export default {\n    methods: {\n      onClickAction () {\n        alert('You clicked the action button')\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Actions",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000594",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000595",
    "text": "Component: v-examples\nSection: Prop Content\nType: code_example\n\n## v-examples - Prop Content\n\n```vue\n<template>\n  <v-empty-state\n    headline=\"No Messages Yet\"\n    text=\"You haven't received any messages yet. When you do, they'll appear here.\"\n    title=\"Check back later.\"\n    @click:action=\"onClickAction\"\n  ></v-empty-state>\n</template>\n\n<script setup>\n  function onClickAction () {\n    alert('You clicked the action button')\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Content\n\n```vue\n<template>\n  <v-empty-state\n    headline=\"No Messages Yet\"\n    text=\"You haven't received any messages yet. When you do, they'll appear here.\"\n    title=\"Check back later.\"\n    @click:action=\"onClickAction\"\n  ></v-empty-state>\n</template>\n\n<script setup>\n  function onClickAction () {\n    alert('You clicked the action button')\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Content",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000595",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000596",
    "text": "Component: v-examples\nSection: Prop Media\nType: code_example\n\n## v-examples - Prop Media\n\n```vue\n<template>\n  <v-empty-state\n    icon=\"mdi-magnify\"\n    text=\"Try adjusting your search terms or filters. Sometimes less specific terms or broader queries can help you find what you're looking for.\"\n    title=\"We couldn't find a match.\"\n  ></v-empty-state>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Media\n\n```vue\n<template>\n  <v-empty-state\n    icon=\"mdi-magnify\"\n    text=\"Try adjusting your search terms or filters. Sometimes less specific terms or broader queries can help you find what you're looking for.\"\n    title=\"We couldn't find a match.\"\n  ></v-empty-state>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Media",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000596",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000597",
    "text": "Component: v-examples\nSection: Slot Actions\nType: code_example\n\n## v-examples - Slot Actions\n\n```vue\n<template>\n  <v-empty-state image=\"https://cdn.vuetifyjs.com/docs/images/components/v-empty-state/teamwork.png\">\n    <template v-slot:title>\n      <div class=\"text-subtitle-2 mt-8\">\n        Manage your inventory transfers\n      </div>\n    </template>\n\n    <template v-slot:text>\n      <div class=\"text-caption\">\n        Track and receive your incoming inventory from suppliers\n      </div>\n    </template>\n\n    <template v-slot:actions>\n      <v-btn\n        class=\"text-none\"\n        color=\"white\"\n        elevation=\"1\"\n        rounded=\"lg\"\n        size=\"small\"\n        text=\"Learn more\"\n        width=\"96\"\n      ></v-btn>\n\n      <v-btn\n        class=\"text-none\"\n        elevation=\"1\"\n        rounded=\"lg\"\n        size=\"small\"\n        text=\"Add transfer\"\n        width=\"96\"\n      ></v-btn>\n    </template>\n  </v-empty-state>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Actions\n\n```vue\n<template>\n  <v-empty-state image=\"https://cdn.vuetifyjs.com/docs/images/components/v-empty-state/teamwork.png\">\n    <template v-slot:title>\n      <div class=\"text-subtitle-2 mt-8\">\n        Manage your inventory transfers\n      </div>\n    </template>\n\n    <template v-slot:text>\n      <div class=\"text-caption\">\n        Track and receive your incoming inventory from suppliers\n      </div>\n    </template>\n\n    <template v-slot:actions>\n      <v-btn\n        class=\"text-none\"\n        color=\"white\"\n        elevation=\"1\"\n        rounded=\"lg\"\n        size=\"small\"\n        text=\"Learn more\"\n        width=\"96\"\n      ></v-btn>\n\n      <v-btn\n        class=\"text-none\"\n        elevation=\"1\"\n        rounded=\"lg\"\n        size=\"small\"\n        text=\"Add transfer\"\n        width=\"96\"\n      ></v-btn>\n    </template>\n  </v-empty-state>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Actions",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000597",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000598",
    "text": "Component: v-examples\nSection: Slot Default\nType: code_example\n\n## v-examples - Slot Default\n\n```vue\n<template>\n  <v-empty-state\n    headline=\"Welcome,\"\n    icon=\"$vuetify\"\n    title=\"What would you like to do today?\"\n  >\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://vuetifyjs.com/introduction/why-vuetify/#feature-guides\"\n            prepend-icon=\"$vuetify\"\n            target=\"_blank\"\n            text=\"Start with our dedicated feature guides\"\n            title=\"Learn Vuetify\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://play.vuetifyjs.com\"\n            prepend-icon=\"$vuetify-play\"\n            target=\"_blank\"\n            text=\"Test Vuetify out in our playground\"\n            title=\"Create a Playground\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://bin.vuetifyjs.com\"\n            prepend-icon=\"mdi-delete\"\n            target=\"_blank\"\n            text=\"Create a new bin to store your code\"\n            title=\"Create a Bin\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://issues.vuetifyjs.com\"\n            prepend-icon=\"$warning\"\n            target=\"_blank\"\n            text=\"File a bug report for Vuetify\"\n            title=\"Report a Bug\"\n          ></v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-empty-state>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Default\n\n```vue\n<template>\n  <v-empty-state\n    headline=\"Welcome,\"\n    icon=\"$vuetify\"\n    title=\"What would you like to do today?\"\n  >\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://vuetifyjs.com/introduction/why-vuetify/#feature-guides\"\n            prepend-icon=\"$vuetify\"\n            target=\"_blank\"\n            text=\"Start with our dedicated feature guides\"\n            title=\"Learn Vuetify\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://play.vuetifyjs.com\"\n            prepend-icon=\"$vuetify-play\"\n            target=\"_blank\"\n            text=\"Test Vuetify out in our playground\"\n            title=\"Create a Playground\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://bin.vuetifyjs.com\"\n            prepend-icon=\"mdi-delete\"\n            target=\"_blank\"\n            text=\"Create a new bin to store your code\"\n            title=\"Create a Bin\"\n          ></v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card\n            href=\"https://issues.vuetifyjs.com\"\n            prepend-icon=\"$warning\"\n            target=\"_blank\"\n            text=\"File a bug report for Vuetify\"\n            title=\"Report a Bug\"\n          ></v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-empty-state>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Default",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000598",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000599",
    "text": "Component: v-examples\nSection: Slot Title\nType: code_example\n\n## v-examples - Slot Title\n\n```vue\n<template>\n  <v-empty-state icon=\"$success\">\n    <template v-slot:media>\n      <v-icon color=\"surface-variant\"></v-icon>\n    </template>\n\n    <template v-slot:headline>\n      <div class=\"text-h4\">\n        All Done For Now!\n      </div>\n    </template>\n\n    <template v-slot:title>\n      <div class=\"text-h6\">\n        You're all caught up.\n      </div>\n    </template>\n\n    <template v-slot:text>\n      <div class=\"text-medium-emphasis text-caption\">\n        Great job on completing all your tasks! This might be a good time to relax or consider planning your next set of goals. If you think of something new, just hit the button below to add a new task.\n      </div>\n    </template>\n  </v-empty-state>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Title\n\n```vue\n<template>\n  <v-empty-state icon=\"$success\">\n    <template v-slot:media>\n      <v-icon color=\"surface-variant\"></v-icon>\n    </template>\n\n    <template v-slot:headline>\n      <div class=\"text-h4\">\n        All Done For Now!\n      </div>\n    </template>\n\n    <template v-slot:title>\n      <div class=\"text-h6\">\n        You're all caught up.\n      </div>\n    </template>\n\n    <template v-slot:text>\n      <div class=\"text-medium-emphasis text-caption\">\n        Great job on completing all your tasks! This might be a good time to relax or consider planning your next set of goals. If you think of something new, just hit the button below to add a new task.\n      </div>\n    </template>\n  </v-empty-state>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Title",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000599",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000600",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-empty-state\n      v-bind=\"props\"\n    ></v-empty-state>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-empty-state'\n  const model = ref('default')\n  const options = []\n\n  const props = computed(() => {\n    return {\n      headline: 'Whoops, 404',\n      title: 'Page not found',\n      text: 'The page you were looking for does not exist',\n      image: 'https://vuetifyjs.b-cdn.net/docs/images/logos/v.png',\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-empty-state\n      v-bind=\"props\"\n    ></v-empty-state>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-empty-state'\n  const model = ref('default')\n  const options = []\n\n  const props = computed(() => {\n    return {\n      headline: 'Whoops, 404',\n      title: 'Page not found',\n      text: 'The page you were looking for does not exist',\n      image: 'https://vuetifyjs.b-cdn.net/docs/images/logos/v.png',\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000600",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000601",
    "text": "Component: v-expansion-panels\nType: component_overview\n\n# v-expansion-panels\n\nThe `v-expansion-panel` component is useful for reducing vertical space with large amounts of information. The default functionality of the component is to only display one expansion-panel body at a time; however, with the `multiple` property, the expansion-panel can remain open until explicitly closed.",
    "display_content": "# v-expansion-panels\n\nThe `v-expansion-panel` component is useful for reducing vertical space with large amounts of information. The default functionality of the component is to only display one expansion-panel body at a time; however, with the `multiple` property, the expansion-panel can remain open until explicitly closed.",
    "metadata": {
      "component": "v-expansion-panels",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000601",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000602",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nExpansion panels in their simplest form display a list of expandable items. You can either declare the markup explicitly, or use the **title** and **text** props.",
    "display_content": "# v-usage\n\nExpansion panels in their simplest form display a list of expandable items. You can either declare the markup explicitly, or use the **title** and **text** props.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000602",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000603",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-expansion-panels](/api/v-expansion-panels/) | Primary component | | [v-expansion-panel](/api/v-expansion-panel/) | Sub-component that wraps `v-expansion-panel-text` and `v-expansion-panel-title` | | [v-expansion-panel-title](/api/v-expansion-panel-title/) | Sub-component used to display the Expansion Panel's title. Wraps the `#title` slot | | [v-expansion-panel-text](/api/v-expansion-panel-text/) | Sub-component used to display the Expanion Panel's text. Wraps the `#text` slot |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-expansion-panels](/api/v-expansion-panels/) | Primary component | | [v-expansion-panel](/api/v-expansion-panel/) | Sub-component that wraps `v-expansion-panel-text` and `v-expansion-panel-title` | | [v-expansion-panel-title](/api/v-expansion-panel-title/) | Sub-component used to display the Expansion Panel's title. Wraps the `#title` slot | | [v-expansion-panel-text](/api/v-expansion-panel-text/) | Sub-component used to display the Expanion Panel's text. Wraps the `#text` slot |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000603",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000604",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThere are four different variants of the expansion-panel. Accordion expansion-panels have no margins around the currently active panel. Inset expansion-panels become smaller when activated, while poput expansion-panels become larger.\n\nAvailable sections: Variant, Disabled, Model, Readonly, Advanced, Custom icon, Misc Advanced, Misc Custom Icons, Prop Disabled, Prop Model, Prop Readonly, Prop Variant, Usage",
    "display_content": "# v-examples\n\nThere are four different variants of the expansion-panel. Accordion expansion-panels have no margins around the currently active panel. Inset expansion-panels become smaller when activated, while poput expansion-panels become larger.\n\nAvailable sections: Variant, Disabled, Model, Readonly, Advanced, Custom icon, Misc Advanced, Misc Custom Icons, Prop Disabled, Prop Model, Prop Readonly, Prop Variant, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000604",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000605",
    "text": "Component: v-examples\nSection: Variant\nType: documentation\n\n## v-examples - Variant\n\nThere are four different variants of the expansion-panel. Accordion expansion-panels have no margins around the currently active panel. Inset expansion-panels become smaller when activated, while poput expansion-panels become larger.\n\n<ExamplesExample file=\"v-expansion-panels/prop-variant\" />",
    "display_content": "## v-examples - Variant\n\nThere are four different variants of the expansion-panel. Accordion expansion-panels have no margins around the currently active panel. Inset expansion-panels become smaller when activated, while poput expansion-panels become larger.\n\n<ExamplesExample file=\"v-expansion-panels/prop-variant\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Variant",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000605",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000606",
    "text": "Component: v-examples\nSection: Disabled\nType: documentation\n\n## v-examples - Disabled\n\nBoth the expansion-panel and its content can be disabled using the **disabled** prop.\n\n<ExamplesExample file=\"v-expansion-panels/prop-disabled\" />\n\n<!-- #### Focusable\n\nThe expansion-panel headers can be made focusable with the prop **focusable**.\n\n<ExamplesExample file=\"v-expansion-panels/prop-focusable\" /> -->",
    "display_content": "## v-examples - Disabled\n\nBoth the expansion-panel and its content can be disabled using the **disabled** prop.\n\n<ExamplesExample file=\"v-expansion-panels/prop-disabled\" />\n\n<!-- #### Focusable\n\nThe expansion-panel headers can be made focusable with the prop **focusable**.\n\n<ExamplesExample file=\"v-expansion-panels/prop-focusable\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000606",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000607",
    "text": "Component: v-examples\nSection: Model\nType: documentation\n\n## v-examples - Model\n\nExpansion panels can be controlled externally by using the **v-model**. You will need to set a **value** on each panel, so that you can refer to them outside the component. If the **multiple** prop is set, then the **v-model** value will be an array.\n\n<ExamplesExample file=\"v-expansion-panels/prop-model\" />",
    "display_content": "## v-examples - Model\n\nExpansion panels can be controlled externally by using the **v-model**. You will need to set a **value** on each panel, so that you can refer to them outside the component. If the **multiple** prop is set, then the **v-model** value will be an array.\n\n<ExamplesExample file=\"v-expansion-panels/prop-model\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Model",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000607",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000608",
    "text": "Component: v-examples\nSection: Readonly\nType: documentation\n\n## v-examples - Readonly\n\n**readonly** prop does the same thing as **disabled**, but it doesn't touch styles.\n\n<ExamplesExample file=\"v-expansion-panels/prop-readonly\" />",
    "display_content": "## v-examples - Readonly\n\n**readonly** prop does the same thing as **disabled**, but it doesn't touch styles.\n\n<ExamplesExample file=\"v-expansion-panels/prop-readonly\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Readonly",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000608",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000609",
    "text": "Component: v-examples\nSection: Advanced\nType: documentation\n\n## v-examples - Advanced\n\nThe expansion panel component provides a rich playground to build truly advanced implementations. Here we take advantage of slots in the `v-expansion-panel-title` component to react to the state of being open or closed by fading content in and out.\n\n<ExamplesExample file=\"v-expansion-panels/misc-advanced\" />",
    "display_content": "## v-examples - Advanced\n\nThe expansion panel component provides a rich playground to build truly advanced implementations. Here we take advantage of slots in the `v-expansion-panel-title` component to react to the state of being open or closed by fading content in and out.\n\n<ExamplesExample file=\"v-expansion-panels/misc-advanced\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Advanced",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000609",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000610",
    "text": "Component: v-examples\nSection: Custom icon\nType: documentation\n\n## v-examples - Custom icon\n\nExpand action icon can be customized with **expand-icon** prop or the `actions` slot.\n\n<ExamplesExample file=\"v-expansion-panels/misc-custom-icons\" />",
    "display_content": "## v-examples - Custom icon\n\nExpand action icon can be customized with **expand-icon** prop or the `actions` slot.\n\n<ExamplesExample file=\"v-expansion-panels/misc-custom-icons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000610",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000611",
    "text": "Component: v-examples\nSection: Misc Advanced\nType: code_example\n\n## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-expansion-panels>\n    <v-expansion-panel>\n      <v-expansion-panel-title>\n        <template v-slot:default=\"{ expanded }\">\n          <v-row no-gutters>\n            <v-col class=\"d-flex justify-start\" cols=\"4\">\n              Trip name\n            </v-col>\n            <v-col\n              class=\"text-grey\"\n              cols=\"8\"\n            >\n              <v-fade-transition leave-absolute>\n                <span\n                  v-if=\"expanded\"\n                  key=\"0\"\n                >\n                  Enter a name for the trip\n                </span>\n                <span\n                  v-else\n                  key=\"1\"\n                >\n                  {{ trip.name }}\n                </span>\n              </v-fade-transition>\n            </v-col>\n          </v-row>\n        </template>\n      </v-expansion-panel-title>\n      <v-expansion-panel-text>\n        <v-text-field\n          v-model=\"trip.name\"\n          placeholder=\"Caribbean Cruise\"\n          hide-details\n        ></v-text-field>\n      </v-expansion-panel-text>\n    </v-expansion-panel>\n\n    <v-expansion-panel>\n      <v-expansion-panel-title v-slot=\"{ expanded }\">\n        <v-row no-gutters>\n          <v-col class=\"d-flex justify-start\" cols=\"4\">\n            Location\n          </v-col>\n          <v-col\n            class=\"text--secondary\"\n            cols=\"8\"\n          >\n            <v-fade-transition leave-absolute>\n              <span\n                v-if=\"expanded\"\n                key=\"0\"\n              >\n                Select trip destination\n              </span>\n              <span\n                v-else\n                key=\"1\"\n              >\n                {{ trip.location }}\n              </span>\n            </v-fade-transition>\n          </v-col>\n        </v-row>\n      </v-expansion-panel-title>\n      <v-expansion-panel-text>\n        <v-row no-gutters>\n          <v-spacer></v-spacer>\n          <v-col cols=\"5\">\n            <v-select\n              v-model=\"trip.location\"\n              :items=\"locations\"\n              variant=\"solo\"\n              chips\n              flat\n            ></v-select>\n          </v-col>\n\n          <v-divider\n            class=\"mx-4\"\n            vertical\n          ></v-divider>\n\n          <v-col cols=\"3\">\n            Select your destination of choice\n            <br>\n            <a href=\"#\">Learn more</a>\n          </v-col>\n        </v-row>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"secondary\"\n            variant=\"text\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n          >\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-expansion-panel-text>\n    </v-expansion-panel>\n\n    <v-expansion-panel>\n      <v-expansion-panel-title v-slot=\"{ expanded }\">\n        <v-row no-gutters>\n          <v-col class=\"d-flex justify-start\" cols=\"4\">\n            Start and end dates\n          </v-col>\n          <v-col\n            class=\"text--secondary\"\n            cols=\"8\"\n          >\n            <v-fade-transition leave-absolute>\n              <span v-if=\"expanded\">When do you want to travel?</span>\n              <v-row\n                v-else\n                style=\"width: 100%\"\n                no-gutters\n              >\n                <v-col class=\"d-flex justify-start\" cols=\"6\">\n                  Start date: {{ trip.start || 'Not set' }}\n                </v-col>\n                <v-col class=\"d-flex justify-start\" cols=\"6\">\n                  End date: {{ trip.end || 'Not set' }}\n                </v-col>\n              </v-row>\n            </v-fade-transition>\n          </v-col>\n        </v-row>\n      </v-expansion-panel-title>\n      <v-expansion-panel-text>\n        <v-row\n          justify=\"space-around\"\n          no-gutters\n        >\n          <v-col cols=\"3\">\n            <v-text-field\n              v-model=\"trip.start\"\n              label=\"Start date\"\n              type=\"date\"\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"3\">\n            <v-text-field\n              v-model=\"trip.end\"\n              label=\"End date\"\n              type=\"date\"\n            ></v-text-field>\n          </v-col>\n        </v-row>\n      </v-expansion-panel-text>\n    </v-expansion-panel>\n  </v-expansion-panels>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const locations = ['Australia', 'Barbados', 'Chile', 'Denmark', 'Ecuador', 'France']\n\n  const trip = ref({\n    name: '',\n    location: null,\n    start: null,\n    end: null,\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      trip: {\n        name: '',\n        location: null,\n        start: null,\n        end: null,\n      },\n      locations: ['Australia', 'Barbados', 'Chile', 'Denmark', 'Ecuador', 'France'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-expansion-panels>\n    <v-expansion-panel>\n      <v-expansion-panel-title>\n        <template v-slot:default=\"{ expanded }\">\n          <v-row no-gutters>\n            <v-col class=\"d-flex justify-start\" cols=\"4\">\n              Trip name\n            </v-col>\n            <v-col\n              class=\"text-grey\"\n              cols=\"8\"\n            >\n              <v-fade-transition leave-absolute>\n                <span\n                  v-if=\"expanded\"\n                  key=\"0\"\n                >\n                  Enter a name for the trip\n                </span>\n                <span\n                  v-else\n                  key=\"1\"\n                >\n                  {{ trip.name }}\n                </span>\n              </v-fade-transition>\n            </v-col>\n          </v-row>\n        </template>\n      </v-expansion-panel-title>\n      <v-expansion-panel-text>\n        <v-text-field\n          v-model=\"trip.name\"\n          placeholder=\"Caribbean Cruise\"\n          hide-details\n        ></v-text-field>\n      </v-expansion-panel-text>\n    </v-expansion-panel>\n\n    <v-expansion-panel>\n      <v-expansion-panel-title v-slot=\"{ expanded }\">\n        <v-row no-gutters>\n          <v-col class=\"d-flex justify-start\" cols=\"4\">\n            Location\n          </v-col>\n          <v-col\n            class=\"text--secondary\"\n            cols=\"8\"\n          >\n            <v-fade-transition leave-absolute>\n              <span\n                v-if=\"expanded\"\n                key=\"0\"\n              >\n                Select trip destination\n              </span>\n              <span\n                v-else\n                key=\"1\"\n              >\n                {{ trip.location }}\n              </span>\n            </v-fade-transition>\n          </v-col>\n        </v-row>\n      </v-expansion-panel-title>\n      <v-expansion-panel-text>\n        <v-row no-gutters>\n          <v-spacer></v-spacer>\n          <v-col cols=\"5\">\n            <v-select\n              v-model=\"trip.location\"\n              :items=\"locations\"\n              variant=\"solo\"\n              chips\n              flat\n            ></v-select>\n          </v-col>\n\n          <v-divider\n            class=\"mx-4\"\n            vertical\n          ></v-divider>\n\n          <v-col cols=\"3\">\n            Select your destination of choice\n            <br>\n            <a href=\"#\">Learn more</a>\n          </v-col>\n        </v-row>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"secondary\"\n            variant=\"text\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n          >\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-expansion-panel-text>\n    </v-expansion-panel>\n\n    <v-expansion-panel>\n      <v-expansion-panel-title v-slot=\"{ expanded }\">\n        <v-row no-gutters>\n          <v-col class=\"d-flex justify-start\" cols=\"4\">\n            Start and end dates\n          </v-col>\n          <v-col\n            class=\"text--secondary\"\n            cols=\"8\"\n          >\n            <v-fade-transition leave-absolute>\n              <span v-if=\"expanded\">When do you want to travel?</span>\n              <v-row\n                v-else\n                style=\"width: 100%\"\n                no-gutters\n              >\n                <v-col class=\"d-flex justify-start\" cols=\"6\">\n                  Start date: {{ trip.start || 'Not set' }}\n                </v-col>\n                <v-col class=\"d-flex justify-start\" cols=\"6\">\n                  End date: {{ trip.end || 'Not set' }}\n                </v-col>\n              </v-row>\n            </v-fade-transition>\n          </v-col>\n        </v-row>\n      </v-expansion-panel-title>\n      <v-expansion-panel-text>\n        <v-row\n          justify=\"space-around\"\n          no-gutters\n        >\n          <v-col cols=\"3\">\n            <v-text-field\n              v-model=\"trip.start\"\n              label=\"Start date\"\n              type=\"date\"\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"3\">\n            <v-text-field\n              v-model=\"trip.end\"\n              label=\"End date\"\n              type=\"date\"\n            ></v-text-field>\n          </v-col>\n        </v-row>\n      </v-expansion-panel-text>\n    </v-expansion-panel>\n  </v-expansion-panels>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const locations = ['Australia', 'Barbados', 'Chile', 'Denmark', 'Ecuador', 'France']\n\n  const trip = ref({\n    name: '',\n    location: null,\n    start: null,\n    end: null,\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      trip: {\n        name: '',\n        location: null,\n        start: null,\n        end: null,\n      },\n      locations: ['Australia', 'Barbados', 'Chile', 'Denmark', 'Ecuador', 'France'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Advanced",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000611",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000612",
    "text": "Component: v-examples\nSection: Misc Custom Icons\nType: code_example\n\n## v-examples - Misc Custom Icons\n\n```vue\n<template>\n  <div>\n    <v-expansion-panels class=\"mb-6\">\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n      >\n        <v-expansion-panel-title expand-icon=\"mdi-menu-down\">\n          Item\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n\n    <v-expansion-panels>\n      <v-expansion-panel>\n        <v-expansion-panel-title collapse-icon=\"mdi-minus\" expand-icon=\"mdi-plus\">\n          Item\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>\n          Item\n          <template v-slot:actions=\"{ expanded }\">\n            <v-icon :color=\"!expanded ? 'teal' : ''\" :icon=\"expanded ? 'mdi-pencil' : 'mdi-check'\"></v-icon>\n          </template>\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title disable-icon-rotate>\n          Item\n          <template v-slot:actions>\n            <v-icon color=\"error\" icon=\"mdi-alert-circle\">\n            </v-icon>\n          </template>\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Custom Icons\n\n```vue\n<template>\n  <div>\n    <v-expansion-panels class=\"mb-6\">\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n      >\n        <v-expansion-panel-title expand-icon=\"mdi-menu-down\">\n          Item\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n\n    <v-expansion-panels>\n      <v-expansion-panel>\n        <v-expansion-panel-title collapse-icon=\"mdi-minus\" expand-icon=\"mdi-plus\">\n          Item\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>\n          Item\n          <template v-slot:actions=\"{ expanded }\">\n            <v-icon :color=\"!expanded ? 'teal' : ''\" :icon=\"expanded ? 'mdi-pencil' : 'mdi-check'\"></v-icon>\n          </template>\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title disable-icon-rotate>\n          Item\n          <template v-slot:actions>\n            <v-icon color=\"error\" icon=\"mdi-alert-circle\">\n            </v-icon>\n          </template>\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Custom Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000612",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000613",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <div>\n    <div class=\"d-flex\">\n      <v-checkbox\n        v-model=\"disabled\"\n        label=\"Disabled\"\n      ></v-checkbox>\n    </div>\n\n    <v-expansion-panels\n      v-model=\"panel\"\n      :disabled=\"disabled\"\n      multiple\n    >\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 1</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 2</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 3</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const panel = ref([0, 1])\n  const disabled = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      panel: [0, 1],\n      disabled: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <div>\n    <div class=\"d-flex\">\n      <v-checkbox\n        v-model=\"disabled\"\n        label=\"Disabled\"\n      ></v-checkbox>\n    </div>\n\n    <v-expansion-panels\n      v-model=\"panel\"\n      :disabled=\"disabled\"\n      multiple\n    >\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 1</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 2</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 3</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const panel = ref([0, 1])\n  const disabled = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      panel: [0, 1],\n      disabled: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000613",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000614",
    "text": "Component: v-examples\nSection: Prop Model\nType: code_example\n\n## v-examples - Prop Model\n\n```vue\n<template>\n  <div>\n    <div class=\"text-center d-flex pb-4\">\n      <v-btn class=\"ma-2\" @click=\"all\">\n        All\n      </v-btn>\n      <v-btn class=\"ma-2\" @click=\"none\">\n        None\n      </v-btn>\n    </div>\n\n    <div class=\"pb-4\">v-model {{ panel }}</div>\n\n    <v-expansion-panels\n      v-model=\"panel\"\n      multiple\n    >\n      <v-expansion-panel\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Foo\"\n        value=\"foo\"\n      ></v-expansion-panel>\n\n      <v-expansion-panel\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Bar\"\n        value=\"bar\"\n      ></v-expansion-panel>\n\n      <v-expansion-panel\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Baz\"\n        value=\"baz\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const panel = ref([])\n  function all () {\n    panel.value = ['foo', 'bar', 'baz']\n  }\n  function none () {\n    panel.value = []\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        panel: [],\n      }\n    },\n    methods: {\n      all () {\n        this.panel = ['foo', 'bar', 'baz']\n      },\n      none () {\n        this.panel = []\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Model\n\n```vue\n<template>\n  <div>\n    <div class=\"text-center d-flex pb-4\">\n      <v-btn class=\"ma-2\" @click=\"all\">\n        All\n      </v-btn>\n      <v-btn class=\"ma-2\" @click=\"none\">\n        None\n      </v-btn>\n    </div>\n\n    <div class=\"pb-4\">v-model {{ panel }}</div>\n\n    <v-expansion-panels\n      v-model=\"panel\"\n      multiple\n    >\n      <v-expansion-panel\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Foo\"\n        value=\"foo\"\n      ></v-expansion-panel>\n\n      <v-expansion-panel\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Bar\"\n        value=\"bar\"\n      ></v-expansion-panel>\n\n      <v-expansion-panel\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Baz\"\n        value=\"baz\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const panel = ref([])\n  function all () {\n    panel.value = ['foo', 'bar', 'baz']\n  }\n  function none () {\n    panel.value = []\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        panel: [],\n      }\n    },\n    methods: {\n      all () {\n        this.panel = ['foo', 'bar', 'baz']\n      },\n      none () {\n        this.panel = []\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Model",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000614",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000615",
    "text": "Component: v-examples\nSection: Prop Readonly\nType: code_example\n\n## v-examples - Prop Readonly\n\n```vue\n<template>\n  <div>\n    <div class=\"d-flex\">\n      <v-checkbox\n        v-model=\"readonly\"\n        label=\"Readonly\"\n      ></v-checkbox>\n    </div>\n\n    <v-expansion-panels\n      v-model=\"panel\"\n      :readonly=\"readonly\"\n      multiple\n    >\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 1</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 2</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 3</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const panel = ref([0, 1])\n  const readonly = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      panel: [0, 1],\n      readonly: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Readonly\n\n```vue\n<template>\n  <div>\n    <div class=\"d-flex\">\n      <v-checkbox\n        v-model=\"readonly\"\n        label=\"Readonly\"\n      ></v-checkbox>\n    </div>\n\n    <v-expansion-panels\n      v-model=\"panel\"\n      :readonly=\"readonly\"\n      multiple\n    >\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 1</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 2</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-title>Panel 3</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          Some content\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const panel = ref([0, 1])\n  const readonly = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      panel: [0, 1],\n      readonly: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Readonly",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000615",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000616",
    "text": "Component: v-examples\nSection: Prop Variant\nType: code_example\n\n## v-examples - Prop Variant\n\n```vue\n<template>\n  <div>\n    <div class=\"text-subtitle-2 mb-2\">Default</div>\n    <v-expansion-panels>\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Item\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n\n    <div class=\"text-subtitle-2 mt-4 mb-2\">Accordion</div>\n\n    <v-expansion-panels variant=\"accordion\">\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Item\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n\n    <div class=\"text-subtitle-2 mt-4 mb-2\">Inset</div>\n\n    <v-expansion-panels class=\"my-4\" variant=\"inset\">\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Item\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n\n    <div class=\"text-subtitle-2 mt-4 mb-2\">Popout</div>\n\n    <v-expansion-panels class=\"my-4\" variant=\"popout\">\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Item\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Variant\n\n```vue\n<template>\n  <div>\n    <div class=\"text-subtitle-2 mb-2\">Default</div>\n    <v-expansion-panels>\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Item\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n\n    <div class=\"text-subtitle-2 mt-4 mb-2\">Accordion</div>\n\n    <v-expansion-panels variant=\"accordion\">\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Item\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n\n    <div class=\"text-subtitle-2 mt-4 mb-2\">Inset</div>\n\n    <v-expansion-panels class=\"my-4\" variant=\"inset\">\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Item\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n\n    <div class=\"text-subtitle-2 mt-4 mb-2\">Popout</div>\n\n    <v-expansion-panels class=\"my-4\" variant=\"popout\">\n      <v-expansion-panel\n        v-for=\"i in 3\"\n        :key=\"i\"\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n        title=\"Item\"\n      ></v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Variant",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000616",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000617",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-expansion-panels v-bind=\"props\">\n        <v-expansion-panel\n          text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima\"\n          title=\"Title\"\n        >\n        </v-expansion-panel>\n      </v-expansion-panels>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-expansion-panels'\n  const model = ref('default')\n  const options = []\n  const props = computed(() => {\n    return {}\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-expansion-panel\n    title=\"Title\"\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima\"\n  >\n  </v-expansion-panel>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-expansion-panels v-bind=\"props\">\n        <v-expansion-panel\n          text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima\"\n          title=\"Title\"\n        >\n        </v-expansion-panel>\n      </v-expansion-panels>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-expansion-panels'\n  const model = ref('default')\n  const options = []\n  const props = computed(() => {\n    return {}\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-expansion-panel\n    title=\"Title\"\n    text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima\"\n  >\n  </v-expansion-panel>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000617",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000618",
    "text": "Component: v-floating-action-buttons\nType: component_overview\n\n# v-floating-action-buttons\n\nThe `v-fab` component can be used as a floating action button. This provides an application with a main point of action.",
    "display_content": "# v-floating-action-buttons\n\nThe `v-fab` component can be used as a floating action button. This provides an application with a main point of action.",
    "metadata": {
      "component": "v-floating-action-buttons",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000618",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000619",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nFloating action buttons can be attached to material to signify a promoted action in your application. The default size will be used in most cases, whereas the `small` variant can be used to maintain continuity with similar sized elements.",
    "display_content": "# v-usage\n\nFloating action buttons can be attached to material to signify a promoted action in your application. The default size will be used in most cases, whereas the `small` variant can be used to maintain continuity with similar sized elements.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000619",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000620",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-fab](/api/v-fab/) | Primary Component |\n\nAvailable sections: Props",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-fab](/api/v-fab/) | Primary Component |\n\nAvailable sections: Props",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000620",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000621",
    "text": "Component: v-api\nSection: Props\nType: api_reference\n\n## v-api - Props\n\nThe `v-fab` component has a multitude of props that allow you to customize its appearance and behavior. -->",
    "display_content": "## v-api - Props\n\nThe `v-fab` component has a multitude of props that allow you to customize its appearance and behavior. -->",
    "metadata": {
      "component": "v-api",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000621",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000622",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-fab` component.\n\nAvailable sections: Display animation, Lateral screens, Small variant, Speed dial",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-fab` component.\n\nAvailable sections: Display animation, Lateral screens, Small variant, Speed dial",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000622",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000623",
    "text": "Component: v-examples\nSection: Display animation\nType: documentation\n\n## v-examples - Display animation\n\nWhen displaying for the first time, a floating action button should animate onto the screen. Here we use the `v-fab-transition` with v-show. You can also use any custom transition provided by Vuetify or your own.\n\n<ExamplesExample file=\"v-fab/misc-display-animation\" />",
    "display_content": "## v-examples - Display animation\n\nWhen displaying for the first time, a floating action button should animate onto the screen. Here we use the `v-fab-transition` with v-show. You can also use any custom transition provided by Vuetify or your own.\n\n<ExamplesExample file=\"v-fab/misc-display-animation\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Display animation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000623",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000624",
    "text": "Component: v-examples\nSection: Lateral screens\nType: documentation\n\n## v-examples - Lateral screens\n\nWhen changing the default action of your button, it is recommended that you display a transition to signify a change. We do this by binding the `key` prop to a piece of data that can properly signal a change in action to the Vue transition system.\n\n<ExamplesExample file=\"v-fab/misc-lateral-screens\" />",
    "display_content": "## v-examples - Lateral screens\n\nWhen changing the default action of your button, it is recommended that you display a transition to signify a change. We do this by binding the `key` prop to a piece of data that can properly signal a change in action to the Vue transition system.\n\n<ExamplesExample file=\"v-fab/misc-lateral-screens\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Lateral screens",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000624",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000625",
    "text": "Component: v-examples\nSection: Small variant\nType: documentation\n\n## v-examples - Small variant\n\nFor better visual appeal, we use a small button to match our list avatars.\n\n<ExamplesExample file=\"v-fab/misc-small\" />",
    "display_content": "## v-examples - Small variant\n\nFor better visual appeal, we use a small button to match our list avatars.\n\n<ExamplesExample file=\"v-fab/misc-small\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Small variant",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000625",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000626",
    "text": "Component: v-examples\nSection: Speed dial\nType: documentation\n\n## v-examples - Speed dial\n\nThe speed-dial component has a very robust api for customizing your FAB experience exactly how you want.\n\n<ExamplesExample file=\"v-fab/misc-speed-dial\" />",
    "display_content": "## v-examples - Speed dial\n\nThe speed-dial component has a very robust api for customizing your FAB experience exactly how you want.\n\n<ExamplesExample file=\"v-fab/misc-speed-dial\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Speed dial",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000626",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000627",
    "text": "Component: v-file-inputs\nType: component_overview\n\n# v-file-inputs\n\nThe `v-file-input` component is a specialized input that provides a clean interface for selecting files, showing detailed selection information and upload progress. It is meant to be a direct replacement for a standard file input.",
    "display_content": "# v-file-inputs\n\nThe `v-file-input` component is a specialized input that provides a clean interface for selecting files, showing detailed selection information and upload progress. It is meant to be a direct replacement for a standard file input.",
    "metadata": {
      "component": "v-file-inputs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000627",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000628",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nAt its core, the `v-file-input` component is a basic container that extends [v-text-field](/components/text-fields).",
    "display_content": "# v-usage\n\nAt its core, the `v-file-input` component is a basic container that extends [v-text-field](/components/text-fields).",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000628",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000629",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-file-input](/api/v-file-input/) | Primary component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-file-input](/api/v-file-input/) | Primary component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000629",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000630",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\n`v-file-input` component can accept only specific media formats/file types if you want. For more information, checkout the documentation on the [accept attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept).\n\nAvailable sections: Accept, Chips, Counter, Density, Multiple, Prepend icon, Show size, Validation, Selection, Complex selection slot, Misc Complex Selection, Prop Accept, Prop Chips, Prop Counter, Prop Dense, Prop Multiple, Prop Prepend Icon, Prop Show Size, Prop Validation, Slot Selection, Usage",
    "display_content": "# v-examples\n\n`v-file-input` component can accept only specific media formats/file types if you want. For more information, checkout the documentation on the [accept attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept).\n\nAvailable sections: Accept, Chips, Counter, Density, Multiple, Prepend icon, Show size, Validation, Selection, Complex selection slot, Misc Complex Selection, Prop Accept, Prop Chips, Prop Counter, Prop Dense, Prop Multiple, Prop Prepend Icon, Prop Show Size, Prop Validation, Slot Selection, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000630",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000631",
    "text": "Component: v-examples\nSection: Accept\nType: documentation\n\n## v-examples - Accept\n\n`v-file-input` component can accept only specific media formats/file types if you want. For more information, checkout the documentation on the [accept attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept).\n\n<ExamplesExample file=\"v-file-input/prop-accept\" />",
    "display_content": "## v-examples - Accept\n\n`v-file-input` component can accept only specific media formats/file types if you want. For more information, checkout the documentation on the [accept attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept).\n\n<ExamplesExample file=\"v-file-input/prop-accept\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Accept",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000631",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000632",
    "text": "Component: v-examples\nSection: Chips\nType: documentation\n\n## v-examples - Chips\n\nA selected file can be displayed as a [chip](/components/chips). When using the **chips** and **multiple** props, each chip will be displayed (as opposed to the file count).\n\n<ExamplesExample file=\"v-file-input/prop-chips\" />",
    "display_content": "## v-examples - Chips\n\nA selected file can be displayed as a [chip](/components/chips). When using the **chips** and **multiple** props, each chip will be displayed (as opposed to the file count).\n\n<ExamplesExample file=\"v-file-input/prop-chips\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Chips",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000632",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000633",
    "text": "Component: v-examples\nSection: Counter\nType: documentation\n\n## v-examples - Counter\n\nWhen using the **show-size** property along with **counter**, the total number of files and size will be displayed under the input.\n\n<ExamplesExample file=\"v-file-input/prop-counter\" />",
    "display_content": "## v-examples - Counter\n\nWhen using the **show-size** property along with **counter**, the total number of files and size will be displayed under the input.\n\n<ExamplesExample file=\"v-file-input/prop-counter\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Counter",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000633",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000634",
    "text": "Component: v-examples\nSection: Density\nType: documentation\n\n## v-examples - Density\n\nYou can reduces the file input height with the **density** prop.\n\n<ExamplesExample file=\"v-file-input/prop-dense\" />",
    "display_content": "## v-examples - Density\n\nYou can reduces the file input height with the **density** prop.\n\n<ExamplesExample file=\"v-file-input/prop-dense\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000634",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000635",
    "text": "Component: v-examples\nSection: Multiple\nType: documentation\n\n## v-examples - Multiple\n\nThe `v-file-input` can contain multiple files at the same time when using the **multiple** prop.\n\n<ExamplesExample file=\"v-file-input/prop-multiple\" />",
    "display_content": "## v-examples - Multiple\n\nThe `v-file-input` can contain multiple files at the same time when using the **multiple** prop.\n\n<ExamplesExample file=\"v-file-input/prop-multiple\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Multiple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000635",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000636",
    "text": "Component: v-examples\nSection: Prepend icon\nType: documentation\n\n## v-examples - Prepend icon\n\nThe `v-file-input` has a default **prepend-icon** that can be set on the component or adjusted globally. More information on changing global components can be found on the [customizing icons page](/features/icon-fonts).\n\n<ExamplesExample file=\"v-file-input/prop-prepend-icon\" />",
    "display_content": "## v-examples - Prepend icon\n\nThe `v-file-input` has a default **prepend-icon** that can be set on the component or adjusted globally. More information on changing global components can be found on the [customizing icons page](/features/icon-fonts).\n\n<ExamplesExample file=\"v-file-input/prop-prepend-icon\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Prepend icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000636",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000637",
    "text": "Component: v-examples\nSection: Show size\nType: documentation\n\n## v-examples - Show size\n\nThe displayed size of the selected file(s) can be configured with the **show-size** property. Display sizes can be either _1024_ (the default used when providing **true**) or _1000_.\n\n<ExamplesExample file=\"v-file-input/prop-show-size\" />",
    "display_content": "## v-examples - Show size\n\nThe displayed size of the selected file(s) can be configured with the **show-size** property. Display sizes can be either _1024_ (the default used when providing **true**) or _1000_.\n\n<ExamplesExample file=\"v-file-input/prop-show-size\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Show size",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000637",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000638",
    "text": "Component: v-examples\nSection: Validation\nType: documentation\n\n## v-examples - Validation\n\nSimilar to other inputs, you can use the **rules** prop to create your own custom validation parameters. If **multiple** props is set, the`value` passed in the validation functions will be an array.\n\n<ExamplesExample file=\"v-file-input/prop-validation\" />",
    "display_content": "## v-examples - Validation\n\nSimilar to other inputs, you can use the **rules** prop to create your own custom validation parameters. If **multiple** props is set, the`value` passed in the validation functions will be an array.\n\n<ExamplesExample file=\"v-file-input/prop-validation\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Validation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000638",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000639",
    "text": "Component: v-examples\nSection: Selection\nType: documentation\n\n## v-examples - Selection\n\nUsing the `selection` slot, you can customize the appearance of your input selections. This is typically done with [chips](/components/chips), however any component or markup can be used.\n\n<ExamplesExample file=\"v-file-input/slot-selection\" />",
    "display_content": "## v-examples - Selection\n\nUsing the `selection` slot, you can customize the appearance of your input selections. This is typically done with [chips](/components/chips), however any component or markup can be used.\n\n<ExamplesExample file=\"v-file-input/slot-selection\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Selection",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000639",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000640",
    "text": "Component: v-examples\nSection: Complex selection slot\nType: slots_reference\n\n## v-examples - Complex selection slot\n\nThe flexibility of the selection slot allows you accommodate complex use-cases. In this example we show the first 2 selections as chips while adding a number indicator for the remaining amount.\n\n<ExamplesExample file=\"v-file-input/misc-complex-selection\" />",
    "display_content": "## v-examples - Complex selection slot\n\nThe flexibility of the selection slot allows you accommodate complex use-cases. In this example we show the first 2 selections as chips while adding a number indicator for the remaining amount.\n\n<ExamplesExample file=\"v-file-input/misc-complex-selection\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Complex selection slot",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000640",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000641",
    "text": "Component: v-examples\nSection: Misc Complex Selection\nType: code_example\n\n## v-examples - Misc Complex Selection\n\n```vue\n<template>\n  <v-file-input\n    v-model=\"files\"\n    :show-size=\"1000\"\n    color=\"deep-purple-accent-4\"\n    label=\"File input\"\n    placeholder=\"Select your files\"\n    prepend-icon=\"mdi-paperclip\"\n    variant=\"outlined\"\n    counter\n    multiple\n  >\n    <template v-slot:selection=\"{ fileNames }\">\n      <template v-for=\"(fileName, index) in fileNames\" :key=\"fileName\">\n        <v-chip\n          v-if=\"index < 2\"\n          class=\"me-2\"\n          color=\"deep-purple-accent-4\"\n          size=\"small\"\n          label\n        >\n          {{ fileName }}\n        </v-chip>\n\n        <span\n          v-else-if=\"index === 2\"\n          class=\"text-overline text-grey-darken-3 mx-2\"\n        >\n          +{{ files.length - 2 }} File(s)\n        </span>\n      </template>\n    </template>\n  </v-file-input>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const files = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      files: [],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Complex Selection\n\n```vue\n<template>\n  <v-file-input\n    v-model=\"files\"\n    :show-size=\"1000\"\n    color=\"deep-purple-accent-4\"\n    label=\"File input\"\n    placeholder=\"Select your files\"\n    prepend-icon=\"mdi-paperclip\"\n    variant=\"outlined\"\n    counter\n    multiple\n  >\n    <template v-slot:selection=\"{ fileNames }\">\n      <template v-for=\"(fileName, index) in fileNames\" :key=\"fileName\">\n        <v-chip\n          v-if=\"index < 2\"\n          class=\"me-2\"\n          color=\"deep-purple-accent-4\"\n          size=\"small\"\n          label\n        >\n          {{ fileName }}\n        </v-chip>\n\n        <span\n          v-else-if=\"index === 2\"\n          class=\"text-overline text-grey-darken-3 mx-2\"\n        >\n          +{{ files.length - 2 }} File(s)\n        </span>\n      </template>\n    </template>\n  </v-file-input>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const files = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      files: [],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Complex Selection",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000641",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000642",
    "text": "Component: v-examples\nSection: Prop Accept\nType: code_example\n\n## v-examples - Prop Accept\n\n```vue\n<template>\n  <v-file-input\n    accept=\"image/*\"\n    label=\"File input\"\n  ></v-file-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Accept\n\n```vue\n<template>\n  <v-file-input\n    accept=\"image/*\"\n    label=\"File input\"\n  ></v-file-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Accept",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000642",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000643",
    "text": "Component: v-examples\nSection: Prop Chips\nType: code_example\n\n## v-examples - Prop Chips\n\n```vue\n<template>\n  <div>\n    <v-file-input\n      label=\"File input w/ chips\"\n      chips\n      multiple\n    ></v-file-input>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Chips\n\n```vue\n<template>\n  <div>\n    <v-file-input\n      label=\"File input w/ chips\"\n      chips\n      multiple\n    ></v-file-input>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Chips",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000643",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000644",
    "text": "Component: v-examples\nSection: Prop Counter\nType: code_example\n\n## v-examples - Prop Counter\n\n```vue\n<template>\n  <v-file-input\n    label=\"File input\"\n    counter\n    multiple\n    show-size\n  ></v-file-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Counter\n\n```vue\n<template>\n  <v-file-input\n    label=\"File input\"\n    counter\n    multiple\n    show-size\n  ></v-file-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Counter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000644",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000645",
    "text": "Component: v-examples\nSection: Prop Dense\nType: code_example\n\n## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-file-input\n    density=\"compact\"\n    label=\"File input\"\n  ></v-file-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-file-input\n    density=\"compact\"\n    label=\"File input\"\n  ></v-file-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Dense",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000645",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000646",
    "text": "Component: v-examples\nSection: Prop Multiple\nType: code_example\n\n## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-file-input\n    label=\"File input\"\n    multiple\n  ></v-file-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-file-input\n    label=\"File input\"\n    multiple\n  ></v-file-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Multiple",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000646",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000647",
    "text": "Component: v-examples\nSection: Prop Prepend Icon\nType: code_example\n\n## v-examples - Prop Prepend Icon\n\n```vue\n<template>\n  <v-file-input\n    label=\"File input\"\n    prepend-icon=\"mdi-camera\"\n    variant=\"filled\"\n  ></v-file-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Prepend Icon\n\n```vue\n<template>\n  <v-file-input\n    label=\"File input\"\n    prepend-icon=\"mdi-camera\"\n    variant=\"filled\"\n  ></v-file-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Prepend Icon",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000647",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000648",
    "text": "Component: v-examples\nSection: Prop Show Size\nType: code_example\n\n## v-examples - Prop Show Size\n\n```vue\n<template>\n  <v-file-input\n    label=\"File input\"\n    show-size\n  ></v-file-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Show Size\n\n```vue\n<template>\n  <v-file-input\n    label=\"File input\"\n    show-size\n  ></v-file-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Show Size",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000648",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000649",
    "text": "Component: v-examples\nSection: Prop Validation\nType: code_example\n\n## v-examples - Prop Validation\n\n```vue\n<template>\n  <v-file-input\n    :rules=\"rules\"\n    accept=\"image/png, image/jpeg, image/bmp\"\n    label=\"Photos\"\n    placeholder=\"Upload your photos\"\n    prepend-icon=\"mdi-camera\"\n    multiple\n  ></v-file-input>\n</template>\n\n<script setup>\n  const maxSize = 5000000 // 5 MB\n  const errorMessage = 'Total image size should be less than 5 MB!'\n\n  const rules = [\n    value => {\n      // Multiple files\n      if (value && Array.isArray(value)) {\n        const totalSize = value.reduce((acc, current) => acc + current.size, 0)\n        return totalSize < maxSize || errorMessage\n      }\n\n      // Single file (if multiple is undefined or set to false)\n      return !value || value.size < maxSize || errorMessage\n    },\n  ]\n</script>\n\n```",
    "display_content": "## v-examples - Prop Validation\n\n```vue\n<template>\n  <v-file-input\n    :rules=\"rules\"\n    accept=\"image/png, image/jpeg, image/bmp\"\n    label=\"Photos\"\n    placeholder=\"Upload your photos\"\n    prepend-icon=\"mdi-camera\"\n    multiple\n  ></v-file-input>\n</template>\n\n<script setup>\n  const maxSize = 5000000 // 5 MB\n  const errorMessage = 'Total image size should be less than 5 MB!'\n\n  const rules = [\n    value => {\n      // Multiple files\n      if (value && Array.isArray(value)) {\n        const totalSize = value.reduce((acc, current) => acc + current.size, 0)\n        return totalSize < maxSize || errorMessage\n      }\n\n      // Single file (if multiple is undefined or set to false)\n      return !value || value.size < maxSize || errorMessage\n    },\n  ]\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Validation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000649",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000650",
    "text": "Component: v-examples\nSection: Slot Selection\nType: code_example\n\n## v-examples - Slot Selection\n\n```vue\n<template>\n  <v-file-input\n    v-model=\"files\"\n    label=\"File input\"\n    placeholder=\"Upload your documents\"\n    prepend-icon=\"mdi-paperclip\"\n    multiple\n  >\n    <template v-slot:selection=\"{ fileNames }\">\n      <template v-for=\"fileName in fileNames\" :key=\"fileName\">\n        <v-chip\n          class=\"me-2\"\n          color=\"primary\"\n          size=\"small\"\n          label\n        >\n          {{ fileName }}\n        </v-chip>\n      </template>\n    </template>\n  </v-file-input>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const files = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      files: [],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Selection\n\n```vue\n<template>\n  <v-file-input\n    v-model=\"files\"\n    label=\"File input\"\n    placeholder=\"Upload your documents\"\n    prepend-icon=\"mdi-paperclip\"\n    multiple\n  >\n    <template v-slot:selection=\"{ fileNames }\">\n      <template v-for=\"fileName in fileNames\" :key=\"fileName\">\n        <v-chip\n          class=\"me-2\"\n          color=\"primary\"\n          size=\"small\"\n          label\n        >\n          {{ fileName }}\n        </v-chip>\n      </template>\n    </template>\n  </v-file-input>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const files = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      files: [],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Selection",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000650",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000651",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-file-input v-bind=\"props\"></v-file-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-file-input'\n  const model = ref('default')\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const clear = ref(false)\n  const counter = ref(false)\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      counter: counter.value || undefined,\n      disabled: disabled.value || undefined,\n      label: 'File input',\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-file-input v-bind=\"props\"></v-file-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-file-input'\n  const model = ref('default')\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const clear = ref(false)\n  const counter = ref(false)\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      counter: counter.value || undefined,\n      disabled: disabled.value || undefined,\n      label: 'File input',\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000651",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000652",
    "text": "Component: v-file-upload\nType: component_overview\n\n# v-file-upload\n\n::: warning",
    "display_content": "# v-file-upload\n\n::: warning",
    "metadata": {
      "component": "v-file-upload",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000652",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000653",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "display_content": "# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000653",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000654",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-file-upload` component is a drag and drop area for uploading files. It can be customized with slots and has support for density and multiple styles.",
    "display_content": "# v-usage\n\nThe `v-file-upload` component is a drag and drop area for uploading files. It can be customized with slots and has support for density and multiple styles.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000654",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000655",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-file-upload](/api/v-file-upload/) | Primary Component | | [v-file-upload-item](/api/v-file-upload-item/) | Item Component | | [v-file-input](/api/v-file-input/) | File input component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-file-upload](/api/v-file-upload/) | Primary Component | | [v-file-upload-item](/api/v-file-upload-item/) | Item Component | | [v-file-input](/api/v-file-input/) | File input component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000655",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000656",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe v-file-upload component is a more visual counterpart to the [v-file-input](/components/file-inputs/) component. It provides a drag and drop area for files, and can be customized with slots.\n\nAvailable sections: Props, Density, Content, Disabled, Scrim, Slots, Item, Prop Content, Prop Density, Prop Disabled, Prop Scrim, Slot Item, Usage",
    "display_content": "# v-guide\n\nThe v-file-upload component is a more visual counterpart to the [v-file-input](/components/file-inputs/) component. It provides a drag and drop area for files, and can be customized with slots.\n\nAvailable sections: Props, Density, Content, Disabled, Scrim, Slots, Item, Prop Content, Prop Density, Prop Disabled, Prop Scrim, Slot Item, Usage",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000656",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000657",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nUtilize various properties to customize the look and feel of the `v-file-upload` component.",
    "display_content": "## v-guide - Props\n\nUtilize various properties to customize the look and feel of the `v-file-upload` component.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000657",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000658",
    "text": "Component: v-guide\nSection: Density\nType: documentation\n\n## v-guide - Density\n\nThe **density** prop is used to control the vertical space the upload takes up.\n\n<ExamplesExample file=\"v-file-upload/prop-density\" />",
    "display_content": "## v-guide - Density\n\nThe **density** prop is used to control the vertical space the upload takes up.\n\n<ExamplesExample file=\"v-file-upload/prop-density\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000658",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000659",
    "text": "Component: v-guide\nSection: Content\nType: documentation\n\n## v-guide - Content\n\nUse the **browse-text**, **divider-text**, **icon**, **title**, or **subtitle** props to customize the text displayed in the component.\n\n<ExamplesExample file=\"v-file-upload/prop-content\" />",
    "display_content": "## v-guide - Content\n\nUse the **browse-text**, **divider-text**, **icon**, **title**, or **subtitle** props to customize the text displayed in the component.\n\n<ExamplesExample file=\"v-file-upload/prop-content\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Content",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000659",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000660",
    "text": "Component: v-guide\nSection: Disabled\nType: documentation\n\n## v-guide - Disabled\n\nThe **disabled** property reduces the opacity of the component and prevents interaction.\n\n<ExamplesExample file=\"v-file-upload/prop-disabled\" />",
    "display_content": "## v-guide - Disabled\n\nThe **disabled** property reduces the opacity of the component and prevents interaction.\n\n<ExamplesExample file=\"v-file-upload/prop-disabled\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000660",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000661",
    "text": "Component: v-guide\nSection: Scrim\nType: documentation\n\n## v-guide - Scrim\n\nThe **scrim** property allows you to set a colored scrim when hovering over the component with files.\n\n<ExamplesExample file=\"v-file-upload/prop-scrim\" />",
    "display_content": "## v-guide - Scrim\n\nThe **scrim** property allows you to set a colored scrim when hovering over the component with files.\n\n<ExamplesExample file=\"v-file-upload/prop-scrim\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Scrim",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000661",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000662",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe `v-file-upload` component has several slots that can be used to customize the component.",
    "display_content": "## v-guide - Slots\n\nThe `v-file-upload` component has several slots that can be used to customize the component.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000662",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000663",
    "text": "Component: v-guide\nSection: Item\nType: documentation\n\n## v-guide - Item\n\nThe **item** slot is used to customize the appearance of the file item.\n\n<ExamplesExample file=\"v-file-upload/slot-item\" />",
    "display_content": "## v-guide - Item\n\nThe **item** slot is used to customize the appearance of the file item.\n\n<ExamplesExample file=\"v-file-upload/slot-item\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Item",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000663",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000664",
    "text": "Component: v-guide\nSection: Prop Content\nType: code_example\n\n## v-guide - Prop Content\n\n```vue\n<template>\n  <v-file-upload\n    browse-text=\"Local Filesystem\"\n    divider-text=\"or choose locally\"\n    icon=\"mdi-upload\"\n    title=\"Drag and Drop Here\"\n  ></v-file-upload>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Content\n\n```vue\n<template>\n  <v-file-upload\n    browse-text=\"Local Filesystem\"\n    divider-text=\"or choose locally\"\n    icon=\"mdi-upload\"\n    title=\"Drag and Drop Here\"\n  ></v-file-upload>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Content",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000664",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000665",
    "text": "Component: v-guide\nSection: Prop Density\nType: code_example\n\n## v-guide - Prop Density\n\n```vue\n<template>\n  <div class=\"text-center pa-2 mb-2\">\n    <v-btn-toggle v-model=\"density\" density=\"comfortable\" border divided rounded>\n      <v-btn value=\"default\">Default</v-btn>\n\n      <v-btn value=\"comfortable\">Comfortable</v-btn>\n\n      <v-btn value=\"compact\">Compact</v-btn>\n    </v-btn-toggle>\n  </div>\n\n  <v-file-upload :density=\"density\"></v-file-upload>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const density = shallowRef('default')\n</script>\n\n```",
    "display_content": "## v-guide - Prop Density\n\n```vue\n<template>\n  <div class=\"text-center pa-2 mb-2\">\n    <v-btn-toggle v-model=\"density\" density=\"comfortable\" border divided rounded>\n      <v-btn value=\"default\">Default</v-btn>\n\n      <v-btn value=\"comfortable\">Comfortable</v-btn>\n\n      <v-btn value=\"compact\">Compact</v-btn>\n    </v-btn-toggle>\n  </div>\n\n  <v-file-upload :density=\"density\"></v-file-upload>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const density = shallowRef('default')\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Density",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000665",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000666",
    "text": "Component: v-guide\nSection: Prop Disabled\nType: code_example\n\n## v-guide - Prop Disabled\n\n```vue\n<template>\n  <v-file-upload disabled></v-file-upload>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Disabled\n\n```vue\n<template>\n  <v-file-upload disabled></v-file-upload>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000666",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000667",
    "text": "Component: v-guide\nSection: Prop Scrim\nType: code_example\n\n## v-guide - Prop Scrim\n\n```vue\n<template>\n  <v-file-upload scrim=\"primary\"></v-file-upload>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Scrim\n\n```vue\n<template>\n  <v-file-upload scrim=\"primary\"></v-file-upload>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Scrim",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000667",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000668",
    "text": "Component: v-guide\nSection: Slot Item\nType: code_example\n\n## v-guide - Slot Item\n\n```vue\n<template>\n  <v-file-upload\n    v-model=\"model\"\n    clearable\n    multiple\n    show-size\n  >\n    <template v-slot:item=\"{ props: itemProps }\">\n      <v-file-upload-item v-bind=\"itemProps\" lines=\"one\" nav>\n        <template v-slot:prepend>\n          <v-avatar size=\"32\" rounded></v-avatar>\n        </template>\n\n        <template v-slot:clear=\"{ props: clearProps }\">\n          <v-btn color=\"primary\" v-bind=\"clearProps\"></v-btn>\n        </template>\n      </v-file-upload-item>\n    </template>\n  </v-file-upload>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n```",
    "display_content": "## v-guide - Slot Item\n\n```vue\n<template>\n  <v-file-upload\n    v-model=\"model\"\n    clearable\n    multiple\n    show-size\n  >\n    <template v-slot:item=\"{ props: itemProps }\">\n      <v-file-upload-item v-bind=\"itemProps\" lines=\"one\" nav>\n        <template v-slot:prepend>\n          <v-avatar size=\"32\" rounded></v-avatar>\n        </template>\n\n        <template v-slot:clear=\"{ props: clearProps }\">\n          <v-btn color=\"primary\" v-bind=\"clearProps\"></v-btn>\n        </template>\n      </v-file-upload-item>\n    </template>\n  </v-file-upload>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef(null)\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Slot Item",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000668",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000669",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-file-upload v-bind=\"props\"></v-file-upload>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"title\" label=\"Title\"></v-text-field>\n\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-file-upload'\n  const model = ref('default')\n  const options = ['comfortable', 'compact']\n  const clear = ref(false)\n  const counter = ref(false)\n  const disabled = ref(false)\n  const title = ref()\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      counter: counter.value || undefined,\n      disabled: disabled.value || undefined,\n      density: model.value,\n      title: title.value || undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-file-upload v-bind=\"props\"></v-file-upload>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"title\" label=\"Title\"></v-text-field>\n\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-file-upload'\n  const model = ref('default')\n  const options = ['comfortable', 'compact']\n  const clear = ref(false)\n  const counter = ref(false)\n  const disabled = ref(false)\n  const title = ref()\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      counter: counter.value || undefined,\n      disabled: disabled.value || undefined,\n      density: model.value,\n      title: title.value || undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000669",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000670",
    "text": "Component: v-footers\nType: component_overview\n\n# v-footers\n\nThe `v-footer` component is used for displaying general information that a user might want to access from any page within your site.",
    "display_content": "# v-footers\n\nThe `v-footer` component is used for displaying general information that a user might want to access from any page within your site.",
    "metadata": {
      "component": "v-footers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000670",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000671",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-footer` component in its simplest form is a container.",
    "display_content": "# v-usage\n\nThe `v-footer` component in its simplest form is a container.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000671",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000672",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-footer](/api/v-footer/) | The footer component. |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-footer](/api/v-footer/) | The footer component. |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000672",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000673",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe footer component as a basic company footer with links.\n\nAvailable sections: Company Footer, Indigo Footer, Teal Footer, Misc Company Footer, Misc Indigo Footer, Misc Teal Footer, Usage",
    "display_content": "# v-examples\n\nThe footer component as a basic company footer with links.\n\nAvailable sections: Company Footer, Indigo Footer, Teal Footer, Misc Company Footer, Misc Indigo Footer, Misc Teal Footer, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000673",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000674",
    "text": "Component: v-examples\nSection: Company Footer\nType: documentation\n\n## v-examples - Company Footer\n\nThe footer component as a basic company footer with links.\n\n<ExamplesExample file=\"v-footer/misc-company-footer\" />",
    "display_content": "## v-examples - Company Footer\n\nThe footer component as a basic company footer with links.\n\n<ExamplesExample file=\"v-footer/misc-company-footer\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Company Footer",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000674",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000675",
    "text": "Component: v-examples\nSection: Indigo Footer\nType: documentation\n\n## v-examples - Indigo Footer\n\nThe footer component with Indigo background color and social media icons and button.\n\n<ExamplesExample file=\"v-footer/misc-indigo-footer\" />",
    "display_content": "## v-examples - Indigo Footer\n\nThe footer component with Indigo background color and social media icons and button.\n\n<ExamplesExample file=\"v-footer/misc-indigo-footer\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Indigo Footer",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000675",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000676",
    "text": "Component: v-examples\nSection: Teal Footer\nType: documentation\n\n## v-examples - Teal Footer\n\nThe footer component with a Teal color header and columns and rows of links.\n\n<ExamplesExample file=\"v-footer/misc-teal-footer\" />",
    "display_content": "## v-examples - Teal Footer\n\nThe footer component with a Teal color header and columns and rows of links.\n\n<ExamplesExample file=\"v-footer/misc-teal-footer\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Teal Footer",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000676",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000677",
    "text": "Component: v-examples\nSection: Misc Company Footer\nType: code_example\n\n## v-examples - Misc Company Footer\n\n```vue\n<template>\n  <v-footer class=\"d-flex align-center justify-center ga-2 flex-wrap flex-grow-1 py-3\" color=\"surface-light\">\n    <v-btn\n      v-for=\"link in links\"\n      :key=\"link\"\n      :text=\"link\"\n      variant=\"text\"\n      rounded\n    ></v-btn>\n\n    <div class=\"flex-1-0-100 text-center mt-2\">\n      {{ new Date().getFullYear() }} — <strong>Vuetify</strong>\n    </div>\n  </v-footer>\n</template>\n\n<script setup>\n  const links = [\n    'Home',\n    'About Us',\n    'Team',\n    'Services',\n    'Blog',\n    'Contact Us',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      links: [\n        'Home',\n        'About Us',\n        'Team',\n        'Services',\n        'Blog',\n        'Contact Us',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Company Footer\n\n```vue\n<template>\n  <v-footer class=\"d-flex align-center justify-center ga-2 flex-wrap flex-grow-1 py-3\" color=\"surface-light\">\n    <v-btn\n      v-for=\"link in links\"\n      :key=\"link\"\n      :text=\"link\"\n      variant=\"text\"\n      rounded\n    ></v-btn>\n\n    <div class=\"flex-1-0-100 text-center mt-2\">\n      {{ new Date().getFullYear() }} — <strong>Vuetify</strong>\n    </div>\n  </v-footer>\n</template>\n\n<script setup>\n  const links = [\n    'Home',\n    'About Us',\n    'Team',\n    'Services',\n    'Blog',\n    'Contact Us',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      links: [\n        'Home',\n        'About Us',\n        'Team',\n        'Services',\n        'Blog',\n        'Contact Us',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Company Footer",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000677",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000678",
    "text": "Component: v-examples\nSection: Misc Indigo Footer\nType: code_example\n\n## v-examples - Misc Indigo Footer\n\n```vue\n<template>\n  <v-footer class=\"text-center d-flex flex-column ga-2 py-4\" color=\"indigo-lighten-1\">\n    <div class=\"d-flex ga-3\">\n      <v-btn\n        v-for=\"icon in icons\"\n        :key=\"icon\"\n        :icon=\"icon\"\n        density=\"comfortable\"\n        variant=\"text\"\n      ></v-btn>\n    </div>\n\n    <v-divider class=\"my-2\" thickness=\"2\" width=\"50\"></v-divider>\n\n    <div class=\"text-caption font-weight-regular opacity-60\">\n      Phasellus feugiat arcu sapien, et iaculis ipsum elementum sit amet. Mauris cursus commodo interdum. Praesent ut risus eget metus luctus accumsan id ultrices nunc. Sed at orci sed massa consectetur dignissim a sit amet dui. Duis commodo vitae velit et faucibus. Morbi vehicula lacinia malesuada. Nulla placerat augue vel ipsum ultrices, cursus iaculis dui sollicitudin. Vestibulum eu ipsum vel diam elementum tempor vel ut orci. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n    </div>\n\n    <v-divider></v-divider>\n\n    <div>\n      {{ new Date().getFullYear() }} — <strong>Vuetify</strong>\n    </div>\n  </v-footer>\n</template>\n\n<script setup>\n  const icons = [\n    'mdi-facebook',\n    'mdi-twitter',\n    'mdi-linkedin',\n    'mdi-instagram',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      icons: [\n        'mdi-facebook',\n        'mdi-twitter',\n        'mdi-linkedin',\n        'mdi-instagram',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Indigo Footer\n\n```vue\n<template>\n  <v-footer class=\"text-center d-flex flex-column ga-2 py-4\" color=\"indigo-lighten-1\">\n    <div class=\"d-flex ga-3\">\n      <v-btn\n        v-for=\"icon in icons\"\n        :key=\"icon\"\n        :icon=\"icon\"\n        density=\"comfortable\"\n        variant=\"text\"\n      ></v-btn>\n    </div>\n\n    <v-divider class=\"my-2\" thickness=\"2\" width=\"50\"></v-divider>\n\n    <div class=\"text-caption font-weight-regular opacity-60\">\n      Phasellus feugiat arcu sapien, et iaculis ipsum elementum sit amet. Mauris cursus commodo interdum. Praesent ut risus eget metus luctus accumsan id ultrices nunc. Sed at orci sed massa consectetur dignissim a sit amet dui. Duis commodo vitae velit et faucibus. Morbi vehicula lacinia malesuada. Nulla placerat augue vel ipsum ultrices, cursus iaculis dui sollicitudin. Vestibulum eu ipsum vel diam elementum tempor vel ut orci. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n    </div>\n\n    <v-divider></v-divider>\n\n    <div>\n      {{ new Date().getFullYear() }} — <strong>Vuetify</strong>\n    </div>\n  </v-footer>\n</template>\n\n<script setup>\n  const icons = [\n    'mdi-facebook',\n    'mdi-twitter',\n    'mdi-linkedin',\n    'mdi-instagram',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      icons: [\n        'mdi-facebook',\n        'mdi-twitter',\n        'mdi-linkedin',\n        'mdi-instagram',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Indigo Footer",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000678",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000679",
    "text": "Component: v-examples\nSection: Misc Teal Footer\nType: code_example\n\n## v-examples - Misc Teal Footer\n\n```vue\n<template>\n  <v-footer class=\"d-flex flex-column\" color=\"teal\" rounded=\"lg\">\n    <div class=\"d-flex w-100 align-center px-4 py-2\">\n      <strong>Get connected with us on social networks!</strong>\n\n      <div class=\"d-flex ga-2 ms-auto\">\n        <v-btn\n          v-for=\"icon in icons\"\n          :key=\"icon\"\n          :icon=\"icon\"\n          size=\"small\"\n          variant=\"plain\"\n        ></v-btn>\n      </div>\n    </div>\n\n    <div class=\"px-4 py-2 bg-surface-variant text-center w-100 rounded-lg\">\n      {{ new Date().getFullYear() }} — <strong>Vuetify</strong>\n    </div>\n  </v-footer>\n</template>\n\n<script setup>\n  const icons = [\n    'mdi-facebook',\n    'mdi-twitter',\n    'mdi-linkedin',\n    'mdi-instagram',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      icons: [\n        'mdi-facebook',\n        'mdi-twitter',\n        'mdi-linkedin',\n        'mdi-instagram',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Teal Footer\n\n```vue\n<template>\n  <v-footer class=\"d-flex flex-column\" color=\"teal\" rounded=\"lg\">\n    <div class=\"d-flex w-100 align-center px-4 py-2\">\n      <strong>Get connected with us on social networks!</strong>\n\n      <div class=\"d-flex ga-2 ms-auto\">\n        <v-btn\n          v-for=\"icon in icons\"\n          :key=\"icon\"\n          :icon=\"icon\"\n          size=\"small\"\n          variant=\"plain\"\n        ></v-btn>\n      </div>\n    </div>\n\n    <div class=\"px-4 py-2 bg-surface-variant text-center w-100 rounded-lg\">\n      {{ new Date().getFullYear() }} — <strong>Vuetify</strong>\n    </div>\n  </v-footer>\n</template>\n\n<script setup>\n  const icons = [\n    'mdi-facebook',\n    'mdi-twitter',\n    'mdi-linkedin',\n    'mdi-instagram',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      icons: [\n        'mdi-facebook',\n        'mdi-twitter',\n        'mdi-linkedin',\n        'mdi-instagram',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Teal Footer",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000679",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000680",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-footer v-bind=\"props\">\n        {{ new Date().getFullYear() }} — <strong>Vuetify, LLC</strong>\n      </v-footer>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-footer'\n  const model = ref('default')\n  const options = ['bordered']\n  const props = computed(() => {\n    return {\n      border: model.value === 'bordered' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-footer v-bind=\"props\">\n        {{ new Date().getFullYear() }} — <strong>Vuetify, LLC</strong>\n      </v-footer>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-footer'\n  const model = ref('default')\n  const options = ['bordered']\n  const props = computed(() => {\n    return {\n      border: model.value === 'bordered' || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000680",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000681",
    "text": "Component: v-forms\nType: component_overview\n\n# v-forms\n\nVuetify offers a simple built-in form validation system based on functions as rules, making it easy for developers to get set up quickly.",
    "display_content": "# v-forms\n\nVuetify offers a simple built-in form validation system based on functions as rules, making it easy for developers to get set up quickly.",
    "metadata": {
      "component": "v-forms",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000681",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000682",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-form` component makes it easy to add validation to form inputs. All input components have a **rules** prop that can be used to specify conditions in which the input is either *valid* or *invalid*.",
    "display_content": "# v-usage\n\nThe `v-form` component makes it easy to add validation to form inputs. All input components have a **rules** prop that can be used to specify conditions in which the input is either *valid* or *invalid*.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000682",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000683",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-form](/api/v-form/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-form](/api/v-form/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000683",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000684",
    "text": "Component: v-rules\nType: component_overview\n\n# v-rules\n\nRules allow you to apply custom validation on all form components. These are validated sequentially, and components display a *maximum* of 1 error at a time; so make sure you order your rules accordingly.",
    "display_content": "# v-rules\n\nRules allow you to apply custom validation on all form components. These are validated sequentially, and components display a *maximum* of 1 error at a time; so make sure you order your rules accordingly.",
    "metadata": {
      "component": "v-rules",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000684",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000685",
    "text": "Component: v-validation-state\nType: component_overview\n\n# v-validation-state\n\nWhen rules run is controlled with the **validate-on** prop which accepts a string containing `input`, `blur`, `submit`, `invalid-input`, `eager`, or `lazy`.",
    "display_content": "# v-validation-state\n\nWhen rules run is controlled with the **validate-on** prop which accepts a string containing `input`, `blur`, `submit`, `invalid-input`, `eager`, or `lazy`.",
    "metadata": {
      "component": "v-validation-state",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000685",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000686",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can easily disable all input components in a `v-form` by setting the **disabled** prop.\n\nAvailable sections: Disabled, Fast fail, Exposed properties, Vee-validate, Vuelidate, Misc Exposed, Misc Vee Validate, Misc Vuelidate, Prop Disabled, Prop Fast Fail, Rules Async, Rules Required, Usage",
    "display_content": "# v-examples\n\nYou can easily disable all input components in a `v-form` by setting the **disabled** prop.\n\nAvailable sections: Disabled, Fast fail, Exposed properties, Vee-validate, Vuelidate, Misc Exposed, Misc Vee Validate, Misc Vuelidate, Prop Disabled, Prop Fast Fail, Rules Async, Rules Required, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000686",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000687",
    "text": "Component: v-examples\nSection: Disabled\nType: documentation\n\n## v-examples - Disabled\n\nYou can easily disable all input components in a `v-form` by setting the **disabled** prop.\n\n<ExamplesExample file=\"v-form/prop-disabled\" />",
    "display_content": "## v-examples - Disabled\n\nYou can easily disable all input components in a `v-form` by setting the **disabled** prop.\n\n<ExamplesExample file=\"v-form/prop-disabled\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000687",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000688",
    "text": "Component: v-examples\nSection: Fast fail\nType: documentation\n\n## v-examples - Fast fail\n\nWhen the **fast-fail** prop is set, validation will short-circuit after the first invalid input is found. This can be useful if some of your rules are computationally heavy and can take a long time. In this example, notice how when the submit button is clicked, the second input does not show validation errors even though it does not satisfy the rules.\n\n<ExamplesExample file=\"v-form/prop-fast-fail\" />",
    "display_content": "## v-examples - Fast fail\n\nWhen the **fast-fail** prop is set, validation will short-circuit after the first invalid input is found. This can be useful if some of your rules are computationally heavy and can take a long time. In this example, notice how when the submit button is clicked, the second input does not show validation errors even though it does not satisfy the rules.\n\n<ExamplesExample file=\"v-form/prop-fast-fail\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Fast fail",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000688",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000689",
    "text": "Component: v-examples\nSection: Exposed properties\nType: api_reference\n\n## v-examples - Exposed properties\n\nThe `v-form` component has a number of exposed properties that can be accessed by setting a **ref** on the component. A ref allows us to access internal methods on a component. You can find all of them on the API page, but some of the more commonly used ones are `validate()`, `reset()`, and `resetValidation()`.\n\nThe difference between `reset()` and `resetValidation()` is that the former resets both input values and validation state, while the latter only resets validation state.\n\n<ExamplesExample file=\"v-form/misc-exposed\" />",
    "display_content": "## v-examples - Exposed properties\n\nThe `v-form` component has a number of exposed properties that can be accessed by setting a **ref** on the component. A ref allows us to access internal methods on a component. You can find all of them on the API page, but some of the more commonly used ones are `validate()`, `reset()`, and `resetValidation()`.\n\nThe difference between `reset()` and `resetValidation()` is that the former resets both input values and validation state, while the latter only resets validation state.\n\n<ExamplesExample file=\"v-form/misc-exposed\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Exposed properties",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000689",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000690",
    "text": "Component: v-examples\nSection: Vee-validate\nType: documentation\n\n## v-examples - Vee-validate\n\n**vee-validate** documentation can be found [here](https://vee-validate.logaretm.com/v4/).\n\n<ExamplesExample file=\"v-form/misc-vee-validate\" />",
    "display_content": "## v-examples - Vee-validate\n\n**vee-validate** documentation can be found [here](https://vee-validate.logaretm.com/v4/).\n\n<ExamplesExample file=\"v-form/misc-vee-validate\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Vee-validate",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000690",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000691",
    "text": "Component: v-examples\nSection: Vuelidate\nType: documentation\n\n## v-examples - Vuelidate\n\n**vuelidate** documentation can be found [here](https://vuelidate-next.netlify.app/).\n\n<ExamplesExample file=\"v-form/misc-vuelidate\" />",
    "display_content": "## v-examples - Vuelidate\n\n**vuelidate** documentation can be found [here](https://vuelidate-next.netlify.app/).\n\n<ExamplesExample file=\"v-form/misc-vuelidate\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Vuelidate",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000691",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000692",
    "text": "Component: v-examples\nSection: Misc Exposed\nType: code_example\n\n## v-examples - Misc Exposed\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" width=\"300\">\n\n    <v-form ref=\"form\">\n      <v-text-field\n        v-model=\"name\"\n        :counter=\"10\"\n        :rules=\"nameRules\"\n        label=\"Name\"\n        required\n      ></v-text-field>\n\n      <v-select\n        v-model=\"select\"\n        :items=\"items\"\n        :rules=\"[v => !!v || 'Item is required']\"\n        label=\"Item\"\n        required\n      ></v-select>\n\n      <v-checkbox\n        v-model=\"checkbox\"\n        :rules=\"[v => !!v || 'You must agree to continue!']\"\n        label=\"Do you agree?\"\n        required\n      ></v-checkbox>\n\n      <div class=\"d-flex flex-column\">\n        <v-btn\n          class=\"mt-4\"\n          color=\"success\"\n          block\n          @click=\"validate\"\n        >\n          Validate\n        </v-btn>\n\n        <v-btn\n          class=\"mt-4\"\n          color=\"error\"\n          block\n          @click=\"reset\"\n        >\n          Reset Form\n        </v-btn>\n\n        <v-btn\n          class=\"mt-4\"\n          color=\"warning\"\n          block\n          @click=\"resetValidation\"\n        >\n          Reset Validation\n        </v-btn>\n      </div>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const form = ref()\n\n  const items = [\n    'Item 1',\n    'Item 2',\n    'Item 3',\n    'Item 4',\n  ]\n\n  const name = ref('')\n  const nameRules = ref([\n    v => !!v || 'Name is required',\n    v => (v && v.length <= 10) || 'Name must be 10 characters or less',\n  ])\n  const select = ref(null)\n  const checkbox = ref(false)\n\n  async function validate () {\n    const { valid } = await form.value.validate()\n\n    if (valid) alert('Form is valid')\n  }\n  function reset () {\n    form.value.reset()\n  }\n  function resetValidation () {\n    form.value.resetValidation()\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      name: '',\n      nameRules: [\n        v => !!v || 'Name is required',\n        v => (v && v.length <= 10) || 'Name must be 10 characters or less',\n      ],\n      select: null,\n      items: [\n        'Item 1',\n        'Item 2',\n        'Item 3',\n        'Item 4',\n      ],\n      checkbox: false,\n    }),\n\n    methods: {\n      async validate () {\n        const { valid } = await this.$refs.form.validate()\n\n        if (valid) alert('Form is valid')\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      resetValidation () {\n        this.$refs.form.resetValidation()\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Exposed\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" width=\"300\">\n\n    <v-form ref=\"form\">\n      <v-text-field\n        v-model=\"name\"\n        :counter=\"10\"\n        :rules=\"nameRules\"\n        label=\"Name\"\n        required\n      ></v-text-field>\n\n      <v-select\n        v-model=\"select\"\n        :items=\"items\"\n        :rules=\"[v => !!v || 'Item is required']\"\n        label=\"Item\"\n        required\n      ></v-select>\n\n      <v-checkbox\n        v-model=\"checkbox\"\n        :rules=\"[v => !!v || 'You must agree to continue!']\"\n        label=\"Do you agree?\"\n        required\n      ></v-checkbox>\n\n      <div class=\"d-flex flex-column\">\n        <v-btn\n          class=\"mt-4\"\n          color=\"success\"\n          block\n          @click=\"validate\"\n        >\n          Validate\n        </v-btn>\n\n        <v-btn\n          class=\"mt-4\"\n          color=\"error\"\n          block\n          @click=\"reset\"\n        >\n          Reset Form\n        </v-btn>\n\n        <v-btn\n          class=\"mt-4\"\n          color=\"warning\"\n          block\n          @click=\"resetValidation\"\n        >\n          Reset Validation\n        </v-btn>\n      </div>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const form = ref()\n\n  const items = [\n    'Item 1',\n    'Item 2',\n    'Item 3',\n    'Item 4',\n  ]\n\n  const name = ref('')\n  const nameRules = ref([\n    v => !!v || 'Name is required',\n    v => (v && v.length <= 10) || 'Name must be 10 characters or less',\n  ])\n  const select = ref(null)\n  const checkbox = ref(false)\n\n  async function validate () {\n    const { valid } = await form.value.validate()\n\n    if (valid) alert('Form is valid')\n  }\n  function reset () {\n    form.value.reset()\n  }\n  function resetValidation () {\n    form.value.resetValidation()\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      name: '',\n      nameRules: [\n        v => !!v || 'Name is required',\n        v => (v && v.length <= 10) || 'Name must be 10 characters or less',\n      ],\n      select: null,\n      items: [\n        'Item 1',\n        'Item 2',\n        'Item 3',\n        'Item 4',\n      ],\n      checkbox: false,\n    }),\n\n    methods: {\n      async validate () {\n        const { valid } = await this.$refs.form.validate()\n\n        if (valid) alert('Form is valid')\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      resetValidation () {\n        this.$refs.form.resetValidation()\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Exposed",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000692",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000693",
    "text": "Component: v-examples\nSection: Misc Vee Validate\nType: code_example\n\n## v-examples - Misc Vee Validate\n\n```vue\n<template>\n  <form @submit.prevent=\"submit\">\n    <v-text-field\n      v-model=\"name.value.value\"\n      :counter=\"10\"\n      :error-messages=\"name.errorMessage.value\"\n      label=\"Name\"\n    ></v-text-field>\n\n    <v-text-field\n      v-model=\"phone.value.value\"\n      :counter=\"7\"\n      :error-messages=\"phone.errorMessage.value\"\n      label=\"Phone Number\"\n    ></v-text-field>\n\n    <v-text-field\n      v-model=\"email.value.value\"\n      :error-messages=\"email.errorMessage.value\"\n      label=\"E-mail\"\n    ></v-text-field>\n\n    <v-select\n      v-model=\"select.value.value\"\n      :error-messages=\"select.errorMessage.value\"\n      :items=\"items\"\n      label=\"Select\"\n    ></v-select>\n\n    <v-checkbox\n      v-model=\"checkbox.value.value\"\n      :error-messages=\"checkbox.errorMessage.value\"\n      label=\"Option\"\n      type=\"checkbox\"\n      value=\"1\"\n    ></v-checkbox>\n\n    <v-btn\n      class=\"me-4\"\n      type=\"submit\"\n    >\n      submit\n    </v-btn>\n\n    <v-btn @click=\"handleReset\">\n      clear\n    </v-btn>\n  </form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n  import { useField, useForm } from 'vee-validate'\n\n  const { handleSubmit, handleReset } = useForm({\n    validationSchema: {\n      name (value) {\n        if (value?.length >= 2) return true\n\n        return 'Name needs to be at least 2 characters.'\n      },\n      phone (value) {\n        if (/^[0-9-]{7,}$/.test(value)) return true\n\n        return 'Phone number needs to be at least 7 digits.'\n      },\n      email (value) {\n        if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true\n\n        return 'Must be a valid e-mail.'\n      },\n      select (value) {\n        if (value) return true\n\n        return 'Select an item.'\n      },\n      checkbox (value) {\n        if (value === '1') return true\n\n        return 'Must be checked.'\n      },\n    },\n  })\n  const name = useField('name')\n  const phone = useField('phone')\n  const email = useField('email')\n  const select = useField('select')\n  const checkbox = useField('checkbox')\n\n  const items = ref([\n    'Item 1',\n    'Item 2',\n    'Item 3',\n    'Item 4',\n  ])\n\n  const submit = handleSubmit(values => {\n    alert(JSON.stringify(values, null, 2))\n  })\n</script>\n\n<playground-resources lang=\"json\">\n  {\n    \"imports\": {\n      \"vee-validate\": \"https://cdn.jsdelivr.net/npm/vee-validate@4.8.4/dist/vee-validate.esm.js\",\n      \"@vue/devtools-api\": \"https://cdn.jsdelivr.net/npm/@vue/devtools-api@6.5.0/lib/esm/index.js\"\n    }\n  }\n</playground-resources>\n\n```",
    "display_content": "## v-examples - Misc Vee Validate\n\n```vue\n<template>\n  <form @submit.prevent=\"submit\">\n    <v-text-field\n      v-model=\"name.value.value\"\n      :counter=\"10\"\n      :error-messages=\"name.errorMessage.value\"\n      label=\"Name\"\n    ></v-text-field>\n\n    <v-text-field\n      v-model=\"phone.value.value\"\n      :counter=\"7\"\n      :error-messages=\"phone.errorMessage.value\"\n      label=\"Phone Number\"\n    ></v-text-field>\n\n    <v-text-field\n      v-model=\"email.value.value\"\n      :error-messages=\"email.errorMessage.value\"\n      label=\"E-mail\"\n    ></v-text-field>\n\n    <v-select\n      v-model=\"select.value.value\"\n      :error-messages=\"select.errorMessage.value\"\n      :items=\"items\"\n      label=\"Select\"\n    ></v-select>\n\n    <v-checkbox\n      v-model=\"checkbox.value.value\"\n      :error-messages=\"checkbox.errorMessage.value\"\n      label=\"Option\"\n      type=\"checkbox\"\n      value=\"1\"\n    ></v-checkbox>\n\n    <v-btn\n      class=\"me-4\"\n      type=\"submit\"\n    >\n      submit\n    </v-btn>\n\n    <v-btn @click=\"handleReset\">\n      clear\n    </v-btn>\n  </form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n  import { useField, useForm } from 'vee-validate'\n\n  const { handleSubmit, handleReset } = useForm({\n    validationSchema: {\n      name (value) {\n        if (value?.length >= 2) return true\n\n        return 'Name needs to be at least 2 characters.'\n      },\n      phone (value) {\n        if (/^[0-9-]{7,}$/.test(value)) return true\n\n        return 'Phone number needs to be at least 7 digits.'\n      },\n      email (value) {\n        if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true\n\n        return 'Must be a valid e-mail.'\n      },\n      select (value) {\n        if (value) return true\n\n        return 'Select an item.'\n      },\n      checkbox (value) {\n        if (value === '1') return true\n\n        return 'Must be checked.'\n      },\n    },\n  })\n  const name = useField('name')\n  const phone = useField('phone')\n  const email = useField('email')\n  const select = useField('select')\n  const checkbox = useField('checkbox')\n\n  const items = ref([\n    'Item 1',\n    'Item 2',\n    'Item 3',\n    'Item 4',\n  ])\n\n  const submit = handleSubmit(values => {\n    alert(JSON.stringify(values, null, 2))\n  })\n</script>\n\n<playground-resources lang=\"json\">\n  {\n    \"imports\": {\n      \"vee-validate\": \"https://cdn.jsdelivr.net/npm/vee-validate@4.8.4/dist/vee-validate.esm.js\",\n      \"@vue/devtools-api\": \"https://cdn.jsdelivr.net/npm/@vue/devtools-api@6.5.0/lib/esm/index.js\"\n    }\n  }\n</playground-resources>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Vee Validate",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000693",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000694",
    "text": "Component: v-examples\nSection: Misc Vuelidate\nType: code_example\n\n## v-examples - Misc Vuelidate\n\n```vue\n<template>\n  <form>\n    <v-text-field\n      v-model=\"state.name\"\n      :counter=\"10\"\n      :error-messages=\"v$.name.$errors.map(e => e.$message)\"\n      label=\"Name\"\n      required\n      @blur=\"v$.name.$touch\"\n      @input=\"v$.name.$touch\"\n    ></v-text-field>\n\n    <v-text-field\n      v-model=\"state.email\"\n      :error-messages=\"v$.email.$errors.map(e => e.$message)\"\n      label=\"E-mail\"\n      required\n      @blur=\"v$.email.$touch\"\n      @input=\"v$.email.$touch\"\n    ></v-text-field>\n\n    <v-select\n      v-model=\"state.select\"\n      :error-messages=\"v$.select.$errors.map(e => e.$message)\"\n      :items=\"items\"\n      label=\"Item\"\n      required\n      @blur=\"v$.select.$touch\"\n      @change=\"v$.select.$touch\"\n    ></v-select>\n\n    <v-checkbox\n      v-model=\"state.checkbox\"\n      :error-messages=\"v$.checkbox.$errors.map(e => e.$message)\"\n      label=\"Do you agree?\"\n      required\n      @blur=\"v$.checkbox.$touch\"\n      @change=\"v$.checkbox.$touch\"\n    ></v-checkbox>\n\n    <v-btn\n      class=\"me-4\"\n      @click=\"v$.$validate\"\n    >\n      submit\n    </v-btn>\n    <v-btn @click=\"clear\">\n      clear\n    </v-btn>\n  </form>\n</template>\n\n<script setup>\n  import { reactive } from 'vue'\n  import { useVuelidate } from '@vuelidate/core'\n  import { email, required } from '@vuelidate/validators'\n\n  const initialState = {\n    name: '',\n    email: '',\n    select: null,\n    checkbox: null,\n  }\n\n  const state = reactive({\n    ...initialState,\n  })\n\n  const items = [\n    'Item 1',\n    'Item 2',\n    'Item 3',\n    'Item 4',\n  ]\n\n  const rules = {\n    name: { required },\n    email: { required, email },\n    select: { required },\n    items: { required },\n    checkbox: { required },\n  }\n\n  const v$ = useVuelidate(rules, state)\n\n  function clear () {\n    v$.value.$reset()\n\n    for (const [key, value] of Object.entries(initialState)) {\n      state[key] = value\n    }\n  }\n</script>\n\n<playground-resources lang=\"json\">\n  {\n    \"imports\": {\n      \"vue-demi\": \"https://cdn.jsdelivr.net/npm/vue-demi/lib/index.mjs\",\n      \"@vuelidate/core\": \"https://cdn.jsdelivr.net/npm/@vuelidate/core/dist/index.esm.js\",\n      \"@vuelidate/validators\": \"https://cdn.jsdelivr.net/npm/@vuelidate/validators/dist/index.esm.js\"\n    }\n  }\n</playground-resources>\n\n```",
    "display_content": "## v-examples - Misc Vuelidate\n\n```vue\n<template>\n  <form>\n    <v-text-field\n      v-model=\"state.name\"\n      :counter=\"10\"\n      :error-messages=\"v$.name.$errors.map(e => e.$message)\"\n      label=\"Name\"\n      required\n      @blur=\"v$.name.$touch\"\n      @input=\"v$.name.$touch\"\n    ></v-text-field>\n\n    <v-text-field\n      v-model=\"state.email\"\n      :error-messages=\"v$.email.$errors.map(e => e.$message)\"\n      label=\"E-mail\"\n      required\n      @blur=\"v$.email.$touch\"\n      @input=\"v$.email.$touch\"\n    ></v-text-field>\n\n    <v-select\n      v-model=\"state.select\"\n      :error-messages=\"v$.select.$errors.map(e => e.$message)\"\n      :items=\"items\"\n      label=\"Item\"\n      required\n      @blur=\"v$.select.$touch\"\n      @change=\"v$.select.$touch\"\n    ></v-select>\n\n    <v-checkbox\n      v-model=\"state.checkbox\"\n      :error-messages=\"v$.checkbox.$errors.map(e => e.$message)\"\n      label=\"Do you agree?\"\n      required\n      @blur=\"v$.checkbox.$touch\"\n      @change=\"v$.checkbox.$touch\"\n    ></v-checkbox>\n\n    <v-btn\n      class=\"me-4\"\n      @click=\"v$.$validate\"\n    >\n      submit\n    </v-btn>\n    <v-btn @click=\"clear\">\n      clear\n    </v-btn>\n  </form>\n</template>\n\n<script setup>\n  import { reactive } from 'vue'\n  import { useVuelidate } from '@vuelidate/core'\n  import { email, required } from '@vuelidate/validators'\n\n  const initialState = {\n    name: '',\n    email: '',\n    select: null,\n    checkbox: null,\n  }\n\n  const state = reactive({\n    ...initialState,\n  })\n\n  const items = [\n    'Item 1',\n    'Item 2',\n    'Item 3',\n    'Item 4',\n  ]\n\n  const rules = {\n    name: { required },\n    email: { required, email },\n    select: { required },\n    items: { required },\n    checkbox: { required },\n  }\n\n  const v$ = useVuelidate(rules, state)\n\n  function clear () {\n    v$.value.$reset()\n\n    for (const [key, value] of Object.entries(initialState)) {\n      state[key] = value\n    }\n  }\n</script>\n\n<playground-resources lang=\"json\">\n  {\n    \"imports\": {\n      \"vue-demi\": \"https://cdn.jsdelivr.net/npm/vue-demi/lib/index.mjs\",\n      \"@vuelidate/core\": \"https://cdn.jsdelivr.net/npm/@vuelidate/core/dist/index.esm.js\",\n      \"@vuelidate/validators\": \"https://cdn.jsdelivr.net/npm/@vuelidate/validators/dist/index.esm.js\"\n    }\n  }\n</playground-resources>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Vuelidate",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000694",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000695",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" width=\"300\">\n    <v-form disabled>\n      <v-text-field\n        v-model=\"firstName\"\n        label=\"First name\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"lastName\"\n        label=\"Last name\"\n      ></v-text-field>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const firstName = ref('')\n  const lastName = ref('')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      firstName: '',\n      lastName: '',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" width=\"300\">\n    <v-form disabled>\n      <v-text-field\n        v-model=\"firstName\"\n        label=\"First name\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"lastName\"\n        label=\"Last name\"\n      ></v-text-field>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const firstName = ref('')\n  const lastName = ref('')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      firstName: '',\n      lastName: '',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000695",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000696",
    "text": "Component: v-examples\nSection: Prop Fast Fail\nType: code_example\n\n## v-examples - Prop Fast Fail\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" width=\"300\">\n    <v-form fast-fail @submit.prevent>\n      <v-text-field\n        v-model=\"firstName\"\n        :rules=\"firstNameRules\"\n        label=\"First name\"\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"lastName\"\n        :rules=\"lastNameRules\"\n        label=\"Last name\"\n      ></v-text-field>\n\n      <v-btn class=\"mt-2\" type=\"submit\" block>Submit</v-btn>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const firstName = ref('')\n  const firstNameRules = [\n    value => {\n      if (value?.length >= 3) return true\n      return 'First name must be at least 3 characters.'\n    },\n  ]\n\n  const lastName = ref('123')\n  const lastNameRules = [\n    value => {\n      if (/[^0-9]/.test(value)) return true\n      return 'Last name can not contain digits.'\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      firstName: '',\n      firstNameRules: [\n        value => {\n          if (value?.length >= 3) return true\n\n          return 'First name must be at least 3 characters.'\n        },\n      ],\n      lastName: '123',\n      lastNameRules: [\n        value => {\n          if (/[^0-9]/.test(value)) return true\n\n          return 'Last name can not contain digits.'\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Fast Fail\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" width=\"300\">\n    <v-form fast-fail @submit.prevent>\n      <v-text-field\n        v-model=\"firstName\"\n        :rules=\"firstNameRules\"\n        label=\"First name\"\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"lastName\"\n        :rules=\"lastNameRules\"\n        label=\"Last name\"\n      ></v-text-field>\n\n      <v-btn class=\"mt-2\" type=\"submit\" block>Submit</v-btn>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const firstName = ref('')\n  const firstNameRules = [\n    value => {\n      if (value?.length >= 3) return true\n      return 'First name must be at least 3 characters.'\n    },\n  ]\n\n  const lastName = ref('123')\n  const lastNameRules = [\n    value => {\n      if (/[^0-9]/.test(value)) return true\n      return 'Last name can not contain digits.'\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      firstName: '',\n      firstNameRules: [\n        value => {\n          if (value?.length >= 3) return true\n\n          return 'First name must be at least 3 characters.'\n        },\n      ],\n      lastName: '123',\n      lastNameRules: [\n        value => {\n          if (/[^0-9]/.test(value)) return true\n\n          return 'Last name can not contain digits.'\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Fast Fail",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000696",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000697",
    "text": "Component: v-examples\nSection: Rules Async\nType: code_example\n\n## v-examples - Rules Async\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" max-width=\"300\">\n    <v-form validate-on=\"submit lazy\" @submit.prevent=\"submit\">\n      <v-text-field\n        v-model=\"userName\"\n        :rules=\"rules\"\n        label=\"User name\"\n      ></v-text-field>\n\n      <v-btn\n        :loading=\"loading\"\n        class=\"mt-2\"\n        text=\"Submit\"\n        type=\"submit\"\n        block\n      ></v-btn>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = [value => checkApi(value)]\n\n  const loading = ref(false)\n  const userName = ref('')\n\n  async function submit (event) {\n    loading.value = true\n    const results = await event\n    loading.value = false\n    alert(JSON.stringify(results, null, 2))\n  }\n\n  let timeout = -1\n  async function checkApi (userName) {\n    return new Promise(resolve => {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        if (!userName) return resolve('Please enter a user name.')\n        if (userName === 'johnleider') return resolve('User name already taken. Please try another one.')\n        return resolve(true)\n      }, 1000)\n    })\n  }\n</script>\n\n<script>\n  export default {\n    data: vm => ({\n      loading: false,\n      rules: [value => vm.checkApi(value)],\n      timeout: null,\n      userName: '',\n    }),\n\n    methods: {\n      async submit (event) {\n        this.loading = true\n\n        const results = await event\n\n        this.loading = false\n\n        alert(JSON.stringify(results, null, 2))\n      },\n      async checkApi (userName) {\n        return new Promise(resolve => {\n          clearTimeout(this.timeout)\n\n          this.timeout = setTimeout(() => {\n            if (!userName) return resolve('Please enter a user name.')\n            if (userName === 'johnleider') return resolve('User name already taken. Please try another one.')\n\n            return resolve(true)\n          }, 1000)\n        })\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Rules Async\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" max-width=\"300\">\n    <v-form validate-on=\"submit lazy\" @submit.prevent=\"submit\">\n      <v-text-field\n        v-model=\"userName\"\n        :rules=\"rules\"\n        label=\"User name\"\n      ></v-text-field>\n\n      <v-btn\n        :loading=\"loading\"\n        class=\"mt-2\"\n        text=\"Submit\"\n        type=\"submit\"\n        block\n      ></v-btn>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = [value => checkApi(value)]\n\n  const loading = ref(false)\n  const userName = ref('')\n\n  async function submit (event) {\n    loading.value = true\n    const results = await event\n    loading.value = false\n    alert(JSON.stringify(results, null, 2))\n  }\n\n  let timeout = -1\n  async function checkApi (userName) {\n    return new Promise(resolve => {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        if (!userName) return resolve('Please enter a user name.')\n        if (userName === 'johnleider') return resolve('User name already taken. Please try another one.')\n        return resolve(true)\n      }, 1000)\n    })\n  }\n</script>\n\n<script>\n  export default {\n    data: vm => ({\n      loading: false,\n      rules: [value => vm.checkApi(value)],\n      timeout: null,\n      userName: '',\n    }),\n\n    methods: {\n      async submit (event) {\n        this.loading = true\n\n        const results = await event\n\n        this.loading = false\n\n        alert(JSON.stringify(results, null, 2))\n      },\n      async checkApi (userName) {\n        return new Promise(resolve => {\n          clearTimeout(this.timeout)\n\n          this.timeout = setTimeout(() => {\n            if (!userName) return resolve('Please enter a user name.')\n            if (userName === 'johnleider') return resolve('User name already taken. Please try another one.')\n\n            return resolve(true)\n          }, 1000)\n        })\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Rules Async",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000697",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000698",
    "text": "Component: v-examples\nSection: Rules Required\nType: code_example\n\n## v-examples - Rules Required\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" width=\"300\">\n    <v-form @submit.prevent>\n      <v-text-field\n        v-model=\"firstName\"\n        :rules=\"rules\"\n        label=\"First name\"\n      ></v-text-field>\n      <v-btn class=\"mt-2\" type=\"submit\" block>Submit</v-btn>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const firstName = ref('')\n\n  const rules = [\n    value => {\n      if (value) return true\n      return 'You must enter a first name.'\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      firstName: '',\n      rules: [\n        value => {\n          if (value) return true\n\n          return 'You must enter a first name.'\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Rules Required\n\n```vue\n<template>\n  <v-sheet class=\"mx-auto\" width=\"300\">\n    <v-form @submit.prevent>\n      <v-text-field\n        v-model=\"firstName\"\n        :rules=\"rules\"\n        label=\"First name\"\n      ></v-text-field>\n      <v-btn class=\"mt-2\" type=\"submit\" block>Submit</v-btn>\n    </v-form>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const firstName = ref('')\n\n  const rules = [\n    value => {\n      if (value) return true\n      return 'You must enter a first name.'\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      firstName: '',\n      rules: [\n        value => {\n          if (value) return true\n\n          return 'You must enter a first name.'\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Rules Required",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000698",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000699",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-form v-model=\"valid\">\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-text-field\n            v-model=\"firstname\"\n            :counter=\"10\"\n            :rules=\"nameRules\"\n            label=\"First name\"\n            required\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-text-field\n            v-model=\"lastname\"\n            :counter=\"10\"\n            :rules=\"nameRules\"\n            label=\"Last name\"\n            required\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-text-field\n            v-model=\"email\"\n            :rules=\"emailRules\"\n            label=\"E-mail\"\n            required\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      valid: false,\n      firstname: '',\n      lastname: '',\n      nameRules: [\n        value => {\n          if (value) return true\n\n          return 'Name is required.'\n        },\n        value => {\n          if (value?.length <= 10) return true\n\n          return 'Name must be less than 10 characters.'\n        },\n      ],\n      email: '',\n      emailRules: [\n        value => {\n          if (value) return true\n\n          return 'E-mail is required.'\n        },\n        value => {\n          if (/.+@.+\\..+/.test(value)) return true\n\n          return 'E-mail must be valid.'\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-form v-model=\"valid\">\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-text-field\n            v-model=\"firstname\"\n            :counter=\"10\"\n            :rules=\"nameRules\"\n            label=\"First name\"\n            required\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-text-field\n            v-model=\"lastname\"\n            :counter=\"10\"\n            :rules=\"nameRules\"\n            label=\"Last name\"\n            required\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-text-field\n            v-model=\"email\"\n            :rules=\"emailRules\"\n            label=\"E-mail\"\n            required\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      valid: false,\n      firstname: '',\n      lastname: '',\n      nameRules: [\n        value => {\n          if (value) return true\n\n          return 'Name is required.'\n        },\n        value => {\n          if (value?.length <= 10) return true\n\n          return 'Name must be less than 10 characters.'\n        },\n      ],\n      email: '',\n      emailRules: [\n        value => {\n          if (value) return true\n\n          return 'E-mail is required.'\n        },\n        value => {\n          if (/.+@.+\\..+/.test(value)) return true\n\n          return 'E-mail must be valid.'\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000699",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000700",
    "text": "Component: v-grid-system\nType: component_overview\n\n# v-grid-system\n\nVuetify comes with a 12 point grid system built using flexbox.",
    "display_content": "# v-grid-system\n\nVuetify comes with a 12 point grid system built using flexbox.",
    "metadata": {
      "component": "v-grid-system",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000700",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000701",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe Vuetify grid is heavily inspired by the [Bootstrap grid](https://getbootstrap.com/docs/4.0/layout/grid/). It is implemented by using a series of containers, rows, and columns to layout and align content. If you are new to flexbox, read the [CSS Tricks flexbox guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background) for background, terminology, guidelines, and code snippets.",
    "display_content": "# v-usage\n\nThe Vuetify grid is heavily inspired by the [Bootstrap grid](https://getbootstrap.com/docs/4.0/layout/grid/). It is implemented by using a series of containers, rows, and columns to layout and align content. If you are new to flexbox, read the [CSS Tricks flexbox guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background) for background, terminology, guidelines, and code snippets.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000701",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000702",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-container](/api/v-container/) | The container component. | | [v-row](/api/v-row/) | Sub-component used to create rows. | | [v-col](/api/v-col/) | Sub-component used to create columns. | | [v-spacer](/api/v-spacer/) | A component often used in grid scenarios. |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-container](/api/v-container/) | The container component. | | [v-row](/api/v-row/) | Sub-component used to create rows. | | [v-col](/api/v-col/) | Sub-component used to create columns. | | [v-spacer](/api/v-spacer/) | A component often used in grid scenarios. |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000702",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000703",
    "text": "Component: v-sub-components\nType: component_overview\n\n# v-sub-components\n\n`v-container` provides the ability to center and horizontally pad your site's contents. You can also use the **fluid** prop to fully extend the container across all viewport and device sizes. Maintains previous 1.x functionality in which props are passed through as classes on `v-container` allowing for the application of helper classes (such as `ma-#`/`pa-#`/`fill-height`) to easily be applied.\n\nAvailable sections: v-container, v-col, v-row, v-spacer",
    "display_content": "# v-sub-components\n\n`v-container` provides the ability to center and horizontally pad your site's contents. You can also use the **fluid** prop to fully extend the container across all viewport and device sizes. Maintains previous 1.x functionality in which props are passed through as classes on `v-container` allowing for the application of helper classes (such as `ma-#`/`pa-#`/`fill-height`) to easily be applied.\n\nAvailable sections: v-container, v-col, v-row, v-spacer",
    "metadata": {
      "component": "v-sub-components",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000703",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000704",
    "text": "Component: v-sub-components\nSection: v-container\nType: documentation\n\n## v-sub-components - v-container\n\n`v-container` provides the ability to center and horizontally pad your site's contents. You can also use the **fluid** prop to fully extend the container across all viewport and device sizes. Maintains previous 1.x functionality in which props are passed through as classes on `v-container` allowing for the application of helper classes (such as `ma-#`/`pa-#`/`fill-height`) to easily be applied.",
    "display_content": "## v-sub-components - v-container\n\n`v-container` provides the ability to center and horizontally pad your site's contents. You can also use the **fluid** prop to fully extend the container across all viewport and device sizes. Maintains previous 1.x functionality in which props are passed through as classes on `v-container` allowing for the application of helper classes (such as `ma-#`/`pa-#`/`fill-height`) to easily be applied.",
    "metadata": {
      "component": "v-sub-components",
      "section_type": "subsection",
      "subsection": "v-container",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000704",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000705",
    "text": "Component: v-sub-components\nSection: v-col\nType: documentation\n\n## v-sub-components - v-col\n\n`v-col` is a content holder that must be a direct child of `v-row`. This is the 2.x replacement for `v-flex` in 1.x.",
    "display_content": "## v-sub-components - v-col\n\n`v-col` is a content holder that must be a direct child of `v-row`. This is the 2.x replacement for `v-flex` in 1.x.",
    "metadata": {
      "component": "v-sub-components",
      "section_type": "subsection",
      "subsection": "v-col",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000705",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000706",
    "text": "Component: v-sub-components\nSection: v-row\nType: documentation\n\n## v-sub-components - v-row\n\n`v-row` is a wrapper component for `v-col`. It utilizes flex properties to control the layout and flow of its inner columns. It uses a standard gutter of **24px**. This can be reduced with the **dense** prop or removed completely with **no-gutters**. This is the 2.x replacement for `v-layout` in 1.x.",
    "display_content": "## v-sub-components - v-row\n\n`v-row` is a wrapper component for `v-col`. It utilizes flex properties to control the layout and flow of its inner columns. It uses a standard gutter of **24px**. This can be reduced with the **dense** prop or removed completely with **no-gutters**. This is the 2.x replacement for `v-layout` in 1.x.",
    "metadata": {
      "component": "v-sub-components",
      "section_type": "subsection",
      "subsection": "v-row",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000706",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000707",
    "text": "Component: v-sub-components\nSection: v-spacer\nType: documentation\n\n## v-sub-components - v-spacer\n\n`v-spacer` is a basic yet versatile spacing component used to distribute remaining width in-between a parents child components. When placing a single `v-spacer` before or after the child components, the components will push to the right and left of its container. When more than one `v-spacer`'s are used between multiple components, the remaining width is evenly distributed between each spacer.",
    "display_content": "## v-sub-components - v-spacer\n\n`v-spacer` is a basic yet versatile spacing component used to distribute remaining width in-between a parents child components. When placing a single `v-spacer` before or after the child components, the components will push to the right and left of its container. When more than one `v-spacer`'s are used between multiple components, the remaining width is evenly distributed between each spacer.",
    "metadata": {
      "component": "v-sub-components",
      "section_type": "subsection",
      "subsection": "v-spacer",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000707",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000708",
    "text": "Component: v-helper-classes\nType: component_overview\n\n# v-helper-classes\n\nThe class `fill-height` applies `height: 100%` to an element. When applied to `v-container` it will also set `align-items: center`.",
    "display_content": "# v-helper-classes\n\nThe class `fill-height` applies `height: 100%` to an element. When applied to `v-container` it will also set `align-items: center`.",
    "metadata": {
      "component": "v-helper-classes",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000708",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000709",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: info Breakpoints based props on grid components work in an `andUp` fashion. With this in mind the **xs** breakpoint is assumed and has been removed from the props context. This applies to **offset**, **justify**, **align**, and single breakpoint props on `v-col`",
    "display_content": "# v-caveats\n\n::: info Breakpoints based props on grid components work in an `andUp` fashion. With this in mind the **xs** breakpoint is assumed and has been removed from the props context. This applies to **offset**, **justify**, **align**, and single breakpoint props on `v-col`",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000709",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000710",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nChange the vertical alignment of flex items and their parents using the **align** and **align-self** properties.\n\nAvailable sections: Align, Breakpoint sizing, Justify, No gutters, Offset, Offset breakpoint, Order, Order first and last, Column wrapping, Equal width columns, Grow and Shrink, Margin helpers, Nested grid, One column width, Row and column breakpoints, Spacers",
    "display_content": "# v-examples\n\nChange the vertical alignment of flex items and their parents using the **align** and **align-self** properties.\n\nAvailable sections: Align, Breakpoint sizing, Justify, No gutters, Offset, Offset breakpoint, Order, Order first and last, Column wrapping, Equal width columns, Grow and Shrink, Margin helpers, Nested grid, One column width, Row and column breakpoints, Spacers",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000710",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000711",
    "text": "Component: v-examples\nSection: Align\nType: documentation\n\n## v-examples - Align\n\nChange the vertical alignment of flex items and their parents using the **align** and **align-self** properties.\n\n<ExamplesExample file=\"grid/prop-align\" />",
    "display_content": "## v-examples - Align\n\nChange the vertical alignment of flex items and their parents using the **align** and **align-self** properties.\n\n<ExamplesExample file=\"grid/prop-align\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Align",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000711",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000712",
    "text": "Component: v-examples\nSection: Breakpoint sizing\nType: documentation\n\n## v-examples - Breakpoint sizing\n\nColumns will automatically take up an equal amount of space within their parent container. This can be modified using the **cols** prop. You can also utilize the **sm**, **md**, **lg**, and **xl** props to further define how the column will be sized in different viewport sizes.\n\n<ExamplesExample file=\"grid/prop-breakpoint-sizing\" />",
    "display_content": "## v-examples - Breakpoint sizing\n\nColumns will automatically take up an equal amount of space within their parent container. This can be modified using the **cols** prop. You can also utilize the **sm**, **md**, **lg**, and **xl** props to further define how the column will be sized in different viewport sizes.\n\n<ExamplesExample file=\"grid/prop-breakpoint-sizing\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Breakpoint sizing",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000712",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000713",
    "text": "Component: v-examples\nSection: Justify\nType: documentation\n\n## v-examples - Justify\n\nChange the horizontal alignment of flex items using the **justify** property.\n\n<ExamplesExample file=\"grid/prop-justify\" />",
    "display_content": "## v-examples - Justify\n\nChange the horizontal alignment of flex items using the **justify** property.\n\n<ExamplesExample file=\"grid/prop-justify\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Justify",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000713",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000714",
    "text": "Component: v-examples\nSection: No gutters\nType: documentation\n\n## v-examples - No gutters\n\nYou can remove the negative margins from `v-row` and the padding from its direct `v-col` children using the **no-gutters** property.\n\n<ExamplesExample file=\"grid/prop-no-gutters\" />",
    "display_content": "## v-examples - No gutters\n\nYou can remove the negative margins from `v-row` and the padding from its direct `v-col` children using the **no-gutters** property.\n\n<ExamplesExample file=\"grid/prop-no-gutters\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "No gutters",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000714",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000715",
    "text": "Component: v-examples\nSection: Offset\nType: documentation\n\n## v-examples - Offset\n\nOffsets are useful for compensating for elements that may not be visible yet, or to control the position of content. Just as with breakpoints, you can set an offset for any available sizes. This allows you to fine tune your application layout precisely to your needs.\n\n<ExamplesExample file=\"grid/prop-offset\" />",
    "display_content": "## v-examples - Offset\n\nOffsets are useful for compensating for elements that may not be visible yet, or to control the position of content. Just as with breakpoints, you can set an offset for any available sizes. This allows you to fine tune your application layout precisely to your needs.\n\n<ExamplesExample file=\"grid/prop-offset\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Offset",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000715",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000716",
    "text": "Component: v-examples\nSection: Offset breakpoint\nType: documentation\n\n## v-examples - Offset breakpoint\n\nOffset can also be applied on a per breakpoint basis.\n\n<ExamplesExample file=\"grid/prop-offset-breakpoint\" />",
    "display_content": "## v-examples - Offset breakpoint\n\nOffset can also be applied on a per breakpoint basis.\n\n<ExamplesExample file=\"grid/prop-offset-breakpoint\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Offset breakpoint",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000716",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000717",
    "text": "Component: v-examples\nSection: Order\nType: documentation\n\n## v-examples - Order\n\nYou can control the ordering of grid items. As with offsets, you can set different orders for different sizes. Design specialized screen layouts that accommodate to any application.\n\n<ExamplesExample file=\"grid/prop-order\" />",
    "display_content": "## v-examples - Order\n\nYou can control the ordering of grid items. As with offsets, you can set different orders for different sizes. Design specialized screen layouts that accommodate to any application.\n\n<ExamplesExample file=\"grid/prop-order\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Order",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000717",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000718",
    "text": "Component: v-examples\nSection: Order first and last\nType: documentation\n\n## v-examples - Order first and last\n\nYou can also designate explicitly **first** or **last** which will assign **-1** or **13** values respectively to the `order` CSS property.\n\n<ExamplesExample file=\"grid/prop-order-first-and-last\" />",
    "display_content": "## v-examples - Order first and last\n\nYou can also designate explicitly **first** or **last** which will assign **-1** or **13** values respectively to the `order` CSS property.\n\n<ExamplesExample file=\"grid/prop-order-first-and-last\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Order first and last",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000718",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000719",
    "text": "Component: v-examples\nSection: Column wrapping\nType: documentation\n\n## v-examples - Column wrapping\n\nWhen more than 12 columns are placed within a given row (that is not using the `.flex-nowrap` utility class), each group of extra columns will wrap onto a new line.\n\nIn the example below, the first and second **v-col** components are a total of 13 columns wide, which means the second **v-col** gets wrapped to a new line.\n\n<ExamplesExample file=\"grid/misc-column-wrapping\" />",
    "display_content": "## v-examples - Column wrapping\n\nWhen more than 12 columns are placed within a given row (that is not using the `.flex-nowrap` utility class), each group of extra columns will wrap onto a new line.\n\nIn the example below, the first and second **v-col** components are a total of 13 columns wide, which means the second **v-col** gets wrapped to a new line.\n\n<ExamplesExample file=\"grid/misc-column-wrapping\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Column wrapping",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000719",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000720",
    "text": "Component: v-examples\nSection: Equal width columns\nType: documentation\n\n## v-examples - Equal width columns\n\nYou can break equal width columns into multiple lines using **v-responsive**.\n\n<ExamplesExample file=\"grid/misc-equal-width-columns\" />",
    "display_content": "## v-examples - Equal width columns\n\nYou can break equal width columns into multiple lines using **v-responsive**.\n\n<ExamplesExample file=\"grid/misc-equal-width-columns\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Equal width columns",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000720",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000721",
    "text": "Component: v-examples\nSection: Grow and Shrink\nType: documentation\n\n## v-examples - Grow and Shrink\n\nBy default, flex components will automatically fill the available space in a row or column. They will also shrink relative to the rest of the flex items in the flex container when a specific size is not designated. You can define the column width of the `v-col` by using the **cols** prop and providing a value from **1 to 12**.\n\n<ExamplesExample file=\"grid/misc-grow-and-shrink\" />",
    "display_content": "## v-examples - Grow and Shrink\n\nBy default, flex components will automatically fill the available space in a row or column. They will also shrink relative to the rest of the flex items in the flex container when a specific size is not designated. You can define the column width of the `v-col` by using the **cols** prop and providing a value from **1 to 12**.\n\n<ExamplesExample file=\"grid/misc-grow-and-shrink\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Grow and Shrink",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000721",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000722",
    "text": "Component: v-examples\nSection: Margin helpers\nType: documentation\n\n## v-examples - Margin helpers\n\nUsing the [auto margin helper utilities](/styles/flex#auto-margins) you can force sibling columns away from each other.\n\n<ExamplesExample file=\"grid/misc-margin-helpers\" />",
    "display_content": "## v-examples - Margin helpers\n\nUsing the [auto margin helper utilities](/styles/flex#auto-margins) you can force sibling columns away from each other.\n\n<ExamplesExample file=\"grid/misc-margin-helpers\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Margin helpers",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000722",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000723",
    "text": "Component: v-examples\nSection: Nested grid\nType: documentation\n\n## v-examples - Nested grid\n\nGrids can be nested, similar to other frameworks, in order to achieve very custom layouts.\n\n<ExamplesExample file=\"grid/misc-nested-grid\" />",
    "display_content": "## v-examples - Nested grid\n\nGrids can be nested, similar to other frameworks, in order to achieve very custom layouts.\n\n<ExamplesExample file=\"grid/misc-nested-grid\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Nested grid",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000723",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000724",
    "text": "Component: v-examples\nSection: One column width\nType: documentation\n\n## v-examples - One column width\n\nWhen using the auto-layout, you can define the width of only one column and still have its siblings to automatically resize around it.\n\n<ExamplesExample file=\"grid/misc-one-column-width\" />",
    "display_content": "## v-examples - One column width\n\nWhen using the auto-layout, you can define the width of only one column and still have its siblings to automatically resize around it.\n\n<ExamplesExample file=\"grid/misc-one-column-width\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "One column width",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000724",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000725",
    "text": "Component: v-examples\nSection: Row and column breakpoints\nType: documentation\n\n## v-examples - Row and column breakpoints\n\nDynamically change your layout based upon resolution. Resize your screen and watch the row layout change on sm, md, and lg breakpoints.\n\n<ExamplesExample file=\"grid/misc-row-and-column-breakpoints\" />",
    "display_content": "## v-examples - Row and column breakpoints\n\nDynamically change your layout based upon resolution. Resize your screen and watch the row layout change on sm, md, and lg breakpoints.\n\n<ExamplesExample file=\"grid/misc-row-and-column-breakpoints\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Row and column breakpoints",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000725",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000726",
    "text": "Component: v-examples\nSection: Spacers\nType: documentation\n\n## v-examples - Spacers\n\nThe `v-spacer` component is useful when you want to fill available space or make space between two components.\n\n<ExamplesExample file=\"grid/misc-spacer\" />\n\n<!-- #### Unique layouts\n\nThe power and flexibility of the Vuetify grid system allows you to create amazing user interfaces.\n\n<ExamplesExample file=\"grid/misc-unique-layouts\" /> -->\n\n<!-- #### Variable content width\n\nAssigning breakpoint width for columns can be configured to resize based upon the nature width of their content.\n\n<ExamplesExample file=\"grid/misc-variable-content\" /> -->",
    "display_content": "## v-examples - Spacers\n\nThe `v-spacer` component is useful when you want to fill available space or make space between two components.\n\n<ExamplesExample file=\"grid/misc-spacer\" />\n\n<!-- #### Unique layouts\n\nThe power and flexibility of the Vuetify grid system allows you to create amazing user interfaces.\n\n<ExamplesExample file=\"grid/misc-unique-layouts\" /> -->\n\n<!-- #### Variable content width\n\nAssigning breakpoint width for columns can be configured to resize based upon the nature width of their content.\n\n<ExamplesExample file=\"grid/misc-variable-content\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Spacers",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000726",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000727",
    "text": "Component: v-hover\nType: component_overview\n\n# v-hover\n\nThe `v-hover` component provides a simple interface for handling hover states for any component.",
    "display_content": "# v-hover\n\nThe `v-hover` component provides a simple interface for handling hover states for any component.",
    "metadata": {
      "component": "v-hover",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000727",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000728",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\n`v-hover` is a renderless component that uses the default slot to provide scoped access to its internal model; as well as mouse event listeners to modify it. To explicitly control the internal state, use the **model-value** property.",
    "display_content": "# v-usage\n\n`v-hover` is a renderless component that uses the default slot to provide scoped access to its internal model; as well as mouse event listeners to modify it. To explicitly control the internal state, use the **model-value** property.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000728",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000729",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-hover](/api/v-hover/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-hover](/api/v-hover/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000729",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000730",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe **disabled** prop disables the hover functionality.\n\nAvailable sections: Disabled, Open and close delay, Hover list, Transition, Misc Hover List, Misc Transition, Prop Disabled, Prop Open And Close Delay, Usage",
    "display_content": "# v-examples\n\nThe **disabled** prop disables the hover functionality.\n\nAvailable sections: Disabled, Open and close delay, Hover list, Transition, Misc Hover List, Misc Transition, Prop Disabled, Prop Open And Close Delay, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000730",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000731",
    "text": "Component: v-examples\nSection: Disabled\nType: documentation\n\n## v-examples - Disabled\n\nThe **disabled** prop disables the hover functionality.\n\n<ExamplesExample file=\"v-hover/prop-disabled\" />",
    "display_content": "## v-examples - Disabled\n\nThe **disabled** prop disables the hover functionality.\n\n<ExamplesExample file=\"v-hover/prop-disabled\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000731",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000732",
    "text": "Component: v-examples\nSection: Open and close delay\nType: documentation\n\n## v-examples - Open and close delay\n\nDelay `v-hover` events by using **open-delay** and **close-delay** props in combination or separately.\n\n<ExamplesExample file=\"v-hover/prop-open-and-close-delay\" />",
    "display_content": "## v-examples - Open and close delay\n\nDelay `v-hover` events by using **open-delay** and **close-delay** props in combination or separately.\n\n<ExamplesExample file=\"v-hover/prop-open-and-close-delay\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Open and close delay",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000732",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000733",
    "text": "Component: v-examples\nSection: Hover list\nType: documentation\n\n## v-examples - Hover list\n\n`v-hover` can be used in combination with `v-for` to make a single item stand out when the user interacts with the list.\n\n<ExamplesExample file=\"v-hover/misc-hover-list\" />",
    "display_content": "## v-examples - Hover list\n\n`v-hover` can be used in combination with `v-for` to make a single item stand out when the user interacts with the list.\n\n<ExamplesExample file=\"v-hover/misc-hover-list\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Hover list",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000733",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000734",
    "text": "Component: v-examples\nSection: Transition\nType: documentation\n\n## v-examples - Transition\n\nCreate highly customized components that respond to user interaction.\n\n<ExamplesExample file=\"v-hover/misc-transition\" />",
    "display_content": "## v-examples - Transition\n\nCreate highly customized components that respond to user interaction.\n\n<ExamplesExample file=\"v-hover/misc-transition\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Transition",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000734",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000735",
    "text": "Component: v-examples\nSection: Misc Hover List\nType: code_example\n\n## v-examples - Misc Hover List\n\n```vue\n<template>\n  <v-container class=\"pa-4 text-center\">\n    <v-row\n      align=\"center\"\n      class=\"fill-height\"\n      justify=\"center\"\n    >\n      <template v-for=\"(item, i) in items\" :key=\"i\">\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-hover v-slot=\"{ isHovering, props }\">\n            <v-card\n              :class=\"{ 'on-hover': isHovering }\"\n              :elevation=\"isHovering ? 12 : 2\"\n              v-bind=\"props\"\n            >\n              <v-img\n                :src=\"item.img\"\n                height=\"225px\"\n                cover\n              >\n                <v-card-title class=\"text-h6 text-white d-flex flex-column\">\n                  <p class=\"mt-4\">\n                    {{ item.title }}\n                  </p>\n\n                  <div>\n                    <p class=\"ma-0 text-body-1 font-weight-bold\">\n                      {{ item.text }}\n                    </p>\n                    <p class=\"text-caption font-weight-medium\">\n                      {{ item.subtext }}\n                    </p>\n                  </div>\n                </v-card-title>\n                <div class=\"align-self-center\">\n                  <v-btn\n                    v-for=\"(icon, index) in icons\"\n                    :key=\"index\"\n                    :class=\"{ 'show-btns': isHovering }\"\n                    :color=\"transparent\"\n                    :icon=\"icon\"\n                    variant=\"text\"\n                  ></v-btn>\n                </div>\n              </v-img>\n            </v-card>\n          </v-hover>\n        </v-col>\n      </template>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  const icons = ['mdi-rewind', 'mdi-play', 'mdi-fast-forward']\n  const items = [\n    {\n      title: 'New Releases',\n      text: `It's New Release Friday`,\n      subtext: 'Newly released songs.',\n      img: 'https://cdn.vuetifyjs.com/docs/images/cards/hands.jpg',\n    },\n    {\n      title: 'Rock',\n      text: 'Greatest Rock Hits',\n      subtext: 'Lose yourself in rock tunes.',\n      img: 'https://cdn.vuetifyjs.com/docs/images/cards/singer.jpg',\n    },\n    {\n      title: 'Mellow Moods',\n      text: 'Ambient Bass',\n      subtext: 'Chill beats to mellow you out.',\n      img: 'https://cdn.vuetifyjs.com/docs/images/cards/concert.jpg',\n    },\n  ]\n  const transparent = 'rgba(255, 255, 255, 0)'\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      icons: ['mdi-rewind', 'mdi-play', 'mdi-fast-forward'],\n      items: [\n        {\n          title: 'New Releases',\n          text: `It's New Release Friday`,\n          subtext: 'Newly released songs.',\n          img: 'https://cdn.vuetifyjs.com/docs/images/cards/hands.jpg',\n        },\n        {\n          title: 'Rock',\n          text: 'Greatest Rock Hits',\n          subtext: 'Lose yourself in rock tunes.',\n          img: 'https://cdn.vuetifyjs.com/docs/images/cards/singer.jpg',\n        },\n        {\n          title: 'Mellow Moods',\n          text: 'Ambient Bass',\n          subtext: 'Chill beats to mellow you out.',\n          img: 'https://cdn.vuetifyjs.com/docs/images/cards/concert.jpg',\n        },\n      ],\n      transparent: 'rgba(255, 255, 255, 0)',\n    }),\n  }\n</script>\n\n<style scoped>\n  .v-card {\n    transition: opacity .4s ease-in-out;\n  }\n\n  .v-card:not(.on-hover) {\n    opacity: 0.6;\n  }\n\n  .show-btns {\n    color: rgba(255, 255, 255, 1) !important;\n  }\n</style>\n\n```",
    "display_content": "## v-examples - Misc Hover List\n\n```vue\n<template>\n  <v-container class=\"pa-4 text-center\">\n    <v-row\n      align=\"center\"\n      class=\"fill-height\"\n      justify=\"center\"\n    >\n      <template v-for=\"(item, i) in items\" :key=\"i\">\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-hover v-slot=\"{ isHovering, props }\">\n            <v-card\n              :class=\"{ 'on-hover': isHovering }\"\n              :elevation=\"isHovering ? 12 : 2\"\n              v-bind=\"props\"\n            >\n              <v-img\n                :src=\"item.img\"\n                height=\"225px\"\n                cover\n              >\n                <v-card-title class=\"text-h6 text-white d-flex flex-column\">\n                  <p class=\"mt-4\">\n                    {{ item.title }}\n                  </p>\n\n                  <div>\n                    <p class=\"ma-0 text-body-1 font-weight-bold\">\n                      {{ item.text }}\n                    </p>\n                    <p class=\"text-caption font-weight-medium\">\n                      {{ item.subtext }}\n                    </p>\n                  </div>\n                </v-card-title>\n                <div class=\"align-self-center\">\n                  <v-btn\n                    v-for=\"(icon, index) in icons\"\n                    :key=\"index\"\n                    :class=\"{ 'show-btns': isHovering }\"\n                    :color=\"transparent\"\n                    :icon=\"icon\"\n                    variant=\"text\"\n                  ></v-btn>\n                </div>\n              </v-img>\n            </v-card>\n          </v-hover>\n        </v-col>\n      </template>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  const icons = ['mdi-rewind', 'mdi-play', 'mdi-fast-forward']\n  const items = [\n    {\n      title: 'New Releases',\n      text: `It's New Release Friday`,\n      subtext: 'Newly released songs.',\n      img: 'https://cdn.vuetifyjs.com/docs/images/cards/hands.jpg',\n    },\n    {\n      title: 'Rock',\n      text: 'Greatest Rock Hits',\n      subtext: 'Lose yourself in rock tunes.',\n      img: 'https://cdn.vuetifyjs.com/docs/images/cards/singer.jpg',\n    },\n    {\n      title: 'Mellow Moods',\n      text: 'Ambient Bass',\n      subtext: 'Chill beats to mellow you out.',\n      img: 'https://cdn.vuetifyjs.com/docs/images/cards/concert.jpg',\n    },\n  ]\n  const transparent = 'rgba(255, 255, 255, 0)'\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      icons: ['mdi-rewind', 'mdi-play', 'mdi-fast-forward'],\n      items: [\n        {\n          title: 'New Releases',\n          text: `It's New Release Friday`,\n          subtext: 'Newly released songs.',\n          img: 'https://cdn.vuetifyjs.com/docs/images/cards/hands.jpg',\n        },\n        {\n          title: 'Rock',\n          text: 'Greatest Rock Hits',\n          subtext: 'Lose yourself in rock tunes.',\n          img: 'https://cdn.vuetifyjs.com/docs/images/cards/singer.jpg',\n        },\n        {\n          title: 'Mellow Moods',\n          text: 'Ambient Bass',\n          subtext: 'Chill beats to mellow you out.',\n          img: 'https://cdn.vuetifyjs.com/docs/images/cards/concert.jpg',\n        },\n      ],\n      transparent: 'rgba(255, 255, 255, 0)',\n    }),\n  }\n</script>\n\n<style scoped>\n  .v-card {\n    transition: opacity .4s ease-in-out;\n  }\n\n  .v-card:not(.on-hover) {\n    opacity: 0.6;\n  }\n\n  .show-btns {\n    color: rgba(255, 255, 255, 1) !important;\n  }\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Hover List",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000735",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000736",
    "text": "Component: v-examples\nSection: Misc Transition\nType: code_example\n\n## v-examples - Misc Transition\n\n```vue\n<template>\n  <div>\n    <v-hover v-slot=\"{ isHovering, props }\">\n      <v-card\n        class=\"mx-auto\"\n        color=\"grey-lighten-4\"\n        max-width=\"600\"\n        v-bind=\"props\"\n      >\n        <v-img\n          :aspect-ratio=\"16/9\"\n          src=\"https://cdn.vuetifyjs.com/images/cards/kitchen.png\"\n          cover\n        >\n          <v-expand-transition>\n            <div\n              v-if=\"isHovering\"\n              class=\"d-flex bg-orange-darken-2 v-card--reveal text-h2\"\n              style=\"height: 100%;\"\n            >\n              $14.99\n            </div>\n          </v-expand-transition>\n        </v-img>\n\n        <v-card-text class=\"pt-6\">\n          <div class=\"font-weight-light text-grey text-h6 mb-2\">\n            For the perfect meal\n          </div>\n\n          <h3 class=\"text-h4 font-weight-light text-orange mb-2\">\n            QW cooking utensils\n          </h3>\n\n          <div class=\"font-weight-light text-h6 mb-2\">\n            Our Vintage kitchen utensils delight any chef.<br>\n            Made of bamboo by hand\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-hover>\n  </div>\n</template>\n\n<style>\n  .v-card--reveal {\n    align-items: center;\n    bottom: 0;\n    justify-content: center;\n    opacity: .9;\n    position: absolute;\n    width: 100%;\n  }\n</style>\n\n```",
    "display_content": "## v-examples - Misc Transition\n\n```vue\n<template>\n  <div>\n    <v-hover v-slot=\"{ isHovering, props }\">\n      <v-card\n        class=\"mx-auto\"\n        color=\"grey-lighten-4\"\n        max-width=\"600\"\n        v-bind=\"props\"\n      >\n        <v-img\n          :aspect-ratio=\"16/9\"\n          src=\"https://cdn.vuetifyjs.com/images/cards/kitchen.png\"\n          cover\n        >\n          <v-expand-transition>\n            <div\n              v-if=\"isHovering\"\n              class=\"d-flex bg-orange-darken-2 v-card--reveal text-h2\"\n              style=\"height: 100%;\"\n            >\n              $14.99\n            </div>\n          </v-expand-transition>\n        </v-img>\n\n        <v-card-text class=\"pt-6\">\n          <div class=\"font-weight-light text-grey text-h6 mb-2\">\n            For the perfect meal\n          </div>\n\n          <h3 class=\"text-h4 font-weight-light text-orange mb-2\">\n            QW cooking utensils\n          </h3>\n\n          <div class=\"font-weight-light text-h6 mb-2\">\n            Our Vintage kitchen utensils delight any chef.<br>\n            Made of bamboo by hand\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-hover>\n  </div>\n</template>\n\n<style>\n  .v-card--reveal {\n    align-items: center;\n    bottom: 0;\n    justify-content: center;\n    opacity: .9;\n    position: absolute;\n    width: 100%;\n  }\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Transition",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000736",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000737",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    justify=\"center\"\n  >\n    <v-col cols=\"12\">\n      <v-hover\n        v-slot=\"{ isHovering, props }\"\n        disabled\n      >\n        <v-card\n          :elevation=\"isHovering ? 12 : 2\"\n          class=\"mx-auto\"\n          height=\"350\"\n          max-width=\"350\"\n          v-bind=\"props\"\n        >\n          <v-card-text class=\"my-4 text-center text-h6\">\n            Hover over me!\n          </v-card-text>\n        </v-card>\n      </v-hover>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    justify=\"center\"\n  >\n    <v-col cols=\"12\">\n      <v-hover\n        v-slot=\"{ isHovering, props }\"\n        disabled\n      >\n        <v-card\n          :elevation=\"isHovering ? 12 : 2\"\n          class=\"mx-auto\"\n          height=\"350\"\n          max-width=\"350\"\n          v-bind=\"props\"\n        >\n          <v-card-text class=\"my-4 text-center text-h6\">\n            Hover over me!\n          </v-card-text>\n        </v-card>\n      </v-hover>\n    </v-col>\n  </v-row>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000737",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000738",
    "text": "Component: v-examples\nSection: Prop Open And Close Delay\nType: code_example\n\n## v-examples - Prop Open And Close Delay\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-hover\n        v-slot=\"{ isHovering, props }\"\n        open-delay=\"200\"\n      >\n        <v-card\n          :class=\"{ 'on-hover': isHovering }\"\n          :elevation=\"isHovering ? 16 : 2\"\n          class=\"mx-auto\"\n          height=\"350\"\n          max-width=\"350\"\n          v-bind=\"props\"\n        >\n          <v-card-text class=\"font-weight-medium mt-12 text-center text-subtitle-1\">\n            Open Delay (Mouse enter)\n          </v-card-text>\n        </v-card>\n      </v-hover>\n    </v-col>\n\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-hover\n        v-slot=\"{ isHovering, props }\"\n        close-delay=\"200\"\n      >\n        <v-card\n          :class=\"{ 'on-hover': isHovering }\"\n          :elevation=\"isHovering ? 16 : 2\"\n          class=\"mx-auto\"\n          height=\"350\"\n          max-width=\"350\"\n          v-bind=\"props\"\n        >\n          <v-card-text class=\"font-weight-medium mt-12 text-center text-subtitle-1\">\n            Close Delay (Mouse leave)\n          </v-card-text>\n        </v-card>\n      </v-hover>\n    </v-col>\n  </v-row>\n</template>\n\n<style lang=\"sass\" scoped>\n.v-card.on-hover.v-theme--dark\n  background-color: rgba(#FFF, 0.8)\n  >.v-card__text\n    color: #000\n</style>\n\n```",
    "display_content": "## v-examples - Prop Open And Close Delay\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-hover\n        v-slot=\"{ isHovering, props }\"\n        open-delay=\"200\"\n      >\n        <v-card\n          :class=\"{ 'on-hover': isHovering }\"\n          :elevation=\"isHovering ? 16 : 2\"\n          class=\"mx-auto\"\n          height=\"350\"\n          max-width=\"350\"\n          v-bind=\"props\"\n        >\n          <v-card-text class=\"font-weight-medium mt-12 text-center text-subtitle-1\">\n            Open Delay (Mouse enter)\n          </v-card-text>\n        </v-card>\n      </v-hover>\n    </v-col>\n\n    <v-col\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <v-hover\n        v-slot=\"{ isHovering, props }\"\n        close-delay=\"200\"\n      >\n        <v-card\n          :class=\"{ 'on-hover': isHovering }\"\n          :elevation=\"isHovering ? 16 : 2\"\n          class=\"mx-auto\"\n          height=\"350\"\n          max-width=\"350\"\n          v-bind=\"props\"\n        >\n          <v-card-text class=\"font-weight-medium mt-12 text-center text-subtitle-1\">\n            Close Delay (Mouse leave)\n          </v-card-text>\n        </v-card>\n      </v-hover>\n    </v-col>\n  </v-row>\n</template>\n\n<style lang=\"sass\" scoped>\n.v-card.on-hover.v-theme--dark\n  background-color: rgba(#FFF, 0.8)\n  >.v-card__text\n    color: #000\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Open And Close Delay",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000738",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000739",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-hover v-bind=\"props\">\n        <template v-slot:default=\"{ isHovering, props: hoverProps }\">\n          <v-card\n            v-bind=\"hoverProps\"\n            :color=\"isHovering ? 'primary' : undefined\"\n            text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n            title=\"Hover over me\"\n          ></v-card>\n        </template>\n      </v-hover>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-hover'\n  const model = ref('default')\n  const options = []\n  const props = computed(() => {\n    return {}\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:default=\"{ isHovering, props }\">\n    <v-card\n      v-bind=\"props\"\n      :color=\"isHovering ? 'primary' : undefined\"\n      title=\"Hover over me\"\n      text=\"...\"\n    ></v-card>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-hover v-bind=\"props\">\n        <template v-slot:default=\"{ isHovering, props: hoverProps }\">\n          <v-card\n            v-bind=\"hoverProps\"\n            :color=\"isHovering ? 'primary' : undefined\"\n            text=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\"\n            title=\"Hover over me\"\n          ></v-card>\n        </template>\n      </v-hover>\n    </div>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-hover'\n  const model = ref('default')\n  const options = []\n  const props = computed(() => {\n    return {}\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:default=\"{ isHovering, props }\">\n    <v-card\n      v-bind=\"props\"\n      :color=\"isHovering ? 'primary' : undefined\"\n      title=\"Hover over me\"\n      text=\"...\"\n    ></v-card>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000739",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000740",
    "text": "Component: v-icons\nType: component_overview\n\n# v-icons\n\nThe `v-icon` component provides a large set of glyphs to provide context to various aspects of your application. For a list of all available icons, visit the official [Material Design Icons](https://materialdesignicons.com/) page. To use any of these icons simply use the `mdi-` prefix followed by the icon name.",
    "display_content": "# v-icons\n\nThe `v-icon` component provides a large set of glyphs to provide context to various aspects of your application. For a list of all available icons, visit the official [Material Design Icons](https://materialdesignicons.com/) page. To use any of these icons simply use the `mdi-` prefix followed by the icon name.",
    "metadata": {
      "component": "v-icons",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000740",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000741",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nIcons come in two themes (light and dark), and five different sizes (x-small, small, medium (default), large, and x-large).",
    "display_content": "# v-usage\n\nIcons come in two themes (light and dark), and five different sizes (x-small, small, medium (default), large, and x-large).",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000741",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000742",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-icon](/api/v-icon/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-icon](/api/v-icon/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000742",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000743",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nUsing color helpers you can change the color of an icon from the standard dark and light themes.\n\nAvailable sections: Color, Click, Buttons, Font Awesome, Material Design, MDI SVG",
    "display_content": "# v-examples\n\nUsing color helpers you can change the color of an icon from the standard dark and light themes.\n\nAvailable sections: Color, Click, Buttons, Font Awesome, Material Design, MDI SVG",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000743",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000744",
    "text": "Component: v-examples\nSection: Color\nType: documentation\n\n## v-examples - Color\n\nUsing color helpers you can change the color of an icon from the standard dark and light themes.\n\n<ExamplesExample file=\"v-icon/prop-color\" />\n\n<!-- ### Events",
    "display_content": "## v-examples - Color\n\nUsing color helpers you can change the color of an icon from the standard dark and light themes.\n\n<ExamplesExample file=\"v-icon/prop-color\" />\n\n<!-- ### Events",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000744",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000745",
    "text": "Component: v-examples\nSection: Click\nType: documentation\n\n## v-examples - Click\n\nBinding any click event to `v-icon` will automatically change the cursor to a pointer.\n\n<ExamplesExample file=\"v-icon/event-click\" /> -->",
    "display_content": "## v-examples - Click\n\nBinding any click event to `v-icon` will automatically change the cursor to a pointer.\n\n<ExamplesExample file=\"v-icon/event-click\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Click",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000745",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000746",
    "text": "Component: v-examples\nSection: Buttons\nType: documentation\n\n## v-examples - Buttons\n\nIcons can be used inside of buttons to add emphasis to the action.\n\n<ExamplesExample file=\"v-icon/misc-buttons\" />",
    "display_content": "## v-examples - Buttons\n\nIcons can be used inside of buttons to add emphasis to the action.\n\n<ExamplesExample file=\"v-icon/misc-buttons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Buttons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000746",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000747",
    "text": "Component: v-examples\nSection: Font Awesome\nType: documentation\n\n## v-examples - Font Awesome\n\n[Font Awesome](https://fontawesome.com/icons/) is also supported. Simply use the `fa-` prefixed icon name. Please note that you still need to include the Font Awesome icons in your project. For more information on how to install it, please navigate to the [installation page](/features/icon-fonts#install-font-awesome-5-icons)\n\n::: info\n  Note that this example is using an icon set prefix, because the default icon set in the documentation is `mdi`. You can read more about using multiple icon sets [here](/features/icon-fonts/#multiple-icon-sets)\n:::\n\n<ExamplesExample file=\"v-icon/misc-font-awesome\" />",
    "display_content": "## v-examples - Font Awesome\n\n[Font Awesome](https://fontawesome.com/icons/) is also supported. Simply use the `fa-` prefixed icon name. Please note that you still need to include the Font Awesome icons in your project. For more information on how to install it, please navigate to the [installation page](/features/icon-fonts#install-font-awesome-5-icons)\n\n::: info\n  Note that this example is using an icon set prefix, because the default icon set in the documentation is `mdi`. You can read more about using multiple icon sets [here](/features/icon-fonts/#multiple-icon-sets)\n:::\n\n<ExamplesExample file=\"v-icon/misc-font-awesome\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Font Awesome",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000747",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000748",
    "text": "Component: v-examples\nSection: Material Design\nType: documentation\n\n## v-examples - Material Design\n\n[Material Design](https://fonts.google.com/icons) is also supported. For more information on how to install it please [navigate here](/features/icon-fonts#install-material-icons)\n\n::: info\n  Note that this example is using an icon set prefix, because the default icon set in the documentation is `mdi`. You can read more about using multiple icon sets [here](/features/icon-fonts/#multiple-icon-sets)\n:::\n\n<ExamplesExample file=\"v-icon/misc-md\" />",
    "display_content": "## v-examples - Material Design\n\n[Material Design](https://fonts.google.com/icons) is also supported. For more information on how to install it please [navigate here](/features/icon-fonts#install-material-icons)\n\n::: info\n  Note that this example is using an icon set prefix, because the default icon set in the documentation is `mdi`. You can read more about using multiple icon sets [here](/features/icon-fonts/#multiple-icon-sets)\n:::\n\n<ExamplesExample file=\"v-icon/misc-md\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Material Design",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000748",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000749",
    "text": "Component: v-examples\nSection: MDI SVG\nType: documentation\n\n## v-examples - MDI SVG\n\nYou can manually import only the icons you use when using the [@mdi/js](https://www.npmjs.com/package/@mdi/js) package. Read more about using them [here](/features/icon-fonts#material-design-icons-js-svg).\n\n::: info\n  Note that this example is using an icon set prefix, because the default icon set in the documentation is `mdi`. You can read more about using multiple icon sets [here](/features/icon-fonts/#multiple-icon-sets)\n:::\n\n<ExamplesExample file=\"v-icon/misc-mdi-svg\" />",
    "display_content": "## v-examples - MDI SVG\n\nYou can manually import only the icons you use when using the [@mdi/js](https://www.npmjs.com/package/@mdi/js) package. Read more about using them [here](/features/icon-fonts#material-design-icons-js-svg).\n\n::: info\n  Note that this example is using an icon set prefix, because the default icon set in the documentation is `mdi`. You can read more about using multiple icon sets [here](/features/icon-fonts/#multiple-icon-sets)\n:::\n\n<ExamplesExample file=\"v-icon/misc-mdi-svg\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "MDI SVG",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000749",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000750",
    "text": "Component: v-accessibility\nType: component_overview\n\n# v-accessibility\n\nIcons can convey all sorts of meaningful information, so it’s important that they reach the largest amount of people possible. There are two use cases you’ll want to consider:\n\nAvailable sections: Decorative Font Icons, Semantic Font Icons, Decorative SVG Icons, Semantic SVG Icons, Event Click, Usage, Misc Buttons, Misc Font Awesome, Misc Md, Misc Mdi Svg, Prop Color",
    "display_content": "# v-accessibility\n\nIcons can convey all sorts of meaningful information, so it’s important that they reach the largest amount of people possible. There are two use cases you’ll want to consider:\n\nAvailable sections: Decorative Font Icons, Semantic Font Icons, Decorative SVG Icons, Semantic SVG Icons, Event Click, Usage, Misc Buttons, Misc Font Awesome, Misc Md, Misc Mdi Svg, Prop Color",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000750",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000751",
    "text": "Component: v-accessibility\nSection: Decorative Font Icons\nType: documentation\n\n## v-accessibility - Decorative Font Icons\n\nIf your icons are purely decorative, you’ll need to manually add an attribute to each of your icons so they’re accessible.`aria-hidden`(automatically by vuetify)",
    "display_content": "## v-accessibility - Decorative Font Icons\n\nIf your icons are purely decorative, you’ll need to manually add an attribute to each of your icons so they’re accessible.`aria-hidden`(automatically by vuetify)",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "subsection",
      "subsection": "Decorative Font Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000751",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000752",
    "text": "Component: v-accessibility\nSection: Semantic Font Icons\nType: code_example\n\n## v-accessibility - Semantic Font Icons\n\nIf your icons have semantic meaning, you need to provide a text alternative inside a (or similar) element. Also include appropriate CSS to visually hide the element while keeping it accessible to assistive technologies.\n\n```html\n<v-icon aria-hidden=\"false\">\n  mdi-account\n</v-icon>\n```",
    "display_content": "## v-accessibility - Semantic Font Icons\n\nIf your icons have semantic meaning, you need to provide a text alternative inside a (or similar) element. Also include appropriate CSS to visually hide the element while keeping it accessible to assistive technologies.\n\n```html\n<v-icon aria-hidden=\"false\">\n  mdi-account\n</v-icon>\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Semantic Font Icons",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000752",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000753",
    "text": "Component: v-accessibility\nSection: Decorative SVG Icons\nType: documentation\n\n## v-accessibility - Decorative SVG Icons\n\nIf your icons are purely decorative, you’ll need to manually add an attribute to each of your icons so they’re accessible.`aria-hidden`(automatically by vuetify)",
    "display_content": "## v-accessibility - Decorative SVG Icons\n\nIf your icons are purely decorative, you’ll need to manually add an attribute to each of your icons so they’re accessible.`aria-hidden`(automatically by vuetify)",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "subsection",
      "subsection": "Decorative SVG Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000753",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000754",
    "text": "Component: v-accessibility\nSection: Semantic SVG Icons\nType: documentation\n\n## v-accessibility - Semantic SVG Icons\n\nApply accessibility attributes to the [v-icon](/components/icons/) component, such as `role=\"img\"`, to give it a semantic meaning.\n\n```html { resource=\"Component.vue\" }\n<v-icon aria-label=\"My Account\" role=\"img\" aria-hidden=\"false\">\n  mdiAccount\n</v-icon>\n\n<script setup>\nimport { mdiAccount } from \"@mdi/js\";\n\nconst icons = { mdiAccount }\n</script>\n```",
    "display_content": "## v-accessibility - Semantic SVG Icons\n\nApply accessibility attributes to the [v-icon](/components/icons/) component, such as `role=\"img\"`, to give it a semantic meaning.\n\n```html { resource=\"Component.vue\" }\n<v-icon aria-label=\"My Account\" role=\"img\" aria-hidden=\"false\">\n  mdiAccount\n</v-icon>\n\n<script setup>\nimport { mdiAccount } from \"@mdi/js\";\n\nconst icons = { mdiAccount }\n</script>\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "subsection",
      "subsection": "Semantic SVG Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000754",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000755",
    "text": "Component: v-accessibility\nSection: Event Click\nType: code_example\n\n## v-accessibility - Event Click\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar\n      color=\"pink\"\n      dark\n      dense\n      flat\n    >\n      <v-toolbar-title class=\"text-body-2\">\n        Upcoming Changes\n      </v-toolbar-title>\n    </v-toolbar>\n    <v-card-text>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n    </v-card-text>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-icon\n        size=\"large\"\n        @click=\"next\"\n      >\n        mdi-chevron-right\n      </v-icon>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  function next () {\n    alert('You clicked next!')\n  }\n</script>\n\n<script>\n  export default {\n    methods: {\n      next () {\n        alert('You clicked next!')\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-accessibility - Event Click\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar\n      color=\"pink\"\n      dark\n      dense\n      flat\n    >\n      <v-toolbar-title class=\"text-body-2\">\n        Upcoming Changes\n      </v-toolbar-title>\n    </v-toolbar>\n    <v-card-text>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n    </v-card-text>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-icon\n        size=\"large\"\n        @click=\"next\"\n      >\n        mdi-chevron-right\n      </v-icon>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  function next () {\n    alert('You clicked next!')\n  }\n</script>\n\n<script>\n  export default {\n    methods: {\n      next () {\n        alert('You clicked next!')\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Event Click",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000755",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000756",
    "text": "Component: v-accessibility\nSection: Usage\nType: code_example\n\n## v-accessibility - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-icon v-bind=\"props\"></v-icon>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select v-model=\"size\" :items=\"sizes\" label=\"Size\"></v-select>\n\n      <v-select v-model=\"color\" :items=\"colors\" label=\"Color\"></v-select>\n\n      <v-select v-model=\"icon\" :items=\"icons\" label=\"Icon\" clearable></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-icon'\n  const model = ref('default')\n  const icon = ref()\n  const size = ref()\n  const color = ref()\n  const options = []\n  const props = computed(() => {\n    return {\n      color: color.value || undefined,\n      icon: icon.value || '$vuetify',\n      size: ['', 'medium'].includes(size.value) ? undefined : size.value,\n    }\n  })\n  const colors = [\n    'success',\n    'info',\n    'warning',\n    'error',\n  ]\n  const icons = [\n    'mdi-plus',\n    'mdi-check-circle',\n    'mdi-information',\n    'mdi-alert',\n    'mdi-alert-circle',\n    'mdi-wifi',\n    'mdi-access-point',\n    'mdi-antenna',\n  ]\n  const sizes = [\n    'x-small',\n    'small',\n    'medium',\n    'large',\n    'x-large',\n  ]\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-accessibility - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-icon v-bind=\"props\"></v-icon>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select v-model=\"size\" :items=\"sizes\" label=\"Size\"></v-select>\n\n      <v-select v-model=\"color\" :items=\"colors\" label=\"Color\"></v-select>\n\n      <v-select v-model=\"icon\" :items=\"icons\" label=\"Icon\" clearable></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-icon'\n  const model = ref('default')\n  const icon = ref()\n  const size = ref()\n  const color = ref()\n  const options = []\n  const props = computed(() => {\n    return {\n      color: color.value || undefined,\n      icon: icon.value || '$vuetify',\n      size: ['', 'medium'].includes(size.value) ? undefined : size.value,\n    }\n  })\n  const colors = [\n    'success',\n    'info',\n    'warning',\n    'error',\n  ]\n  const icons = [\n    'mdi-plus',\n    'mdi-check-circle',\n    'mdi-information',\n    'mdi-alert',\n    'mdi-alert-circle',\n    'mdi-wifi',\n    'mdi-access-point',\n    'mdi-antenna',\n  ]\n  const sizes = [\n    'x-small',\n    'small',\n    'medium',\n    'large',\n    'x-large',\n  ]\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000756",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000757",
    "text": "Component: v-accessibility\nSection: Misc Buttons\nType: code_example\n\n## v-accessibility - Misc Buttons\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <div>\n      <v-btn\n        class=\"ma-2\"\n        color=\"primary\"\n      >\n        Accept\n        <v-icon\n          icon=\"mdi-checkbox-marked-circle\"\n          end\n        ></v-icon>\n      </v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n        color=\"red\"\n      >\n        Decline\n        <v-icon\n          icon=\"mdi-cancel\"\n          end\n        ></v-icon>\n      </v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n      >\n        <v-icon\n          icon=\"mdi-minus-circle\"\n          start\n        ></v-icon>\n        Cancel\n      </v-btn>\n    </div>\n\n    <div>\n      <v-btn\n        class=\"ma-2\"\n        color=\"orange-darken-2\"\n      >\n        <v-icon\n          icon=\"mdi-arrow-left\"\n          start\n        ></v-icon>\n        Back\n      </v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n        color=\"purple\"\n        icon=\"mdi-wrench\"\n      ></v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n        color=\"indigo\"\n        icon=\"mdi-cloud-upload\"\n      ></v-btn>\n    </div>\n\n    <div>\n      <v-btn\n        class=\"ma-2\"\n        color=\"blue-lighten-2\"\n        icon=\"mdi-thumb-up\"\n        variant=\"text\"\n      ></v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n        color=\"red-lighten-2\"\n        icon=\"mdi-thumb-down\"\n        variant=\"text\"\n      ></v-btn>\n    </div>\n  </div>\n</template>\n\n```",
    "display_content": "## v-accessibility - Misc Buttons\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <div>\n      <v-btn\n        class=\"ma-2\"\n        color=\"primary\"\n      >\n        Accept\n        <v-icon\n          icon=\"mdi-checkbox-marked-circle\"\n          end\n        ></v-icon>\n      </v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n        color=\"red\"\n      >\n        Decline\n        <v-icon\n          icon=\"mdi-cancel\"\n          end\n        ></v-icon>\n      </v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n      >\n        <v-icon\n          icon=\"mdi-minus-circle\"\n          start\n        ></v-icon>\n        Cancel\n      </v-btn>\n    </div>\n\n    <div>\n      <v-btn\n        class=\"ma-2\"\n        color=\"orange-darken-2\"\n      >\n        <v-icon\n          icon=\"mdi-arrow-left\"\n          start\n        ></v-icon>\n        Back\n      </v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n        color=\"purple\"\n        icon=\"mdi-wrench\"\n      ></v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n        color=\"indigo\"\n        icon=\"mdi-cloud-upload\"\n      ></v-btn>\n    </div>\n\n    <div>\n      <v-btn\n        class=\"ma-2\"\n        color=\"blue-lighten-2\"\n        icon=\"mdi-thumb-up\"\n        variant=\"text\"\n      ></v-btn>\n\n      <v-btn\n        class=\"ma-2\"\n        color=\"red-lighten-2\"\n        icon=\"mdi-thumb-down\"\n        variant=\"text\"\n      ></v-btn>\n    </div>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Misc Buttons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000757",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000758",
    "text": "Component: v-accessibility\nSection: Misc Font Awesome\nType: code_example\n\n## v-accessibility - Misc Font Awesome\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-icon icon=\"fa:fas fa-lock\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-search\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-list\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-edit\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-tachometer-alt\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-circle-notch fa-spin\"></v-icon>\n  </div>\n</template>\n\n<playground-resources lang=\"json\">\n  {\n    \"css\": [\"https://use.fontawesome.com/releases/v5.1.0/css/all.css\"]\n  }\n</playground-resources>\n\n```",
    "display_content": "## v-accessibility - Misc Font Awesome\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-icon icon=\"fa:fas fa-lock\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-search\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-list\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-edit\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-tachometer-alt\"></v-icon>\n\n    <v-icon icon=\"fa:fas fa-circle-notch fa-spin\"></v-icon>\n  </div>\n</template>\n\n<playground-resources lang=\"json\">\n  {\n    \"css\": [\"https://use.fontawesome.com/releases/v5.1.0/css/all.css\"]\n  }\n</playground-resources>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Misc Font Awesome",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000758",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000759",
    "text": "Component: v-accessibility\nSection: Misc Md\nType: code_example\n\n## v-accessibility - Misc Md\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-icon icon=\"md:home\"></v-icon>\n    <v-icon icon=\"md:event\"></v-icon>\n    <v-icon icon=\"md:info\"></v-icon>\n    <v-icon icon=\"md:folder_open\"></v-icon>\n    <v-icon icon=\"md:widgets\"></v-icon>\n    <v-icon icon=\"md:gavel\"></v-icon>\n  </div>\n</template>\n\n```",
    "display_content": "## v-accessibility - Misc Md\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-icon icon=\"md:home\"></v-icon>\n    <v-icon icon=\"md:event\"></v-icon>\n    <v-icon icon=\"md:info\"></v-icon>\n    <v-icon icon=\"md:folder_open\"></v-icon>\n    <v-icon icon=\"md:widgets\"></v-icon>\n    <v-icon icon=\"md:gavel\"></v-icon>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Misc Md",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000759",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000760",
    "text": "Component: v-accessibility\nSection: Misc Mdi Svg\nType: code_example\n\n## v-accessibility - Misc Mdi Svg\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-icon :icon=\"`mdiSvg:${mdiAccount}`\"></v-icon>\n    <v-icon :icon=\"`mdiSvg:${mdiPencil}`\"></v-icon>\n    <v-icon :icon=\"`mdiSvg:${mdiShareVariant}`\"></v-icon>\n    <v-icon :icon=\"`mdiSvg:${mdiDelete}`\"></v-icon>\n  </div>\n</template>\n\n<script setup>\n  import { mdiAccount, mdiDelete, mdiPencil, mdiShareVariant } from '@mdi/js'\n</script>\n\n<script>\n  import {\n    mdiAccount,\n    mdiDelete,\n    mdiPencil,\n    mdiShareVariant,\n  } from '@mdi/js'\n\n  export default {\n    data: () => ({\n      mdiAccount,\n      mdiPencil,\n      mdiShareVariant,\n      mdiDelete,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-accessibility - Misc Mdi Svg\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-icon :icon=\"`mdiSvg:${mdiAccount}`\"></v-icon>\n    <v-icon :icon=\"`mdiSvg:${mdiPencil}`\"></v-icon>\n    <v-icon :icon=\"`mdiSvg:${mdiShareVariant}`\"></v-icon>\n    <v-icon :icon=\"`mdiSvg:${mdiDelete}`\"></v-icon>\n  </div>\n</template>\n\n<script setup>\n  import { mdiAccount, mdiDelete, mdiPencil, mdiShareVariant } from '@mdi/js'\n</script>\n\n<script>\n  import {\n    mdiAccount,\n    mdiDelete,\n    mdiPencil,\n    mdiShareVariant,\n  } from '@mdi/js'\n\n  export default {\n    data: () => ({\n      mdiAccount,\n      mdiPencil,\n      mdiShareVariant,\n      mdiDelete,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Misc Mdi Svg",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000760",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000761",
    "text": "Component: v-accessibility\nSection: Prop Color\nType: code_example\n\n## v-accessibility - Prop Color\n\n```vue\n<template>\n  <v-row class=\"py-4\" justify=\"space-around\">\n    <v-icon\n      color=\"green-darken-2\"\n      icon=\"mdi-domain\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"blue-darken-2\"\n      icon=\"mdi-message-text\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"purple-darken-2\"\n      icon=\"mdi-dialpad\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"teal-darken-2\"\n      icon=\"mdi-email\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"blue-grey-darken-2\"\n      icon=\"mdi-call-split\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"orange-darken-2\"\n      icon=\"mdi-arrow-up-bold-box-outline\"\n      size=\"large\"\n    ></v-icon>\n  </v-row>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Color\n\n```vue\n<template>\n  <v-row class=\"py-4\" justify=\"space-around\">\n    <v-icon\n      color=\"green-darken-2\"\n      icon=\"mdi-domain\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"blue-darken-2\"\n      icon=\"mdi-message-text\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"purple-darken-2\"\n      icon=\"mdi-dialpad\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"teal-darken-2\"\n      icon=\"mdi-email\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"blue-grey-darken-2\"\n      icon=\"mdi-call-split\"\n      size=\"large\"\n    ></v-icon>\n\n    <v-icon\n      color=\"orange-darken-2\"\n      icon=\"mdi-arrow-up-bold-box-outline\"\n      size=\"large\"\n    ></v-icon>\n  </v-row>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000761",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000762",
    "text": "Component: v-icon-buttons\nType: component_overview\n\n# v-icon-buttons\n\nThe `v-icon-btn` component is a lightweight button component for iconography.",
    "display_content": "# v-icon-buttons\n\nThe `v-icon-btn` component is a lightweight button component for iconography.",
    "metadata": {
      "component": "v-icon-buttons",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000762",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000763",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "display_content": "# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000763",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000764",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-icon-btn](/api/v-icon-btn/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-icon-btn](/api/v-icon-btn/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000764",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000765",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-icon-btn` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-icon-btn` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000765",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000766",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-icon-btn` component is a lightweight reusable button that displays icons and text in various states.\n\nAvailable sections: Using with vue-router, Props, Active, Opacity, Rotate, Examples, Dialog, Video controls, Markdown editor, Datatable actions",
    "display_content": "# v-guide\n\nThe `v-icon-btn` component is a lightweight reusable button that displays icons and text in various states.\n\nAvailable sections: Using with vue-router, Props, Active, Opacity, Rotate, Examples, Dialog, Video controls, Markdown editor, Datatable actions",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000766",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000767",
    "text": "Component: v-guide\nSection: Using with vue-router\nType: code_example\n\n## v-guide - Using with vue-router\n\nThe `v-icon-btn` component does not have built in support for vue-router. The following example demonstrates how to use the `v-icon-btn` component with the `router-link` component:\n\n```html\n<template>\n  <RouterLink v-slot=\"{ navigate, isActive }\" to=\"/page1\" custom>\n    <v-icon-btn\n      :active=\"isActive\"\n      color=\"primary\"\n      icon=\"$vuetify\"\n      tag=\"a\"\n      @click=\"navigate\"\n    />\n  </RouterLink>\n</template>\n```",
    "display_content": "## v-guide - Using with vue-router\n\nThe `v-icon-btn` component does not have built in support for vue-router. The following example demonstrates how to use the `v-icon-btn` component with the `router-link` component:\n\n```html\n<template>\n  <RouterLink v-slot=\"{ navigate, isActive }\" to=\"/page1\" custom>\n    <v-icon-btn\n      :active=\"isActive\"\n      color=\"primary\"\n      icon=\"$vuetify\"\n      tag=\"a\"\n      @click=\"navigate\"\n    />\n  </RouterLink>\n</template>\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Using with vue-router",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000767",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000768",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-icon-btn` supports various stylistic props to customize the appearance of the button and its icon.",
    "display_content": "## v-guide - Props\n\nThe `v-icon-btn` supports various stylistic props to customize the appearance of the button and its icon.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000768",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000769",
    "text": "Component: v-guide\nSection: Active\nType: documentation\n\n## v-guide - Active\n\nThe **active** prop is used to control the active state of the button and should be used in conjunction with the **active-color** prop.\n\n<ExamplesExample file=\"v-icon-btn/prop-active\" />",
    "display_content": "## v-guide - Active\n\nThe **active** prop is used to control the active state of the button and should be used in conjunction with the **active-color** prop.\n\n<ExamplesExample file=\"v-icon-btn/prop-active\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Active",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000769",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000770",
    "text": "Component: v-guide\nSection: Opacity\nType: documentation\n\n## v-guide - Opacity\n\nThe **opacity** prop is used to control the opacity of the internal icon.\n\n<ExamplesExample file=\"v-icon-btn/prop-opacity\" />",
    "display_content": "## v-guide - Opacity\n\nThe **opacity** prop is used to control the opacity of the internal icon.\n\n<ExamplesExample file=\"v-icon-btn/prop-opacity\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Opacity",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000770",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000771",
    "text": "Component: v-guide\nSection: Rotate\nType: documentation\n\n## v-guide - Rotate\n\nThe **rotate** prop is used to control the rotation of the internal icon. This is useful when creating dropdowns or other components that need to toggle visibility.\n\n<ExamplesExample file=\"v-icon-btn/prop-rotate\" />",
    "display_content": "## v-guide - Rotate\n\nThe **rotate** prop is used to control the rotation of the internal icon. This is useful when creating dropdowns or other components that need to toggle visibility.\n\n<ExamplesExample file=\"v-icon-btn/prop-rotate\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Rotate",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000771",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000772",
    "text": "Component: v-guide\nSection: Examples\nType: code_example\n\n## v-guide - Examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-icon-btn` component.",
    "display_content": "## v-guide - Examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-icon-btn` component.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Examples",
      "content_type": "code_example",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000772",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000773",
    "text": "Component: v-guide\nSection: Dialog\nType: documentation\n\n## v-guide - Dialog\n\nThe `v-icon-btn` component is perfect for closing dialogs or other components.\n\n<ExamplesExample file=\"v-icon-btn/misc-dialog\" />",
    "display_content": "## v-guide - Dialog\n\nThe `v-icon-btn` component is perfect for closing dialogs or other components.\n\n<ExamplesExample file=\"v-icon-btn/misc-dialog\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Dialog",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000773",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000774",
    "text": "Component: v-guide\nSection: Video controls\nType: documentation\n\n## v-guide - Video controls\n\nThe following example demonstrates how flexible the `v-icon-btn` component is by replicating the Google Meet video controls.\n\n<ExamplesExample file=\"v-icon-btn/misc-video-controls\" />",
    "display_content": "## v-guide - Video controls\n\nThe following example demonstrates how flexible the `v-icon-btn` component is by replicating the Google Meet video controls.\n\n<ExamplesExample file=\"v-icon-btn/misc-video-controls\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Video controls",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000774",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000775",
    "text": "Component: v-guide\nSection: Markdown editor\nType: documentation\n\n## v-guide - Markdown editor\n\nThe following example is a simple markdown editor that demonstrates how to use the `v-icon-btn` component to create a toolbar.\n\n<ExamplesExample file=\"v-icon-btn/misc-markdown-editor\" />",
    "display_content": "## v-guide - Markdown editor\n\nThe following example is a simple markdown editor that demonstrates how to use the `v-icon-btn` component to create a toolbar.\n\n<ExamplesExample file=\"v-icon-btn/misc-markdown-editor\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Markdown editor",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000775",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000776",
    "text": "Component: v-guide\nSection: Datatable actions\nType: documentation\n\n## v-guide - Datatable actions\n\nThe `v-icon-btn` component is perfect for datatable actions.\n\n<ExamplesExample file=\"v-icon-btn/misc-table-actions\" />",
    "display_content": "## v-guide - Datatable actions\n\nThe `v-icon-btn` component is perfect for datatable actions.\n\n<ExamplesExample file=\"v-icon-btn/misc-table-actions\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Datatable actions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000776",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000777",
    "text": "Component: v-images\nType: component_overview\n\n# v-images\n\nThe `v-img` component is packed with features to support rich media. Combined with the [vuetify-loader](https://github.com/vuetifyjs/vuetify-loader), you can add dynamic progressive images to provide a better user experience.",
    "display_content": "# v-images\n\nThe `v-img` component is packed with features to support rich media. Combined with the [vuetify-loader](https://github.com/vuetifyjs/vuetify-loader), you can add dynamic progressive images to provide a better user experience.",
    "metadata": {
      "component": "v-images",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000777",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000778",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\n`v-img` component is used to display a responsive image with lazy-load and placeholder.",
    "display_content": "# v-usage\n\n`v-img` component is used to display a responsive image with lazy-load and placeholder.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000778",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000779",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-img](/api/v-img/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-img](/api/v-img/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000779",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000780",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: warning The **lazy-src** property has no effect unless either **height** or **aspect-ratio** are provided. This is because the image container needs a non-zero height in order for the temporary image to be shown. :::",
    "display_content": "# v-caveats\n\n::: warning The **lazy-src** property has no effect unless either **height** or **aspect-ratio** are provided. This is because the image container needs a non-zero height in order for the temporary image to be shown. :::",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000780",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000781",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nIf the provided aspect ratio doesn't match that of the actual image, the default behavior is to fill as much space as possible without cropping. To fill the entire available space use the `cover` prop.\n\nAvailable sections: Cover, Height, Gradient, Placeholder, Error, Future image formats, Grid, Complex Grid Layout",
    "display_content": "# v-examples\n\nIf the provided aspect ratio doesn't match that of the actual image, the default behavior is to fill as much space as possible without cropping. To fill the entire available space use the `cover` prop.\n\nAvailable sections: Cover, Height, Gradient, Placeholder, Error, Future image formats, Grid, Complex Grid Layout",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000781",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000782",
    "text": "Component: v-examples\nSection: Cover\nType: documentation\n\n## v-examples - Cover\n\nIf the provided aspect ratio doesn't match that of the actual image, the default behavior is to fill as much space as possible without cropping. To fill the entire available space use the `cover` prop.\n\n<ExamplesExample file=\"v-img/prop-cover\" />",
    "display_content": "## v-examples - Cover\n\nIf the provided aspect ratio doesn't match that of the actual image, the default behavior is to fill as much space as possible without cropping. To fill the entire available space use the `cover` prop.\n\n<ExamplesExample file=\"v-img/prop-cover\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Cover",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000782",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000783",
    "text": "Component: v-examples\nSection: Height\nType: documentation\n\n## v-examples - Height\n\n`v-img` will automatically grow to the size of its `src`, preserving the correct aspect ratio. You can limit this with the `height` and `max-height` props.\n\n<ExamplesExample file=\"v-img/prop-max-height\" />",
    "display_content": "## v-examples - Height\n\n`v-img` will automatically grow to the size of its `src`, preserving the correct aspect ratio. You can limit this with the `height` and `max-height` props.\n\n<ExamplesExample file=\"v-img/prop-max-height\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Height",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000783",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000784",
    "text": "Component: v-examples\nSection: Gradient\nType: documentation\n\n## v-examples - Gradient\n\nThe `gradient` prop can be used to apply a simple gradient overlay to the image. More complex gradients should be written as a class on the content slot instead.\n\n<ExamplesExample file=\"v-img/prop-gradient\" />",
    "display_content": "## v-examples - Gradient\n\nThe `gradient` prop can be used to apply a simple gradient overlay to the image. More complex gradients should be written as a class on the content slot instead.\n\n<ExamplesExample file=\"v-img/prop-gradient\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Gradient",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000784",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000785",
    "text": "Component: v-examples\nSection: Placeholder\nType: documentation\n\n## v-examples - Placeholder\n\n`v-img` has a special `placeholder` slot for placeholder to display while image's loading. Note: the example below has bad src which won't load for you to see placeholder.\n\n<ExamplesExample file=\"v-img/slot-placeholder\" />",
    "display_content": "## v-examples - Placeholder\n\n`v-img` has a special `placeholder` slot for placeholder to display while image's loading. Note: the example below has bad src which won't load for you to see placeholder.\n\n<ExamplesExample file=\"v-img/slot-placeholder\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Placeholder",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000785",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000786",
    "text": "Component: v-examples\nSection: Error\nType: documentation\n\n## v-examples - Error\n\n`v-img` has an `error` slot that can be used to display alternative content if an error occurs while loading your source image. A common use for this slot is to load a fallback image if your original image is not available.\n\n<ExamplesExample file=\"v-img/slot-error\" />",
    "display_content": "## v-examples - Error\n\n`v-img` has an `error` slot that can be used to display alternative content if an error occurs while loading your source image. A common use for this slot is to load a fallback image if your original image is not available.\n\n<ExamplesExample file=\"v-img/slot-error\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Error",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000786",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000787",
    "text": "Component: v-examples\nSection: Future image formats\nType: code_example\n\n## v-examples - Future image formats\n\nBy default `v-img` will render a basic `<img>` element. If you want to use `.webp` images with a fallback for older browsers, you can pass a list of `<source>` elements to the `sources` slot:\n\n```html\n<v-img src=\"image.jpeg\">\n  <template #sources>\n    <source srcset=\"image.webp\">\n  </template>\n</v-img>\n```",
    "display_content": "## v-examples - Future image formats\n\nBy default `v-img` will render a basic `<img>` element. If you want to use `.webp` images with a fallback for older browsers, you can pass a list of `<source>` elements to the `sources` slot:\n\n```html\n<v-img src=\"image.jpeg\">\n  <template #sources>\n    <source srcset=\"image.webp\">\n  </template>\n</v-img>\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Future image formats",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000787",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000788",
    "text": "Component: v-examples\nSection: Future image formats\nType: code_example\n\n## v-examples - Future image formats\n\nThis will behave similarly to:\n\n```html\n<picture>\n  <source srcset=\"image.webp\">\n  <img src=\"image.jpeg\">\n</picture>\n```",
    "display_content": "## v-examples - Future image formats\n\nThis will behave similarly to:\n\n```html\n<picture>\n  <source srcset=\"image.webp\">\n  <img src=\"image.jpeg\">\n</picture>\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Future image formats",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_000788",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000789",
    "text": "Component: v-examples\nSection: Grid\nType: documentation\n\n## v-examples - Grid\n\nYou can use `v-img` to make, for example, a picture gallery.\n\n<ExamplesExample file=\"v-img/misc-grid\" />",
    "display_content": "## v-examples - Grid\n\nYou can use `v-img` to make, for example, a picture gallery.\n\n<ExamplesExample file=\"v-img/misc-grid\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Grid",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000789",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000790",
    "text": "Component: v-examples\nSection: Complex Grid Layout\nType: documentation\n\n## v-examples - Complex Grid Layout\n\nBuild a more complex picture gallery layout using `flex-box` classes.\n\n<ExamplesExample file=\"v-img/complex-grid\" />",
    "display_content": "## v-examples - Complex Grid Layout\n\nBuild a more complex picture gallery layout using `flex-box` classes.\n\n<ExamplesExample file=\"v-img/complex-grid\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Complex Grid Layout",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000790",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000791",
    "text": "Component: v-infinite-scrollers\nType: component_overview\n\n# v-infinite-scrollers\n\nThe `v-infinite-scroll` component displays a potentially infinite list, by loading more items of the list when scrolling. It supports either vertical or horizontal scrolling.",
    "display_content": "# v-infinite-scrollers\n\nThe `v-infinite-scroll` component displays a potentially infinite list, by loading more items of the list when scrolling. It supports either vertical or horizontal scrolling.",
    "metadata": {
      "component": "v-infinite-scrollers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000791",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000792",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nWhen scrolling towards the bottom, new items will be rendered either automatically, or manually with the click of a button.",
    "display_content": "# v-usage\n\nWhen scrolling towards the bottom, new items will be rendered either automatically, or manually with the click of a button.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000792",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000793",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-infinite-scroll](/api/v-infinite-scroll/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-infinite-scroll](/api/v-infinite-scroll/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000793",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000794",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe `v-infinite-scroll` works with any content in its default slot.",
    "display_content": "# v-anatomy\n\nThe `v-infinite-scroll` works with any content in its default slot.",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000794",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000795",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-infinite-scroll` component is a container that allows you to react to a user reaching the end of the content area. It is useful when you need to display an unknown but large number of items, and you don't want to load them all at once.\n\nAvailable sections: Props, Mode, Direction, Side, Color, Slots, Loading, Load more, Empty, Error, Examples, Virtualized infinite scroller",
    "display_content": "# v-guide\n\nThe `v-infinite-scroll` component is a container that allows you to react to a user reaching the end of the content area. It is useful when you need to display an unknown but large number of items, and you don't want to load them all at once.\n\nAvailable sections: Props, Mode, Direction, Side, Color, Slots, Loading, Load more, Empty, Error, Examples, Virtualized infinite scroller",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000795",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000796",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-infinite-scroll` component has several props that can be used to customize its behavior.",
    "display_content": "## v-guide - Props\n\nThe `v-infinite-scroll` component has several props that can be used to customize its behavior.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000796",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000797",
    "text": "Component: v-guide\nSection: Mode\nType: documentation\n\n## v-guide - Mode\n\nThe default behavior of the component is to try to load more content automatically when the scrollbar gets close to the end. However, a manual mode is also supported, where the user needs to do some interaction to load the content. By default this is a button, but it can be customized with a [slot](#load-more)\n\n<ExamplesExample file=\"v-infinite-scroll/prop-mode\" />",
    "display_content": "## v-guide - Mode\n\nThe default behavior of the component is to try to load more content automatically when the scrollbar gets close to the end. However, a manual mode is also supported, where the user needs to do some interaction to load the content. By default this is a button, but it can be customized with a [slot](#load-more)\n\n<ExamplesExample file=\"v-infinite-scroll/prop-mode\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Mode",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000797",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000798",
    "text": "Component: v-guide\nSection: Direction\nType: documentation\n\n## v-guide - Direction\n\nThe `v-infinite-scroll` component can be used with either vertical or horizontal scrolling.\n\n<ExamplesExample file=\"v-infinite-scroll/prop-direction\" />",
    "display_content": "## v-guide - Direction\n\nThe `v-infinite-scroll` component can be used with either vertical or horizontal scrolling.\n\n<ExamplesExample file=\"v-infinite-scroll/prop-direction\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Direction",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000798",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000799",
    "text": "Component: v-guide\nSection: Side\nType: documentation\n\n## v-guide - Side\n\nBy default, the `v-infinite-scroll` component assumes that new content will appear at the end of existing content. But it also supports content being added to the start and appearing both at the beginning and the end.\n\nWhen using the **start** side for content, the scrollbar will start at the bottom of the content.\n\n<ExamplesExample file=\"v-infinite-scroll/prop-side-start\" />\n\nWhen using **both** sides for content, the scrollbar will start in the middle of the content.\n\n<ExamplesExample file=\"v-infinite-scroll/prop-side-both\" />",
    "display_content": "## v-guide - Side\n\nBy default, the `v-infinite-scroll` component assumes that new content will appear at the end of existing content. But it also supports content being added to the start and appearing both at the beginning and the end.\n\nWhen using the **start** side for content, the scrollbar will start at the bottom of the content.\n\n<ExamplesExample file=\"v-infinite-scroll/prop-side-start\" />\n\nWhen using **both** sides for content, the scrollbar will start in the middle of the content.\n\n<ExamplesExample file=\"v-infinite-scroll/prop-side-both\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Side",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000799",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000800",
    "text": "Component: v-guide\nSection: Color\nType: documentation\n\n## v-guide - Color\n\nThe default load more button and loading spinner can be colored with the **color** prop.\n\n<ExamplesExample file=\"v-infinite-scroll/prop-color\" />",
    "display_content": "## v-guide - Color\n\nThe default load more button and loading spinner can be colored with the **color** prop.\n\n<ExamplesExample file=\"v-infinite-scroll/prop-color\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000800",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000801",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe `v-infinite-scroll` component exposes several slots that allow you to further customize its behaviour.\n\n![Infinite scroll Slots](https://cdn.vuetifyjs.com/docs/images/components/v-infinite-scroll/v-infinite-scroll-slots.png)\n\n| Element / Area | Description |\n| - | - |\n| 1. Container | The default slot |\n| 2. Load-more | The slot shown when the mode is set to `manual` and the status is not `loading` |\n| 3. Loading | The slot is shown when the mode is set to `manual` and status is `loading` |\n| 4. Empty | The slot shown when the status is `empty` |\n| 5. Error | The slot is shown when the status is `error` |",
    "display_content": "## v-guide - Slots\n\nThe `v-infinite-scroll` component exposes several slots that allow you to further customize its behaviour.\n\n![Infinite scroll Slots](https://cdn.vuetifyjs.com/docs/images/components/v-infinite-scroll/v-infinite-scroll-slots.png)\n\n| Element / Area | Description |\n| - | - |\n| 1. Container | The default slot |\n| 2. Load-more | The slot shown when the mode is set to `manual` and the status is not `loading` |\n| 3. Loading | The slot is shown when the mode is set to `manual` and status is `loading` |\n| 4. Empty | The slot shown when the status is `empty` |\n| 5. Error | The slot is shown when the status is `error` |",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000801",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000802",
    "text": "Component: v-guide\nSection: Loading\nType: documentation\n\n## v-guide - Loading\n\nYou can customize the loading message with the **loading** slot.\n\n<ExamplesExample file=\"v-infinite-scroll/slot-loading\" />",
    "display_content": "## v-guide - Loading\n\nYou can customize the loading message with the **loading** slot.\n\n<ExamplesExample file=\"v-infinite-scroll/slot-loading\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Loading",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000802",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000803",
    "text": "Component: v-guide\nSection: Load more\nType: documentation\n\n## v-guide - Load more\n\nWhen using **manual** mode you can customize the action required to load more content with the **load-more** slot.\n\n<ExamplesExample file=\"v-infinite-scroll/slot-load-more\" />",
    "display_content": "## v-guide - Load more\n\nWhen using **manual** mode you can customize the action required to load more content with the **load-more** slot.\n\n<ExamplesExample file=\"v-infinite-scroll/slot-load-more\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Load more",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000803",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000804",
    "text": "Component: v-guide\nSection: Empty\nType: documentation\n\n## v-guide - Empty\n\nYou can customize the empty message with the **empty** slot.\n\n<ExamplesExample file=\"v-infinite-scroll/slot-empty\" />",
    "display_content": "## v-guide - Empty\n\nYou can customize the empty message with the **empty** slot.\n\n<ExamplesExample file=\"v-infinite-scroll/slot-empty\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Empty",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000804",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000805",
    "text": "Component: v-guide\nSection: Error\nType: documentation\n\n## v-guide - Error\n\nThe **error** slot is shown if the status `'error'` is returned from the `done` callback.\n\n<ExamplesExample file=\"v-infinite-scroll/slot-error\" />",
    "display_content": "## v-guide - Error\n\nThe **error** slot is shown if the status `'error'` is returned from the `done` callback.\n\n<ExamplesExample file=\"v-infinite-scroll/slot-error\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Error",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000805",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000806",
    "text": "Component: v-guide\nSection: Examples\nType: code_example\n\n## v-guide - Examples\n\nThe following is a collection of examples that demonstrate more advanced and real-world use of the `v-infinite-scroll` component.",
    "display_content": "## v-guide - Examples\n\nThe following is a collection of examples that demonstrate more advanced and real-world use of the `v-infinite-scroll` component.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Examples",
      "content_type": "code_example",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000806",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000807",
    "text": "Component: v-guide\nSection: Virtualized infinite scroller\nType: documentation\n\n## v-guide - Virtualized infinite scroller\n\nIf the items in your infinite list are of a uniform size, you can quite easily virtualize the list to only render a small number of items regardless of how far you scroll in either direction.\n\n<ExamplesExample file=\"v-infinite-scroll/misc-virtual\" />",
    "display_content": "## v-guide - Virtualized infinite scroller\n\nIf the items in your infinite list are of a uniform size, you can quite easily virtualize the list to only render a small number of items regardless of how far you scroll in either direction.\n\n<ExamplesExample file=\"v-infinite-scroll/misc-virtual\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Virtualized infinite scroller",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000807",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000808",
    "text": "Component: v-inputs\nType: component_overview\n\n# v-inputs\n\nThe `v-input` component gives you a baseline to create your own custom inputs. It consists of a prepend/append slot, messages, and a default slot.",
    "display_content": "# v-inputs\n\nThe `v-input` component gives you a baseline to create your own custom inputs. It consists of a prepend/append slot, messages, and a default slot.",
    "metadata": {
      "component": "v-inputs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000808",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000809",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\n`v-input` has 4 main areas. The prepended slot, the appended slot, the default slot, and messages. These make up the core logic shared between all form components.",
    "display_content": "# v-usage\n\n`v-input` has 4 main areas. The prepended slot, the appended slot, the default slot, and messages. These make up the core logic shared between all form components.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000809",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000810",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-input](/api/v-input/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-input](/api/v-input/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000810",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000811",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: warning",
    "display_content": "# v-caveats\n\n::: warning",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000811",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000812",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nAs any validatable Vuetify component, `v-input` can be set to error state using **error** prop, messages can be added using **error-messages** prop. You can determine error messages count to show using **error-count** property.\n\nAvailable sections: Error, Error count, Hide details, Hint, Loading, Rules, Slot clicks, Append and prepend, Event Slot Clicks, Slot Append And Prepend, Prop Error Count, Prop Error, Prop Hide Details, Prop Hint, Prop Loading, Prop Rules, Usage",
    "display_content": "# v-examples\n\nAs any validatable Vuetify component, `v-input` can be set to error state using **error** prop, messages can be added using **error-messages** prop. You can determine error messages count to show using **error-count** property.\n\nAvailable sections: Error, Error count, Hide details, Hint, Loading, Rules, Slot clicks, Append and prepend, Event Slot Clicks, Slot Append And Prepend, Prop Error Count, Prop Error, Prop Hide Details, Prop Hint, Prop Loading, Prop Rules, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000812",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000813",
    "text": "Component: v-examples\nSection: Error\nType: documentation\n\n## v-examples - Error\n\nAs any validatable Vuetify component, `v-input` can be set to error state using **error** prop, messages can be added using **error-messages** prop. You can determine error messages count to show using **error-count** property.",
    "display_content": "## v-examples - Error\n\nAs any validatable Vuetify component, `v-input` can be set to error state using **error** prop, messages can be added using **error-messages** prop. You can determine error messages count to show using **error-count** property.",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Error",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000813",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000814",
    "text": "Component: v-examples\nSection: Error count\nType: documentation\n\n## v-examples - Error count\n\nYou can add multiple errors to `v-input` using **error-count** property.\n\n<ExamplesExample file=\"v-input/prop-error-count\" />\n\n<ExamplesExample file=\"v-input/prop-error\" />",
    "display_content": "## v-examples - Error count\n\nYou can add multiple errors to `v-input` using **error-count** property.\n\n<ExamplesExample file=\"v-input/prop-error-count\" />\n\n<ExamplesExample file=\"v-input/prop-error\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Error count",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000814",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000815",
    "text": "Component: v-examples\nSection: Hide details\nType: documentation\n\n## v-examples - Hide details\n\nWhen the **hide-details** prop is set to `auto` messages will be rendered only if there's a message (hint, error message etc) to display.\n\n<ExamplesExample file=\"v-input/prop-hide-details\" />",
    "display_content": "## v-examples - Hide details\n\nWhen the **hide-details** prop is set to `auto` messages will be rendered only if there's a message (hint, error message etc) to display.\n\n<ExamplesExample file=\"v-input/prop-hide-details\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Hide details",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000815",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000816",
    "text": "Component: v-examples\nSection: Hint\nType: documentation\n\n## v-examples - Hint\n\n`v-input` can have **hint** which can tell user how to use the input (when focused). **persistent-hint** prop makes the hint visible always if no `error-messages` are displayed.\n\n<ExamplesExample file=\"v-input/prop-hint\" />",
    "display_content": "## v-examples - Hint\n\n`v-input` can have **hint** which can tell user how to use the input (when focused). **persistent-hint** prop makes the hint visible always if no `error-messages` are displayed.\n\n<ExamplesExample file=\"v-input/prop-hint\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Hint",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000816",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000817",
    "text": "Component: v-examples\nSection: Loading\nType: documentation\n\n## v-examples - Loading\n\n`v-input` has **loading** state which can be used, e.g. for data loading indication. Note: `v-text-field` is used just for example.\n\n<ExamplesExample file=\"v-input/prop-loading\" />",
    "display_content": "## v-examples - Loading\n\n`v-input` has **loading** state which can be used, e.g. for data loading indication. Note: `v-text-field` is used just for example.\n\n<ExamplesExample file=\"v-input/prop-loading\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Loading",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000817",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000818",
    "text": "Component: v-examples\nSection: Rules\nType: documentation\n\n## v-examples - Rules\n\nYou can add custom validation rules to `v-input`, add them as functions returning `true`/error message. Note: `v-text-field` is used just for example.\n\n<ExamplesExample file=\"v-input/prop-rules\" />",
    "display_content": "## v-examples - Rules\n\nYou can add custom validation rules to `v-input`, add them as functions returning `true`/error message. Note: `v-text-field` is used just for example.\n\n<ExamplesExample file=\"v-input/prop-rules\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Rules",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000818",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000819",
    "text": "Component: v-examples\nSection: Slot clicks\nType: slots_reference\n\n## v-examples - Slot clicks\n\n`v-input` can have `click:append` and `click:prepend` events for its slots. Note: `v-text-field` is used just for example.\n\n<ExamplesExample file=\"v-input/event-slot-clicks\" />",
    "display_content": "## v-examples - Slot clicks\n\n`v-input` can have `click:append` and `click:prepend` events for its slots. Note: `v-text-field` is used just for example.\n\n<ExamplesExample file=\"v-input/event-slot-clicks\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Slot clicks",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000819",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000820",
    "text": "Component: v-examples\nSection: Append and prepend\nType: documentation\n\n## v-examples - Append and prepend\n\n`v-input` has `append` and `prepend` slots. You can place custom icons in them.\n\n<ExamplesExample file=\"v-input/slot-append-and-prepend\" />",
    "display_content": "## v-examples - Append and prepend\n\n`v-input` has `append` and `prepend` slots. You can place custom icons in them.\n\n<ExamplesExample file=\"v-input/slot-append-and-prepend\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Append and prepend",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000820",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000821",
    "text": "Component: v-examples\nSection: Event Slot Clicks\nType: code_example\n\n## v-examples - Event Slot Clicks\n\n```vue\n<template>\n  <v-container\n    id=\"input-usage\"\n    fluid\n  >\n    <v-row>\n      <v-col cols=\"12\">\n        <v-input\n          :messages=\"['Messages']\"\n          append-icon=\"mdi-close\"\n          prepend-icon=\"mdi-phone\"\n          @click:append=\"appendIconCallback\"\n          @click:prepend=\"prependIconCallback\"\n        >\n          Default Slot\n        </v-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  function appendIconCallback () {\n    alert('click:append')\n  }\n  function prependIconCallback () {\n    alert('click:prepend')\n  }\n</script>\n\n<script>\n  export default {\n    methods: {\n      appendIconCallback () {\n        alert('click:append')\n      },\n      prependIconCallback () {\n        alert('click:prepend')\n      },\n    },\n  }\n</script>\n\n<style>\n  #input-usage .v-input__prepend-outer,\n  #input-usage .v-input__append-outer,\n  #input-usage .v-input__slot,\n  #input-usage .v-messages {\n    border: 1px dashed rgba(0,0,0, .4);\n  }\n</style>\n\n```",
    "display_content": "## v-examples - Event Slot Clicks\n\n```vue\n<template>\n  <v-container\n    id=\"input-usage\"\n    fluid\n  >\n    <v-row>\n      <v-col cols=\"12\">\n        <v-input\n          :messages=\"['Messages']\"\n          append-icon=\"mdi-close\"\n          prepend-icon=\"mdi-phone\"\n          @click:append=\"appendIconCallback\"\n          @click:prepend=\"prependIconCallback\"\n        >\n          Default Slot\n        </v-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  function appendIconCallback () {\n    alert('click:append')\n  }\n  function prependIconCallback () {\n    alert('click:prepend')\n  }\n</script>\n\n<script>\n  export default {\n    methods: {\n      appendIconCallback () {\n        alert('click:append')\n      },\n      prependIconCallback () {\n        alert('click:prepend')\n      },\n    },\n  }\n</script>\n\n<style>\n  #input-usage .v-input__prepend-outer,\n  #input-usage .v-input__append-outer,\n  #input-usage .v-input__slot,\n  #input-usage .v-messages {\n    border: 1px dashed rgba(0,0,0, .4);\n  }\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Event Slot Clicks",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000821",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000822",
    "text": "Component: v-examples\nSection: Slot Append And Prepend\nType: code_example\n\n## v-examples - Slot Append And Prepend\n\n```vue\n<template>\n  <v-text-field>\n    <template v-slot:append>\n      <v-icon color=\"red\">\n        mdi-plus\n      </v-icon>\n    </template>\n    <template v-slot:prepend>\n      <v-icon color=\"green\">\n        mdi-minus\n      </v-icon>\n    </template>\n  </v-text-field>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Append And Prepend\n\n```vue\n<template>\n  <v-text-field>\n    <template v-slot:append>\n      <v-icon color=\"red\">\n        mdi-plus\n      </v-icon>\n    </template>\n    <template v-slot:prepend>\n      <v-icon color=\"green\">\n        mdi-minus\n      </v-icon>\n    </template>\n  </v-text-field>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Append And Prepend",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000822",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000823",
    "text": "Component: v-examples\nSection: Prop Error Count\nType: code_example\n\n## v-examples - Prop Error Count\n\n```vue\n<template>\n  <v-input\n    :error-messages=\"['Fatal error', 'Another error']\"\n    max-errors=\"2\"\n    disabled\n    error\n  >\n    Input\n  </v-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Error Count\n\n```vue\n<template>\n  <v-input\n    :error-messages=\"['Fatal error', 'Another error']\"\n    max-errors=\"2\"\n    disabled\n    error\n  >\n    Input\n  </v-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Error Count",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000823",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000824",
    "text": "Component: v-examples\nSection: Prop Error\nType: code_example\n\n## v-examples - Prop Error\n\n```vue\n<template>\n  <v-input\n    :error-messages=\"['Fatal error']\"\n    disabled\n    error\n  >\n    Input\n  </v-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Error\n\n```vue\n<template>\n  <v-input\n    :error-messages=\"['Fatal error']\"\n    disabled\n    error\n  >\n    Input\n  </v-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Error",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000824",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000825",
    "text": "Component: v-examples\nSection: Prop Hide Details\nType: code_example\n\n## v-examples - Prop Hide Details\n\n```vue\n<template>\n  <div>\n    <v-text-field\n      :rules=\"rules\"\n      hide-details=\"auto\"\n      label=\"Main input\"\n    ></v-text-field>\n    <v-text-field label=\"Another input\"></v-text-field>\n  </div>\n</template>\n\n<script setup>\n  const rules = [\n    value => !!value || 'Required.',\n    value => (value && value.length >= 3) || 'Min 3 characters',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: [\n        value => !!value || 'Required.',\n        value => (value && value.length >= 3) || 'Min 3 characters',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Hide Details\n\n```vue\n<template>\n  <div>\n    <v-text-field\n      :rules=\"rules\"\n      hide-details=\"auto\"\n      label=\"Main input\"\n    ></v-text-field>\n    <v-text-field label=\"Another input\"></v-text-field>\n  </div>\n</template>\n\n<script setup>\n  const rules = [\n    value => !!value || 'Required.',\n    value => (value && value.length >= 3) || 'Min 3 characters',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: [\n        value => !!value || 'Required.',\n        value => (value && value.length >= 3) || 'Min 3 characters',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hide Details",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000825",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000826",
    "text": "Component: v-examples\nSection: Prop Hint\nType: code_example\n\n## v-examples - Prop Hint\n\n```vue\n<template>\n  <v-switch\n    v-model=\"showMessages\"\n    label=\"Show messages\"\n    hide-details\n  ></v-switch>\n  <v-input\n    :messages=\"messages\"\n    hint=\"I am hint\"\n    persistent-hint\n  >\n    Input\n  </v-input>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const showMessages = ref(false)\n  const messages = computed(() => {\n    return showMessages.value ? ['Message'] : undefined\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      showMessages: false,\n    }),\n\n    computed: {\n      messages () {\n        return this.showMessages ? ['Message'] : undefined\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Hint\n\n```vue\n<template>\n  <v-switch\n    v-model=\"showMessages\"\n    label=\"Show messages\"\n    hide-details\n  ></v-switch>\n  <v-input\n    :messages=\"messages\"\n    hint=\"I am hint\"\n    persistent-hint\n  >\n    Input\n  </v-input>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const showMessages = ref(false)\n  const messages = computed(() => {\n    return showMessages.value ? ['Message'] : undefined\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      showMessages: false,\n    }),\n\n    computed: {\n      messages () {\n        return this.showMessages ? ['Message'] : undefined\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hint",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000826",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000827",
    "text": "Component: v-examples\nSection: Prop Loading\nType: code_example\n\n## v-examples - Prop Loading\n\n```vue\n<template>\n  <v-text-field\n    color=\"success\"\n    disabled\n    loading\n  ></v-text-field>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Loading\n\n```vue\n<template>\n  <v-text-field\n    color=\"success\"\n    disabled\n    loading\n  ></v-text-field>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Loading",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000827",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000828",
    "text": "Component: v-examples\nSection: Prop Rules\nType: code_example\n\n## v-examples - Prop Rules\n\n```vue\n<template>\n  <v-text-field :rules=\"rules\"></v-text-field>\n</template>\n\n<script setup>\n  const rules = [\n    value => !!value || 'Required.',\n    value => (value || '').length <= 20 || 'Max 20 characters',\n    value => {\n      const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      return pattern.test(value) || 'Invalid e-mail.'\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: [\n        value => !!value || 'Required.',\n        value => (value || '').length <= 20 || 'Max 20 characters',\n        value => {\n          const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n          return pattern.test(value) || 'Invalid e-mail.'\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Rules\n\n```vue\n<template>\n  <v-text-field :rules=\"rules\"></v-text-field>\n</template>\n\n<script setup>\n  const rules = [\n    value => !!value || 'Required.',\n    value => (value || '').length <= 20 || 'Max 20 characters',\n    value => {\n      const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      return pattern.test(value) || 'Invalid e-mail.'\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: [\n        value => !!value || 'Required.',\n        value => (value || '').length <= 20 || 'Max 20 characters',\n        value => {\n          const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n          return pattern.test(value) || 'Invalid e-mail.'\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rules",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000828",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000829",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-container\n    id=\"input-usage\"\n    fluid\n  >\n    <v-row>\n      <v-col cols=\"12\">\n        <v-input\n          :messages=\"['Messages']\"\n          append-icon=\"mdi-close\"\n          prepend-icon=\"mdi-phone\"\n        >\n          Default Slot\n        </v-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-container\n    id=\"input-usage\"\n    fluid\n  >\n    <v-row>\n      <v-col cols=\"12\">\n        <v-input\n          :messages=\"['Messages']\"\n          append-icon=\"mdi-close\"\n          prepend-icon=\"mdi-phone\"\n        >\n          Default Slot\n        </v-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000829",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000830",
    "text": "Component: v-item-groups\nType: component_overview\n\n# v-item-groups\n\nThe `v-item-group` provides the ability to create a group of selectable items out of any component. This is the baseline functionality for components such as `v-tabs` and `v-carousel`.",
    "display_content": "# v-item-groups\n\nThe `v-item-group` provides the ability to create a group of selectable items out of any component. This is the baseline functionality for components such as `v-tabs` and `v-carousel`.",
    "metadata": {
      "component": "v-item-groups",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000830",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000831",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe core usage of the `v-item-group` is to create groups of anything that should be controlled by a **model**.",
    "display_content": "# v-usage\n\nThe core usage of the `v-item-group` is to create groups of anything that should be controlled by a **model**.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000831",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000832",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-item-group](/api/v-item-group/) | The item group component. | | [v-item](/api/v-item/) | Sub-component used for modifying the `v-item-group` state |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-item-group](/api/v-item-group/) | The item group component. | | [v-item](/api/v-item/) | Sub-component used for modifying the `v-item-group` state |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000832",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000833",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe **selected-class** prop allows you to designate a CSS class applied to _selected_ items.\n\nAvailable sections: Selected class, Mandatory, Multiple, Chips, Selection, Misc Chips, Misc Selection, Prop Mandatory, Prop Multiple, Prop Selected Class, Usage",
    "display_content": "# v-examples\n\nThe **selected-class** prop allows you to designate a CSS class applied to _selected_ items.\n\nAvailable sections: Selected class, Mandatory, Multiple, Chips, Selection, Misc Chips, Misc Selection, Prop Mandatory, Prop Multiple, Prop Selected Class, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000833",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000834",
    "text": "Component: v-examples\nSection: Selected class\nType: documentation\n\n## v-examples - Selected class\n\nThe **selected-class** prop allows you to designate a CSS class applied to _selected_ items.\n\n<ExamplesExample file=\"v-item-group/prop-selected-class\" />",
    "display_content": "## v-examples - Selected class\n\nThe **selected-class** prop allows you to designate a CSS class applied to _selected_ items.\n\n<ExamplesExample file=\"v-item-group/prop-selected-class\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Selected class",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000834",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000835",
    "text": "Component: v-examples\nSection: Mandatory\nType: documentation\n\n## v-examples - Mandatory\n\n**mandatory** item groups must have at least 1 item selected.\n\n<ExamplesExample file=\"v-item-group/prop-mandatory\" />",
    "display_content": "## v-examples - Mandatory\n\n**mandatory** item groups must have at least 1 item selected.\n\n<ExamplesExample file=\"v-item-group/prop-mandatory\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Mandatory",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000835",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000836",
    "text": "Component: v-examples\nSection: Multiple\nType: documentation\n\n## v-examples - Multiple\n\nItem groups can have **multiple** items selected.\n\n<ExamplesExample file=\"v-item-group/prop-multiple\" />",
    "display_content": "## v-examples - Multiple\n\nItem groups can have **multiple** items selected.\n\n<ExamplesExample file=\"v-item-group/prop-multiple\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Multiple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000836",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000837",
    "text": "Component: v-examples\nSection: Chips\nType: documentation\n\n## v-examples - Chips\n\nEasily hook up a custom chip group.\n\n<ExamplesExample file=\"v-item-group/misc-chips\" />",
    "display_content": "## v-examples - Chips\n\nEasily hook up a custom chip group.\n\n<ExamplesExample file=\"v-item-group/misc-chips\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Chips",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000837",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000838",
    "text": "Component: v-examples\nSection: Selection\nType: documentation\n\n## v-examples - Selection\n\nIcons can be used as toggle buttons when they allow selection, or deselection, of a single choice, such as marking an item as a favorite.\n\n<ExamplesExample file=\"v-item-group/misc-selection\" />",
    "display_content": "## v-examples - Selection\n\nIcons can be used as toggle buttons when they allow selection, or deselection, of a single choice, such as marking an item as a favorite.\n\n<ExamplesExample file=\"v-item-group/misc-selection\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Selection",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000838",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000839",
    "text": "Component: v-examples\nSection: Misc Chips\nType: code_example\n\n## v-examples - Misc Chips\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar\n      color=\"blue-grey\"\n      dark\n      flat\n    >\n      <v-toolbar-title>Submit a post</v-toolbar-title>\n    </v-toolbar>\n\n    <v-card-text>\n      <v-text-field\n        label=\"Title\"\n        model-value=\"My new post\"\n        variant=\"filled\"\n      ></v-text-field>\n\n      <v-textarea\n        label=\"Text\"\n        model-value=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\"\n        variant=\"filled\"\n      ></v-textarea>\n\n      <v-divider class=\"my-2\"></v-divider>\n\n      <v-item-group selected-class=\"bg-purple\" multiple>\n        <div class=\"text-caption mb-2\">Tags</div>\n        <v-item\n          v-for=\"n in 8\"\n          :key=\"n\"\n          v-slot=\"{ selectedClass, toggle }\"\n        >\n          <v-chip\n            :class=\"selectedClass\"\n            @click=\"toggle\"\n          >\n            Tag {{ n }}\n          </v-chip>\n        </v-item>\n      </v-item-group>\n    </v-card-text>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn\n        color=\"success\"\n      >\n        Post\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Chips\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar\n      color=\"blue-grey\"\n      dark\n      flat\n    >\n      <v-toolbar-title>Submit a post</v-toolbar-title>\n    </v-toolbar>\n\n    <v-card-text>\n      <v-text-field\n        label=\"Title\"\n        model-value=\"My new post\"\n        variant=\"filled\"\n      ></v-text-field>\n\n      <v-textarea\n        label=\"Text\"\n        model-value=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\"\n        variant=\"filled\"\n      ></v-textarea>\n\n      <v-divider class=\"my-2\"></v-divider>\n\n      <v-item-group selected-class=\"bg-purple\" multiple>\n        <div class=\"text-caption mb-2\">Tags</div>\n        <v-item\n          v-for=\"n in 8\"\n          :key=\"n\"\n          v-slot=\"{ selectedClass, toggle }\"\n        >\n          <v-chip\n            :class=\"selectedClass\"\n            @click=\"toggle\"\n          >\n            Tag {{ n }}\n          </v-chip>\n        </v-item>\n      </v-item-group>\n    </v-card-text>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn\n        color=\"success\"\n      >\n        Post\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Chips",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000839",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000840",
    "text": "Component: v-examples\nSection: Misc Selection\nType: code_example\n\n## v-examples - Misc Selection\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-container class=\"pa-1\">\n      <v-item-group\n        v-model=\"selection\"\n        multiple\n      >\n        <v-row>\n          <v-col\n            v-for=\"(item, i) in items\"\n            :key=\"i\"\n            cols=\"12\"\n            md=\"6\"\n          >\n            <v-item v-slot=\"{ isSelected, toggle }\">\n              <v-img\n                :src=\"`https://cdn.vuetifyjs.com/images/${item.src}`\"\n                class=\"text-right pa-2\"\n                height=\"150\"\n                cover\n                @click=\"toggle\"\n              >\n                <v-btn :icon=\"isSelected ? 'mdi-heart' : 'mdi-heart-outline'\"></v-btn>\n              </v-img>\n            </v-item>\n          </v-col>\n        </v-row>\n      </v-item-group>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    {\n      src: 'backgrounds/bg.jpg',\n    },\n    {\n      src: 'backgrounds/md.jpg',\n    },\n    {\n      src: 'backgrounds/bg-2.jpg',\n    },\n    {\n      src: 'backgrounds/md2.jpg',\n    },\n  ]\n\n  const selection = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          src: 'backgrounds/bg.jpg',\n        },\n        {\n          src: 'backgrounds/md.jpg',\n        },\n        {\n          src: 'backgrounds/bg-2.jpg',\n        },\n        {\n          src: 'backgrounds/md2.jpg',\n        },\n      ],\n      selection: [],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Selection\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n  >\n    <v-container class=\"pa-1\">\n      <v-item-group\n        v-model=\"selection\"\n        multiple\n      >\n        <v-row>\n          <v-col\n            v-for=\"(item, i) in items\"\n            :key=\"i\"\n            cols=\"12\"\n            md=\"6\"\n          >\n            <v-item v-slot=\"{ isSelected, toggle }\">\n              <v-img\n                :src=\"`https://cdn.vuetifyjs.com/images/${item.src}`\"\n                class=\"text-right pa-2\"\n                height=\"150\"\n                cover\n                @click=\"toggle\"\n              >\n                <v-btn :icon=\"isSelected ? 'mdi-heart' : 'mdi-heart-outline'\"></v-btn>\n              </v-img>\n            </v-item>\n          </v-col>\n        </v-row>\n      </v-item-group>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    {\n      src: 'backgrounds/bg.jpg',\n    },\n    {\n      src: 'backgrounds/md.jpg',\n    },\n    {\n      src: 'backgrounds/bg-2.jpg',\n    },\n    {\n      src: 'backgrounds/md2.jpg',\n    },\n  ]\n\n  const selection = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          src: 'backgrounds/bg.jpg',\n        },\n        {\n          src: 'backgrounds/md.jpg',\n        },\n        {\n          src: 'backgrounds/bg-2.jpg',\n        },\n        {\n          src: 'backgrounds/md2.jpg',\n        },\n      ],\n      selection: [],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Selection",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000840",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000841",
    "text": "Component: v-examples\nSection: Prop Mandatory\nType: code_example\n\n## v-examples - Prop Mandatory\n\n```vue\n<template>\n  <v-item-group mandatory>\n    <v-container>\n      <v-row>\n        <v-col\n          v-for=\"n in 3\"\n          :key=\"n\"\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-item v-slot=\"{ isSelected, toggle }\">\n            <v-card\n              :color=\"isSelected ? 'primary' : ''\"\n              class=\"d-flex align-center\"\n              height=\"200\"\n              dark\n              @click=\"toggle\"\n            >\n              <v-scroll-y-transition>\n                <div\n                  class=\"text-h3 flex-grow-1 text-center\"\n                >\n                  {{ isSelected ? 'Selected' : 'Click Me!' }}\n                </div>\n              </v-scroll-y-transition>\n            </v-card>\n          </v-item>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-item-group>\n</template>\n\n<script></script>\n\n```",
    "display_content": "## v-examples - Prop Mandatory\n\n```vue\n<template>\n  <v-item-group mandatory>\n    <v-container>\n      <v-row>\n        <v-col\n          v-for=\"n in 3\"\n          :key=\"n\"\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-item v-slot=\"{ isSelected, toggle }\">\n            <v-card\n              :color=\"isSelected ? 'primary' : ''\"\n              class=\"d-flex align-center\"\n              height=\"200\"\n              dark\n              @click=\"toggle\"\n            >\n              <v-scroll-y-transition>\n                <div\n                  class=\"text-h3 flex-grow-1 text-center\"\n                >\n                  {{ isSelected ? 'Selected' : 'Click Me!' }}\n                </div>\n              </v-scroll-y-transition>\n            </v-card>\n          </v-item>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-item-group>\n</template>\n\n<script></script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Mandatory",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000841",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000842",
    "text": "Component: v-examples\nSection: Prop Multiple\nType: code_example\n\n## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-item-group multiple>\n    <v-container>\n      <v-row>\n        <v-col\n          v-for=\"n in 3\"\n          :key=\"n\"\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-item v-slot=\"{ isSelected, toggle }\">\n            <v-card\n              :color=\"isSelected ? 'primary' : ''\"\n              class=\"d-flex align-center\"\n              height=\"200\"\n              dark\n              @click=\"toggle\"\n            >\n              <v-scroll-y-transition>\n                <div\n                  class=\"text-h3 flex-grow-1 text-center\"\n                >\n                  {{ isSelected ? 'Selected' : 'Click Me!' }}\n                </div>\n              </v-scroll-y-transition>\n            </v-card>\n          </v-item>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-item-group>\n</template>\n\n<script></script>\n\n```",
    "display_content": "## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-item-group multiple>\n    <v-container>\n      <v-row>\n        <v-col\n          v-for=\"n in 3\"\n          :key=\"n\"\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-item v-slot=\"{ isSelected, toggle }\">\n            <v-card\n              :color=\"isSelected ? 'primary' : ''\"\n              class=\"d-flex align-center\"\n              height=\"200\"\n              dark\n              @click=\"toggle\"\n            >\n              <v-scroll-y-transition>\n                <div\n                  class=\"text-h3 flex-grow-1 text-center\"\n                >\n                  {{ isSelected ? 'Selected' : 'Click Me!' }}\n                </div>\n              </v-scroll-y-transition>\n            </v-card>\n          </v-item>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-item-group>\n</template>\n\n<script></script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Multiple",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000842",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000843",
    "text": "Component: v-examples\nSection: Prop Selected Class\nType: code_example\n\n## v-examples - Prop Selected Class\n\n```vue\n<template>\n  <v-item-group selected-class=\"bg-primary\">\n    <v-container>\n      <v-row>\n        <v-col\n          v-for=\"n in 3\"\n          :key=\"n\"\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-item v-slot=\"{ isSelected, selectedClass, toggle }\">\n            <v-card\n              :class=\"['d-flex align-center', selectedClass]\"\n              height=\"200\"\n              dark\n              @click=\"toggle\"\n            >\n              <div\n                class=\"text-h3 flex-grow-1 text-center\"\n              >\n                {{ isSelected ? 'Selected' : 'Click Me!' }}\n              </div>\n            </v-card>\n          </v-item>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-item-group>\n</template>\n\n<script></script>\n\n```",
    "display_content": "## v-examples - Prop Selected Class\n\n```vue\n<template>\n  <v-item-group selected-class=\"bg-primary\">\n    <v-container>\n      <v-row>\n        <v-col\n          v-for=\"n in 3\"\n          :key=\"n\"\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-item v-slot=\"{ isSelected, selectedClass, toggle }\">\n            <v-card\n              :class=\"['d-flex align-center', selectedClass]\"\n              height=\"200\"\n              dark\n              @click=\"toggle\"\n            >\n              <div\n                class=\"text-h3 flex-grow-1 text-center\"\n              >\n                {{ isSelected ? 'Selected' : 'Click Me!' }}\n              </div>\n            </v-card>\n          </v-item>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-item-group>\n</template>\n\n<script></script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Selected Class",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000843",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000844",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-item-group>\n    <v-container>\n      <v-row>\n        <v-col\n          v-for=\"n in 3\"\n          :key=\"n\"\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-item v-slot=\"{ isSelected, toggle }\">\n            <v-card\n              :color=\"isSelected ? 'primary' : ''\"\n              class=\"d-flex align-center\"\n              height=\"200\"\n              dark\n              @click=\"toggle\"\n            >\n              <v-scroll-y-transition>\n                <div\n                  v-if=\"isSelected\"\n                  class=\"text-h2 flex-grow-1 text-center\"\n                >\n                  Selected\n                </div>\n              </v-scroll-y-transition>\n            </v-card>\n          </v-item>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-item-group>\n</template>\n\n<script></script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-item-group>\n    <v-container>\n      <v-row>\n        <v-col\n          v-for=\"n in 3\"\n          :key=\"n\"\n          cols=\"12\"\n          md=\"4\"\n        >\n          <v-item v-slot=\"{ isSelected, toggle }\">\n            <v-card\n              :color=\"isSelected ? 'primary' : ''\"\n              class=\"d-flex align-center\"\n              height=\"200\"\n              dark\n              @click=\"toggle\"\n            >\n              <v-scroll-y-transition>\n                <div\n                  v-if=\"isSelected\"\n                  class=\"text-h2 flex-grow-1 text-center\"\n                >\n                  Selected\n                </div>\n              </v-scroll-y-transition>\n            </v-card>\n          </v-item>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-item-group>\n</template>\n\n<script></script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000844",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000845",
    "text": "Component: v-lazy\nType: component_overview\n\n# v-lazy\n\nThe `v-lazy` component is used to dynamically load components based upon an elements visibility.",
    "display_content": "# v-lazy\n\nThe `v-lazy` component is used to dynamically load components based upon an elements visibility.",
    "metadata": {
      "component": "v-lazy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000845",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000846",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-lazy` component by default will not render its contents until it has been intersected. Scroll down and watch the element render as you go past it.",
    "display_content": "# v-usage\n\nThe `v-lazy` component by default will not render its contents until it has been intersected. Scroll down and watch the element render as you go past it.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000846",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000847",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-lazy](/api/v-lazy/) | Primary Component |\n\nAvailable sections: Usage",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-lazy](/api/v-lazy/) | Primary Component |\n\nAvailable sections: Usage",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000847",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000848",
    "text": "Component: v-api\nSection: Usage\nType: code_example\n\n## v-api - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-responsive\n      ref=\"responsive\"\n      class=\"overflow-y-auto\"\n      max-height=\"300\"\n    >\n      <div class=\"pa-6 text-center position-sticky\">\n        Scroll down\n      </div>\n\n      <v-responsive min-height=\"50vh\"></v-responsive>\n\n      <div class=\"text-center text-body-2 mb-12\">\n        The card will appear below:\n      </div>\n\n      <v-lazy\n        v-model=\"isActive\"\n        :options=\"{\n          threshold: .5\n        }\"\n        min-height=\"200\"\n        transition=\"fade-transition\"\n      >\n        <v-card\n          class=\"mx-auto\"\n          max-width=\"336\"\n        >\n          <v-card-title>Card title</v-card-title>\n\n          <v-card-text>\n            Phasellus magna. Quisque rutrum. Nunc egestas, augue at pellentesque laoreet, felis eros vehicula leo, at malesuada velit leo quis pede. Aliquam lobortis. Quisque libero metus, condimentum nec, tempor a, commodo mollis, magna.\n\n            In turpis. In dui magna, posuere eget, vestibulum et, tempor auctor, justo. In turpis. Pellentesque dapibus hendrerit tortor. Ut varius tincidunt libero.\n          </v-card-text>\n\n          <v-card-actions class=\"justify-center\">\n            <v-btn @click=\"reset\">Reset Demo</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-lazy>\n      <br>\n    </v-responsive>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const goTo = useGoTo()\n\n  const name = 'v-lazy'\n  const model = shallowRef('default')\n  const isActive = shallowRef(false)\n  const responsive = ref()\n  const options = []\n\n  async function reset () {\n    await goTo(0, { container: responsive.value.$el })\n\n    isActive.value = false\n  }\n\n  const props = computed(() => {\n    return {\n      'min-height': 200,\n      options: { threshold: 0.5 },\n      transition: 'fade-transition',\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <div class=\"text-center text-body-2 mb-12\">\n    The card will appear below:\n  </div>\n\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"336\"\n    text=\"Phasellus magna. Quisque rutrum. Nunc egestas, augue at pellentesque laoreet.\"\n    title=\"Card title\"\n  >\n    <v-card-actions class=\"justify-center\">\n      <v-btn @click=\"reset\">Reset Demo</v-btn>\n    </v-card-actions>\n  </v-card>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-lazy${propsToString(props.value)}>${slots.value}</v-lazy>`\n  })\n</script>\n\n```",
    "display_content": "## v-api - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-responsive\n      ref=\"responsive\"\n      class=\"overflow-y-auto\"\n      max-height=\"300\"\n    >\n      <div class=\"pa-6 text-center position-sticky\">\n        Scroll down\n      </div>\n\n      <v-responsive min-height=\"50vh\"></v-responsive>\n\n      <div class=\"text-center text-body-2 mb-12\">\n        The card will appear below:\n      </div>\n\n      <v-lazy\n        v-model=\"isActive\"\n        :options=\"{\n          threshold: .5\n        }\"\n        min-height=\"200\"\n        transition=\"fade-transition\"\n      >\n        <v-card\n          class=\"mx-auto\"\n          max-width=\"336\"\n        >\n          <v-card-title>Card title</v-card-title>\n\n          <v-card-text>\n            Phasellus magna. Quisque rutrum. Nunc egestas, augue at pellentesque laoreet, felis eros vehicula leo, at malesuada velit leo quis pede. Aliquam lobortis. Quisque libero metus, condimentum nec, tempor a, commodo mollis, magna.\n\n            In turpis. In dui magna, posuere eget, vestibulum et, tempor auctor, justo. In turpis. Pellentesque dapibus hendrerit tortor. Ut varius tincidunt libero.\n          </v-card-text>\n\n          <v-card-actions class=\"justify-center\">\n            <v-btn @click=\"reset\">Reset Demo</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-lazy>\n      <br>\n    </v-responsive>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const goTo = useGoTo()\n\n  const name = 'v-lazy'\n  const model = shallowRef('default')\n  const isActive = shallowRef(false)\n  const responsive = ref()\n  const options = []\n\n  async function reset () {\n    await goTo(0, { container: responsive.value.$el })\n\n    isActive.value = false\n  }\n\n  const props = computed(() => {\n    return {\n      'min-height': 200,\n      options: { threshold: 0.5 },\n      transition: 'fade-transition',\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <div class=\"text-center text-body-2 mb-12\">\n    The card will appear below:\n  </div>\n\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"336\"\n    text=\"Phasellus magna. Quisque rutrum. Nunc egestas, augue at pellentesque laoreet.\"\n    title=\"Card title\"\n  >\n    <v-card-actions class=\"justify-center\">\n      <v-btn @click=\"reset\">Reset Demo</v-btn>\n    </v-card-actions>\n  </v-card>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-lazy${propsToString(props.value)}>${slots.value}</v-lazy>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-api",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000848",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000849",
    "text": "Component: v-lists\nType: component_overview\n\n# v-lists\n\nThe `v-list` component is used to display information. It can contain an avatar, content, actions, subheaders and much more. Lists present content in a way that makes it easy to identify a specific item in a collection. They provide a consistent styling for organizing groups of text and images.",
    "display_content": "# v-lists\n\nThe `v-list` component is used to display information. It can contain an avatar, content, actions, subheaders and much more. Lists present content in a way that makes it easy to identify a specific item in a collection. They provide a consistent styling for organizing groups of text and images.",
    "metadata": {
      "component": "v-lists",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000849",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000850",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nLists come in three main variations. **single-line** (default), **two-line** and **three-line**. The line declaration specifies the minimum height of the item and can also be controlled from `v-list` with the same prop.",
    "display_content": "# v-usage\n\nLists come in three main variations. **single-line** (default), **two-line** and **three-line**. The line declaration specifies the minimum height of the item and can also be controlled from `v-list` with the same prop.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000850",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000851",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-list](/api/v-list/) | Primary Component | | [v-list-group](/api/v-list-group/) | Sub-component used to display or hide groups of items | | [v-list-subheader](/api/v-list-subheader/) | Sub-component used to separate groups of items | | [v-list-item](/api/v-list-item/) | Sub-component used to display a single item or modify the `v-list` state | | [v-list-item-title](/api/v-list-item-title/) | Sub-component used to display the title of a list item. Wraps the `#title` slot |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-list](/api/v-list/) | Primary Component | | [v-list-group](/api/v-list-group/) | Sub-component used to display or hide groups of items | | [v-list-subheader](/api/v-list-subheader/) | Sub-component used to separate groups of items | | [v-list-item](/api/v-list-item/) | Sub-component used to display a single item or modify the `v-list` state | | [v-list-item-title](/api/v-list-item-title/) | Sub-component used to display the title of a list item. Wraps the `#title` slot |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000851",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000852",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nLists can either be created by markup using the many sub-components that are available, or by using the **items** prop.\n\nAvailable sections: Items, Density, Disabled, Variant, Nav, Rounded, Shaped, Sub group, Three line, Two lines and subheader, Action and item groups, Action with text, Card list, Misc Action Stack, Misc Actions, Misc Card List, Misc Simple Avatar List, Misc Single Line List, Misc Subheadings And Dividers, Prop Density, Prop Disabled, Prop Items Custom, Prop Items Prop, Prop Items Type, Prop Items, Prop Nav, Prop Rounded, Prop Shaped, Prop Sub Group, Prop Three Line, Prop Two Line And Subheader, Prop Variant, Slot Expansion Lists, Usage",
    "display_content": "# v-examples\n\nLists can either be created by markup using the many sub-components that are available, or by using the **items** prop.\n\nAvailable sections: Items, Density, Disabled, Variant, Nav, Rounded, Shaped, Sub group, Three line, Two lines and subheader, Action and item groups, Action with text, Card list, Misc Action Stack, Misc Actions, Misc Card List, Misc Simple Avatar List, Misc Single Line List, Misc Subheadings And Dividers, Prop Density, Prop Disabled, Prop Items Custom, Prop Items Prop, Prop Items Type, Prop Items, Prop Nav, Prop Rounded, Prop Shaped, Prop Sub Group, Prop Three Line, Prop Two Line And Subheader, Prop Variant, Slot Expansion Lists, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000852",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000853",
    "text": "Component: v-examples\nSection: Items\nType: documentation\n\n## v-examples - Items\n\nLists can either be created by markup using the many sub-components that are available, or by using the **items** prop.\n\n<ExamplesExample file=\"v-list/prop-items\" />\n\nTo customize which properties will be used for the title and value of each item, use the **item-title** and **item-value** props.\n\n<ExamplesExample file=\"v-list/prop-items-custom\" />\n\nIf you need to render subheaders or dividers, add an item with a **type** property. Which property to use can be customized using the **item-type** prop.\n\n<ExamplesExample file=\"v-list/prop-items-type\" />\n\nTo customize individual items, you can use the **item-props** prop. It defaults to looking for a **props** property on the items. The value should be an object, and if found it will be spread on the **v-list-item** component.\n\nIf **item-props** is set to **true** then the whole item will be spread.\n\n<ExamplesExample file=\"v-list/prop-items-prop\" />",
    "display_content": "## v-examples - Items\n\nLists can either be created by markup using the many sub-components that are available, or by using the **items** prop.\n\n<ExamplesExample file=\"v-list/prop-items\" />\n\nTo customize which properties will be used for the title and value of each item, use the **item-title** and **item-value** props.\n\n<ExamplesExample file=\"v-list/prop-items-custom\" />\n\nIf you need to render subheaders or dividers, add an item with a **type** property. Which property to use can be customized using the **item-type** prop.\n\n<ExamplesExample file=\"v-list/prop-items-type\" />\n\nTo customize individual items, you can use the **item-props** prop. It defaults to looking for a **props** property on the items. The value should be an object, and if found it will be spread on the **v-list-item** component.\n\nIf **item-props** is set to **true** then the whole item will be spread.\n\n<ExamplesExample file=\"v-list/prop-items-prop\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Items",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000853",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000854",
    "text": "Component: v-examples\nSection: Density\nType: documentation\n\n## v-examples - Density\n\n`v-list` supports the **density** property.\n\n<ExamplesExample file=\"v-list/prop-density\" />\n\n<PromotedPromoted slug=\"vuetify-lux-admin-pro\" />",
    "display_content": "## v-examples - Density\n\n`v-list` supports the **density** property.\n\n<ExamplesExample file=\"v-list/prop-density\" />\n\n<PromotedPromoted slug=\"vuetify-lux-admin-pro\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000854",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000855",
    "text": "Component: v-examples\nSection: Disabled\nType: documentation\n\n## v-examples - Disabled\n\nYou cannot interact with disabled `v-list`.\n\n<ExamplesExample file=\"v-list/prop-disabled\" />",
    "display_content": "## v-examples - Disabled\n\nYou cannot interact with disabled `v-list`.\n\n<ExamplesExample file=\"v-list/prop-disabled\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000855",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000856",
    "text": "Component: v-examples\nSection: Variant\nType: documentation\n\n## v-examples - Variant\n\n`v-list` supports the **variant** prop.\n\n<ExamplesExample file=\"v-list/prop-variant\" />",
    "display_content": "## v-examples - Variant\n\n`v-list` supports the **variant** prop.\n\n<ExamplesExample file=\"v-list/prop-variant\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Variant",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000856",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000857",
    "text": "Component: v-examples\nSection: Nav\nType: documentation\n\n## v-examples - Nav\n\nLists can receive an alternative **nav** styling that reduces the width `v-list-item` takes up as well as adding a border radius.\n\n<ExamplesExample file=\"v-list/prop-nav\" />",
    "display_content": "## v-examples - Nav\n\nLists can receive an alternative **nav** styling that reduces the width `v-list-item` takes up as well as adding a border radius.\n\n<ExamplesExample file=\"v-list/prop-nav\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Nav",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000857",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000858",
    "text": "Component: v-examples\nSection: Rounded\nType: documentation\n\n## v-examples - Rounded\n\nYou can make `v-list` items rounded.\n\n<ExamplesExample file=\"v-list/prop-rounded\" />",
    "display_content": "## v-examples - Rounded\n\nYou can make `v-list` items rounded.\n\n<ExamplesExample file=\"v-list/prop-rounded\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Rounded",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000858",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000859",
    "text": "Component: v-examples\nSection: Shaped\nType: documentation\n\n## v-examples - Shaped\n\nShaped lists have rounded borders on one side of the `v-list-item`.\n\n<ExamplesExample file=\"v-list/prop-shaped\" />",
    "display_content": "## v-examples - Shaped\n\nShaped lists have rounded borders on one side of the `v-list-item`.\n\n<ExamplesExample file=\"v-list/prop-shaped\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Shaped",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000859",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000860",
    "text": "Component: v-examples\nSection: Sub group\nType: documentation\n\n## v-examples - Sub group\n\nUsing the `v-list-group` component you can create sub-groups of items.\n\n<ExamplesExample file=\"v-list/prop-sub-group\" />",
    "display_content": "## v-examples - Sub group\n\nUsing the `v-list-group` component you can create sub-groups of items.\n\n<ExamplesExample file=\"v-list/prop-sub-group\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Sub group",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000860",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000861",
    "text": "Component: v-examples\nSection: Three line\nType: documentation\n\n## v-examples - Three line\n\nFor three line lists, the subtitle will clamp vertically at 2 lines and then ellipsis. This feature uses [line-clamp](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp) and is not supported in all browsers.\n\n<ExamplesExample file=\"v-list/prop-three-line\" />",
    "display_content": "## v-examples - Three line\n\nFor three line lists, the subtitle will clamp vertically at 2 lines and then ellipsis. This feature uses [line-clamp](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp) and is not supported in all browsers.\n\n<ExamplesExample file=\"v-list/prop-three-line\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Three line",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000861",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000862",
    "text": "Component: v-examples\nSection: Two lines and subheader\nType: documentation\n\n## v-examples - Two lines and subheader\n\nLists can contain subheaders, dividers, and can contain 1 or more lines. The subtitle will overflow with ellipsis if it extends past one line.\n\n<ExamplesExample file=\"v-list/prop-two-line-and-subheader\" />",
    "display_content": "## v-examples - Two lines and subheader\n\nLists can contain subheaders, dividers, and can contain 1 or more lines. The subtitle will overflow with ellipsis if it extends past one line.\n\n<ExamplesExample file=\"v-list/prop-two-line-and-subheader\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Two lines and subheader",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000862",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000863",
    "text": "Component: v-examples\nSection: Action and item groups\nType: documentation\n\n## v-examples - Action and item groups\n\nA **three-line** list with actions. Utilizing **select-strategy**, easily connect actions to your tiles.\n\n<ExamplesExample file=\"v-list/misc-actions\" />",
    "display_content": "## v-examples - Action and item groups\n\nA **three-line** list with actions. Utilizing **select-strategy**, easily connect actions to your tiles.\n\n<ExamplesExample file=\"v-list/misc-actions\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Action and item groups",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000863",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000864",
    "text": "Component: v-examples\nSection: Action with text\nType: documentation\n\n## v-examples - Action with text\n\nA list can contain additional meta information within an action.\n\n<ExamplesExample file=\"v-list/misc-action-stack\" />",
    "display_content": "## v-examples - Action with text\n\nA list can contain additional meta information within an action.\n\n<ExamplesExample file=\"v-list/misc-action-stack\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Action with text",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000864",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000865",
    "text": "Component: v-examples\nSection: Card list\nType: documentation\n\n## v-examples - Card list\n\nA list can be combined with a card.\n\n<ExamplesExample file=\"v-list/misc-card-list\" />",
    "display_content": "## v-examples - Card list\n\nA list can be combined with a card.\n\n<ExamplesExample file=\"v-list/misc-card-list\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Card list",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000865",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000866",
    "text": "Component: v-examples\nSection: Misc Action Stack\nType: code_example\n\n## v-examples - Misc Action Stack\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"500\">\n    <v-toolbar color=\"pink\">\n      <v-btn icon=\"mdi-menu\"></v-btn>\n\n      <v-toolbar-title>Inbox</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-checkbox-marked-circle\"></v-btn>\n    </v-toolbar>\n\n    <v-list v-model:selected=\"selected\" select-strategy=\"leaf\">\n      <v-list-item\n        v-for=\"item in items\"\n        :key=\"item.id\"\n        :value=\"item.id\"\n        active-class=\"text-pink\"\n        class=\"py-3\"\n      >\n        <v-list-item-title>{{ item.title }}</v-list-item-title>\n\n        <v-list-item-subtitle class=\"mb-1 text-high-emphasis opacity-100\">{{ item.headline }}</v-list-item-subtitle>\n\n        <v-list-item-subtitle class=\"text-high-emphasis\">{{ item.subtitle }}</v-list-item-subtitle>\n\n        <template v-slot:append=\"{ isSelected }\">\n          <v-list-item-action class=\"flex-column align-end\">\n            <small class=\"mb-4 text-high-emphasis opacity-60\">{{ item.action }}</small>\n\n            <v-spacer></v-spacer>\n\n            <v-icon v-if=\"isSelected\" color=\"yellow-darken-3\">mdi-star</v-icon>\n\n            <v-icon v-else class=\"opacity-30\">mdi-star-outline</v-icon>\n          </v-list-item-action>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = [\n    { id: 1, action: '15 min', headline: 'Brunch this weekend?', subtitle: `I'll be in your neighborhood doing errands this weekend. Do you want to hang out?`, title: 'Ali Connors' },\n    { id: 2, action: '2 hr', headline: 'Summer BBQ', subtitle: `Wish I could come, but I'm out of town this weekend.`, title: 'me, Scrott, Jennifer' },\n    { id: 3, action: '6 hr', headline: 'Oui oui', subtitle: 'Do you have Paris recommendations? Have you ever been?', title: 'Sandra Adams' },\n    { id: 4, action: '12 hr', headline: 'Birthday gift', subtitle: 'Have any ideas about what we should get Heidi for her birthday?', title: 'Trevor Hansen' },\n    { id: 5, action: '18hr', headline: 'Recipe to try', subtitle: 'We should eat this: Grate, Squash, Corn, and tomatillo Tacos.', title: 'Britta Holt' },\n  ]\n\n  const selected = shallowRef([2])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { id: 1, action: '15 min', headline: 'Brunch this weekend?', subtitle: `I'll be in your neighborhood doing errands this weekend. Do you want to hang out?`, title: 'Ali Connors' },\n        { id: 2, action: '2 hr', headline: 'Summer BBQ', subtitle: `Wish I could come, but I'm out of town this weekend.`, title: 'me, Scrott, Jennifer' },\n        { id: 3, action: '6 hr', headline: 'Oui oui', subtitle: 'Do you have Paris recommendations? Have you ever been?', title: 'Sandra Adams' },\n        { id: 4, action: '12 hr', headline: 'Birthday gift', subtitle: 'Have any ideas about what we should get Heidi for her birthday?', title: 'Trevor Hansen' },\n        { id: 5, action: '18hr', headline: 'Recipe to try', subtitle: 'We should eat this: Grate, Squash, Corn, and tomatillo Tacos.', title: 'Britta Holt' },\n      ],\n      selected: [2],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Action Stack\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"500\">\n    <v-toolbar color=\"pink\">\n      <v-btn icon=\"mdi-menu\"></v-btn>\n\n      <v-toolbar-title>Inbox</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-checkbox-marked-circle\"></v-btn>\n    </v-toolbar>\n\n    <v-list v-model:selected=\"selected\" select-strategy=\"leaf\">\n      <v-list-item\n        v-for=\"item in items\"\n        :key=\"item.id\"\n        :value=\"item.id\"\n        active-class=\"text-pink\"\n        class=\"py-3\"\n      >\n        <v-list-item-title>{{ item.title }}</v-list-item-title>\n\n        <v-list-item-subtitle class=\"mb-1 text-high-emphasis opacity-100\">{{ item.headline }}</v-list-item-subtitle>\n\n        <v-list-item-subtitle class=\"text-high-emphasis\">{{ item.subtitle }}</v-list-item-subtitle>\n\n        <template v-slot:append=\"{ isSelected }\">\n          <v-list-item-action class=\"flex-column align-end\">\n            <small class=\"mb-4 text-high-emphasis opacity-60\">{{ item.action }}</small>\n\n            <v-spacer></v-spacer>\n\n            <v-icon v-if=\"isSelected\" color=\"yellow-darken-3\">mdi-star</v-icon>\n\n            <v-icon v-else class=\"opacity-30\">mdi-star-outline</v-icon>\n          </v-list-item-action>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = [\n    { id: 1, action: '15 min', headline: 'Brunch this weekend?', subtitle: `I'll be in your neighborhood doing errands this weekend. Do you want to hang out?`, title: 'Ali Connors' },\n    { id: 2, action: '2 hr', headline: 'Summer BBQ', subtitle: `Wish I could come, but I'm out of town this weekend.`, title: 'me, Scrott, Jennifer' },\n    { id: 3, action: '6 hr', headline: 'Oui oui', subtitle: 'Do you have Paris recommendations? Have you ever been?', title: 'Sandra Adams' },\n    { id: 4, action: '12 hr', headline: 'Birthday gift', subtitle: 'Have any ideas about what we should get Heidi for her birthday?', title: 'Trevor Hansen' },\n    { id: 5, action: '18hr', headline: 'Recipe to try', subtitle: 'We should eat this: Grate, Squash, Corn, and tomatillo Tacos.', title: 'Britta Holt' },\n  ]\n\n  const selected = shallowRef([2])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { id: 1, action: '15 min', headline: 'Brunch this weekend?', subtitle: `I'll be in your neighborhood doing errands this weekend. Do you want to hang out?`, title: 'Ali Connors' },\n        { id: 2, action: '2 hr', headline: 'Summer BBQ', subtitle: `Wish I could come, but I'm out of town this weekend.`, title: 'me, Scrott, Jennifer' },\n        { id: 3, action: '6 hr', headline: 'Oui oui', subtitle: 'Do you have Paris recommendations? Have you ever been?', title: 'Sandra Adams' },\n        { id: 4, action: '12 hr', headline: 'Birthday gift', subtitle: 'Have any ideas about what we should get Heidi for her birthday?', title: 'Trevor Hansen' },\n        { id: 5, action: '18hr', headline: 'Recipe to try', subtitle: 'We should eat this: Grate, Squash, Corn, and tomatillo Tacos.', title: 'Britta Holt' },\n      ],\n      selected: [2],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Action Stack",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000866",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000867",
    "text": "Component: v-examples\nSection: Misc Actions\nType: code_example\n\n## v-examples - Misc Actions\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"400\">\n    <v-toolbar color=\"purple\">\n      <v-btn icon=\"mdi-menu\"></v-btn>\n      <v-toolbar-title>Settings</v-toolbar-title>\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n    </v-toolbar>\n\n    <v-list lines=\"three\">\n      <v-list-subheader>User Controls</v-list-subheader>\n      <v-list-item\n        v-for=\"item in userControls\"\n        :key=\"item.value\"\n        :subtitle=\"item.subtitle\"\n        :title=\"item.title\"\n      ></v-list-item>\n    </v-list>\n\n    <v-divider></v-divider>\n\n    <v-list\n      v-model:selected=\"settingsSelection\"\n      lines=\"three\"\n      select-strategy=\"leaf\"\n    >\n      <v-list-subheader>General</v-list-subheader>\n      <v-list-item\n        v-for=\"item in settingsItems\"\n        :key=\"item.value\"\n        :subtitle=\"item.subtitle\"\n        :title=\"item.title\"\n        :value=\"item.value\"\n      >\n        <template v-slot:prepend=\"{ isSelected, select }\">\n          <v-list-item-action start>\n            <v-checkbox-btn :model-value=\"isSelected\" @update:model-value=\"select\"></v-checkbox-btn>\n          </v-list-item-action>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const userControls = [\n    { title: 'Content filtering', subtitle: 'Set the content filtering level to restrict appts that can be downloaded' },\n    { title: 'Password', subtitle: 'Require password for purchase or use password to restrict purchase' },\n  ]\n\n  const settingsItems = [\n    { value: 'notifications', title: 'Notifications', subtitle: 'Notify me about updates to apps or games that I downloaded' },\n    { value: 'sound', title: 'Sound', subtitle: 'Auto-update apps at any time. Data charges may apply' },\n    { value: 'widgets', title: 'Auto-add widgets', subtitle: 'Automatically add home screen widgets when downloads complete' },\n  ]\n\n  const settingsSelection = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      userControls: [\n        { title: 'Content filtering', subtitle: 'Set the content filtering level to restrict appts that can be downloaded' },\n        { title: 'Password', subtitle: 'Require password for purchase or use password to restrict purchase' },\n      ],\n\n      settingsItems: [\n        { value: 'notifications', title: 'Notifications', subtitle: 'Notify me about updates to apps or games that I downloaded' },\n        { value: 'sound', title: 'Sound', subtitle: 'Auto-update apps at any time. Data charges may apply' },\n        { value: 'widgets', title: 'Auto-add widgets', subtitle: 'Automatically add home screen widgets when downloads complete' },\n      ],\n\n      settingsSelection: [],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Actions\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"400\">\n    <v-toolbar color=\"purple\">\n      <v-btn icon=\"mdi-menu\"></v-btn>\n      <v-toolbar-title>Settings</v-toolbar-title>\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n    </v-toolbar>\n\n    <v-list lines=\"three\">\n      <v-list-subheader>User Controls</v-list-subheader>\n      <v-list-item\n        v-for=\"item in userControls\"\n        :key=\"item.value\"\n        :subtitle=\"item.subtitle\"\n        :title=\"item.title\"\n      ></v-list-item>\n    </v-list>\n\n    <v-divider></v-divider>\n\n    <v-list\n      v-model:selected=\"settingsSelection\"\n      lines=\"three\"\n      select-strategy=\"leaf\"\n    >\n      <v-list-subheader>General</v-list-subheader>\n      <v-list-item\n        v-for=\"item in settingsItems\"\n        :key=\"item.value\"\n        :subtitle=\"item.subtitle\"\n        :title=\"item.title\"\n        :value=\"item.value\"\n      >\n        <template v-slot:prepend=\"{ isSelected, select }\">\n          <v-list-item-action start>\n            <v-checkbox-btn :model-value=\"isSelected\" @update:model-value=\"select\"></v-checkbox-btn>\n          </v-list-item-action>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const userControls = [\n    { title: 'Content filtering', subtitle: 'Set the content filtering level to restrict appts that can be downloaded' },\n    { title: 'Password', subtitle: 'Require password for purchase or use password to restrict purchase' },\n  ]\n\n  const settingsItems = [\n    { value: 'notifications', title: 'Notifications', subtitle: 'Notify me about updates to apps or games that I downloaded' },\n    { value: 'sound', title: 'Sound', subtitle: 'Auto-update apps at any time. Data charges may apply' },\n    { value: 'widgets', title: 'Auto-add widgets', subtitle: 'Automatically add home screen widgets when downloads complete' },\n  ]\n\n  const settingsSelection = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      userControls: [\n        { title: 'Content filtering', subtitle: 'Set the content filtering level to restrict appts that can be downloaded' },\n        { title: 'Password', subtitle: 'Require password for purchase or use password to restrict purchase' },\n      ],\n\n      settingsItems: [\n        { value: 'notifications', title: 'Notifications', subtitle: 'Notify me about updates to apps or games that I downloaded' },\n        { value: 'sound', title: 'Sound', subtitle: 'Auto-update apps at any time. Data charges may apply' },\n        { value: 'widgets', title: 'Auto-add widgets', subtitle: 'Automatically add home screen widgets when downloads complete' },\n      ],\n\n      settingsSelection: [],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Actions",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000867",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000868",
    "text": "Component: v-examples\nSection: Misc Card List\nType: code_example\n\n## v-examples - Misc Card List\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"375\"\n  >\n    <v-img\n      class=\"text-white\"\n      height=\"300px\"\n      src=\"https://cdn.vuetifyjs.com/images/lists/ali.png\"\n      cover\n    >\n      <div class=\"d-flex flex-column h-100\">\n        <v-card-title class=\"d-flex ga-2 px-2\">\n          <v-btn icon=\"mdi-chevron-left\" variant=\"text\"></v-btn>\n          <v-spacer></v-spacer>\n          <v-btn icon=\"mdi-pencil\" variant=\"text\"></v-btn>\n          <v-btn icon=\"mdi-dots-vertical\" variant=\"text\"></v-btn>\n        </v-card-title>\n\n        <v-spacer></v-spacer>\n\n        <v-card-title class=\"pb-6 text-center\">\n          <div class=\"text-h4\">Ali Conners</div>\n        </v-card-title>\n      </div>\n    </v-img>\n\n    <v-list lines=\"two\">\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-icon color=\"indigo\" icon=\"mdi-phone\"></v-icon>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>(650) 555-1234</v-list-item-title>\n        <v-list-item-subtitle>Mobile</v-list-item-subtitle>\n\n        <template v-slot:append>\n          <v-avatar>\n            <v-icon icon=\"mdi-message-text\"></v-icon>\n          </v-avatar>\n        </template>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar></v-avatar>\n        </template>\n\n        <v-list-item-title>(323) 555-6789</v-list-item-title>\n        <v-list-item-subtitle>Work</v-list-item-subtitle>\n\n        <template v-slot:append>\n          <v-avatar>\n            <v-icon icon=\"mdi-message-text\"></v-icon>\n          </v-avatar>\n        </template>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-icon color=\"indigo\" icon=\"mdi-email\"></v-icon>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>aliconnors@example.com</v-list-item-title>\n        <v-list-item-subtitle>Personal</v-list-item-subtitle>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar></v-avatar>\n        </template>\n\n        <v-list-item-title>ali_connors@example.com</v-list-item-title>\n        <v-list-item-subtitle>Work</v-list-item-subtitle>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-icon color=\"indigo\" icon=\"mdi-map-marker\"></v-icon>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>1400 Main Street</v-list-item-title>\n        <v-list-item-subtitle>Orlando, FL 79938</v-list-item-subtitle>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Card List\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"375\"\n  >\n    <v-img\n      class=\"text-white\"\n      height=\"300px\"\n      src=\"https://cdn.vuetifyjs.com/images/lists/ali.png\"\n      cover\n    >\n      <div class=\"d-flex flex-column h-100\">\n        <v-card-title class=\"d-flex ga-2 px-2\">\n          <v-btn icon=\"mdi-chevron-left\" variant=\"text\"></v-btn>\n          <v-spacer></v-spacer>\n          <v-btn icon=\"mdi-pencil\" variant=\"text\"></v-btn>\n          <v-btn icon=\"mdi-dots-vertical\" variant=\"text\"></v-btn>\n        </v-card-title>\n\n        <v-spacer></v-spacer>\n\n        <v-card-title class=\"pb-6 text-center\">\n          <div class=\"text-h4\">Ali Conners</div>\n        </v-card-title>\n      </div>\n    </v-img>\n\n    <v-list lines=\"two\">\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-icon color=\"indigo\" icon=\"mdi-phone\"></v-icon>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>(650) 555-1234</v-list-item-title>\n        <v-list-item-subtitle>Mobile</v-list-item-subtitle>\n\n        <template v-slot:append>\n          <v-avatar>\n            <v-icon icon=\"mdi-message-text\"></v-icon>\n          </v-avatar>\n        </template>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar></v-avatar>\n        </template>\n\n        <v-list-item-title>(323) 555-6789</v-list-item-title>\n        <v-list-item-subtitle>Work</v-list-item-subtitle>\n\n        <template v-slot:append>\n          <v-avatar>\n            <v-icon icon=\"mdi-message-text\"></v-icon>\n          </v-avatar>\n        </template>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-icon color=\"indigo\" icon=\"mdi-email\"></v-icon>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>aliconnors@example.com</v-list-item-title>\n        <v-list-item-subtitle>Personal</v-list-item-subtitle>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar></v-avatar>\n        </template>\n\n        <v-list-item-title>ali_connors@example.com</v-list-item-title>\n        <v-list-item-subtitle>Work</v-list-item-subtitle>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-item>\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-icon color=\"indigo\" icon=\"mdi-map-marker\"></v-icon>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>1400 Main Street</v-list-item-title>\n        <v-list-item-subtitle>Orlando, FL 79938</v-list-item-subtitle>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Card List",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000868",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000869",
    "text": "Component: v-examples\nSection: Misc Simple Avatar List\nType: code_example\n\n## v-examples - Misc Simple Avatar List\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-toolbar\n      color=\"indigo\"\n      dark\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Inbox</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <v-list>\n      <v-list-item\n        v-for=\"item in items\"\n        :key=\"item.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-icon\n              v-if=\"item.icon\"\n              color=\"pink\"\n            >\n              mdi-star\n            </v-icon>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>{{ item.title }}</v-list-item-title>\n\n        <template v-slot:append>\n          <v-avatar>\n            <v-img :src=\"item.avatar\"></v-img>\n          </v-avatar>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { icon: true, title: 'Jason Oner', avatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg' },\n    { title: 'Travis Howard', avatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg' },\n    { title: 'Ali Connors', avatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg' },\n    { title: 'Cindy Baker', avatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg' },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        items: [\n          { icon: true, title: 'Jason Oner', avatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg' },\n          { title: 'Travis Howard', avatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg' },\n          { title: 'Ali Connors', avatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg' },\n          { title: 'Cindy Baker', avatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg' },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Simple Avatar List\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-toolbar\n      color=\"indigo\"\n      dark\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Inbox</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <v-list>\n      <v-list-item\n        v-for=\"item in items\"\n        :key=\"item.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-icon\n              v-if=\"item.icon\"\n              color=\"pink\"\n            >\n              mdi-star\n            </v-icon>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>{{ item.title }}</v-list-item-title>\n\n        <template v-slot:append>\n          <v-avatar>\n            <v-img :src=\"item.avatar\"></v-img>\n          </v-avatar>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { icon: true, title: 'Jason Oner', avatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg' },\n    { title: 'Travis Howard', avatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg' },\n    { title: 'Ali Connors', avatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg' },\n    { title: 'Cindy Baker', avatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg' },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        items: [\n          { icon: true, title: 'Jason Oner', avatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg' },\n          { title: 'Travis Howard', avatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg' },\n          { title: 'Ali Connors', avatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg' },\n          { title: 'Cindy Baker', avatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg' },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Simple Avatar List",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000869",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000870",
    "text": "Component: v-examples\nSection: Misc Single Line List\nType: code_example\n\n## v-examples - Misc Single Line List\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-toolbar color=\"deep-purple-accent-4\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>New Chat</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-list>\n      <v-list-subheader>Recent chat</v-list-subheader>\n\n      <v-list-item\n        v-for=\"chat in recent\"\n        :key=\"chat.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-img :src=\"chat.avatar\"></v-img>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>{{ chat.title }}</v-list-item-title>\n\n        <template v-slot:append>\n          <v-avatar>\n            <v-icon :color=\"chat.active ? 'deep-purple accent-4' : 'grey'\">\n              mdi-message-outline\n            </v-icon>\n          </v-avatar>\n        </template>\n      </v-list-item>\n    </v-list>\n\n    <v-divider></v-divider>\n\n    <v-list>\n      <v-list-subheader>Previous chats</v-list-subheader>\n\n      <v-list-item\n        v-for=\"chat in previous\"\n        :key=\"chat.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-img :src=\"chat.avatar\"></v-img>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title v-text=\"chat.title\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const recent = [\n    {\n      active: true,\n      avatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n      title: 'Jason Oner',\n    },\n    {\n      active: true,\n      avatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n      title: 'Mike Carlson',\n    },\n    {\n      avatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n      title: 'Cindy Baker',\n    },\n    {\n      avatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n      title: 'Ali Connors',\n    },\n  ]\n  const previous = [{\n    title: 'Travis Howard',\n    avatar: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n  }]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      recent: [\n        {\n          active: true,\n          avatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n          title: 'Jason Oner',\n        },\n        {\n          active: true,\n          avatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n          title: 'Mike Carlson',\n        },\n        {\n          avatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n          title: 'Cindy Baker',\n        },\n        {\n          avatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n          title: 'Ali Connors',\n        },\n      ],\n      previous: [{\n        title: 'Travis Howard',\n        avatar: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n      }],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Single Line List\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-toolbar color=\"deep-purple-accent-4\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>New Chat</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-list>\n      <v-list-subheader>Recent chat</v-list-subheader>\n\n      <v-list-item\n        v-for=\"chat in recent\"\n        :key=\"chat.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-img :src=\"chat.avatar\"></v-img>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title>{{ chat.title }}</v-list-item-title>\n\n        <template v-slot:append>\n          <v-avatar>\n            <v-icon :color=\"chat.active ? 'deep-purple accent-4' : 'grey'\">\n              mdi-message-outline\n            </v-icon>\n          </v-avatar>\n        </template>\n      </v-list-item>\n    </v-list>\n\n    <v-divider></v-divider>\n\n    <v-list>\n      <v-list-subheader>Previous chats</v-list-subheader>\n\n      <v-list-item\n        v-for=\"chat in previous\"\n        :key=\"chat.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar>\n            <v-img :src=\"chat.avatar\"></v-img>\n          </v-avatar>\n        </template>\n\n        <v-list-item-title v-text=\"chat.title\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const recent = [\n    {\n      active: true,\n      avatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n      title: 'Jason Oner',\n    },\n    {\n      active: true,\n      avatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n      title: 'Mike Carlson',\n    },\n    {\n      avatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n      title: 'Cindy Baker',\n    },\n    {\n      avatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n      title: 'Ali Connors',\n    },\n  ]\n  const previous = [{\n    title: 'Travis Howard',\n    avatar: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n  }]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      recent: [\n        {\n          active: true,\n          avatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n          title: 'Jason Oner',\n        },\n        {\n          active: true,\n          avatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n          title: 'Mike Carlson',\n        },\n        {\n          avatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n          title: 'Cindy Baker',\n        },\n        {\n          avatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n          title: 'Ali Connors',\n        },\n      ],\n      previous: [{\n        title: 'Travis Howard',\n        avatar: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n      }],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Single Line List",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000870",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000871",
    "text": "Component: v-examples\nSection: Misc Subheadings And Dividers\nType: code_example\n\n## v-examples - Misc Subheadings And Dividers\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"475\"\n  >\n    <v-toolbar\n      color=\"teal\"\n      dark\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Settings</v-toolbar-title>\n    </v-toolbar>\n\n    <v-list lines=\"two\">\n      <v-list-subheader>General</v-list-subheader>\n\n      <v-list-item>\n        <v-list-item-title>Profile photo</v-list-item-title>\n        <v-list-item-subtitle>Change your Google+ profile photo</v-list-item-subtitle>\n      </v-list-item>\n\n      <v-list-item>\n        <v-list-item-title>Show your status</v-list-item-title>\n        <v-list-item-subtitle>Your status is visible to everyone</v-list-item-subtitle>\n      </v-list-item>\n    </v-list>\n\n    <v-divider></v-divider>\n\n    <v-list v-model=\"settings\" lines=\"two\" select-strategy=\"leaf\">\n      <v-list-subheader>Hangout notifications</v-list-subheader>\n\n      <v-list-item>\n        <template v-slot:default=\"{ active, }\">\n          <v-list-item-action>\n            <v-checkbox\n              :model-value=\"active\"\n              color=\"primary\"\n            ></v-checkbox>\n          </v-list-item-action>\n\n          <v-list-item-header>\n            <v-list-item-title>Notifications</v-list-item-title>\n            <v-list-item-subtitle>Allow notifications</v-list-item-subtitle>\n          </v-list-item-header>\n        </template>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:default=\"{ active }\">\n          <v-list-item-action>\n            <v-checkbox\n              :model-value=\"active\"\n              color=\"primary\"\n            ></v-checkbox>\n          </v-list-item-action>\n\n          <v-list-item-header>\n            <v-list-item-title>Sound</v-list-item-title>\n            <v-list-item-subtitle>Hangouts message</v-list-item-subtitle>\n          </v-list-item-header>\n        </template>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:default=\"{ active }\">\n          <v-list-item-action>\n            <v-checkbox\n              :model-value=\"active\"\n              color=\"primary\"\n            ></v-checkbox>\n          </v-list-item-action>\n\n          <v-list-item-header>\n            <v-list-item-title>Video sounds</v-list-item-title>\n            <v-list-item-subtitle>Hangouts video call</v-list-item-subtitle>\n          </v-list-item-header>\n        </template>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:default=\"{ active }\">\n          <v-list-item-action>\n            <v-checkbox\n              :model-value=\"active\"\n              color=\"primary\"\n            ></v-checkbox>\n          </v-list-item-action>\n\n          <v-list-item-header>\n            <v-list-item-title>Invites</v-list-item-title>\n            <v-list-item-subtitle>Notify when receiving invites</v-list-item-subtitle>\n          </v-list-item-header>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const settings = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      settings: [],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Subheadings And Dividers\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"475\"\n  >\n    <v-toolbar\n      color=\"teal\"\n      dark\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Settings</v-toolbar-title>\n    </v-toolbar>\n\n    <v-list lines=\"two\">\n      <v-list-subheader>General</v-list-subheader>\n\n      <v-list-item>\n        <v-list-item-title>Profile photo</v-list-item-title>\n        <v-list-item-subtitle>Change your Google+ profile photo</v-list-item-subtitle>\n      </v-list-item>\n\n      <v-list-item>\n        <v-list-item-title>Show your status</v-list-item-title>\n        <v-list-item-subtitle>Your status is visible to everyone</v-list-item-subtitle>\n      </v-list-item>\n    </v-list>\n\n    <v-divider></v-divider>\n\n    <v-list v-model=\"settings\" lines=\"two\" select-strategy=\"leaf\">\n      <v-list-subheader>Hangout notifications</v-list-subheader>\n\n      <v-list-item>\n        <template v-slot:default=\"{ active, }\">\n          <v-list-item-action>\n            <v-checkbox\n              :model-value=\"active\"\n              color=\"primary\"\n            ></v-checkbox>\n          </v-list-item-action>\n\n          <v-list-item-header>\n            <v-list-item-title>Notifications</v-list-item-title>\n            <v-list-item-subtitle>Allow notifications</v-list-item-subtitle>\n          </v-list-item-header>\n        </template>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:default=\"{ active }\">\n          <v-list-item-action>\n            <v-checkbox\n              :model-value=\"active\"\n              color=\"primary\"\n            ></v-checkbox>\n          </v-list-item-action>\n\n          <v-list-item-header>\n            <v-list-item-title>Sound</v-list-item-title>\n            <v-list-item-subtitle>Hangouts message</v-list-item-subtitle>\n          </v-list-item-header>\n        </template>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:default=\"{ active }\">\n          <v-list-item-action>\n            <v-checkbox\n              :model-value=\"active\"\n              color=\"primary\"\n            ></v-checkbox>\n          </v-list-item-action>\n\n          <v-list-item-header>\n            <v-list-item-title>Video sounds</v-list-item-title>\n            <v-list-item-subtitle>Hangouts video call</v-list-item-subtitle>\n          </v-list-item-header>\n        </template>\n      </v-list-item>\n\n      <v-list-item>\n        <template v-slot:default=\"{ active }\">\n          <v-list-item-action>\n            <v-checkbox\n              :model-value=\"active\"\n              color=\"primary\"\n            ></v-checkbox>\n          </v-list-item-action>\n\n          <v-list-item-header>\n            <v-list-item-title>Invites</v-list-item-title>\n            <v-list-item-subtitle>Notify when receiving invites</v-list-item-subtitle>\n          </v-list-item-header>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const settings = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      settings: [],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Subheadings And Dividers",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000871",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000872",
    "text": "Component: v-examples\nSection: Prop Density\nType: code_example\n\n## v-examples - Prop Density\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list density=\"compact\">\n      <v-list-subheader>REPORTS</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Density\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list density=\"compact\">\n      <v-list-subheader>REPORTS</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Density",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000872",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000873",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list disabled>\n      <v-list-subheader>REPORTS</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list disabled>\n      <v-list-subheader>REPORTS</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000873",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000874",
    "text": "Component: v-examples\nSection: Prop Items Custom\nType: code_example\n\n## v-examples - Prop Items Custom\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list\n      :items=\"items\"\n      item-title=\"name\"\n      item-value=\"id\"\n    ></v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      name: 'Item #1',\n      id: 1,\n    },\n    {\n      name: 'Item #2',\n      id: 2,\n    },\n    {\n      name: 'Item #3',\n      id: 3,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          name: 'Item #1',\n          id: 1,\n        },\n        {\n          name: 'Item #2',\n          id: 2,\n        },\n        {\n          name: 'Item #3',\n          id: 3,\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Items Custom\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list\n      :items=\"items\"\n      item-title=\"name\"\n      item-value=\"id\"\n    ></v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      name: 'Item #1',\n      id: 1,\n    },\n    {\n      name: 'Item #2',\n      id: 2,\n    },\n    {\n      name: 'Item #3',\n      id: 3,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          name: 'Item #1',\n          id: 1,\n        },\n        {\n          name: 'Item #2',\n          id: 2,\n        },\n        {\n          name: 'Item #3',\n          id: 3,\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Items Custom",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000874",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000875",
    "text": "Component: v-examples\nSection: Prop Items Prop\nType: code_example\n\n## v-examples - Prop Items Prop\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list :items=\"items\"></v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Item #1',\n      value: 1,\n      props: {\n        prependIcon: 'mdi-home',\n      },\n    },\n    {\n      title: 'Item #2',\n      value: 2,\n      props: {\n        appendIcon: 'mdi-close',\n      },\n    },\n    {\n      title: 'Item #3',\n      value: 3,\n      props: {\n        color: 'primary',\n      },\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Item #1',\n          value: 1,\n          props: {\n            prependIcon: 'mdi-home',\n          },\n        },\n        {\n          title: 'Item #2',\n          value: 2,\n          props: {\n            appendIcon: 'mdi-close',\n          },\n        },\n        {\n          title: 'Item #3',\n          value: 3,\n          props: {\n            color: 'primary',\n          },\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Items Prop\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list :items=\"items\"></v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Item #1',\n      value: 1,\n      props: {\n        prependIcon: 'mdi-home',\n      },\n    },\n    {\n      title: 'Item #2',\n      value: 2,\n      props: {\n        appendIcon: 'mdi-close',\n      },\n    },\n    {\n      title: 'Item #3',\n      value: 3,\n      props: {\n        color: 'primary',\n      },\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Item #1',\n          value: 1,\n          props: {\n            prependIcon: 'mdi-home',\n          },\n        },\n        {\n          title: 'Item #2',\n          value: 2,\n          props: {\n            appendIcon: 'mdi-close',\n          },\n        },\n        {\n          title: 'Item #3',\n          value: 3,\n          props: {\n            color: 'primary',\n          },\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Items Prop",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000875",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000876",
    "text": "Component: v-examples\nSection: Prop Items Type\nType: code_example\n\n## v-examples - Prop Items Type\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list :items=\"items\"></v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { type: 'subheader', title: 'Group #1' },\n    {\n      title: 'Item #1',\n      value: 1,\n    },\n    {\n      title: 'Item #2',\n      value: 2,\n    },\n    {\n      title: 'Item #3',\n      value: 3,\n    },\n    { type: 'divider' },\n    { type: 'subheader', title: 'Group #2' },\n    {\n      title: 'Item #4',\n      value: 4,\n    },\n    {\n      title: 'Item #5',\n      value: 5,\n    },\n    {\n      title: 'Item #6',\n      value: 6,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { type: 'subheader', title: 'Group #1' },\n        {\n          title: 'Item #1',\n          value: 1,\n        },\n        {\n          title: 'Item #2',\n          value: 2,\n        },\n        {\n          title: 'Item #3',\n          value: 3,\n        },\n        { type: 'divider' },\n        { type: 'subheader', title: 'Group #2' },\n        {\n          title: 'Item #4',\n          value: 4,\n        },\n        {\n          title: 'Item #5',\n          value: 5,\n        },\n        {\n          title: 'Item #6',\n          value: 6,\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Items Type\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list :items=\"items\"></v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { type: 'subheader', title: 'Group #1' },\n    {\n      title: 'Item #1',\n      value: 1,\n    },\n    {\n      title: 'Item #2',\n      value: 2,\n    },\n    {\n      title: 'Item #3',\n      value: 3,\n    },\n    { type: 'divider' },\n    { type: 'subheader', title: 'Group #2' },\n    {\n      title: 'Item #4',\n      value: 4,\n    },\n    {\n      title: 'Item #5',\n      value: 5,\n    },\n    {\n      title: 'Item #6',\n      value: 6,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { type: 'subheader', title: 'Group #1' },\n        {\n          title: 'Item #1',\n          value: 1,\n        },\n        {\n          title: 'Item #2',\n          value: 2,\n        },\n        {\n          title: 'Item #3',\n          value: 3,\n        },\n        { type: 'divider' },\n        { type: 'subheader', title: 'Group #2' },\n        {\n          title: 'Item #4',\n          value: 4,\n        },\n        {\n          title: 'Item #5',\n          value: 5,\n        },\n        {\n          title: 'Item #6',\n          value: 6,\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Items Type",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000876",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000877",
    "text": "Component: v-examples\nSection: Prop Items\nType: code_example\n\n## v-examples - Prop Items\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list :items=\"items\"></v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Item #1',\n      value: 1,\n    },\n    {\n      title: 'Item #2',\n      value: 2,\n    },\n    {\n      title: 'Item #3',\n      value: 3,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Item #1',\n          value: 1,\n        },\n        {\n          title: 'Item #2',\n          value: 2,\n        },\n        {\n          title: 'Item #3',\n          value: 3,\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Items\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list :items=\"items\"></v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      title: 'Item #1',\n      value: 1,\n    },\n    {\n      title: 'Item #2',\n      value: 2,\n    },\n    {\n      title: 'Item #3',\n      value: 3,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          title: 'Item #1',\n          value: 1,\n        },\n        {\n          title: 'Item #2',\n          value: 2,\n        },\n        {\n          title: 'Item #3',\n          value: 3,\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Items",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000877",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000878",
    "text": "Component: v-examples\nSection: Prop Nav\nType: code_example\n\n## v-examples - Prop Nav\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    width=\"256\"\n  >\n    <v-layout>\n      <v-navigation-drawer absolute permanent>\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://cdn.vuetifyjs.com/images/john.png\"\n            subtitle=\"john@google.com\"\n            title=\"John Leider\"\n          >\n            <template v-slot:append>\n              <v-btn\n                icon=\"mdi-menu-down\"\n                size=\"small\"\n                variant=\"text\"\n              ></v-btn>\n            </template>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list\n          :lines=\"false\"\n          density=\"compact\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(item, i) in items\"\n            :key=\"i\"\n            :value=\"item\"\n            color=\"primary\"\n          >\n            <template v-slot:prepend>\n              <v-icon :icon=\"item.icon\"></v-icon>\n            </template>\n\n            <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main style=\"height: 354px;\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'My Files', icon: 'mdi-folder' },\n    { text: 'Shared with me', icon: 'mdi-account-multiple' },\n    { text: 'Starred', icon: 'mdi-star' },\n    { text: 'Recent', icon: 'mdi-history' },\n    { text: 'Offline', icon: 'mdi-check-circle' },\n    { text: 'Uploads', icon: 'mdi-upload' },\n    { text: 'Backups', icon: 'mdi-cloud-upload' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'My Files', icon: 'mdi-folder' },\n        { text: 'Shared with me', icon: 'mdi-account-multiple' },\n        { text: 'Starred', icon: 'mdi-star' },\n        { text: 'Recent', icon: 'mdi-history' },\n        { text: 'Offline', icon: 'mdi-check-circle' },\n        { text: 'Uploads', icon: 'mdi-upload' },\n        { text: 'Backups', icon: 'mdi-cloud-upload' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Nav\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    width=\"256\"\n  >\n    <v-layout>\n      <v-navigation-drawer absolute permanent>\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://cdn.vuetifyjs.com/images/john.png\"\n            subtitle=\"john@google.com\"\n            title=\"John Leider\"\n          >\n            <template v-slot:append>\n              <v-btn\n                icon=\"mdi-menu-down\"\n                size=\"small\"\n                variant=\"text\"\n              ></v-btn>\n            </template>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list\n          :lines=\"false\"\n          density=\"compact\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(item, i) in items\"\n            :key=\"i\"\n            :value=\"item\"\n            color=\"primary\"\n          >\n            <template v-slot:prepend>\n              <v-icon :icon=\"item.icon\"></v-icon>\n            </template>\n\n            <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main style=\"height: 354px;\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'My Files', icon: 'mdi-folder' },\n    { text: 'Shared with me', icon: 'mdi-account-multiple' },\n    { text: 'Starred', icon: 'mdi-star' },\n    { text: 'Recent', icon: 'mdi-history' },\n    { text: 'Offline', icon: 'mdi-check-circle' },\n    { text: 'Uploads', icon: 'mdi-upload' },\n    { text: 'Backups', icon: 'mdi-cloud-upload' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'My Files', icon: 'mdi-folder' },\n        { text: 'Shared with me', icon: 'mdi-account-multiple' },\n        { text: 'Starred', icon: 'mdi-star' },\n        { text: 'Recent', icon: 'mdi-history' },\n        { text: 'Offline', icon: 'mdi-check-circle' },\n        { text: 'Uploads', icon: 'mdi-upload' },\n        { text: 'Backups', icon: 'mdi-cloud-upload' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Nav",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000878",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000879",
    "text": "Component: v-examples\nSection: Prop Rounded\nType: code_example\n\n## v-examples - Prop Rounded\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto pa-2\"\n    max-width=\"300\"\n  >\n    <v-list>\n      <v-list-subheader>REPORTS</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n        rounded=\"xl\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Rounded\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto pa-2\"\n    max-width=\"300\"\n  >\n    <v-list>\n      <v-list-subheader>REPORTS</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n        rounded=\"xl\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rounded",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000879",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000880",
    "text": "Component: v-examples\nSection: Prop Shaped\nType: code_example\n\n## v-examples - Prop Shaped\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto pa-2\"\n    max-width=\"300\"\n  >\n    <v-list>\n      <v-list-subheader>REPORTS</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n        rounded=\"shaped\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Shaped\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto pa-2\"\n    max-width=\"300\"\n  >\n    <v-list>\n      <v-list-subheader>REPORTS</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n        rounded=\"shaped\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Shaped",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000880",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000881",
    "text": "Component: v-examples\nSection: Prop Sub Group\nType: code_example\n\n## v-examples - Prop Sub Group\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    width=\"300\"\n  >\n    <v-list v-model:opened=\"open\">\n      <v-list-item prepend-icon=\"mdi-home\" title=\"Home\"></v-list-item>\n\n      <v-list-group value=\"Users\">\n        <template v-slot:activator=\"{ props }\">\n          <v-list-item\n            v-bind=\"props\"\n            prepend-icon=\"mdi-account-circle\"\n            title=\"Users\"\n          ></v-list-item>\n        </template>\n\n        <v-list-group value=\"Admin\">\n          <template v-slot:activator=\"{ props }\">\n            <v-list-item\n              v-bind=\"props\"\n              title=\"Admin\"\n            ></v-list-item>\n          </template>\n\n          <v-list-item\n            v-for=\"([title, icon], i) in admins\"\n            :key=\"i\"\n            :prepend-icon=\"icon\"\n            :title=\"title\"\n            :value=\"title\"\n          ></v-list-item>\n        </v-list-group>\n\n        <v-list-group value=\"Actions\">\n          <template v-slot:activator=\"{ props }\">\n            <v-list-item\n              v-bind=\"props\"\n              title=\"Actions\"\n            ></v-list-item>\n          </template>\n\n          <v-list-item\n            v-for=\"([title, icon], i) in cruds\"\n            :key=\"i\"\n            :prepend-icon=\"icon\"\n            :title=\"title\"\n            :value=\"title\"\n          ></v-list-item>\n        </v-list-group>\n      </v-list-group>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const open = ref(['Users'])\n\n  const admins = [\n    ['Management', 'mdi-account-multiple-outline'],\n    ['Settings', 'mdi-cog-outline'],\n  ]\n  const cruds = [\n    ['Create', 'mdi-plus-outline'],\n    ['Read', 'mdi-file-outline'],\n    ['Update', 'mdi-update'],\n    ['Delete', 'mdi-delete'],\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      open: ['Users'],\n      admins: [\n        ['Management', 'mdi-account-multiple-outline'],\n        ['Settings', 'mdi-cog-outline'],\n      ],\n      cruds: [\n        ['Create', 'mdi-plus-outline'],\n        ['Read', 'mdi-file-outline'],\n        ['Update', 'mdi-update'],\n        ['Delete', 'mdi-delete'],\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Sub Group\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    width=\"300\"\n  >\n    <v-list v-model:opened=\"open\">\n      <v-list-item prepend-icon=\"mdi-home\" title=\"Home\"></v-list-item>\n\n      <v-list-group value=\"Users\">\n        <template v-slot:activator=\"{ props }\">\n          <v-list-item\n            v-bind=\"props\"\n            prepend-icon=\"mdi-account-circle\"\n            title=\"Users\"\n          ></v-list-item>\n        </template>\n\n        <v-list-group value=\"Admin\">\n          <template v-slot:activator=\"{ props }\">\n            <v-list-item\n              v-bind=\"props\"\n              title=\"Admin\"\n            ></v-list-item>\n          </template>\n\n          <v-list-item\n            v-for=\"([title, icon], i) in admins\"\n            :key=\"i\"\n            :prepend-icon=\"icon\"\n            :title=\"title\"\n            :value=\"title\"\n          ></v-list-item>\n        </v-list-group>\n\n        <v-list-group value=\"Actions\">\n          <template v-slot:activator=\"{ props }\">\n            <v-list-item\n              v-bind=\"props\"\n              title=\"Actions\"\n            ></v-list-item>\n          </template>\n\n          <v-list-item\n            v-for=\"([title, icon], i) in cruds\"\n            :key=\"i\"\n            :prepend-icon=\"icon\"\n            :title=\"title\"\n            :value=\"title\"\n          ></v-list-item>\n        </v-list-group>\n      </v-list-group>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const open = ref(['Users'])\n\n  const admins = [\n    ['Management', 'mdi-account-multiple-outline'],\n    ['Settings', 'mdi-cog-outline'],\n  ]\n  const cruds = [\n    ['Create', 'mdi-plus-outline'],\n    ['Read', 'mdi-file-outline'],\n    ['Update', 'mdi-update'],\n    ['Delete', 'mdi-delete'],\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      open: ['Users'],\n      admins: [\n        ['Management', 'mdi-account-multiple-outline'],\n        ['Settings', 'mdi-cog-outline'],\n      ],\n      cruds: [\n        ['Create', 'mdi-plus-outline'],\n        ['Read', 'mdi-file-outline'],\n        ['Update', 'mdi-update'],\n        ['Delete', 'mdi-delete'],\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Sub Group",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000881",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000882",
    "text": "Component: v-examples\nSection: Prop Three Line\nType: code_example\n\n## v-examples - Prop Three Line\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"450\"\n  >\n    <v-toolbar color=\"cyan-lighten-1\">\n      <v-btn icon=\"mdi-menu\" variant=\"text\"></v-btn>\n\n      <v-toolbar-title>Inbox</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\" variant=\"text\"></v-btn>\n    </v-toolbar>\n\n    <v-list\n      :items=\"items\"\n      lines=\"three\"\n      item-props\n    >\n      <template v-slot:subtitle=\"{ subtitle }\">\n        <div v-html=\"subtitle\"></div>\n      </template>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { type: 'subheader', title: 'Today' },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n      title: 'Brunch this weekend?',\n      subtitle: `<span class=\"text-primary\">Ali Connors</span> &mdash; I'll be in your neighborhood doing errands this weekend. Do you want to hang out?`,\n    },\n    { type: 'divider', inset: true },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n      title: 'Summer BBQ',\n      subtitle: `<span class=\"text-primary\">to Alex, Scott, Jennifer</span> &mdash; Wish I could come, but I'm out of town this weekend.`,\n    },\n    { type: 'divider', inset: true },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n      title: 'Oui oui',\n      subtitle: '<span class=\"text-primary\">Sandra Adams</span> &mdash; Do you have Paris recommendations? Have you ever been?',\n    },\n    { type: 'divider', inset: true },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n      title: 'Birthday gift',\n      subtitle: '<span class=\"text-primary\">Trevor Hansen</span> &mdash; Have any ideas about what we should get Heidi for her birthday?',\n    },\n    { type: 'divider', inset: true },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n      title: 'Recipe to try',\n      subtitle: '<span class=\"text-primary\">Britta Holt</span> &mdash; We should eat this: Grate, Squash, Corn, and tomatillo Tacos.',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { type: 'subheader', title: 'Today' },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n          title: 'Brunch this weekend?',\n          subtitle: `<span class=\"text-primary\">Ali Connors</span> &mdash; I'll be in your neighborhood doing errands this weekend. Do you want to hang out?`,\n        },\n        { type: 'divider', inset: true },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n          title: 'Summer BBQ',\n          subtitle: `<span class=\"text-primary\">to Alex, Scott, Jennifer</span> &mdash; Wish I could come, but I'm out of town this weekend.`,\n        },\n        { type: 'divider', inset: true },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n          title: 'Oui oui',\n          subtitle: '<span class=\"text-primary\">Sandra Adams</span> &mdash; Do you have Paris recommendations? Have you ever been?',\n        },\n        { type: 'divider', inset: true },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n          title: 'Birthday gift',\n          subtitle: '<span class=\"text-primary\">Trevor Hansen</span> &mdash; Have any ideas about what we should get Heidi for her birthday?',\n        },\n        { type: 'divider', inset: true },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n          title: 'Recipe to try',\n          subtitle: '<span class=\"text-primary\">Britta Holt</span> &mdash; We should eat this: Grate, Squash, Corn, and tomatillo Tacos.',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Three Line\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"450\"\n  >\n    <v-toolbar color=\"cyan-lighten-1\">\n      <v-btn icon=\"mdi-menu\" variant=\"text\"></v-btn>\n\n      <v-toolbar-title>Inbox</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\" variant=\"text\"></v-btn>\n    </v-toolbar>\n\n    <v-list\n      :items=\"items\"\n      lines=\"three\"\n      item-props\n    >\n      <template v-slot:subtitle=\"{ subtitle }\">\n        <div v-html=\"subtitle\"></div>\n      </template>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { type: 'subheader', title: 'Today' },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n      title: 'Brunch this weekend?',\n      subtitle: `<span class=\"text-primary\">Ali Connors</span> &mdash; I'll be in your neighborhood doing errands this weekend. Do you want to hang out?`,\n    },\n    { type: 'divider', inset: true },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n      title: 'Summer BBQ',\n      subtitle: `<span class=\"text-primary\">to Alex, Scott, Jennifer</span> &mdash; Wish I could come, but I'm out of town this weekend.`,\n    },\n    { type: 'divider', inset: true },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n      title: 'Oui oui',\n      subtitle: '<span class=\"text-primary\">Sandra Adams</span> &mdash; Do you have Paris recommendations? Have you ever been?',\n    },\n    { type: 'divider', inset: true },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n      title: 'Birthday gift',\n      subtitle: '<span class=\"text-primary\">Trevor Hansen</span> &mdash; Have any ideas about what we should get Heidi for her birthday?',\n    },\n    { type: 'divider', inset: true },\n    {\n      prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n      title: 'Recipe to try',\n      subtitle: '<span class=\"text-primary\">Britta Holt</span> &mdash; We should eat this: Grate, Squash, Corn, and tomatillo Tacos.',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { type: 'subheader', title: 'Today' },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/1.jpg',\n          title: 'Brunch this weekend?',\n          subtitle: `<span class=\"text-primary\">Ali Connors</span> &mdash; I'll be in your neighborhood doing errands this weekend. Do you want to hang out?`,\n        },\n        { type: 'divider', inset: true },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/2.jpg',\n          title: 'Summer BBQ',\n          subtitle: `<span class=\"text-primary\">to Alex, Scott, Jennifer</span> &mdash; Wish I could come, but I'm out of town this weekend.`,\n        },\n        { type: 'divider', inset: true },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/3.jpg',\n          title: 'Oui oui',\n          subtitle: '<span class=\"text-primary\">Sandra Adams</span> &mdash; Do you have Paris recommendations? Have you ever been?',\n        },\n        { type: 'divider', inset: true },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/4.jpg',\n          title: 'Birthday gift',\n          subtitle: '<span class=\"text-primary\">Trevor Hansen</span> &mdash; Have any ideas about what we should get Heidi for her birthday?',\n        },\n        { type: 'divider', inset: true },\n        {\n          prependAvatar: 'https://cdn.vuetifyjs.com/images/lists/5.jpg',\n          title: 'Recipe to try',\n          subtitle: '<span class=\"text-primary\">Britta Holt</span> &mdash; We should eat this: Grate, Squash, Corn, and tomatillo Tacos.',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Three Line",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000882",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000883",
    "text": "Component: v-examples\nSection: Prop Two Line And Subheader\nType: code_example\n\n## v-examples - Prop Two Line And Subheader\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"600\"\n  >\n    <v-toolbar color=\"secondary\">\n      <v-btn icon=\"mdi-menu\" variant=\"text\"></v-btn>\n\n      <v-toolbar-title>My files</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\" variant=\"text\"></v-btn>\n\n      <v-btn icon=\"mdi-view-module\" variant=\"text\"></v-btn>\n    </v-toolbar>\n\n    <v-list lines=\"two\">\n      <v-list-subheader inset>Folders</v-list-subheader>\n\n      <v-list-item\n        v-for=\"folder in folders\"\n        :key=\"folder.title\"\n        :subtitle=\"folder.subtitle\"\n        :title=\"folder.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar color=\"grey-lighten-1\">\n            <v-icon color=\"white\">mdi-folder</v-icon>\n          </v-avatar>\n        </template>\n\n        <template v-slot:append>\n          <v-btn\n            color=\"grey-lighten-1\"\n            icon=\"mdi-information\"\n            variant=\"text\"\n          ></v-btn>\n        </template>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-subheader inset>Files</v-list-subheader>\n\n      <v-list-item\n        v-for=\"file in files\"\n        :key=\"file.title\"\n        :subtitle=\"file.subtitle\"\n        :title=\"file.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar :color=\"file.color\">\n            <v-icon color=\"white\">{{ file.icon }}</v-icon>\n          </v-avatar>\n        </template>\n\n        <template v-slot:append>\n          <v-btn\n            color=\"grey-lighten-1\"\n            icon=\"mdi-information\"\n            variant=\"text\"\n          ></v-btn>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const files = [\n    {\n      color: 'blue',\n      icon: 'mdi-clipboard-text',\n      subtitle: 'Jan 20, 2014',\n      title: 'Vacation itinerary',\n    },\n    {\n      color: 'amber',\n      icon: 'mdi-gesture-tap-button',\n      subtitle: 'Jan 10, 2014',\n      title: 'Kitchen remodel',\n    },\n  ]\n  const folders = [\n    {\n      subtitle: 'Jan 9, 2014',\n      title: 'Photos',\n    },\n    {\n      subtitle: 'Jan 17, 2014',\n      title: 'Recipes',\n    },\n    {\n      subtitle: 'Jan 28, 2014',\n      title: 'Work',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      files: [\n        {\n          color: 'blue',\n          icon: 'mdi-clipboard-text',\n          subtitle: 'Jan 20, 2014',\n          title: 'Vacation itinerary',\n        },\n        {\n          color: 'amber',\n          icon: 'mdi-gesture-tap-button',\n          subtitle: 'Jan 10, 2014',\n          title: 'Kitchen remodel',\n        },\n      ],\n      folders: [\n        {\n          subtitle: 'Jan 9, 2014',\n          title: 'Photos',\n        },\n        {\n          subtitle: 'Jan 17, 2014',\n          title: 'Recipes',\n        },\n        {\n          subtitle: 'Jan 28, 2014',\n          title: 'Work',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Two Line And Subheader\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"600\"\n  >\n    <v-toolbar color=\"secondary\">\n      <v-btn icon=\"mdi-menu\" variant=\"text\"></v-btn>\n\n      <v-toolbar-title>My files</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\" variant=\"text\"></v-btn>\n\n      <v-btn icon=\"mdi-view-module\" variant=\"text\"></v-btn>\n    </v-toolbar>\n\n    <v-list lines=\"two\">\n      <v-list-subheader inset>Folders</v-list-subheader>\n\n      <v-list-item\n        v-for=\"folder in folders\"\n        :key=\"folder.title\"\n        :subtitle=\"folder.subtitle\"\n        :title=\"folder.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar color=\"grey-lighten-1\">\n            <v-icon color=\"white\">mdi-folder</v-icon>\n          </v-avatar>\n        </template>\n\n        <template v-slot:append>\n          <v-btn\n            color=\"grey-lighten-1\"\n            icon=\"mdi-information\"\n            variant=\"text\"\n          ></v-btn>\n        </template>\n      </v-list-item>\n\n      <v-divider inset></v-divider>\n\n      <v-list-subheader inset>Files</v-list-subheader>\n\n      <v-list-item\n        v-for=\"file in files\"\n        :key=\"file.title\"\n        :subtitle=\"file.subtitle\"\n        :title=\"file.title\"\n      >\n        <template v-slot:prepend>\n          <v-avatar :color=\"file.color\">\n            <v-icon color=\"white\">{{ file.icon }}</v-icon>\n          </v-avatar>\n        </template>\n\n        <template v-slot:append>\n          <v-btn\n            color=\"grey-lighten-1\"\n            icon=\"mdi-information\"\n            variant=\"text\"\n          ></v-btn>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const files = [\n    {\n      color: 'blue',\n      icon: 'mdi-clipboard-text',\n      subtitle: 'Jan 20, 2014',\n      title: 'Vacation itinerary',\n    },\n    {\n      color: 'amber',\n      icon: 'mdi-gesture-tap-button',\n      subtitle: 'Jan 10, 2014',\n      title: 'Kitchen remodel',\n    },\n  ]\n  const folders = [\n    {\n      subtitle: 'Jan 9, 2014',\n      title: 'Photos',\n    },\n    {\n      subtitle: 'Jan 17, 2014',\n      title: 'Recipes',\n    },\n    {\n      subtitle: 'Jan 28, 2014',\n      title: 'Work',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      files: [\n        {\n          color: 'blue',\n          icon: 'mdi-clipboard-text',\n          subtitle: 'Jan 20, 2014',\n          title: 'Vacation itinerary',\n        },\n        {\n          color: 'amber',\n          icon: 'mdi-gesture-tap-button',\n          subtitle: 'Jan 10, 2014',\n          title: 'Kitchen remodel',\n        },\n      ],\n      folders: [\n        {\n          subtitle: 'Jan 9, 2014',\n          title: 'Photos',\n        },\n        {\n          subtitle: 'Jan 17, 2014',\n          title: 'Recipes',\n        },\n        {\n          subtitle: 'Jan 28, 2014',\n          title: 'Work',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Two Line And Subheader",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000883",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000884",
    "text": "Component: v-examples\nSection: Prop Variant\nType: code_example\n\n## v-examples - Prop Variant\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list>\n      <v-list-subheader>Plain Variant</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n        variant=\"plain\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n\n    <v-list>\n      <v-list-subheader>Tonal Variant</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n        variant=\"tonal\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Variant\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"300\"\n  >\n    <v-list>\n      <v-list-subheader>Plain Variant</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n        variant=\"plain\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n\n    <v-list>\n      <v-list-subheader>Tonal Variant</v-list-subheader>\n\n      <v-list-item\n        v-for=\"(item, i) in items\"\n        :key=\"i\"\n        :value=\"item\"\n        color=\"primary\"\n        variant=\"tonal\"\n      >\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\"></v-icon>\n        </template>\n\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    { text: 'Real-Time', icon: 'mdi-clock' },\n    { text: 'Audience', icon: 'mdi-account' },\n    { text: 'Conversions', icon: 'mdi-flag' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Variant",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000884",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000885",
    "text": "Component: v-examples\nSection: Slot Expansion Lists\nType: code_example\n\n## v-examples - Slot Expansion Lists\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-toolbar\n      color=\"teal\"\n      dark\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Topics</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-list>\n      <v-list-group\n        v-for=\"item in items\"\n        :key=\"item.title\"\n        v-model=\"item.active\"\n        :prepend-icon=\"item.action\"\n      >\n        <template v-slot:activator>\n          <v-list-item-header>\n            <v-list-item-title v-text=\"item.title\"></v-list-item-title>\n          </v-list-item-header>\n        </template>\n\n        <v-list-item\n          v-for=\"child in item.items\"\n          :key=\"child.title\"\n        >\n          <v-list-item-header>\n            <v-list-item-title v-text=\"child.title\"></v-list-item-title>\n          </v-list-item-header>\n        </v-list-item>\n      </v-list-group>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      action: 'mdi-ticket',\n      items: [{ title: 'List Item' }],\n      title: 'Attractions',\n    },\n    {\n      action: 'mdi-silverware-fork-knife',\n      active: true,\n      items: [\n        { title: 'Breakfast & brunch' },\n        { title: 'New American' },\n        { title: 'Sushi' },\n      ],\n      title: 'Dining',\n    },\n    {\n      action: 'mdi-school',\n      items: [{ title: 'List Item' }],\n      title: 'Education',\n    },\n    {\n      action: 'mdi-human-male-female-child',\n      items: [{ title: 'List Item' }],\n      title: 'Family',\n    },\n    {\n      action: 'mdi-bottle-tonic-plus',\n      items: [{ title: 'List Item' }],\n      title: 'Health',\n    },\n    {\n      action: 'mdi-briefcase',\n      items: [{ title: 'List Item' }],\n      title: 'Office',\n    },\n    {\n      action: 'mdi-tag',\n      items: [{ title: 'List Item' }],\n      title: 'Promotions',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          action: 'mdi-ticket',\n          items: [{ title: 'List Item' }],\n          title: 'Attractions',\n        },\n        {\n          action: 'mdi-silverware-fork-knife',\n          active: true,\n          items: [\n            { title: 'Breakfast & brunch' },\n            { title: 'New American' },\n            { title: 'Sushi' },\n          ],\n          title: 'Dining',\n        },\n        {\n          action: 'mdi-school',\n          items: [{ title: 'List Item' }],\n          title: 'Education',\n        },\n        {\n          action: 'mdi-human-male-female-child',\n          items: [{ title: 'List Item' }],\n          title: 'Family',\n        },\n        {\n          action: 'mdi-bottle-tonic-plus',\n          items: [{ title: 'List Item' }],\n          title: 'Health',\n        },\n        {\n          action: 'mdi-briefcase',\n          items: [{ title: 'List Item' }],\n          title: 'Office',\n        },\n        {\n          action: 'mdi-tag',\n          items: [{ title: 'List Item' }],\n          title: 'Promotions',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Expansion Lists\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-toolbar\n      color=\"teal\"\n      dark\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Topics</v-toolbar-title>\n\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-list>\n      <v-list-group\n        v-for=\"item in items\"\n        :key=\"item.title\"\n        v-model=\"item.active\"\n        :prepend-icon=\"item.action\"\n      >\n        <template v-slot:activator>\n          <v-list-item-header>\n            <v-list-item-title v-text=\"item.title\"></v-list-item-title>\n          </v-list-item-header>\n        </template>\n\n        <v-list-item\n          v-for=\"child in item.items\"\n          :key=\"child.title\"\n        >\n          <v-list-item-header>\n            <v-list-item-title v-text=\"child.title\"></v-list-item-title>\n          </v-list-item-header>\n        </v-list-item>\n      </v-list-group>\n    </v-list>\n  </v-card>\n</template>\n\n<script setup>\n  const items = [\n    {\n      action: 'mdi-ticket',\n      items: [{ title: 'List Item' }],\n      title: 'Attractions',\n    },\n    {\n      action: 'mdi-silverware-fork-knife',\n      active: true,\n      items: [\n        { title: 'Breakfast & brunch' },\n        { title: 'New American' },\n        { title: 'Sushi' },\n      ],\n      title: 'Dining',\n    },\n    {\n      action: 'mdi-school',\n      items: [{ title: 'List Item' }],\n      title: 'Education',\n    },\n    {\n      action: 'mdi-human-male-female-child',\n      items: [{ title: 'List Item' }],\n      title: 'Family',\n    },\n    {\n      action: 'mdi-bottle-tonic-plus',\n      items: [{ title: 'List Item' }],\n      title: 'Health',\n    },\n    {\n      action: 'mdi-briefcase',\n      items: [{ title: 'List Item' }],\n      title: 'Office',\n    },\n    {\n      action: 'mdi-tag',\n      items: [{ title: 'List Item' }],\n      title: 'Promotions',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          action: 'mdi-ticket',\n          items: [{ title: 'List Item' }],\n          title: 'Attractions',\n        },\n        {\n          action: 'mdi-silverware-fork-knife',\n          active: true,\n          items: [\n            { title: 'Breakfast & brunch' },\n            { title: 'New American' },\n            { title: 'Sushi' },\n          ],\n          title: 'Dining',\n        },\n        {\n          action: 'mdi-school',\n          items: [{ title: 'List Item' }],\n          title: 'Education',\n        },\n        {\n          action: 'mdi-human-male-female-child',\n          items: [{ title: 'List Item' }],\n          title: 'Family',\n        },\n        {\n          action: 'mdi-bottle-tonic-plus',\n          items: [{ title: 'List Item' }],\n          title: 'Health',\n        },\n        {\n          action: 'mdi-briefcase',\n          items: [{ title: 'List Item' }],\n          title: 'Office',\n        },\n        {\n          action: 'mdi-tag',\n          items: [{ title: 'List Item' }],\n          title: 'Promotions',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Expansion Lists",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000885",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000886",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-list v-bind=\"props\">\n        <v-list-item\n          v-for=\"n in 3\"\n          :key=\"n\"\n          :prepend-avatar=\"avatar ? 'https://randomuser.me/api/portraits/women/8.jpg' : undefined\"\n          :title=\"'Item ' + n\"\n          subtitle=\"Lorem ipsum dolor sit amet consectetur adipisicing elit\"\n        ></v-list-item>\n      </v-list>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"avatar\" label=\"Show avatars\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-list'\n  const model = ref('default')\n  const options = ['two-lines', 'three-lines']\n  const avatar = ref(false)\n\n  const lines = computed(() => {\n    return {\n      default: 'one',\n      'two-lines': 'two',\n      'three-lines': 'three',\n    }[model.value]\n  })\n\n  const props = computed(() => {\n    return {\n      lines: lines.value,\n    }\n  })\n  const itemProps = computed(() => {\n    return {\n      'v-for': 'n in 3',\n      ':key': 'n',\n      ':title': `'Item ' + n`,\n      subtitle: 'Lorem ipsum dolor sit amet consectetur adipisicing elit',\n      ':prepend-avatar': avatar.value ? 'https://randomuser.me/api/portraits/women/8.jpg' : undefined,\n    }\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>\n  <v-list-item${propsToString(itemProps.value, 2)}></v-list-item>\n</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-list v-bind=\"props\">\n        <v-list-item\n          v-for=\"n in 3\"\n          :key=\"n\"\n          :prepend-avatar=\"avatar ? 'https://randomuser.me/api/portraits/women/8.jpg' : undefined\"\n          :title=\"'Item ' + n\"\n          subtitle=\"Lorem ipsum dolor sit amet consectetur adipisicing elit\"\n        ></v-list-item>\n      </v-list>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"avatar\" label=\"Show avatars\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-list'\n  const model = ref('default')\n  const options = ['two-lines', 'three-lines']\n  const avatar = ref(false)\n\n  const lines = computed(() => {\n    return {\n      default: 'one',\n      'two-lines': 'two',\n      'three-lines': 'three',\n    }[model.value]\n  })\n\n  const props = computed(() => {\n    return {\n      lines: lines.value,\n    }\n  })\n  const itemProps = computed(() => {\n    return {\n      'v-for': 'n in 3',\n      ':key': 'n',\n      ':title': `'Item ' + n`,\n      subtitle: 'Lorem ipsum dolor sit amet consectetur adipisicing elit',\n      ':prepend-avatar': avatar.value ? 'https://randomuser.me/api/portraits/women/8.jpg' : undefined,\n    }\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>\n  <v-list-item${propsToString(itemProps.value, 2)}></v-list-item>\n</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000886",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000887",
    "text": "Component: v-locale-providers\nType: component_overview\n\n# v-locale-providers\n\nThe locale provider allows you to provide specific default prop values to components in a section of your application",
    "display_content": "# v-locale-providers\n\nThe locale provider allows you to provide specific default prop values to components in a section of your application",
    "metadata": {
      "component": "v-locale-providers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000887",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000888",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-locale-provider](/api/v-locale-provider/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-locale-provider](/api/v-locale-provider/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000888",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000889",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe `v-locale-provider` expects a prop **locale** which looks the same as the **locale** object that you can pass to `createVuetify` when creating your application.\n\nAvailable sections: Locale",
    "display_content": "# v-examples\n\nThe `v-locale-provider` expects a prop **locale** which looks the same as the **locale** object that you can pass to `createVuetify` when creating your application.\n\nAvailable sections: Locale",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000889",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000890",
    "text": "Component: v-examples\nSection: Locale\nType: documentation\n\n## v-examples - Locale\n\nThe `v-locale-provider` expects a prop **locale** which looks the same as the **locale** object that you can pass to `createVuetify` when creating your application.",
    "display_content": "## v-examples - Locale\n\nThe `v-locale-provider` expects a prop **locale** which looks the same as the **locale** object that you can pass to `createVuetify` when creating your application.",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Locale",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000890",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000891",
    "text": "Component: v-menus\nType: component_overview\n\n# v-menus\n\nThe `v-menu` component shows a menu at the position of the element used to activate it.",
    "display_content": "# v-menus\n\nThe `v-menu` component shows a menu at the position of the element used to activate it.",
    "metadata": {
      "component": "v-menus",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000891",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000892",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThere are three main ways that menus can be defined in markup.",
    "display_content": "# v-usage\n\nThere are three main ways that menus can be defined in markup.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000892",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000893",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-menu](/api/v-menu/) | Primary Component | | [v-btn](/api/v-btn/) | Sub-component often used for the `v-menu` activator | | [v-list-item](/api/v-list-item/) | Sub-component often used for the `v-menu` content |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-menu](/api/v-menu/) | Primary Component | | [v-btn](/api/v-btn/) | Sub-component often used for the `v-menu` activator | | [v-list-item](/api/v-list-item/) | Sub-component often used for the `v-menu` content |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000893",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000894",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nMenus can also be placed absolutely on top of the activator element using the **absolute** prop. Try clicking anywhere on the image.\n\nAvailable sections: Props, Absolute without activator, Close on content click, Location, Open on hover, Nested menus, Activator and tooltip, Transitions, Popover menu, Use In components, Misc Popover, Misc Transition, Misc Use In Components, Prop Absolute Without Activator, Prop Absolute, Prop Close On Click, Prop Close On Content Click, Prop Disabled, Prop Location, Prop Open On Hover, Prop Rounded, Prop Submenu, Slot Activator And Tooltip, Usage",
    "display_content": "# v-examples\n\nMenus can also be placed absolutely on top of the activator element using the **absolute** prop. Try clicking anywhere on the image.\n\nAvailable sections: Props, Absolute without activator, Close on content click, Location, Open on hover, Nested menus, Activator and tooltip, Transitions, Popover menu, Use In components, Misc Popover, Misc Transition, Misc Use In Components, Prop Absolute Without Activator, Prop Absolute, Prop Close On Click, Prop Close On Content Click, Prop Disabled, Prop Location, Prop Open On Hover, Prop Rounded, Prop Submenu, Slot Activator And Tooltip, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000894",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000895",
    "text": "Component: v-examples\nSection: Props\nType: api_reference\n\n## v-examples - Props\n\n<!-- #### Absolute\n\nMenus can also be placed absolutely on top of the activator element using the **absolute** prop. Try clicking anywhere on the image.\n\n<ExamplesExample file=\"v-menu/prop-absolute\" />",
    "display_content": "## v-examples - Props\n\n<!-- #### Absolute\n\nMenus can also be placed absolutely on top of the activator element using the **absolute** prop. Try clicking anywhere on the image.\n\n<ExamplesExample file=\"v-menu/prop-absolute\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000895",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000896",
    "text": "Component: v-examples\nSection: Absolute without activator\nType: documentation\n\n## v-examples - Absolute without activator\n\nMenus can also be used without an activator by using **absolute** together with the props **position-x** and **position-y**. Try right-clicking anywhere on the image.\n\n<ExamplesExample file=\"v-menu/prop-absolute-without-activator\" /> -->\n\n<!-- #### Close on click\n\nMenu can be closed when lost focus.\n\n<ExamplesExample file=\"v-menu/prop-close-on-click\" />",
    "display_content": "## v-examples - Absolute without activator\n\nMenus can also be used without an activator by using **absolute** together with the props **position-x** and **position-y**. Try right-clicking anywhere on the image.\n\n<ExamplesExample file=\"v-menu/prop-absolute-without-activator\" /> -->\n\n<!-- #### Close on click\n\nMenu can be closed when lost focus.\n\n<ExamplesExample file=\"v-menu/prop-close-on-click\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Absolute without activator",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000896",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000897",
    "text": "Component: v-examples\nSection: Close on content click\nType: documentation\n\n## v-examples - Close on content click\n\nYou can configure whether `v-menu` should be closed when its content is clicked.\n\n<ExamplesExample file=\"v-menu/prop-close-on-content-click\" /> -->\n\n<!-- #### Disabled\n\nYou can disable the menu. Disabled menus can't be opened.\n\n<ExamplesExample file=\"v-menu/prop-disabled\" /> -->",
    "display_content": "## v-examples - Close on content click\n\nYou can configure whether `v-menu` should be closed when its content is clicked.\n\n<ExamplesExample file=\"v-menu/prop-close-on-content-click\" /> -->\n\n<!-- #### Disabled\n\nYou can disable the menu. Disabled menus can't be opened.\n\n<ExamplesExample file=\"v-menu/prop-disabled\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Close on content click",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000897",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000898",
    "text": "Component: v-examples\nSection: Location\nType: documentation\n\n## v-examples - Location\n\nMenu can be offset relative to the activator by using the **location** prop. Read more about **location** [here](/components/overlays/#location).\n\n<ExamplesExample file=\"v-menu/prop-location\" />",
    "display_content": "## v-examples - Location\n\nMenu can be offset relative to the activator by using the **location** prop. Read more about **location** [here](/components/overlays/#location).\n\n<ExamplesExample file=\"v-menu/prop-location\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Location",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000898",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000899",
    "text": "Component: v-examples\nSection: Open on hover\nType: documentation\n\n## v-examples - Open on hover\n\nMenus can be accessed using hover instead of clicking with the **open-on-hover** prop.\n\n<ExamplesExample file=\"v-menu/prop-open-on-hover\" />",
    "display_content": "## v-examples - Open on hover\n\nMenus can be accessed using hover instead of clicking with the **open-on-hover** prop.\n\n<ExamplesExample file=\"v-menu/prop-open-on-hover\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Open on hover",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000899",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000900",
    "text": "Component: v-examples\nSection: Nested menus\nType: documentation\n\n## v-examples - Nested menus\n\nMenus with other menus inside them will not close until their children are closed. The **submenu** prop changes keyboard behaviour to open and close with left/right arrow keys instead of up/down.\n\n<ExamplesExample file=\"v-menu/prop-submenu\" />",
    "display_content": "## v-examples - Nested menus\n\nMenus with other menus inside them will not close until their children are closed. The **submenu** prop changes keyboard behaviour to open and close with left/right arrow keys instead of up/down.\n\n<ExamplesExample file=\"v-menu/prop-submenu\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Nested menus",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000900",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000901",
    "text": "Component: v-examples\nSection: Activator and tooltip\nType: documentation\n\n## v-examples - Activator and tooltip\n\nWith the new `v-slot` syntax, nested activators such as those seen with a `v-menu` and `v-tooltip` attached to the same activator button, need a particular setup in order to function correctly.\n\n::: info\n  This same syntax is used for other nested activators such as `v-dialog` with `v-tooltip`\n:::\n\n<ExamplesExample file=\"v-menu/slot-activator-and-tooltip\" />",
    "display_content": "## v-examples - Activator and tooltip\n\nWith the new `v-slot` syntax, nested activators such as those seen with a `v-menu` and `v-tooltip` attached to the same activator button, need a particular setup in order to function correctly.\n\n::: info\n  This same syntax is used for other nested activators such as `v-dialog` with `v-tooltip`\n:::\n\n<ExamplesExample file=\"v-menu/slot-activator-and-tooltip\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Activator and tooltip",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000901",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000902",
    "text": "Component: v-examples\nSection: Transitions\nType: documentation\n\n## v-examples - Transitions\n\nVuetify comes with [several standard transitions](/styles/transitions#api) that you can use. You can also create your own and pass it as the transition argument. For an example of how the stock transitions are constructed, visit [here](https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts).\n\n<ExamplesExample file=\"v-menu/misc-transition\" />",
    "display_content": "## v-examples - Transitions\n\nVuetify comes with [several standard transitions](/styles/transitions#api) that you can use. You can also create your own and pass it as the transition argument. For an example of how the stock transitions are constructed, visit [here](https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts).\n\n<ExamplesExample file=\"v-menu/misc-transition\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Transitions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000902",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000903",
    "text": "Component: v-examples\nSection: Popover menu\nType: documentation\n\n## v-examples - Popover menu\n\nA menu can be configured to be static when opened, allowing it to function as a popover. This can be useful when there are multiple interactive items within the menu contents.\n\n<ExamplesExample file=\"v-menu/misc-popover\" />",
    "display_content": "## v-examples - Popover menu\n\nA menu can be configured to be static when opened, allowing it to function as a popover. This can be useful when there are multiple interactive items within the menu contents.\n\n<ExamplesExample file=\"v-menu/misc-popover\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Popover menu",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000903",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000904",
    "text": "Component: v-examples\nSection: Use In components\nType: documentation\n\n## v-examples - Use In components\n\nMenus can be placed within almost any component.\n\n<ExamplesExample file=\"v-menu/misc-use-in-components\" />",
    "display_content": "## v-examples - Use In components\n\nMenus can be placed within almost any component.\n\n<ExamplesExample file=\"v-menu/misc-use-in-components\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Use In components",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000904",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000905",
    "text": "Component: v-examples\nSection: Misc Popover\nType: code_example\n\n## v-examples - Misc Popover\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"end\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"indigo\"\n          v-bind=\"props\"\n        >\n          Menu as Popover\n        </v-btn>\n      </template>\n\n      <v-card min-width=\"300\">\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://cdn.vuetifyjs.com/images/john.jpg\"\n            subtitle=\"Founder of Vuetify\"\n            title=\"John Leider\"\n          >\n            <template v-slot:append>\n              <v-btn\n                :class=\"fav ? 'text-red' : ''\"\n                icon=\"mdi-heart\"\n                variant=\"text\"\n                @click=\"fav = !fav\"\n              ></v-btn>\n            </template>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list>\n          <v-list-item>\n            <v-switch\n              v-model=\"message\"\n              color=\"purple\"\n              label=\"Enable messages\"\n              hide-details\n            ></v-switch>\n          </v-list-item>\n\n          <v-list-item>\n            <v-switch\n              v-model=\"hints\"\n              color=\"purple\"\n              label=\"Enable hints\"\n              hide-details\n            ></v-switch>\n          </v-list-item>\n        </v-list>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            variant=\"text\"\n            @click=\"menu = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu = false\"\n          >\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const fav = ref(true)\n  const menu = ref(false)\n  const message = ref(false)\n  const hints = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      fav: true,\n      menu: false,\n      message: false,\n      hints: true,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Popover\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"end\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"indigo\"\n          v-bind=\"props\"\n        >\n          Menu as Popover\n        </v-btn>\n      </template>\n\n      <v-card min-width=\"300\">\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://cdn.vuetifyjs.com/images/john.jpg\"\n            subtitle=\"Founder of Vuetify\"\n            title=\"John Leider\"\n          >\n            <template v-slot:append>\n              <v-btn\n                :class=\"fav ? 'text-red' : ''\"\n                icon=\"mdi-heart\"\n                variant=\"text\"\n                @click=\"fav = !fav\"\n              ></v-btn>\n            </template>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list>\n          <v-list-item>\n            <v-switch\n              v-model=\"message\"\n              color=\"purple\"\n              label=\"Enable messages\"\n              hide-details\n            ></v-switch>\n          </v-list-item>\n\n          <v-list-item>\n            <v-switch\n              v-model=\"hints\"\n              color=\"purple\"\n              label=\"Enable hints\"\n              hide-details\n            ></v-switch>\n          </v-list-item>\n        </v-list>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            variant=\"text\"\n            @click=\"menu = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"menu = false\"\n          >\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const fav = ref(true)\n  const menu = ref(false)\n  const message = ref(false)\n  const hints = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      fav: true,\n      menu: false,\n      message: false,\n      hints: true,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Popover",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000905",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000906",
    "text": "Component: v-examples\nSection: Misc Transition\nType: code_example\n\n## v-examples - Misc Transition\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-menu\n      transition=\"scale-transition\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Scale Transition\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          :value=\"i\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n\n    <v-menu\n      transition=\"slide-x-transition\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Slide X Transition\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          :value=\"i\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n\n    <v-menu\n      transition=\"slide-y-transition\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Slide Y Transition\n        </v-btn>\n      </template>\n      <v-list>\n        <v-list-item\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          :value=\"i\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Transition\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-menu\n      transition=\"scale-transition\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Scale Transition\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          :value=\"i\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n\n    <v-menu\n      transition=\"slide-x-transition\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Slide X Transition\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          :value=\"i\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n\n    <v-menu\n      transition=\"slide-y-transition\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Slide Y Transition\n        </v-btn>\n      </template>\n      <v-list>\n        <v-list-item\n          v-for=\"(item, i) in items\"\n          :key=\"i\"\n          :value=\"i\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Transition",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000906",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000907",
    "text": "Component: v-examples\nSection: Misc Use In Components\nType: code_example\n\n## v-examples - Misc Use In Components\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      offset-sm=\"3\"\n      sm=\"6\"\n    >\n      <v-card height=\"200px\">\n        <v-card-title class=\"bg-blue d-flex align-center\">\n          <span class=\"text-h5\">Menu</span>\n\n          <v-spacer></v-spacer>\n\n          <v-menu>\n            <template v-slot:activator=\"{ props }\">\n              <v-btn icon=\"mdi-dots-vertical\" variant=\"text\" v-bind=\"props\"></v-btn>\n            </template>\n\n            <v-list>\n              <v-list-item\n                v-for=\"(item, i) in items\"\n                :key=\"i\"\n                :value=\"i\"\n              >\n                <v-list-item-title>{{ item.title }}</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-card-title>\n\n        <v-card-text>Lorem Ipsum</v-card-text>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Use In Components\n\n```vue\n<template>\n  <v-row>\n    <v-col\n      cols=\"12\"\n      offset-sm=\"3\"\n      sm=\"6\"\n    >\n      <v-card height=\"200px\">\n        <v-card-title class=\"bg-blue d-flex align-center\">\n          <span class=\"text-h5\">Menu</span>\n\n          <v-spacer></v-spacer>\n\n          <v-menu>\n            <template v-slot:activator=\"{ props }\">\n              <v-btn icon=\"mdi-dots-vertical\" variant=\"text\" v-bind=\"props\"></v-btn>\n            </template>\n\n            <v-list>\n              <v-list-item\n                v-for=\"(item, i) in items\"\n                :key=\"i\"\n                :value=\"i\"\n              >\n                <v-list-item-title>{{ item.title }}</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-card-title>\n\n        <v-card-text>Lorem Ipsum</v-card-text>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Use In Components",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000907",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000908",
    "text": "Component: v-examples\nSection: Prop Absolute Without Activator\nType: code_example\n\n## v-examples - Prop Absolute Without Activator\n\n```vue\n<template>\n  <div>\n    <v-row\n      class=\"flex\"\n      justify=\"center\"\n    >\n      <v-card\n        :ripple=\"false\"\n        class=\"portrait\"\n        height=\"300px\"\n        img=\"https://cdn.vuetifyjs.com/images/cards/girl.jpg\"\n        @contextmenu=\"show\"\n      ></v-card>\n    </v-row>\n\n    <v-menu\n      v-model=\"showMenu\"\n      :target=\"[x, y]\"\n      absolute\n    >\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { nextTick, ref } from 'vue'\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n\n  const showMenu = ref(false)\n  const x = ref(0)\n  const y = ref(0)\n\n  function show (e) {\n    e.preventDefault()\n    showMenu.value = false\n    x.value = e.clientX\n    y.value = e.clientY\n    nextTick(() => {\n      showMenu.value = true\n    })\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      showMenu: false,\n      x: 0,\n      y: 0,\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n\n    methods: {\n      show (e) {\n        e.preventDefault()\n        this.showMenu = false\n        this.x = e.clientX\n        this.y = e.clientY\n        this.$nextTick(() => {\n          this.showMenu = true\n        })\n      },\n    },\n  }\n</script>\n\n<style scoped>\n.portrait.v-card {\n  margin: 0 auto;\n  max-width: 600px;\n  width: 100%;\n}\n</style>\n\n```",
    "display_content": "## v-examples - Prop Absolute Without Activator\n\n```vue\n<template>\n  <div>\n    <v-row\n      class=\"flex\"\n      justify=\"center\"\n    >\n      <v-card\n        :ripple=\"false\"\n        class=\"portrait\"\n        height=\"300px\"\n        img=\"https://cdn.vuetifyjs.com/images/cards/girl.jpg\"\n        @contextmenu=\"show\"\n      ></v-card>\n    </v-row>\n\n    <v-menu\n      v-model=\"showMenu\"\n      :target=\"[x, y]\"\n      absolute\n    >\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { nextTick, ref } from 'vue'\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n\n  const showMenu = ref(false)\n  const x = ref(0)\n  const y = ref(0)\n\n  function show (e) {\n    e.preventDefault()\n    showMenu.value = false\n    x.value = e.clientX\n    y.value = e.clientY\n    nextTick(() => {\n      showMenu.value = true\n    })\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      showMenu: false,\n      x: 0,\n      y: 0,\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n\n    methods: {\n      show (e) {\n        e.preventDefault()\n        this.showMenu = false\n        this.x = e.clientX\n        this.y = e.clientY\n        this.$nextTick(() => {\n          this.showMenu = true\n        })\n      },\n    },\n  }\n</script>\n\n<style scoped>\n.portrait.v-card {\n  margin: 0 auto;\n  max-width: 600px;\n  width: 100%;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Absolute Without Activator",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000908",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000909",
    "text": "Component: v-examples\nSection: Prop Absolute\nType: code_example\n\n## v-examples - Prop Absolute\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-menu\n      v-model=\"showMenu\"\n      style=\"max-width: 600px\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-card\n          class=\"portrait\"\n          height=\"300\"\n          image=\"https://cdn.vuetifyjs.com/images/cards/girl.jpg\"\n          width=\"600\"\n          v-bind=\"props\"\n        ></v-card>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const showMenu = ref(false)\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      showMenu: false,\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Absolute\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-menu\n      v-model=\"showMenu\"\n      style=\"max-width: 600px\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-card\n          class=\"portrait\"\n          height=\"300\"\n          image=\"https://cdn.vuetifyjs.com/images/cards/girl.jpg\"\n          width=\"600\"\n          v-bind=\"props\"\n        ></v-card>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const showMenu = ref(false)\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      showMenu: false,\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Absolute",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000909",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000910",
    "text": "Component: v-examples\nSection: Prop Close On Click\nType: code_example\n\n## v-examples - Prop Close On Click\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-switch\n      v-model=\"closeOnClick\"\n      color=\"primary\"\n      label=\"Close on click\"\n    ></v-switch>\n    <v-menu :persistent=\"!closeOnClick\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n\n  const closeOnClick = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n      closeOnClick: true,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Close On Click\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-switch\n      v-model=\"closeOnClick\"\n      color=\"primary\"\n      label=\"Close on click\"\n    ></v-switch>\n    <v-menu :persistent=\"!closeOnClick\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n\n  const closeOnClick = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n      closeOnClick: true,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Close On Click",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000910",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000911",
    "text": "Component: v-examples\nSection: Prop Close On Content Click\nType: code_example\n\n## v-examples - Prop Close On Content Click\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-switch\n      v-model=\"closeOnContentClick\"\n      label=\"Close on content click\"\n    ></v-switch>\n    <v-menu\n      :close-on-content-click=\"closeOnContentClick\"\n      location=\"top\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n\n  const closeOnContentClick = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n      closeOnContentClick: true,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Close On Content Click\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-switch\n      v-model=\"closeOnContentClick\"\n      label=\"Close on content click\"\n    ></v-switch>\n    <v-menu\n      :close-on-content-click=\"closeOnContentClick\"\n      location=\"top\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n\n  const closeOnContentClick = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n      closeOnContentClick: true,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Close On Content Click",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000911",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000912",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-menu disabled>\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-menu disabled>\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000912",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000913",
    "text": "Component: v-examples\nSection: Prop Location\nType: code_example\n\n## v-examples - Prop Location\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-select\n      v-model=\"location\"\n      :items=\"locations\"\n      label=\"Location\"\n    ></v-select>\n    <v-menu :location=\"location\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const location = ref('end')\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n  const locations = [\n    'top',\n    'bottom',\n    'start',\n    'end',\n    'center',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n      locations: [\n        'top',\n        'bottom',\n        'start',\n        'end',\n        'center',\n      ],\n      location: 'end',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Location\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-select\n      v-model=\"location\"\n      :items=\"locations\"\n      label=\"Location\"\n    ></v-select>\n    <v-menu :location=\"location\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const location = ref('end')\n\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n  const locations = [\n    'top',\n    'bottom',\n    'start',\n    'end',\n    'center',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n      locations: [\n        'top',\n        'bottom',\n        'start',\n        'end',\n        'center',\n      ],\n      location: 'end',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Location",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000913",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000914",
    "text": "Component: v-examples\nSection: Prop Open On Hover\nType: code_example\n\n## v-examples - Prop Open On Hover\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-menu\n      open-on-hover\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Open On Hover\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-menu\n      open-on-hover\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Dropdown\n        </v-btn>\n      </template>\n\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  const items = [\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me' },\n    { title: 'Click Me 2' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Open On Hover",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000914",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000915",
    "text": "Component: v-examples\nSection: Prop Rounded\nType: code_example\n\n## v-examples - Prop Rounded\n\n```vue\n<template>\n  <v-row justify=\"space-around\">\n    <v-menu\n      v-for=\"([text, rounded], index) in btns\"\n      :key=\"text\"\n      :rounded=\"rounded\"\n      offset-y\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          :color=\"colors[index]\"\n          class=\"text-white ma-5\"\n          v-bind=\"props\"\n        >\n          {{ text }} Radius\n        </v-btn>\n      </template>\n\n      <v-list :rounded=\"rounded\">\n        <v-list-item\n          v-for=\"item in items\"\n          :key=\"item\"\n          link\n        >\n          <v-list-item-title v-text=\"item\"></v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </v-row>\n</template>\n\n<script setup>\n  const btns = [\n    ['Removed', '0'],\n    ['Large', 'lg'],\n    ['Custom', 'b-xl'],\n  ]\n  const colors = ['deep-purple accent-4', 'error', 'teal darken-1']\n  const items = Array.from({ length: 4 }, (_, i) => `Item ${i}`)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      btns: [\n        ['Removed', '0'],\n        ['Large', 'lg'],\n        ['Custom', 'b-xl'],\n      ],\n      colors: ['deep-purple accent-4', 'error', 'teal darken-1'],\n      items: [...Array(4)].map((_, i) => `Item ${i}`),\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Rounded\n\n```vue\n<template>\n  <v-row justify=\"space-around\">\n    <v-menu\n      v-for=\"([text, rounded], index) in btns\"\n      :key=\"text\"\n      :rounded=\"rounded\"\n      offset-y\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          :color=\"colors[index]\"\n          class=\"text-white ma-5\"\n          v-bind=\"props\"\n        >\n          {{ text }} Radius\n        </v-btn>\n      </template>\n\n      <v-list :rounded=\"rounded\">\n        <v-list-item\n          v-for=\"item in items\"\n          :key=\"item\"\n          link\n        >\n          <v-list-item-title v-text=\"item\"></v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </v-row>\n</template>\n\n<script setup>\n  const btns = [\n    ['Removed', '0'],\n    ['Large', 'lg'],\n    ['Custom', 'b-xl'],\n  ]\n  const colors = ['deep-purple accent-4', 'error', 'teal darken-1']\n  const items = Array.from({ length: 4 }, (_, i) => `Item ${i}`)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      btns: [\n        ['Removed', '0'],\n        ['Large', 'lg'],\n        ['Custom', 'b-xl'],\n      ],\n      colors: ['deep-purple accent-4', 'error', 'teal darken-1'],\n      items: [...Array(4)].map((_, i) => `Item ${i}`),\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rounded",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000915",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000916",
    "text": "Component: v-examples\nSection: Prop Submenu\nType: code_example\n\n## v-examples - Prop Submenu\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn color=\"primary\">\n      Open menu\n\n      <v-menu activator=\"parent\">\n        <v-list>\n          <v-list-item v-for=\"i in 5\" :key=\"i\" link>\n            <v-list-item-title>Item {{ i }}</v-list-item-title>\n            <template v-slot:append>\n              <v-icon icon=\"mdi-menu-right\" size=\"x-small\"></v-icon>\n            </template>\n\n            <v-menu :open-on-focus=\"false\" activator=\"parent\" open-on-hover submenu>\n              <v-list>\n                <v-list-item v-for=\"j in 5\" :key=\"j\" link>\n                  <v-list-item-title>Item {{ i }} - {{ j }}</v-list-item-title>\n                  <template v-slot:append>\n                    <v-icon icon=\"mdi-menu-right\" size=\"x-small\"></v-icon>\n                  </template>\n\n                  <v-menu :open-on-focus=\"false\" activator=\"parent\" open-on-hover submenu>\n                    <v-list>\n                      <v-list-item v-for=\"k in 5\" :key=\"k\" link>\n                        <v-list-item-title>Item {{ i }} - {{ j }} - {{ k }}</v-list-item-title>\n                      </v-list-item>\n                    </v-list>\n                  </v-menu>\n                </v-list-item>\n              </v-list>\n            </v-menu>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Submenu\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn color=\"primary\">\n      Open menu\n\n      <v-menu activator=\"parent\">\n        <v-list>\n          <v-list-item v-for=\"i in 5\" :key=\"i\" link>\n            <v-list-item-title>Item {{ i }}</v-list-item-title>\n            <template v-slot:append>\n              <v-icon icon=\"mdi-menu-right\" size=\"x-small\"></v-icon>\n            </template>\n\n            <v-menu :open-on-focus=\"false\" activator=\"parent\" open-on-hover submenu>\n              <v-list>\n                <v-list-item v-for=\"j in 5\" :key=\"j\" link>\n                  <v-list-item-title>Item {{ i }} - {{ j }}</v-list-item-title>\n                  <template v-slot:append>\n                    <v-icon icon=\"mdi-menu-right\" size=\"x-small\"></v-icon>\n                  </template>\n\n                  <v-menu :open-on-focus=\"false\" activator=\"parent\" open-on-hover submenu>\n                    <v-list>\n                      <v-list-item v-for=\"k in 5\" :key=\"k\" link>\n                        <v-list-item-title>Item {{ i }} - {{ j }} - {{ k }}</v-list-item-title>\n                      </v-list-item>\n                    </v-list>\n                  </v-menu>\n                </v-list-item>\n              </v-list>\n            </v-menu>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Submenu",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000916",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000917",
    "text": "Component: v-examples\nSection: Slot Activator And Tooltip\nType: code_example\n\n## v-examples - Slot Activator And Tooltip\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-menu>\n      <template v-slot:activator=\"{ props: menu }\">\n        <v-tooltip location=\"top\">\n          <template v-slot:activator=\"{ props: tooltip }\">\n            <v-btn\n              color=\"primary\"\n              v-bind=\"mergeProps(menu, tooltip)\"\n            >\n              Dropdown w/ Tooltip\n            </v-btn>\n          </template>\n          <span>I'm A Tooltip</span>\n        </v-tooltip>\n      </template>\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { mergeProps } from 'vue'\n\n  const items = [\n    { title: 'Click Me 1' },\n    { title: 'Click Me 2' },\n    { title: 'Click Me 3' },\n    { title: 'Click Me 4' },\n  ]\n</script>\n\n<script>\n  import { mergeProps } from 'vue'\n\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me1' },\n        { title: 'Click Me2' },\n        { title: 'Click Me3' },\n        { title: 'Click Me4' },\n      ],\n    }),\n    methods: {\n      mergeProps,\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Activator And Tooltip\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-menu>\n      <template v-slot:activator=\"{ props: menu }\">\n        <v-tooltip location=\"top\">\n          <template v-slot:activator=\"{ props: tooltip }\">\n            <v-btn\n              color=\"primary\"\n              v-bind=\"mergeProps(menu, tooltip)\"\n            >\n              Dropdown w/ Tooltip\n            </v-btn>\n          </template>\n          <span>I'm A Tooltip</span>\n        </v-tooltip>\n      </template>\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\n  import { mergeProps } from 'vue'\n\n  const items = [\n    { title: 'Click Me 1' },\n    { title: 'Click Me 2' },\n    { title: 'Click Me 3' },\n    { title: 'Click Me 4' },\n  ]\n</script>\n\n<script>\n  import { mergeProps } from 'vue'\n\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me1' },\n        { title: 'Click Me2' },\n        { title: 'Click Me3' },\n        { title: 'Click Me4' },\n      ],\n    }),\n    methods: {\n      mergeProps,\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Activator And Tooltip",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000917",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000918",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-menu>\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Activator slot\n        </v-btn>\n      </template>\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n\n    <v-btn\n      color=\"primary\"\n    >\n      Parent activator\n\n      <v-menu activator=\"parent\">\n        <v-list>\n          <v-list-item\n            v-for=\"(item, index) in items\"\n            :key=\"index\"\n            :value=\"index\"\n          >\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-btn>\n\n    <v-btn\n      id=\"menu-activator\"\n      color=\"primary\"\n    >\n      Sibling activator\n    </v-btn>\n\n    <v-menu activator=\"#menu-activator\">\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-menu>\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          Activator slot\n        </v-btn>\n      </template>\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n\n    <v-btn\n      color=\"primary\"\n    >\n      Parent activator\n\n      <v-menu activator=\"parent\">\n        <v-list>\n          <v-list-item\n            v-for=\"(item, index) in items\"\n            :key=\"index\"\n            :value=\"index\"\n          >\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-btn>\n\n    <v-btn\n      id=\"menu-activator\"\n      color=\"primary\"\n    >\n      Sibling activator\n    </v-btn>\n\n    <v-menu activator=\"#menu-activator\">\n      <v-list>\n        <v-list-item\n          v-for=\"(item, index) in items\"\n          :key=\"index\"\n          :value=\"index\"\n        >\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-menu>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000918",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000919",
    "text": "Component: v-date-pickers---month\nType: component_overview\n\n# v-date-pickers---month\n\n`v-date-picker` can be used as a standalone month picker component.",
    "display_content": "# v-date-pickers---month\n\n`v-date-picker` can be used as a standalone month picker component.",
    "metadata": {
      "component": "v-date-pickers---month",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000919",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000920",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nMonth pickers come in two orientation variations, portrait **(default)** and landscape.",
    "display_content": "# v-usage\n\nMonth pickers come in two orientation variations, portrait **(default)** and landscape.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000920",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000921",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: warning `v-date-picker` accepts ISO 8601 **date** strings (*YYYY-MM-DD*). For more information regarding ISO 8601 and other standards, visit the official ISO (International Organization for Standardization) [International Standards](https://www.iso.org/standards.html) page. :::",
    "display_content": "# v-caveats\n\n::: warning `v-date-picker` accepts ISO 8601 **date** strings (*YYYY-MM-DD*). For more information regarding ISO 8601 and other standards, visit the official ISO (International Organization for Standardization) [International Standards](https://www.iso.org/standards.html) page. :::",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000921",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000922",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can specify allowed months using arrays, objects or functions.\n\nAvailable sections: Allowed months, Colors, Icons, Multiple, Readonly, Show current, Width, Dialog and menu, Internationalization, Orientation",
    "display_content": "# v-examples\n\nYou can specify allowed months using arrays, objects or functions.\n\nAvailable sections: Allowed months, Colors, Icons, Multiple, Readonly, Show current, Width, Dialog and menu, Internationalization, Orientation",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000922",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000923",
    "text": "Component: v-examples\nSection: Allowed months\nType: documentation\n\n## v-examples - Allowed months\n\nYou can specify allowed months using arrays, objects or functions.\n\n<ExamplesExample file=\"v-date-picker-month/prop-allowed-months\" />",
    "display_content": "## v-examples - Allowed months\n\nYou can specify allowed months using arrays, objects or functions.\n\n<ExamplesExample file=\"v-date-picker-month/prop-allowed-months\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Allowed months",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000923",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000924",
    "text": "Component: v-examples\nSection: Colors\nType: documentation\n\n## v-examples - Colors\n\nMonth picker colors can be set using the **color** and **header-color** props. If **header-color** prop is not provided header will use the `color` prop value.\n\n<ExamplesExample file=\"v-date-picker-month/prop-colors\" />",
    "display_content": "## v-examples - Colors\n\nMonth picker colors can be set using the **color** and **header-color** props. If **header-color** prop is not provided header will use the `color` prop value.\n\n<ExamplesExample file=\"v-date-picker-month/prop-colors\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000924",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000925",
    "text": "Component: v-examples\nSection: Icons\nType: documentation\n\n## v-examples - Icons\n\nYou can override the default icons used in the picker.\n\n<ExamplesExample file=\"v-date-picker-month/prop-icons\" />",
    "display_content": "## v-examples - Icons\n\nYou can override the default icons used in the picker.\n\n<ExamplesExample file=\"v-date-picker-month/prop-icons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000925",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000926",
    "text": "Component: v-examples\nSection: Multiple\nType: documentation\n\n## v-examples - Multiple\n\nMonth pickers can now select multiple months with the **multiple** prop. If using **multiple** then the month picker expects its model to be an array.\n\n<ExamplesExample file=\"v-date-picker-month/prop-multiple\" />",
    "display_content": "## v-examples - Multiple\n\nMonth pickers can now select multiple months with the **multiple** prop. If using **multiple** then the month picker expects its model to be an array.\n\n<ExamplesExample file=\"v-date-picker-month/prop-multiple\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Multiple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000926",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000927",
    "text": "Component: v-examples\nSection: Readonly\nType: documentation\n\n## v-examples - Readonly\n\nSelecting new date could be disabled by adding **readonly** prop.\n\n<ExamplesExample file=\"v-date-picker-month/prop-readonly\" />",
    "display_content": "## v-examples - Readonly\n\nSelecting new date could be disabled by adding **readonly** prop.\n\n<ExamplesExample file=\"v-date-picker-month/prop-readonly\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Readonly",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000927",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000928",
    "text": "Component: v-examples\nSection: Show current\nType: documentation\n\n## v-examples - Show current\n\nBy default the current month is displayed using outlined button - **show-current** prop allows you to remove the border or select different month to be displayed as the current one.\n\n<ExamplesExample file=\"v-date-picker-month/prop-show-current\" />",
    "display_content": "## v-examples - Show current\n\nBy default the current month is displayed using outlined button - **show-current** prop allows you to remove the border or select different month to be displayed as the current one.\n\n<ExamplesExample file=\"v-date-picker-month/prop-show-current\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Show current",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000928",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000929",
    "text": "Component: v-examples\nSection: Width\nType: documentation\n\n## v-examples - Width\n\nYou can specify allowed the picker's width or make it full width.\n\n<ExamplesExample file=\"v-date-picker-month/prop-width\" />",
    "display_content": "## v-examples - Width\n\nYou can specify allowed the picker's width or make it full width.\n\n<ExamplesExample file=\"v-date-picker-month/prop-width\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Width",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000929",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000930",
    "text": "Component: v-examples\nSection: Dialog and menu\nType: documentation\n\n## v-examples - Dialog and menu\n\nWhen integrating a picker into a `v-text-field`, it is recommended to use the **readonly** prop. This will prevent mobile keyboards from triggering. To save vertical space, you can also hide the picker title.\n\nPickers expose a slot that allow you to hook into save and cancel functionality. This will maintain an old value which can be replaced if the user cancels.\n\n<ExamplesExample file=\"v-date-picker-month/misc-dialog-and-menu\" />",
    "display_content": "## v-examples - Dialog and menu\n\nWhen integrating a picker into a `v-text-field`, it is recommended to use the **readonly** prop. This will prevent mobile keyboards from triggering. To save vertical space, you can also hide the picker title.\n\nPickers expose a slot that allow you to hook into save and cancel functionality. This will maintain an old value which can be replaced if the user cancels.\n\n<ExamplesExample file=\"v-date-picker-month/misc-dialog-and-menu\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dialog and menu",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000930",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000931",
    "text": "Component: v-examples\nSection: Internationalization\nType: documentation\n\n## v-examples - Internationalization\n\nThe month picker supports internationalization through the JavaScript Date object. Specify a BCP 47 language tag using the **locale** prop.\n\n<ExamplesExample file=\"v-date-picker-month/misc-internationalization\" />",
    "display_content": "## v-examples - Internationalization\n\nThe month picker supports internationalization through the JavaScript Date object. Specify a BCP 47 language tag using the **locale** prop.\n\n<ExamplesExample file=\"v-date-picker-month/misc-internationalization\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Internationalization",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000931",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000932",
    "text": "Component: v-examples\nSection: Orientation\nType: documentation\n\n## v-examples - Orientation\n\nMonth pickers come in two orientation variations, portrait **(default)** and landscape.\n\n<ExamplesExample file=\"v-date-picker-month/misc-orientation\" />",
    "display_content": "## v-examples - Orientation\n\nMonth pickers come in two orientation variations, portrait **(default)** and landscape.\n\n<ExamplesExample file=\"v-date-picker-month/misc-orientation\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Orientation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000932",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000933",
    "text": "Component: v-navigation-drawers\nType: component_overview\n\n# v-navigation-drawers\n\nThe `v-navigation-drawer` component is what your users will utilize to navigate through the application.",
    "display_content": "# v-navigation-drawers\n\nThe `v-navigation-drawer` component is what your users will utilize to navigate through the application.",
    "metadata": {
      "component": "v-navigation-drawers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000933",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000934",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe navigation drawer is primarily used to house links to the pages in your application and is pre-configured to work with or without **vue-router** right out the box. Using `null` as the starting value for its **v-model** will initialize the drawer as closed on mobile and as open on desktop. It is common to pair drawers with the [v-list](/components/lists) component using the **nav** property.",
    "display_content": "# v-usage\n\nThe navigation drawer is primarily used to house links to the pages in your application and is pre-configured to work with or without **vue-router** right out the box. Using `null` as the starting value for its **v-model** will initialize the drawer as closed on mobile and as open on desktop. It is common to pair drawers with the [v-list](/components/lists) component using the **nav** property.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000934",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000935",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component                                        | Description                               | | ------------------------------------------------ | ----------------------------------------- | | [v-navigation-drawer](/api/v-navigation-drawer/) | Primary Component                         | | [v-list-item](/api/v-list-item/)                 | Component used to create navigation links |",
    "display_content": "# v-api\n\n| Component                                        | Description                               | | ------------------------------------------------ | ----------------------------------------- | | [v-navigation-drawer](/api/v-navigation-drawer/) | Primary Component                         | | [v-list-item](/api/v-list-item/)                 | Component used to create navigation links |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000935",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000936",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: info The **expand-on-hover** prop does not alter the content area of **v-main**. To have content area respond to **expand-on-hover**, bind **v-model:rail** to a data prop. :::",
    "display_content": "# v-caveats\n\n::: info The **expand-on-hover** prop does not alter the content area of **v-main**. To have content area respond to **expand-on-hover**, bind **v-model:rail** to a data prop. :::",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000936",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000937",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nUsing the **bottom** prop, we are able to relocate our drawer on mobile devices to come from the bottom of the screen. This is an alternative style and only activates once the **mobile-breakpoint** is met.\n\nAvailable sections: Bottom drawer, Expand on hover, Background images, Rail variant, Floating, Location, Temporary, Colored drawer, Multiple drawers, Misc Colored, Misc Combined, Prop Bottom Drawer, Prop Expand On Hover, Prop Images, Prop Permanent And Floating, Prop Rail Variant, Prop Right, Prop Temporary, Usage",
    "display_content": "# v-examples\n\nUsing the **bottom** prop, we are able to relocate our drawer on mobile devices to come from the bottom of the screen. This is an alternative style and only activates once the **mobile-breakpoint** is met.\n\nAvailable sections: Bottom drawer, Expand on hover, Background images, Rail variant, Floating, Location, Temporary, Colored drawer, Multiple drawers, Misc Colored, Misc Combined, Prop Bottom Drawer, Prop Expand On Hover, Prop Images, Prop Permanent And Floating, Prop Rail Variant, Prop Right, Prop Temporary, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000937",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000938",
    "text": "Component: v-examples\nSection: Bottom drawer\nType: documentation\n\n## v-examples - Bottom drawer\n\nUsing the **bottom** prop, we are able to relocate our drawer on mobile devices to come from the bottom of the screen. This is an alternative style and only activates once the **mobile-breakpoint** is met.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-bottom-drawer\" />",
    "display_content": "## v-examples - Bottom drawer\n\nUsing the **bottom** prop, we are able to relocate our drawer on mobile devices to come from the bottom of the screen. This is an alternative style and only activates once the **mobile-breakpoint** is met.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-bottom-drawer\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Bottom drawer",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000938",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000939",
    "text": "Component: v-examples\nSection: Expand on hover\nType: documentation\n\n## v-examples - Expand on hover\n\nPlaces the component in **rail** mode and expands once hovered. This **does not** alter the content area of **v-main**. The width can be controlled with the **rail-width** property.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-expand-on-hover\" />",
    "display_content": "## v-examples - Expand on hover\n\nPlaces the component in **rail** mode and expands once hovered. This **does not** alter the content area of **v-main**. The width can be controlled with the **rail-width** property.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-expand-on-hover\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Expand on hover",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000939",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000940",
    "text": "Component: v-examples\nSection: Background images\nType: documentation\n\n## v-examples - Background images\n\nApply a custom background to your drawer via the **image** prop. If you need to customize it further, you can use the `image` slot and render your own `v-img`.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-images\" />",
    "display_content": "## v-examples - Background images\n\nApply a custom background to your drawer via the **image** prop. If you need to customize it further, you can use the `image` slot and render your own `v-img`.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-images\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Background images",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000940",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000941",
    "text": "Component: v-examples\nSection: Rail variant\nType: documentation\n\n## v-examples - Rail variant\n\nWhen using the **rail** prop, the drawer will shrink (default 56px) and hide everything inside of `v-list` except the first element.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-rail-variant\" />",
    "display_content": "## v-examples - Rail variant\n\nWhen using the **rail** prop, the drawer will shrink (default 56px) and hide everything inside of `v-list` except the first element.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-rail-variant\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Rail variant",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000941",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000942",
    "text": "Component: v-examples\nSection: Floating\nType: documentation\n\n## v-examples - Floating\n\nBy default, a navigation drawer has a 1px right border that separates it from content. In this example we want to detach the drawer from the left side and let it float on its own. The **floating** property removes the right border (or left if using **position** prop).\n\n<ExamplesExample file=\"v-navigation-drawer/prop-permanent-and-floating\" />",
    "display_content": "## v-examples - Floating\n\nBy default, a navigation drawer has a 1px right border that separates it from content. In this example we want to detach the drawer from the left side and let it float on its own. The **floating** property removes the right border (or left if using **position** prop).\n\n<ExamplesExample file=\"v-navigation-drawer/prop-permanent-and-floating\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Floating",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000942",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000943",
    "text": "Component: v-examples\nSection: Location\nType: documentation\n\n## v-examples - Location\n\nNavigation drawers can also be positioned on the opposite side of your application (or an element) using the **location** prop. This is useful for creating a side-sheet with auxiliary information that may not have any navigation links.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-right\" />",
    "display_content": "## v-examples - Location\n\nNavigation drawers can also be positioned on the opposite side of your application (or an element) using the **location** prop. This is useful for creating a side-sheet with auxiliary information that may not have any navigation links.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-right\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Location",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000943",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000944",
    "text": "Component: v-examples\nSection: Temporary\nType: documentation\n\n## v-examples - Temporary\n\nA temporary drawer sits above its application and uses a scrim (overlay) to darken the background. This drawer behavior is mimicked by default when on mobile. Clicking outside of the drawer will cause it to close.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-temporary\" />",
    "display_content": "## v-examples - Temporary\n\nA temporary drawer sits above its application and uses a scrim (overlay) to darken the background. This drawer behavior is mimicked by default when on mobile. Clicking outside of the drawer will cause it to close.\n\n<ExamplesExample file=\"v-navigation-drawer/prop-temporary\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Temporary",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000944",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000945",
    "text": "Component: v-examples\nSection: Colored drawer\nType: documentation\n\n## v-examples - Colored drawer\n\nNavigation drawers can be customized to fit any application's design. Here we apply a custom background color and an appended content area using the **append** slot.\n\n<ExamplesExample file=\"v-navigation-drawer/misc-colored\" />",
    "display_content": "## v-examples - Colored drawer\n\nNavigation drawers can be customized to fit any application's design. Here we apply a custom background color and an appended content area using the **append** slot.\n\n<ExamplesExample file=\"v-navigation-drawer/misc-colored\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Colored drawer",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000945",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000946",
    "text": "Component: v-examples\nSection: Multiple drawers\nType: documentation\n\n## v-examples - Multiple drawers\n\nIn this example we define two navigation-drawers, one using **rail** and one without.\n\n<ExamplesExample file=\"v-navigation-drawer/misc-combined\" />",
    "display_content": "## v-examples - Multiple drawers\n\nIn this example we define two navigation-drawers, one using **rail** and one without.\n\n<ExamplesExample file=\"v-navigation-drawer/misc-combined\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Multiple drawers",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000946",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000947",
    "text": "Component: v-examples\nSection: Misc Colored\nType: code_example\n\n## v-examples - Misc Colored\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        class=\"bg-deep-purple\"\n        theme=\"dark\"\n        permanent\n      >\n        <v-list color=\"transparent\">\n          <v-list-item prepend-icon=\"mdi-view-dashboard\" title=\"Dashboard\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account-box\" title=\"Account\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-gavel\" title=\"Admin\"></v-list-item>\n        </v-list>\n\n        <template v-slot:append>\n          <div class=\"pa-2\">\n            <v-btn block>\n              Logout\n            </v-btn>\n          </div>\n        </template>\n      </v-navigation-drawer>\n      <v-main style=\"height: 400px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Colored\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        class=\"bg-deep-purple\"\n        theme=\"dark\"\n        permanent\n      >\n        <v-list color=\"transparent\">\n          <v-list-item prepend-icon=\"mdi-view-dashboard\" title=\"Dashboard\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account-box\" title=\"Account\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-gavel\" title=\"Admin\"></v-list-item>\n        </v-list>\n\n        <template v-slot:append>\n          <div class=\"pa-2\">\n            <v-btn block>\n              Logout\n            </v-btn>\n          </div>\n        </template>\n      </v-navigation-drawer>\n      <v-main style=\"height: 400px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Colored",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000947",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000948",
    "text": "Component: v-examples\nSection: Misc Combined\nType: code_example\n\n## v-examples - Misc Combined\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer theme=\"dark\" permanent rail>\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/75.jpg\"\n          ></v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item\n            prepend-icon=\"mdi-view-dashboard\"\n            value=\"dashboard\"\n          ></v-list-item>\n\n          <v-list-item prepend-icon=\"mdi-forum\" value=\"messages\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-navigation-drawer permanent>\n        <v-list>\n          <v-list-item title=\"Home\" value=\"home\"></v-list-item>\n\n          <v-list-item title=\"Contacts\" value=\"contacts\"></v-list-item>\n\n          <v-list-item title=\"Settings\" value=\"settings\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main style=\"height: 300px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Combined\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer theme=\"dark\" permanent rail>\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/75.jpg\"\n          ></v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item\n            prepend-icon=\"mdi-view-dashboard\"\n            value=\"dashboard\"\n          ></v-list-item>\n\n          <v-list-item prepend-icon=\"mdi-forum\" value=\"messages\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-navigation-drawer permanent>\n        <v-list>\n          <v-list-item title=\"Home\" value=\"home\"></v-list-item>\n\n          <v-list-item title=\"Contacts\" value=\"contacts\"></v-list-item>\n\n          <v-list-item title=\"Settings\" value=\"settings\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main style=\"height: 300px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Combined",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000948",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000949",
    "text": "Component: v-examples\nSection: Prop Bottom Drawer\nType: code_example\n\n## v-examples - Prop Bottom Drawer\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-app-bar color=\"primary\">\n        <v-app-bar-nav-icon variant=\"text\" @click.stop=\"drawer = !drawer\"></v-app-bar-nav-icon>\n\n        <v-toolbar-title>My files</v-toolbar-title>\n\n        <template v-if=\"$vuetify.display.mdAndUp\">\n          <v-btn icon=\"mdi-magnify\" variant=\"text\"></v-btn>\n\n          <v-btn icon=\"mdi-filter\" variant=\"text\"></v-btn>\n        </template>\n\n        <v-btn icon=\"mdi-dots-vertical\" variant=\"text\"></v-btn>\n      </v-app-bar>\n\n      <v-navigation-drawer\n        v-model=\"drawer\"\n        :location=\"$vuetify.display.mobile ? 'bottom' : undefined\"\n        temporary\n      >\n        <v-list\n          :items=\"items\"\n        ></v-list>\n      </v-navigation-drawer>\n\n      <v-main style=\"height: 500px;\">\n        <v-card-text>\n          The navigation drawer will appear from the bottom on smaller size screens.\n        </v-card-text>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const items = [\n    {\n      title: 'Foo',\n      value: 'foo',\n    },\n    {\n      title: 'Bar',\n      value: 'bar',\n    },\n    {\n      title: 'Fizz',\n      value: 'fizz',\n    },\n    {\n      title: 'Buzz',\n      value: 'buzz',\n    },\n  ]\n\n  const drawer = ref(false)\n  const group = ref(null)\n\n  watch(group, () => {\n    drawer.value = false\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      drawer: false,\n      group: null,\n      items: [\n        {\n          title: 'Foo',\n          value: 'foo',\n        },\n        {\n          title: 'Bar',\n          value: 'bar',\n        },\n        {\n          title: 'Fizz',\n          value: 'fizz',\n        },\n        {\n          title: 'Buzz',\n          value: 'buzz',\n        },\n      ],\n    }),\n\n    watch: {\n      group () {\n        this.drawer = false\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Bottom Drawer\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-app-bar color=\"primary\">\n        <v-app-bar-nav-icon variant=\"text\" @click.stop=\"drawer = !drawer\"></v-app-bar-nav-icon>\n\n        <v-toolbar-title>My files</v-toolbar-title>\n\n        <template v-if=\"$vuetify.display.mdAndUp\">\n          <v-btn icon=\"mdi-magnify\" variant=\"text\"></v-btn>\n\n          <v-btn icon=\"mdi-filter\" variant=\"text\"></v-btn>\n        </template>\n\n        <v-btn icon=\"mdi-dots-vertical\" variant=\"text\"></v-btn>\n      </v-app-bar>\n\n      <v-navigation-drawer\n        v-model=\"drawer\"\n        :location=\"$vuetify.display.mobile ? 'bottom' : undefined\"\n        temporary\n      >\n        <v-list\n          :items=\"items\"\n        ></v-list>\n      </v-navigation-drawer>\n\n      <v-main style=\"height: 500px;\">\n        <v-card-text>\n          The navigation drawer will appear from the bottom on smaller size screens.\n        </v-card-text>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const items = [\n    {\n      title: 'Foo',\n      value: 'foo',\n    },\n    {\n      title: 'Bar',\n      value: 'bar',\n    },\n    {\n      title: 'Fizz',\n      value: 'fizz',\n    },\n    {\n      title: 'Buzz',\n      value: 'buzz',\n    },\n  ]\n\n  const drawer = ref(false)\n  const group = ref(null)\n\n  watch(group, () => {\n    drawer.value = false\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      drawer: false,\n      group: null,\n      items: [\n        {\n          title: 'Foo',\n          value: 'foo',\n        },\n        {\n          title: 'Bar',\n          value: 'bar',\n        },\n        {\n          title: 'Fizz',\n          value: 'fizz',\n        },\n        {\n          title: 'Buzz',\n          value: 'buzz',\n        },\n      ],\n    }),\n\n    watch: {\n      group () {\n        this.drawer = false\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Bottom Drawer",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000949",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000950",
    "text": "Component: v-examples\nSection: Prop Expand On Hover\nType: code_example\n\n## v-examples - Prop Expand On Hover\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        expand-on-hover\n        rail\n      >\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/85.jpg\"\n            subtitle=\"sandra_a88@gmailcom\"\n            title=\"Sandra Adams\"\n          ></v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item prepend-icon=\"mdi-folder\" title=\"My Files\" value=\"myfiles\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account-multiple\" title=\"Shared with me\" value=\"shared\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-star\" title=\"Starred\" value=\"starred\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Expand On Hover\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        expand-on-hover\n        rail\n      >\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/85.jpg\"\n            subtitle=\"sandra_a88@gmailcom\"\n            title=\"Sandra Adams\"\n          ></v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item prepend-icon=\"mdi-folder\" title=\"My Files\" value=\"myfiles\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account-multiple\" title=\"Shared with me\" value=\"shared\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-star\" title=\"Starred\" value=\"starred\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Expand On Hover",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000950",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000951",
    "text": "Component: v-examples\nSection: Prop Images\nType: code_example\n\n## v-examples - Prop Images\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        image=\"https://cdn.vuetifyjs.com/images/backgrounds/bg-2.jpg\"\n        theme=\"dark\"\n        permanent\n      >\n        <v-list nav>\n          <v-list-item prepend-icon=\"mdi-email\" title=\"Inbox\" value=\"inbox\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account-supervisor-circle\" title=\"Supervisors\" value=\"supervisors\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-clock-start\" title=\"Clock-in\" value=\"clockin\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Images\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        image=\"https://cdn.vuetifyjs.com/images/backgrounds/bg-2.jpg\"\n        theme=\"dark\"\n        permanent\n      >\n        <v-list nav>\n          <v-list-item prepend-icon=\"mdi-email\" title=\"Inbox\" value=\"inbox\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account-supervisor-circle\" title=\"Supervisors\" value=\"supervisors\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-clock-start\" title=\"Clock-in\" value=\"clockin\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Images",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000951",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000952",
    "text": "Component: v-examples\nSection: Prop Permanent And Floating\nType: code_example\n\n## v-examples - Prop Permanent And Floating\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        floating\n        permanent\n      >\n        <v-list\n          density=\"compact\"\n          nav\n        >\n          <v-list-item prepend-icon=\"mdi-view-dashboard\" title=\"Home\" value=\"home\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-forum\" title=\"About\" value=\"about\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Permanent And Floating\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        floating\n        permanent\n      >\n        <v-list\n          density=\"compact\"\n          nav\n        >\n          <v-list-item prepend-icon=\"mdi-view-dashboard\" title=\"Home\" value=\"home\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-forum\" title=\"About\" value=\"about\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Permanent And Floating",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000952",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000953",
    "text": "Component: v-examples\nSection: Prop Rail Variant\nType: code_example\n\n## v-examples - Prop Rail Variant\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        v-model=\"drawer\"\n        :rail=\"rail\"\n        permanent\n        @click=\"rail = false\"\n      >\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://randomuser.me/api/portraits/men/85.jpg\"\n            title=\"John Leider\"\n          >\n            <template v-slot:append>\n              <v-btn\n                icon=\"mdi-chevron-left\"\n                variant=\"text\"\n                @click.stop=\"rail = !rail\"\n              ></v-btn>\n            </template>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item\n            prepend-icon=\"mdi-home-city\"\n            title=\"Home\"\n            value=\"home\"\n          ></v-list-item>\n          <v-list-item\n            prepend-icon=\"mdi-account\"\n            title=\"My Account\"\n            value=\"account\"\n          ></v-list-item>\n          <v-list-item\n            prepend-icon=\"mdi-account-group-outline\"\n            title=\"Users\"\n            value=\"users\"\n          ></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const drawer = ref(true)\n  const rail = ref(true)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        drawer: true,\n        rail: true,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Rail Variant\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        v-model=\"drawer\"\n        :rail=\"rail\"\n        permanent\n        @click=\"rail = false\"\n      >\n        <v-list>\n          <v-list-item\n            prepend-avatar=\"https://randomuser.me/api/portraits/men/85.jpg\"\n            title=\"John Leider\"\n          >\n            <template v-slot:append>\n              <v-btn\n                icon=\"mdi-chevron-left\"\n                variant=\"text\"\n                @click.stop=\"rail = !rail\"\n              ></v-btn>\n            </template>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item\n            prepend-icon=\"mdi-home-city\"\n            title=\"Home\"\n            value=\"home\"\n          ></v-list-item>\n          <v-list-item\n            prepend-icon=\"mdi-account\"\n            title=\"My Account\"\n            value=\"account\"\n          ></v-list-item>\n          <v-list-item\n            prepend-icon=\"mdi-account-group-outline\"\n            title=\"Users\"\n            value=\"users\"\n          ></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const drawer = ref(true)\n  const rail = ref(true)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        drawer: true,\n        rail: true,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rail Variant",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000953",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000954",
    "text": "Component: v-examples\nSection: Prop Right\nType: code_example\n\n## v-examples - Prop Right\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        location=\"right\"\n        permanent\n      >\n        <template v-slot:prepend>\n          <v-list-item\n            lines=\"two\"\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/81.jpg\"\n            subtitle=\"Logged in\"\n            title=\"Jane Smith\"\n          ></v-list-item>\n        </template>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item prepend-icon=\"mdi-home-city\" title=\"Home\" value=\"home\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account\" title=\"My Account\" value=\"account\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account-group-outline\" title=\"Users\" value=\"users\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Right\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        location=\"right\"\n        permanent\n      >\n        <template v-slot:prepend>\n          <v-list-item\n            lines=\"two\"\n            prepend-avatar=\"https://randomuser.me/api/portraits/women/81.jpg\"\n            subtitle=\"Logged in\"\n            title=\"Jane Smith\"\n          ></v-list-item>\n        </template>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item prepend-icon=\"mdi-home-city\" title=\"Home\" value=\"home\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account\" title=\"My Account\" value=\"account\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-account-group-outline\" title=\"Users\" value=\"users\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\"></v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Right",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000954",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000955",
    "text": "Component: v-examples\nSection: Prop Temporary\nType: code_example\n\n## v-examples - Prop Temporary\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        v-model=\"drawer\"\n        temporary\n      >\n        <v-list-item\n          prepend-avatar=\"https://randomuser.me/api/portraits/men/78.jpg\"\n          title=\"John Leider\"\n        ></v-list-item>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item prepend-icon=\"mdi-view-dashboard\" title=\"Home\" value=\"home\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-forum\" title=\"About\" value=\"about\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\">\n        <div class=\"d-flex justify-center align-center h-100\">\n          <v-btn\n            color=\"primary\"\n            @click.stop=\"drawer = !drawer\"\n          >\n            Toggle\n          </v-btn>\n        </div>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const drawer = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        drawer: null,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Temporary\n\n```vue\n<template>\n  <v-card>\n    <v-layout>\n      <v-navigation-drawer\n        v-model=\"drawer\"\n        temporary\n      >\n        <v-list-item\n          prepend-avatar=\"https://randomuser.me/api/portraits/men/78.jpg\"\n          title=\"John Leider\"\n        ></v-list-item>\n\n        <v-divider></v-divider>\n\n        <v-list density=\"compact\" nav>\n          <v-list-item prepend-icon=\"mdi-view-dashboard\" title=\"Home\" value=\"home\"></v-list-item>\n          <v-list-item prepend-icon=\"mdi-forum\" title=\"About\" value=\"about\"></v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n      <v-main style=\"height: 250px\">\n        <div class=\"d-flex justify-center align-center h-100\">\n          <v-btn\n            color=\"primary\"\n            @click.stop=\"drawer = !drawer\"\n          >\n            Toggle\n          </v-btn>\n        </div>\n      </v-main>\n    </v-layout>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const drawer = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        drawer: null,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Temporary",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000955",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000956",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-navigation-drawer\n        permanent\n        v-bind=\"props\"\n      >\n        <v-list-item subtitle=\"Vuetify\" title=\"My Application\"></v-list-item>\n        <v-divider></v-divider>\n        <v-list-item title=\"List Item 1\" link></v-list-item>\n        <v-list-item title=\"List Item 2\" link></v-list-item>\n        <v-list-item title=\"List Item 3\" link></v-list-item>\n      </v-navigation-drawer>\n    </div>\n\n    <template v-slot:configuration>\n      <v-slider v-model=\"width\" label=\"Width\" max=\"400\" min=\"100\" step=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-navigation-drawer'\n  const model = ref('default')\n  const width = shallowRef(256)\n  const options = []\n  const props = computed(() => {\n    return {\n      width: width.value === 256 ? undefined : width.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-list-item title=\"My Application\" subtitle=\"Vuetify\"></v-list-item>\n  <v-divider></v-divider>\n  <v-list-item link title=\"List Item 1\"></v-list-item>\n  <v-list-item link title=\"List Item 2\"></v-list-item>\n  <v-list-item link title=\"List Item 3\"></v-list-item>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-navigation-drawer\n        permanent\n        v-bind=\"props\"\n      >\n        <v-list-item subtitle=\"Vuetify\" title=\"My Application\"></v-list-item>\n        <v-divider></v-divider>\n        <v-list-item title=\"List Item 1\" link></v-list-item>\n        <v-list-item title=\"List Item 2\" link></v-list-item>\n        <v-list-item title=\"List Item 3\" link></v-list-item>\n      </v-navigation-drawer>\n    </div>\n\n    <template v-slot:configuration>\n      <v-slider v-model=\"width\" label=\"Width\" max=\"400\" min=\"100\" step=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-navigation-drawer'\n  const model = ref('default')\n  const width = shallowRef(256)\n  const options = []\n  const props = computed(() => {\n    return {\n      width: width.value === 256 ? undefined : width.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <v-list-item title=\"My Application\" subtitle=\"Vuetify\"></v-list-item>\n  <v-divider></v-divider>\n  <v-list-item link title=\"List Item 1\"></v-list-item>\n  <v-list-item link title=\"List Item 2\"></v-list-item>\n  <v-list-item link title=\"List Item 3\"></v-list-item>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000956",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000957",
    "text": "Component: v-no-ssr\nType: component_overview\n\n# v-no-ssr\n\nThe `v-no-ssr` component is a simple wrapper that allows a developer to designate what a server-side renderer should not render, but leave to the client.",
    "display_content": "# v-no-ssr\n\nThe `v-no-ssr` component is a simple wrapper that allows a developer to designate what a server-side renderer should not render, but leave to the client.",
    "metadata": {
      "component": "v-no-ssr",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000957",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000958",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-no-ssr` component prevents its content from rendering on the server side.",
    "display_content": "# v-usage\n\nThe `v-no-ssr` component prevents its content from rendering on the server side.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000958",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000959",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-no-ssr](/api/v-no-ssr/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-no-ssr](/api/v-no-ssr/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000959",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000960",
    "text": "Component: v-number-inputs\nType: component_overview\n\n# v-number-inputs\n\nThe VNumberInput extends the standard HTML number-type input, ensuring style consistency across browsers as a replacement for `<input type=\"number\">`",
    "display_content": "# v-number-inputs\n\nThe VNumberInput extends the standard HTML number-type input, ensuring style consistency across browsers as a replacement for `<input type=\"number\">`",
    "metadata": {
      "component": "v-number-inputs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000960",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000961",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nHere we display a list of settings that could be applied within an application.",
    "display_content": "# v-usage\n\nHere we display a list of settings that could be applied within an application.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000961",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000962",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-number-input](/api/v-number-input/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-number-input](/api/v-number-input/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000962",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000963",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: warning **v-number-input** is designed for simple numeric input usage. It has limitations with very long integers and highly precise decimal arithmetic due to JavaScript number precision issues:",
    "display_content": "# v-caveats\n\n::: warning **v-number-input** is designed for simple numeric input usage. It has limitations with very long integers and highly precise decimal arithmetic due to JavaScript number precision issues:",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000963",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000964",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-number-input` component is built upon the `v-field` and `v-input` components. It is used as a replacement for `<input type=\"number\">`, accepting numeric values from the user.\n\nAvailable sections: Props, Control-variant, Reverse, Hide-input, Inset, Min/Max, Step, Precision, Prop Control Variant, Prop Hide Input, Prop Inset, Prop Min Max, Prop Precision, Prop Reverse, Prop Step, Usage",
    "display_content": "# v-guide\n\nThe `v-number-input` component is built upon the `v-field` and `v-input` components. It is used as a replacement for `<input type=\"number\">`, accepting numeric values from the user.\n\nAvailable sections: Props, Control-variant, Reverse, Hide-input, Inset, Min/Max, Step, Precision, Prop Control Variant, Prop Hide Input, Prop Inset, Prop Min Max, Prop Precision, Prop Reverse, Prop Step, Usage",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000964",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000965",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-number-input` component has support for most of `v-field`'s props and is follows the same design patterns as other inputs.",
    "display_content": "## v-guide - Props\n\nThe `v-number-input` component has support for most of `v-field`'s props and is follows the same design patterns as other inputs.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000965",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000966",
    "text": "Component: v-guide\nSection: Control-variant\nType: documentation\n\n## v-guide - Control-variant\n\nThe `control-variant` prop offers an easy way to customize steppers button layout. The following values are valid options: **default**, **stacked**, **split** and **hidden**.\n\n<ExamplesExample file=\"v-number-input/prop-control-variant\" />",
    "display_content": "## v-guide - Control-variant\n\nThe `control-variant` prop offers an easy way to customize steppers button layout. The following values are valid options: **default**, **stacked**, **split** and **hidden**.\n\n<ExamplesExample file=\"v-number-input/prop-control-variant\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Control-variant",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000966",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000967",
    "text": "Component: v-guide\nSection: Reverse\nType: documentation\n\n## v-guide - Reverse\n\nThe `reverse` prop automatically changes the stepper buttons' position to the opposite side for both the default and stacked control variants.\n\n<ExamplesExample file=\"v-number-input/prop-reverse\" />",
    "display_content": "## v-guide - Reverse\n\nThe `reverse` prop automatically changes the stepper buttons' position to the opposite side for both the default and stacked control variants.\n\n<ExamplesExample file=\"v-number-input/prop-reverse\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Reverse",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000967",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000968",
    "text": "Component: v-guide\nSection: Hide-input\nType: documentation\n\n## v-guide - Hide-input\n\nThe `hide-input` prop hides the input field, allowing only the stepper buttons to be visible. These stepper buttons follow a stacked control-variant layout.\n\n<ExamplesExample file=\"v-number-input/prop-hide-input\" />",
    "display_content": "## v-guide - Hide-input\n\nThe `hide-input` prop hides the input field, allowing only the stepper buttons to be visible. These stepper buttons follow a stacked control-variant layout.\n\n<ExamplesExample file=\"v-number-input/prop-hide-input\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Hide-input",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000968",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000969",
    "text": "Component: v-guide\nSection: Inset\nType: documentation\n\n## v-guide - Inset\n\nThe `inset` prop adjusts the style of the stepper buttons by reducing the size of the button dividers.\n\n<ExamplesExample file=\"v-number-input/prop-inset\" />",
    "display_content": "## v-guide - Inset\n\nThe `inset` prop adjusts the style of the stepper buttons by reducing the size of the button dividers.\n\n<ExamplesExample file=\"v-number-input/prop-inset\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Inset",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000969",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000970",
    "text": "Component: v-guide\nSection: Min/Max\nType: documentation\n\n## v-guide - Min/Max\n\nThe `min` and `max` props specify the minimum and maximum values accepted by v-number-input, behaving identically to the native min and max attributes for `<input type=\"number\">`.\n\n<ExamplesExample file=\"v-number-input/prop-min-max\" />",
    "display_content": "## v-guide - Min/Max\n\nThe `min` and `max` props specify the minimum and maximum values accepted by v-number-input, behaving identically to the native min and max attributes for `<input type=\"number\">`.\n\n<ExamplesExample file=\"v-number-input/prop-min-max\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Min/Max",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000970",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000971",
    "text": "Component: v-guide\nSection: Step\nType: documentation\n\n## v-guide - Step\n\nThe `step` prop behaves the same as the `step` attribute in the `<input type=\"number\">`, it defines the incremental steps for adjusting the numeric value.\n\n<ExamplesExample file=\"v-number-input/prop-step\" />",
    "display_content": "## v-guide - Step\n\nThe `step` prop behaves the same as the `step` attribute in the `<input type=\"number\">`, it defines the incremental steps for adjusting the numeric value.\n\n<ExamplesExample file=\"v-number-input/prop-step\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Step",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000971",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000972",
    "text": "Component: v-guide\nSection: Precision\nType: documentation\n\n## v-guide - Precision\n\nThe `precision` prop enforces strict precision. It is expected to be an integer value in range between `0` and `15`. Input will prevent user from typing or pasting an invalid value.\n\n<ExamplesExample file=\"v-number-input/prop-precision\" />",
    "display_content": "## v-guide - Precision\n\nThe `precision` prop enforces strict precision. It is expected to be an integer value in range between `0` and `15`. Input will prevent user from typing or pasting an invalid value.\n\n<ExamplesExample file=\"v-number-input/prop-precision\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Precision",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000972",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000973",
    "text": "Component: v-guide\nSection: Prop Control Variant\nType: code_example\n\n## v-guide - Prop Control Variant\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Default</h5>\n\n        <v-number-input control-variant=\"default\"></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Stacked</h5>\n\n        <v-number-input control-variant=\"stacked\"></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Split</h5>\n\n        <v-number-input control-variant=\"split\"></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Hidden</h5>\n\n        <v-number-input control-variant=\"hidden\"></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Control Variant\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Default</h5>\n\n        <v-number-input control-variant=\"default\"></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Stacked</h5>\n\n        <v-number-input control-variant=\"stacked\"></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Split</h5>\n\n        <v-number-input control-variant=\"split\"></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Hidden</h5>\n\n        <v-number-input control-variant=\"hidden\"></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Control Variant",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000973",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000974",
    "text": "Component: v-guide\nSection: Prop Hide Input\nType: code_example\n\n## v-guide - Prop Hide Input\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col cols=\"auto\">\n        <v-number-input variant=\"outlined\" hide-details hide-input></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Hide Input\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col cols=\"auto\">\n        <v-number-input variant=\"outlined\" hide-details hide-input></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Hide Input",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000974",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000975",
    "text": "Component: v-guide\nSection: Prop Inset\nType: code_example\n\n## v-guide - Prop Inset\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" sm=\"6\">\n        <h5>Default</h5>\n\n        <v-number-input\n          control-variant=\"default\"\n          inset\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" sm=\"6\">\n        <h5>Stacked</h5>\n\n        <v-number-input\n          control-variant=\"stacked\"\n          inset\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" sm=\"6\">\n        <h5>Split</h5>\n\n        <v-number-input\n          control-variant=\"split\"\n          inset\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" sm=\"6\">\n        <h5>Hide-input</h5>\n\n        <v-number-input\n          hide-input\n          inset\n        ></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Inset\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" sm=\"6\">\n        <h5>Default</h5>\n\n        <v-number-input\n          control-variant=\"default\"\n          inset\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" sm=\"6\">\n        <h5>Stacked</h5>\n\n        <v-number-input\n          control-variant=\"stacked\"\n          inset\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" sm=\"6\">\n        <h5>Split</h5>\n\n        <v-number-input\n          control-variant=\"split\"\n          inset\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" sm=\"6\">\n        <h5>Hide-input</h5>\n\n        <v-number-input\n          hide-input\n          inset\n        ></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Inset",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000975",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000976",
    "text": "Component: v-guide\nSection: Prop Min Max\nType: code_example\n\n## v-guide - Prop Min Max\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <h5>min:10/max:20</h5>\n\n        <v-number-input\n          :max=\"20\"\n          :min=\"10\"\n          :model-value=\"15\"\n        ></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Min Max\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <h5>min:10/max:20</h5>\n\n        <v-number-input\n          :max=\"20\"\n          :min=\"10\"\n          :model-value=\"15\"\n        ></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Min Max",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000976",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000977",
    "text": "Component: v-guide\nSection: Prop Precision\nType: code_example\n\n## v-guide - Prop Precision\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <h5>(default precision=\"0\")</h5>\n        <v-number-input v-model=\"example1\" :precision=\"0\" hide-details=\"auto\"></v-number-input>\n        <code class=\"d-block pt-3\">value: {{ example1 }}</code>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <h5>(precision=\"2\")</h5>\n        <v-number-input v-model=\"example2\" :precision=\"2\" hide-details=\"auto\"></v-number-input>\n        <code class=\"d-block pt-3\">value: {{ example2 }}</code>\n      </v-col>\n      <v-col>\n        <h5>(precision=\"5\")</h5>\n        <v-number-input v-model=\"example3\" :precision=\"5\" hide-details=\"auto\"></v-number-input>\n        <code class=\"d-block pt-3\">value: {{ example3 }}</code>\n      </v-col>\n      <v-col>\n        <h5>(precision unrestricted)</h5>\n        <v-number-input v-model=\"example4\" :precision=\"null\" hide-details=\"auto\"></v-number-input>\n        <code class=\"d-block pt-3\">value: {{ example4 }}</code>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const example1 = ref(4.052)\n  const example2 = ref(123)\n  const example3 = ref(25.5)\n  const example4 = ref(0.052)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      example1: 4.052,\n      example2: 123,\n      example3: 25.5,\n      example4: 0.052,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Precision\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <h5>(default precision=\"0\")</h5>\n        <v-number-input v-model=\"example1\" :precision=\"0\" hide-details=\"auto\"></v-number-input>\n        <code class=\"d-block pt-3\">value: {{ example1 }}</code>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <h5>(precision=\"2\")</h5>\n        <v-number-input v-model=\"example2\" :precision=\"2\" hide-details=\"auto\"></v-number-input>\n        <code class=\"d-block pt-3\">value: {{ example2 }}</code>\n      </v-col>\n      <v-col>\n        <h5>(precision=\"5\")</h5>\n        <v-number-input v-model=\"example3\" :precision=\"5\" hide-details=\"auto\"></v-number-input>\n        <code class=\"d-block pt-3\">value: {{ example3 }}</code>\n      </v-col>\n      <v-col>\n        <h5>(precision unrestricted)</h5>\n        <v-number-input v-model=\"example4\" :precision=\"null\" hide-details=\"auto\"></v-number-input>\n        <code class=\"d-block pt-3\">value: {{ example4 }}</code>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const example1 = ref(4.052)\n  const example2 = ref(123)\n  const example3 = ref(25.5)\n  const example4 = ref(0.052)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      example1: 4.052,\n      example2: 123,\n      example3: 25.5,\n      example4: 0.052,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Precision",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000977",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000978",
    "text": "Component: v-guide\nSection: Prop Reverse\nType: code_example\n\n## v-guide - Prop Reverse\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Default</h5>\n\n        <v-number-input\n          control-variant=\"default\"\n          reverse\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Stacked</h5>\n\n        <v-number-input\n          control-variant=\"stacked\"\n          reverse\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Split</h5>\n\n        <v-number-input\n          control-variant=\"split\"\n        ></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Reverse\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Default</h5>\n\n        <v-number-input\n          control-variant=\"default\"\n          reverse\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Stacked</h5>\n\n        <v-number-input\n          control-variant=\"stacked\"\n          reverse\n        ></v-number-input>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"4\" sm=\"4\">\n        <h5>Split</h5>\n\n        <v-number-input\n          control-variant=\"split\"\n        ></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Reverse",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000978",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000979",
    "text": "Component: v-guide\nSection: Prop Step\nType: code_example\n\n## v-guide - Prop Step\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <h5>step 2; min:10; max:20</h5>\n\n        <v-number-input\n          :max=\"20\"\n          :min=\"10\"\n          :model-value=\"15\"\n          :step=\"2\"\n        ></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Step\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <h5>step 2; min:10; max:20</h5>\n\n        <v-number-input\n          :max=\"20\"\n          :min=\"10\"\n          :model-value=\"15\"\n          :step=\"2\"\n        ></v-number-input>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Step",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000979",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000980",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-number-input v-bind=\"props\"></v-number-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"controlVariant\"\n        :items=\"controlVariantOptions\"\n        label=\"Control Variant\"\n      ></v-select>\n      <v-checkbox v-model=\"reverse\" label=\"Reverse\"></v-checkbox>\n      <v-checkbox v-model=\"inset\" label=\"Inset\"></v-checkbox>\n      <v-checkbox v-model=\"hideInput\" label=\"HideInput\"></v-checkbox>\n      <v-text-field v-model=\"label\" label=\"Label\" clearable></v-text-field>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = ref('v-number-input')\n  const model = ref('default')\n  const options = ['outlined', 'filled', 'solo', 'solo-inverted', 'solo-filled']\n  const controlVariantOptions = ['default', 'stacked', 'split']\n  const reverse = ref(false)\n  const controlVariant = ref('default')\n  const disabled = ref(false)\n  const loading = ref(false)\n  const inset = ref(false)\n  const hideInput = ref(false)\n  const label = ref('')\n\n  const props = computed(() => {\n    return {\n      reverse: reverse.value,\n      controlVariant: controlVariant.value,\n      disabled: disabled.value || undefined,\n      label: label.value,\n      loading: loading.value || undefined,\n      hideInput: hideInput.value,\n      inset: inset.value,\n      variant: model.value !== 'default' ? model.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<v-number-input${propsToString(props.value)}>${slots.value}</v-number-input>`\n  })\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-number-input v-bind=\"props\"></v-number-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"controlVariant\"\n        :items=\"controlVariantOptions\"\n        label=\"Control Variant\"\n      ></v-select>\n      <v-checkbox v-model=\"reverse\" label=\"Reverse\"></v-checkbox>\n      <v-checkbox v-model=\"inset\" label=\"Inset\"></v-checkbox>\n      <v-checkbox v-model=\"hideInput\" label=\"HideInput\"></v-checkbox>\n      <v-text-field v-model=\"label\" label=\"Label\" clearable></v-text-field>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = ref('v-number-input')\n  const model = ref('default')\n  const options = ['outlined', 'filled', 'solo', 'solo-inverted', 'solo-filled']\n  const controlVariantOptions = ['default', 'stacked', 'split']\n  const reverse = ref(false)\n  const controlVariant = ref('default')\n  const disabled = ref(false)\n  const loading = ref(false)\n  const inset = ref(false)\n  const hideInput = ref(false)\n  const label = ref('')\n\n  const props = computed(() => {\n    return {\n      reverse: reverse.value,\n      controlVariant: controlVariant.value,\n      disabled: disabled.value || undefined,\n      label: label.value,\n      loading: loading.value || undefined,\n      hideInput: hideInput.value,\n      inset: inset.value,\n      variant: model.value !== 'default' ? model.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<v-number-input${propsToString(props.value)}>${slots.value}</v-number-input>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000980",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000981",
    "text": "Component: v-otp-input\nType: component_overview\n\n# v-otp-input\n\nThe OTP input is used for MFA procedure of authenticating users by a one-time password.",
    "display_content": "# v-otp-input\n\nThe OTP input is used for MFA procedure of authenticating users by a one-time password.",
    "metadata": {
      "component": "v-otp-input",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000981",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000982",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nHere we display a list of settings that could be applied within an application.",
    "display_content": "# v-usage\n\nHere we display a list of settings that could be applied within an application.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000982",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000983",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-otp-input](/api/v-otp-input/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-otp-input](/api/v-otp-input/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000983",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000984",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe `v-otp-input` component is a collection of [v-field](/api/v-field/) components that combine to create a single input.",
    "display_content": "# v-anatomy\n\nThe `v-otp-input` component is a collection of [v-field](/api/v-field/) components that combine to create a single input.",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000984",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000985",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-otp-input` component is a collection of `v-field` components that combine to create a single input. It is used to validate a one-time password (OTP) that is sent to the user via email or SMS.\n\nAvailable sections: Props, Length, Focus-all, Error, Variants, Loader",
    "display_content": "# v-guide\n\nThe `v-otp-input` component is a collection of `v-field` components that combine to create a single input. It is used to validate a one-time password (OTP) that is sent to the user via email or SMS.\n\nAvailable sections: Props, Length, Focus-all, Error, Variants, Loader",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000985",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000986",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-otp-input` component has support for most of `v-field`'s props and is follows the same design patterns as other inputs.",
    "display_content": "## v-guide - Props\n\nThe `v-otp-input` component has support for most of `v-field`'s props and is follows the same design patterns as other inputs.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000986",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000987",
    "text": "Component: v-guide\nSection: Length\nType: documentation\n\n## v-guide - Length\n\nThe `length` prop determines the number of `v-field` components that are rendered. The default value is `6`.\n\n<ExamplesExample file=\"v-otp-input/prop-length\" />",
    "display_content": "## v-guide - Length\n\nThe `length` prop determines the number of `v-field` components that are rendered. The default value is `6`.\n\n<ExamplesExample file=\"v-otp-input/prop-length\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Length",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000987",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000988",
    "text": "Component: v-guide\nSection: Focus-all\nType: documentation\n\n## v-guide - Focus-all\n\nThe `autofocus` prop automatically focuses the first element in the `v-otp-input` component.\n\n<ExamplesExample file=\"v-otp-input/prop-focus-all\" />",
    "display_content": "## v-guide - Focus-all\n\nThe `autofocus` prop automatically focuses the first element in the `v-otp-input` component.\n\n<ExamplesExample file=\"v-otp-input/prop-focus-all\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Focus-all",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000988",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000989",
    "text": "Component: v-guide\nSection: Error\nType: documentation\n\n## v-guide - Error\n\nThe `error` prop puts the `v-otp-input` into an error state. This is useful for displaying validation errors.\n\n<ExamplesExample file=\"v-otp-input/prop-error\" />",
    "display_content": "## v-guide - Error\n\nThe `error` prop puts the `v-otp-input` into an error state. This is useful for displaying validation errors.\n\n<ExamplesExample file=\"v-otp-input/prop-error\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Error",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000989",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000990",
    "text": "Component: v-guide\nSection: Variants\nType: documentation\n\n## v-guide - Variants\n\nThe `v-otp-input` component supports the same variants as `v-field`, `v-text-field` and other inputs.\n\n<ExamplesExample file=\"v-otp-input/prop-variant\" />",
    "display_content": "## v-guide - Variants\n\nThe `v-otp-input` component supports the same variants as `v-field`, `v-text-field` and other inputs.\n\n<ExamplesExample file=\"v-otp-input/prop-variant\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Variants",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000990",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000991",
    "text": "Component: v-guide\nSection: Loader\nType: documentation\n\n## v-guide - Loader\n\nThe `loader` prop displays a loader when the `v-otp-input` component is in a loading state. When complete, emits a `finish` event.\n\n<ExamplesExample file=\"v-otp-input/prop-loader\" />",
    "display_content": "## v-guide - Loader\n\nThe `loader` prop displays a loader when the `v-otp-input` component is in a loading state. When complete, emits a `finish` event.\n\n<ExamplesExample file=\"v-otp-input/prop-loader\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Loader",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000991",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000992",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-otp-input` component.\n\nAvailable sections: Card variants, Mobile text, Verify account, Divider, Misc Card, Misc Divider, Misc Mobile, Misc Verify, Prop Error, Prop Focus All, Prop Length, Prop Loader, Prop Variant, Usage",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-otp-input` component.\n\nAvailable sections: Card variants, Mobile text, Verify account, Divider, Misc Card, Misc Divider, Misc Mobile, Misc Verify, Prop Error, Prop Focus All, Prop Length, Prop Loader, Prop Variant, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_000992",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000993",
    "text": "Component: v-examples\nSection: Card variants\nType: documentation\n\n## v-examples - Card variants\n\nThe following example is a detailed example of a `v-otp-input` component used within a card.\n\n<ExamplesExample file=\"v-otp-input/misc-card\" />",
    "display_content": "## v-examples - Card variants\n\nThe following example is a detailed example of a `v-otp-input` component used within a card.\n\n<ExamplesExample file=\"v-otp-input/misc-card\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Card variants",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000993",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000994",
    "text": "Component: v-examples\nSection: Mobile text\nType: documentation\n\n## v-examples - Mobile text\n\nThe following example is a detailed example of a `v-otp-input` component used with mobile text.\n\n<ExamplesExample file=\"v-otp-input/misc-mobile\" />",
    "display_content": "## v-examples - Mobile text\n\nThe following example is a detailed example of a `v-otp-input` component used with mobile text.\n\n<ExamplesExample file=\"v-otp-input/misc-mobile\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Mobile text",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000994",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000995",
    "text": "Component: v-examples\nSection: Verify account\nType: documentation\n\n## v-examples - Verify account\n\nThe following example is a detailed example of a `v-otp-input` component used to verify a user's account.\n\n<ExamplesExample file=\"v-otp-input/misc-verify\" />",
    "display_content": "## v-examples - Verify account\n\nThe following example is a detailed example of a `v-otp-input` component used to verify a user's account.\n\n<ExamplesExample file=\"v-otp-input/misc-verify\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Verify account",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000995",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000996",
    "text": "Component: v-examples\nSection: Divider\nType: documentation\n\n## v-examples - Divider\n\nThe following example is a detailed example of a `v-otp-input` component used with a divider.\n\n<ExamplesExample file=\"v-otp-input/misc-divider\" />",
    "display_content": "## v-examples - Divider\n\nThe following example is a detailed example of a `v-otp-input` component used with a divider.\n\n<ExamplesExample file=\"v-otp-input/misc-divider\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Divider",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_000996",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000997",
    "text": "Component: v-examples\nSection: Misc Card\nType: code_example\n\n## v-examples - Misc Card\n\n```vue\n<template>\n  <v-card\n    class=\"py-8 px-6 text-center mx-auto ma-4\"\n    elevation=\"12\"\n    max-width=\"400\"\n    width=\"100%\"\n  >\n    <h3 class=\"text-h6 mb-4\">Verify Your Account</h3>\n\n    <div class=\"text-body-2\">\n      We sent a verification code to john..@gmail.com <br>\n\n      Please check your email and paste the code below.\n    </div>\n\n    <v-sheet color=\"surface\">\n      <v-otp-input\n        v-model=\"otp\"\n        type=\"password\"\n        variant=\"solo\"\n      ></v-otp-input>\n    </v-sheet>\n\n    <v-btn\n      class=\"my-4\"\n      color=\"purple\"\n      height=\"40\"\n      text=\"Verify\"\n      variant=\"flat\"\n      width=\"70%\"\n    ></v-btn>\n\n    <div class=\"text-caption\">\n      Didn't receive the code? <a href=\"#\" @click.prevent=\"otp = ''\">Resend</a>\n    </div>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const otp = shallowRef('')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      otp: '',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Card\n\n```vue\n<template>\n  <v-card\n    class=\"py-8 px-6 text-center mx-auto ma-4\"\n    elevation=\"12\"\n    max-width=\"400\"\n    width=\"100%\"\n  >\n    <h3 class=\"text-h6 mb-4\">Verify Your Account</h3>\n\n    <div class=\"text-body-2\">\n      We sent a verification code to john..@gmail.com <br>\n\n      Please check your email and paste the code below.\n    </div>\n\n    <v-sheet color=\"surface\">\n      <v-otp-input\n        v-model=\"otp\"\n        type=\"password\"\n        variant=\"solo\"\n      ></v-otp-input>\n    </v-sheet>\n\n    <v-btn\n      class=\"my-4\"\n      color=\"purple\"\n      height=\"40\"\n      text=\"Verify\"\n      variant=\"flat\"\n      width=\"70%\"\n    ></v-btn>\n\n    <div class=\"text-caption\">\n      Didn't receive the code? <a href=\"#\" @click.prevent=\"otp = ''\">Resend</a>\n    </div>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const otp = shallowRef('')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      otp: '',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000997",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000998",
    "text": "Component: v-examples\nSection: Misc Divider\nType: code_example\n\n## v-examples - Misc Divider\n\n```vue\n<template>\n  <v-sheet\n    class=\"py-8 px-6 mx-auto ma-4 text-center\"\n    elevation=\"4\"\n    max-width=\"500\"\n    rounded=\"lg\"\n    width=\"100%\"\n  >\n    <h3 class=\"text-h5\">Verification Code</h3>\n\n    <div class=\"text-subtitle-2 font-weight-light mb-3\">Please enter the verification code sent to your mobile</div>\n\n    <v-otp-input\n      v-model=\"otp\"\n      class=\"mb-8\"\n      divider=\"•\"\n      length=\"4\"\n      variant=\"outlined\"\n    ></v-otp-input>\n\n    <div class=\"text-caption\">\n      <v-btn\n        color=\"primary\"\n        size=\"x-small\"\n        text=\"Send New Code\"\n        variant=\"text\"\n        @click=\"otp = ''\"\n      ></v-btn>\n    </div>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const otp = shallowRef('')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      otp: '',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Divider\n\n```vue\n<template>\n  <v-sheet\n    class=\"py-8 px-6 mx-auto ma-4 text-center\"\n    elevation=\"4\"\n    max-width=\"500\"\n    rounded=\"lg\"\n    width=\"100%\"\n  >\n    <h3 class=\"text-h5\">Verification Code</h3>\n\n    <div class=\"text-subtitle-2 font-weight-light mb-3\">Please enter the verification code sent to your mobile</div>\n\n    <v-otp-input\n      v-model=\"otp\"\n      class=\"mb-8\"\n      divider=\"•\"\n      length=\"4\"\n      variant=\"outlined\"\n    ></v-otp-input>\n\n    <div class=\"text-caption\">\n      <v-btn\n        color=\"primary\"\n        size=\"x-small\"\n        text=\"Send New Code\"\n        variant=\"text\"\n        @click=\"otp = ''\"\n      ></v-btn>\n    </div>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const otp = shallowRef('')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      otp: '',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Divider",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000998",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_000999",
    "text": "Component: v-examples\nSection: Misc Mobile\nType: code_example\n\n## v-examples - Misc Mobile\n\n```vue\n<template>\n  <v-sheet\n    class=\"pt-8 pb-12 px-6 ma-4 mx-auto\"\n    max-width=\"350\"\n    width=\"100%\"\n    border\n  >\n    <h3 class=\"text-h6 mb-1\">Mobile phone verification</h3>\n\n    <div class=\"text-body-2 font-weight-light\">\n      Enter the code we just sent to your mobile phone <span class=\"font-weight-black text-primary\">+1 408 555 1212</span>\n    </div>\n\n    <v-otp-input\n      v-model=\"otp\"\n      class=\"mt-3 ms-n2\"\n      length=\"4\"\n      placeholder=\"0\"\n      variant=\"underlined\"\n    ></v-otp-input>\n\n    <v-divider class=\"mt-3 mb-6\"></v-divider>\n\n    <div class=\"mb-3 text-body-2\">\n      Need another <strong>code</strong>?\n    </div>\n\n    <v-btn\n      color=\"primary\"\n      size=\"small\"\n      text=\"Re-send Email\"\n      variant=\"tonal\"\n      @click=\"otp = ''\"\n    ></v-btn>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const otp = shallowRef('')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      otp: '',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Mobile\n\n```vue\n<template>\n  <v-sheet\n    class=\"pt-8 pb-12 px-6 ma-4 mx-auto\"\n    max-width=\"350\"\n    width=\"100%\"\n    border\n  >\n    <h3 class=\"text-h6 mb-1\">Mobile phone verification</h3>\n\n    <div class=\"text-body-2 font-weight-light\">\n      Enter the code we just sent to your mobile phone <span class=\"font-weight-black text-primary\">+1 408 555 1212</span>\n    </div>\n\n    <v-otp-input\n      v-model=\"otp\"\n      class=\"mt-3 ms-n2\"\n      length=\"4\"\n      placeholder=\"0\"\n      variant=\"underlined\"\n    ></v-otp-input>\n\n    <v-divider class=\"mt-3 mb-6\"></v-divider>\n\n    <div class=\"mb-3 text-body-2\">\n      Need another <strong>code</strong>?\n    </div>\n\n    <v-btn\n      color=\"primary\"\n      size=\"small\"\n      text=\"Re-send Email\"\n      variant=\"tonal\"\n      @click=\"otp = ''\"\n    ></v-btn>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const otp = shallowRef('')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      otp: '',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Mobile",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_000999",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001000",
    "text": "Component: v-examples\nSection: Misc Verify\nType: code_example\n\n## v-examples - Misc Verify\n\n```vue\n<template>\n  <v-card\n    class=\"py-12 px-8 text-center mx-auto ma-4\"\n    max-width=\"420\"\n    width=\"100%\"\n  >\n    <h3 class=\"text-h6 mb-2\">\n      Please enter the one time password to verify your account\n    </h3>\n\n    <div>A code has been sent to *****2489</div>\n\n    <v-otp-input\n      v-model=\"otp\"\n      :disabled=\"validating\"\n      color=\"primary\"\n      variant=\"plain\"\n    ></v-otp-input>\n\n    <v-btn\n      :loading=\"validating\"\n      class=\"mt-6 text-none bg-surface-variant\"\n      height=\"40\"\n      text=\"Validate\"\n      variant=\"plain\"\n      width=\"135\"\n      border\n      rounded\n      @click=\"onClick\"\n    ></v-btn>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const otp = shallowRef('2401')\n  const validating = shallowRef(false)\n\n  function onClick () {\n    validating.value = true\n\n    setTimeout(() => {\n      validating.value = false\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      otp: '',\n      validating: false,\n    }),\n\n    methods: {\n      onClick () {\n        this.validating = true\n\n        setTimeout(() => {\n          this.validating = false\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Verify\n\n```vue\n<template>\n  <v-card\n    class=\"py-12 px-8 text-center mx-auto ma-4\"\n    max-width=\"420\"\n    width=\"100%\"\n  >\n    <h3 class=\"text-h6 mb-2\">\n      Please enter the one time password to verify your account\n    </h3>\n\n    <div>A code has been sent to *****2489</div>\n\n    <v-otp-input\n      v-model=\"otp\"\n      :disabled=\"validating\"\n      color=\"primary\"\n      variant=\"plain\"\n    ></v-otp-input>\n\n    <v-btn\n      :loading=\"validating\"\n      class=\"mt-6 text-none bg-surface-variant\"\n      height=\"40\"\n      text=\"Validate\"\n      variant=\"plain\"\n      width=\"135\"\n      border\n      rounded\n      @click=\"onClick\"\n    ></v-btn>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const otp = shallowRef('2401')\n  const validating = shallowRef(false)\n\n  function onClick () {\n    validating.value = true\n\n    setTimeout(() => {\n      validating.value = false\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      otp: '',\n      validating: false,\n    }),\n\n    methods: {\n      onClick () {\n        this.validating = true\n\n        setTimeout(() => {\n          this.validating = false\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Verify",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001000",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001001",
    "text": "Component: v-examples\nSection: Prop Error\nType: code_example\n\n## v-examples - Prop Error\n\n```vue\n<template>\n  <v-otp-input\n    model-value=\"221\"\n    error\n  ></v-otp-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Error\n\n```vue\n<template>\n  <v-otp-input\n    model-value=\"221\"\n    error\n  ></v-otp-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Error",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001001",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001002",
    "text": "Component: v-examples\nSection: Prop Focus All\nType: code_example\n\n## v-examples - Prop Focus All\n\n```vue\n<template>\n  <v-otp-input\n    model-value=\"425\"\n    focus-all\n    focused\n  ></v-otp-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Focus All\n\n```vue\n<template>\n  <v-otp-input\n    model-value=\"425\"\n    focus-all\n    focused\n  ></v-otp-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Focus All",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001002",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001003",
    "text": "Component: v-examples\nSection: Prop Length\nType: code_example\n\n## v-examples - Prop Length\n\n```vue\n<template>\n  <v-otp-input\n    length=\"7\"\n    model-value=\"3214214\"\n  ></v-otp-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Length\n\n```vue\n<template>\n  <v-otp-input\n    length=\"7\"\n    model-value=\"3214214\"\n  ></v-otp-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Length",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001003",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001004",
    "text": "Component: v-examples\nSection: Prop Loader\nType: code_example\n\n## v-examples - Prop Loader\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-otp-input\n      v-model=\"otp\"\n      :loading=\"loading\"\n      length=\"5\"\n      variant=\"underlined\"\n    ></v-otp-input>\n\n    <v-btn\n      :disabled=\"otp.length < 5 || loading\"\n      class=\"my-5\"\n      color=\"surface-variant\"\n      text=\"Submit\"\n      variant=\"tonal\"\n      @click=\"onClick\"\n    ></v-btn>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const loading = shallowRef(false)\n  const otp = shallowRef('31')\n\n  function onClick () {\n    loading.value = true\n\n    setTimeout(() => {\n      loading.value = false\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loading: false,\n      otp: '',\n    }),\n\n    methods: {\n      onClick () {\n        this.loading = true\n\n        setTimeout(() => {\n          this.loading = false\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Loader\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-otp-input\n      v-model=\"otp\"\n      :loading=\"loading\"\n      length=\"5\"\n      variant=\"underlined\"\n    ></v-otp-input>\n\n    <v-btn\n      :disabled=\"otp.length < 5 || loading\"\n      class=\"my-5\"\n      color=\"surface-variant\"\n      text=\"Submit\"\n      variant=\"tonal\"\n      @click=\"onClick\"\n    ></v-btn>\n  </div>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const loading = shallowRef(false)\n  const otp = shallowRef('31')\n\n  function onClick () {\n    loading.value = true\n\n    setTimeout(() => {\n      loading.value = false\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loading: false,\n      otp: '',\n    }),\n\n    methods: {\n      onClick () {\n        this.loading = true\n\n        setTimeout(() => {\n          this.loading = false\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Loader",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001004",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001005",
    "text": "Component: v-examples\nSection: Prop Variant\nType: code_example\n\n## v-examples - Prop Variant\n\n```vue\n<template>\n  <v-otp-input\n    model-value=\"8011\"\n    variant=\"filled\"\n  ></v-otp-input>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Variant\n\n```vue\n<template>\n  <v-otp-input\n    model-value=\"8011\"\n    variant=\"filled\"\n  ></v-otp-input>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Variant",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001005",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001006",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-otp-input v-bind=\"props\"></v-otp-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"placeholder\" label=\"Placeholder\" maxlength=\"1\" clearable></v-text-field>\n      <v-checkbox v-model=\"focus\" label=\"Focus all\"></v-checkbox>\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n      <v-checkbox v-model=\"loading\" label=\"Loading\"></v-checkbox>\n      <v-slider v-model=\"length\" label=\"Length\" max=\"8\" min=\"4\" step=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-stepper'\n  const model = ref('default')\n  const options = ['solo', 'solo-filled', 'underlined']\n  const focus = ref(false)\n  const length = ref(6)\n  const placeholder = ref('')\n  const disabled = ref(false)\n  const loading = ref(false)\n\n  const props = computed(() => {\n    return {\n      disabled: disabled.value || undefined,\n      'focus-all': focus.value || undefined,\n      length: length.value === 6 ? undefined : length.value,\n      loading: loading.value || undefined,\n      placeholder: placeholder.value || undefined,\n      variant: model.value !== 'default' ? model.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<v-otp-input${propsToString(props.value)}>${slots.value}</v-otp-input>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-otp-input v-bind=\"props\"></v-otp-input>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"placeholder\" label=\"Placeholder\" maxlength=\"1\" clearable></v-text-field>\n      <v-checkbox v-model=\"focus\" label=\"Focus all\"></v-checkbox>\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n      <v-checkbox v-model=\"loading\" label=\"Loading\"></v-checkbox>\n      <v-slider v-model=\"length\" label=\"Length\" max=\"8\" min=\"4\" step=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-stepper'\n  const model = ref('default')\n  const options = ['solo', 'solo-filled', 'underlined']\n  const focus = ref(false)\n  const length = ref(6)\n  const placeholder = ref('')\n  const disabled = ref(false)\n  const loading = ref(false)\n\n  const props = computed(() => {\n    return {\n      disabled: disabled.value || undefined,\n      'focus-all': focus.value || undefined,\n      length: length.value === 6 ? undefined : length.value,\n      loading: loading.value || undefined,\n      placeholder: placeholder.value || undefined,\n      variant: model.value !== 'default' ? model.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<v-otp-input${propsToString(props.value)}>${slots.value}</v-otp-input>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001006",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001007",
    "text": "Component: v-overflow-buttons\nType: component_overview\n\n# v-overflow-buttons\n\n`v-overflow-btn` is used to give the user the ability to select items from the list. It has 3 variations: `editable`, `overflow` and `segmented`",
    "display_content": "# v-overflow-buttons\n\n`v-overflow-btn` is used to give the user the ability to select items from the list. It has 3 variations: `editable`, `overflow` and `segmented`",
    "metadata": {
      "component": "v-overflow-buttons",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001007",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001008",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\n`v-overflow-btn` is used for creating selection lists",
    "display_content": "# v-usage\n\n`v-overflow-btn` is used for creating selection lists",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001008",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001009",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can add a counter to `v-overflow-btn` to control the max char count\n\nAvailable sections: Counter, Dense, Disabled, Editable, Filled, Hint, Loading, Menu props, Readonly, Segmented, Prop Counter, Prop Dense, Prop Disabled, Prop Editable, Prop Filled, Prop Hint, Prop Loading, Prop Menu Props, Prop Readonly, Prop Segmented, Usage",
    "display_content": "# v-examples\n\nYou can add a counter to `v-overflow-btn` to control the max char count\n\nAvailable sections: Counter, Dense, Disabled, Editable, Filled, Hint, Loading, Menu props, Readonly, Segmented, Prop Counter, Prop Dense, Prop Disabled, Prop Editable, Prop Filled, Prop Hint, Prop Loading, Prop Menu Props, Prop Readonly, Prop Segmented, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001009",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001010",
    "text": "Component: v-examples\nSection: Counter\nType: documentation\n\n## v-examples - Counter\n\nYou can add a counter to `v-overflow-btn` to control the max char count\n\n<ExamplesExample file=\"v-overflow-btn/prop-counter\" />",
    "display_content": "## v-examples - Counter\n\nYou can add a counter to `v-overflow-btn` to control the max char count\n\n<ExamplesExample file=\"v-overflow-btn/prop-counter\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Counter",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001010",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001011",
    "text": "Component: v-examples\nSection: Dense\nType: documentation\n\n## v-examples - Dense\n\nYou can use `dense` prop to reduce overflow button height and lower max height of list items.\n\n<ExamplesExample file=\"v-overflow-btn/prop-dense\" />",
    "display_content": "## v-examples - Dense\n\nYou can use `dense` prop to reduce overflow button height and lower max height of list items.\n\n<ExamplesExample file=\"v-overflow-btn/prop-dense\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dense",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001011",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001012",
    "text": "Component: v-examples\nSection: Disabled\nType: documentation\n\n## v-examples - Disabled\n\n`v-overflow-btn` can be disabled in order to prevent a user from interacting with it\n\n<ExamplesExample file=\"v-overflow-btn/prop-disabled\" />",
    "display_content": "## v-examples - Disabled\n\n`v-overflow-btn` can be disabled in order to prevent a user from interacting with it\n\n<ExamplesExample file=\"v-overflow-btn/prop-disabled\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001012",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001013",
    "text": "Component: v-examples\nSection: Editable\nType: documentation\n\n## v-examples - Editable\n\n`editable` `v-overflow-btn` can be directly edited, just as `v-text-field`\n\n<ExamplesExample file=\"v-overflow-btn/prop-editable\" />",
    "display_content": "## v-examples - Editable\n\n`editable` `v-overflow-btn` can be directly edited, just as `v-text-field`\n\n<ExamplesExample file=\"v-overflow-btn/prop-editable\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Editable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001013",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001014",
    "text": "Component: v-examples\nSection: Filled\nType: documentation\n\n## v-examples - Filled\n\nText fields can be used with an alternative box design.\n\n<ExamplesExample file=\"v-overflow-btn/prop-filled\" />",
    "display_content": "## v-examples - Filled\n\nText fields can be used with an alternative box design.\n\n<ExamplesExample file=\"v-overflow-btn/prop-filled\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Filled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001014",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001015",
    "text": "Component: v-examples\nSection: Hint\nType: documentation\n\n## v-examples - Hint\n\nYou can add a hint for the user using the `hint` property\n\n<ExamplesExample file=\"v-overflow-btn/prop-hint\" />",
    "display_content": "## v-examples - Hint\n\nYou can add a hint for the user using the `hint` property\n\n<ExamplesExample file=\"v-overflow-btn/prop-hint\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Hint",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001015",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001016",
    "text": "Component: v-examples\nSection: Loading\nType: documentation\n\n## v-examples - Loading\n\n`v-overflow-btn` can have `loading` state with a linear progress bar under them\n\n<ExamplesExample file=\"v-overflow-btn/prop-loading\" />",
    "display_content": "## v-examples - Loading\n\n`v-overflow-btn` can have `loading` state with a linear progress bar under them\n\n<ExamplesExample file=\"v-overflow-btn/prop-loading\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Loading",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001016",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001017",
    "text": "Component: v-examples\nSection: Menu props\nType: api_reference\n\n## v-examples - Menu props\n\nYou can set underlying `v-menu` props using `menu-props` property\n\n<ExamplesExample file=\"v-overflow-btn/prop-menu-props\" />",
    "display_content": "## v-examples - Menu props\n\nYou can set underlying `v-menu` props using `menu-props` property\n\n<ExamplesExample file=\"v-overflow-btn/prop-menu-props\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Menu props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001017",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001018",
    "text": "Component: v-examples\nSection: Readonly\nType: documentation\n\n## v-examples - Readonly\n\n`v-overflow-btn` can be put into `readonly` mode, it'll become inactive but won't change the color\n\n<ExamplesExample file=\"v-overflow-btn/prop-readonly\" />",
    "display_content": "## v-examples - Readonly\n\n`v-overflow-btn` can be put into `readonly` mode, it'll become inactive but won't change the color\n\n<ExamplesExample file=\"v-overflow-btn/prop-readonly\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Readonly",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001018",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001019",
    "text": "Component: v-examples\nSection: Segmented\nType: documentation\n\n## v-examples - Segmented\n\n`segmented` `v-overflow-btn` has and additional divider between the content and the icon\n\n<ExamplesExample file=\"v-overflow-btn/prop-segmented\" />",
    "display_content": "## v-examples - Segmented\n\n`segmented` `v-overflow-btn` has and additional divider between the content and the icon\n\n<ExamplesExample file=\"v-overflow-btn/prop-segmented\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Segmented",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001019",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001020",
    "text": "Component: v-examples\nSection: Prop Counter\nType: code_example\n\n## v-examples - Prop Counter\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-3\">\n    <v-overflow-btn\n      :items=\"dropdownEdit\"\n      class=\"my-2\"\n      item-value=\"text\"\n      label=\"Overflow Btn w/ counter\"\n      counter\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownEdit = ref([\n    { text: '100%' },\n    { text: '75%' },\n    { text: '50%' },\n    { text: '25%' },\n    { text: '0%' },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownEdit: [\n        { text: '100%' },\n        { text: '75%' },\n        { text: '50%' },\n        { text: '25%' },\n        { text: '0%' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Counter\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-3\">\n    <v-overflow-btn\n      :items=\"dropdownEdit\"\n      class=\"my-2\"\n      item-value=\"text\"\n      label=\"Overflow Btn w/ counter\"\n      counter\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownEdit = ref([\n    { text: '100%' },\n    { text: '75%' },\n    { text: '50%' },\n    { text: '25%' },\n    { text: '0%' },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownEdit: [\n        { text: '100%' },\n        { text: '75%' },\n        { text: '50%' },\n        { text: '25%' },\n        { text: '0%' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Counter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001020",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001021",
    "text": "Component: v-examples\nSection: Prop Dense\nType: code_example\n\n## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-container>\n    <v-overflow-btn\n      :items=\"items\"\n      class=\"my-2\"\n      label=\"Overflow Btn - Dense\"\n      dense\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-container>\n    <v-overflow-btn\n      :items=\"items\"\n      class=\"my-2\"\n      label=\"Overflow Btn - Dense\"\n      dense\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Dense",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001021",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001022",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ disabled\"\n      target=\"#dropdown-example-1\"\n      disabled\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ disabled\"\n      target=\"#dropdown-example-1\"\n      disabled\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001022",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001023",
    "text": "Component: v-examples\nSection: Prop Editable\nType: code_example\n\n## v-examples - Prop Editable\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-3\">\n    <v-overflow-btn\n      :items=\"dropdownEdit\"\n      class=\"my-2\"\n      item-value=\"text\"\n      label=\"Overflow Btn w/ editable\"\n      editable\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  const dropdownEdit = [\n    { text: '100%' },\n    { text: '75%' },\n    { text: '50%' },\n    { text: '25%' },\n    { text: '0%' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownEdit: [\n        { text: '100%' },\n        { text: '75%' },\n        { text: '50%' },\n        { text: '25%' },\n        { text: '0%' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Editable\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-3\">\n    <v-overflow-btn\n      :items=\"dropdownEdit\"\n      class=\"my-2\"\n      item-value=\"text\"\n      label=\"Overflow Btn w/ editable\"\n      editable\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  const dropdownEdit = [\n    { text: '100%' },\n    { text: '75%' },\n    { text: '50%' },\n    { text: '25%' },\n    { text: '0%' },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownEdit: [\n        { text: '100%' },\n        { text: '75%' },\n        { text: '50%' },\n        { text: '25%' },\n        { text: '0%' },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Editable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001023",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001024",
    "text": "Component: v-examples\nSection: Prop Filled\nType: code_example\n\n## v-examples - Prop Filled\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn - filled\"\n      target=\"#dropdown-example-1\"\n      filled\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Filled\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn - filled\"\n      target=\"#dropdown-example-1\"\n      filled\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Filled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001024",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001025",
    "text": "Component: v-examples\nSection: Prop Hint\nType: code_example\n\n## v-examples - Prop Hint\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      hint=\"Select font\"\n      label=\"Overflow Btn w/ hint\"\n      menu-props=\"top\"\n      target=\"#dropdown-example-1\"\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Hint\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      hint=\"Select font\"\n      label=\"Overflow Btn w/ hint\"\n      menu-props=\"top\"\n      target=\"#dropdown-example-1\"\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hint",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001025",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001026",
    "text": "Component: v-examples\nSection: Prop Loading\nType: code_example\n\n## v-examples - Prop Loading\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ loading\"\n      target=\"#dropdown-example-1\"\n      loading\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Loading\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ loading\"\n      target=\"#dropdown-example-1\"\n      loading\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Loading",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001026",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001027",
    "text": "Component: v-examples\nSection: Prop Menu Props\nType: code_example\n\n## v-examples - Prop Menu Props\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ menu-props\"\n      menu-props=\"top\"\n      target=\"#dropdown-example-1\"\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Menu Props\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ menu-props\"\n      menu-props=\"top\"\n      target=\"#dropdown-example-1\"\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Menu Props",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001027",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001028",
    "text": "Component: v-examples\nSection: Prop Readonly\nType: code_example\n\n## v-examples - Prop Readonly\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ readonly\"\n      target=\"#dropdown-example-1\"\n      readonly\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Readonly\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-1\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ readonly\"\n      target=\"#dropdown-example-1\"\n      readonly\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownFont = ref(['Arial', 'Calibri', 'Courier', 'Verdana'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownFont: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Readonly",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001028",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001029",
    "text": "Component: v-examples\nSection: Prop Segmented\nType: code_example\n\n## v-examples - Prop Segmented\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-2\">\n    <v-overflow-btn\n      :items=\"dropdownIcon\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ segmented\"\n      target=\"#dropdown-example-2\"\n      segmented\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownIcon = ref([\n    { text: 'list', callback: () => console.log('list') },\n    { text: 'favorite', callback: () => console.log('favorite') },\n    { text: 'delete', callback: () => console.log('delete') },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownIcon: [\n        { text: 'list', callback: () => console.log('list') },\n        { text: 'favorite', callback: () => console.log('favorite') },\n        { text: 'delete', callback: () => console.log('delete') },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Segmented\n\n```vue\n<template>\n  <v-container id=\"dropdown-example-2\">\n    <v-overflow-btn\n      :items=\"dropdownIcon\"\n      class=\"my-2\"\n      label=\"Overflow Btn w/ segmented\"\n      target=\"#dropdown-example-2\"\n      segmented\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const dropdownIcon = ref([\n    { text: 'list', callback: () => console.log('list') },\n    { text: 'favorite', callback: () => console.log('favorite') },\n    { text: 'delete', callback: () => console.log('delete') },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      dropdownIcon: [\n        { text: 'list', callback: () => console.log('list') },\n        { text: 'favorite', callback: () => console.log('favorite') },\n        { text: 'delete', callback: () => console.log('delete') },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Segmented",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001029",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001030",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-container id=\"dropdown-playground\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      hint=\"I'm a hint\"\n      label=\"Overflow Btn\"\n      target=\"#dropdown-playground\"\n      v-bind=\"$attrs\"\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script>\n  export default {\n    name: 'Usage',\n\n    inheritAttrs: false,\n\n    data: () => ({\n      dropdownFont: [\n        { text: 'Arial', callback: () => {} },\n        { text: 'Calibri', callback: () => {} },\n        { text: 'Courier', callback: () => {} },\n        { text: 'Verdana', callback: () => {} },\n      ],\n      defaults: {\n        dense: false,\n        disabled: false,\n        editable: false,\n        filled: false,\n        loading: false,\n        overflow: false,\n        'persistent-hint': false,\n        readonly: false,\n        reverse: false,\n        segmented: false,\n      },\n      options: {\n        booleans: [\n          'dense',\n          'disabled',\n          'filled',\n          'loading',\n          'persistent-hint',\n          'readonly',\n          'reverse',\n        ],\n      },\n      tabs: ['editable', 'overflow', 'segmented'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-container id=\"dropdown-playground\">\n    <v-overflow-btn\n      :items=\"dropdownFont\"\n      hint=\"I'm a hint\"\n      label=\"Overflow Btn\"\n      target=\"#dropdown-playground\"\n      v-bind=\"$attrs\"\n    ></v-overflow-btn>\n  </v-container>\n</template>\n\n<script>\n  export default {\n    name: 'Usage',\n\n    inheritAttrs: false,\n\n    data: () => ({\n      dropdownFont: [\n        { text: 'Arial', callback: () => {} },\n        { text: 'Calibri', callback: () => {} },\n        { text: 'Courier', callback: () => {} },\n        { text: 'Verdana', callback: () => {} },\n      ],\n      defaults: {\n        dense: false,\n        disabled: false,\n        editable: false,\n        filled: false,\n        loading: false,\n        overflow: false,\n        'persistent-hint': false,\n        readonly: false,\n        reverse: false,\n        segmented: false,\n      },\n      options: {\n        booleans: [\n          'dense',\n          'disabled',\n          'filled',\n          'loading',\n          'persistent-hint',\n          'readonly',\n          'reverse',\n        ],\n      },\n      tabs: ['editable', 'overflow', 'segmented'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001030",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001031",
    "text": "Component: v-overlays\nType: component_overview\n\n# v-overlays\n\n`v-overlay` is the base for components that float over the rest of the page, such as `v-menu` and `v-dialog`. It can also be used on its own and comes with everything you need to create a custom popover component.",
    "display_content": "# v-overlays\n\n`v-overlay` is the base for components that float over the rest of the page, such as `v-menu` and `v-dialog`. It can also be used on its own and comes with everything you need to create a custom popover component.",
    "metadata": {
      "component": "v-overlays",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001031",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001032",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nIn its simplest form, the `v-overlay` component will add a dimmed layer over your application.",
    "display_content": "# v-usage\n\nIn its simplest form, the `v-overlay` component will add a dimmed layer over your application.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001032",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001033",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-overlay](/api/v-overlay/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-overlay](/api/v-overlay/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001033",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001034",
    "text": "Component: v-activator\nType: component_overview\n\n# v-activator\n\nOverlays can be opened with v-model, or by clicking or hovering on an activator element. An activator is mandatory for the connected locationLocation strategy. The activator element (if present) will also be used by some transitions to slide or scale from the activator's location instead of the middle of the screen.\n\nAvailable sections: Activator prop, Activator slot",
    "display_content": "# v-activator\n\nOverlays can be opened with v-model, or by clicking or hovering on an activator element. An activator is mandatory for the connected locationLocation strategy. The activator element (if present) will also be used by some transitions to slide or scale from the activator's location instead of the middle of the screen.\n\nAvailable sections: Activator prop, Activator slot",
    "metadata": {
      "component": "v-activator",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001034",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001035",
    "text": "Component: v-activator\nSection: Activator prop\nType: code_example\n\n## v-activator - Activator prop\n\nThe simplest way of providing an activator. Can be a CSS selector to pass to `document.querySelector()`, a component instance, or a HTMLElement. The string `\"parent\"` is also accepted to automatically bind to the parent element.\n\n```html\n<v-overlay activator=\"#id\" />\n<v-overlay activator=\".class\" />\n<v-overlay :activator=\"elementRef\" />\n<v-btn>\n  <v-overlay activator=\"parent\" />\n</v-btn>\n```",
    "display_content": "## v-activator - Activator prop\n\nThe simplest way of providing an activator. Can be a CSS selector to pass to `document.querySelector()`, a component instance, or a HTMLElement. The string `\"parent\"` is also accepted to automatically bind to the parent element.\n\n```html\n<v-overlay activator=\"#id\" />\n<v-overlay activator=\".class\" />\n<v-overlay :activator=\"elementRef\" />\n<v-btn>\n  <v-overlay activator=\"parent\" />\n</v-btn>\n```",
    "metadata": {
      "component": "v-activator",
      "section_type": "code_example",
      "subsection": "Activator prop",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001035",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001036",
    "text": "Component: v-activator\nSection: Activator slot\nType: code_example\n\n## v-activator - Activator slot\n\nFor more manual control, the slot can be used instead. `props` is an object containing all the relevant ARIA attributes and event handlers, and must be applied to the target element with `v-bind` for the component to work correctly.\n\n```html\n<v-overlay>\n  <template #activator=\"{ isActive, props }\">\n    <v-btn v-bind=\"props\">Overlay is {{ isActive ? 'open' : 'closed' }}</v-btn>\n  </template>\n</v-overlay>\n```",
    "display_content": "## v-activator - Activator slot\n\nFor more manual control, the slot can be used instead. `props` is an object containing all the relevant ARIA attributes and event handlers, and must be applied to the target element with `v-bind` for the component to work correctly.\n\n```html\n<v-overlay>\n  <template #activator=\"{ isActive, props }\">\n    <v-btn v-bind=\"props\">Overlay is {{ isActive ? 'open' : 'closed' }}</v-btn>\n  </template>\n</v-overlay>\n```",
    "metadata": {
      "component": "v-activator",
      "section_type": "code_example",
      "subsection": "Activator slot",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001036",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001037",
    "text": "Component: v-location-strategies\nType: component_overview\n\n# v-location-strategies\n\n`location-strategy=\"static\"`\n\nAvailable sections: Static (default), Connected",
    "display_content": "# v-location-strategies\n\n`location-strategy=\"static\"`\n\nAvailable sections: Static (default), Connected",
    "metadata": {
      "component": "v-location-strategies",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001037",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001038",
    "text": "Component: v-location-strategies\nSection: Static (default)\nType: documentation\n\n## v-location-strategies - Static (default)\n\n`location-strategy=\"static\"`\n\nOverlay content is absolutely positioned to the center of its container by default.",
    "display_content": "## v-location-strategies - Static (default)\n\n`location-strategy=\"static\"`\n\nOverlay content is absolutely positioned to the center of its container by default.",
    "metadata": {
      "component": "v-location-strategies",
      "section_type": "subsection",
      "subsection": "Static (default)",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001038",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001039",
    "text": "Component: v-location-strategies\nSection: Connected\nType: documentation\n\n## v-location-strategies - Connected\n\n`location-strategy=\"connected\"`\n\nThe connected strategy is used by [v-menu](/components/menus) and [v-tooltip](/components/tooltips) to attach the overlay content to an activator element.\n\n`location` selects a point on the activator, and `origin` a point on the overlay content. The content element will be positioned so the two points overlap.\n\n<ExamplesExample file=\"v-overlay/connected-playground\" />",
    "display_content": "## v-location-strategies - Connected\n\n`location-strategy=\"connected\"`\n\nThe connected strategy is used by [v-menu](/components/menus) and [v-tooltip](/components/tooltips) to attach the overlay content to an activator element.\n\n`location` selects a point on the activator, and `origin` a point on the overlay content. The content element will be positioned so the two points overlap.\n\n<ExamplesExample file=\"v-overlay/connected-playground\" />",
    "metadata": {
      "component": "v-location-strategies",
      "section_type": "subsection",
      "subsection": "Connected",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001039",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001040",
    "text": "Component: v-scroll-strategies\nType: component_overview\n\n# v-scroll-strategies\n\n`scroll-strategy=\"block\"`\n\nAvailable sections: Block (default), Close, Reposition, None",
    "display_content": "# v-scroll-strategies\n\n`scroll-strategy=\"block\"`\n\nAvailable sections: Block (default), Close, Reposition, None",
    "metadata": {
      "component": "v-scroll-strategies",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001040",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001041",
    "text": "Component: v-scroll-strategies\nSection: Block (default)\nType: documentation\n\n## v-scroll-strategies - Block (default)\n\n`scroll-strategy=\"block\"`\n\nScrolling is blocked while the overlay is active, and the scrollbar is hidden. If `contained` is also set, scrolling will only be blocked up to the overlay's [`offsetParent`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n\n<ExamplesExample file=\"v-overlay/scroll-block\" />",
    "display_content": "## v-scroll-strategies - Block (default)\n\n`scroll-strategy=\"block\"`\n\nScrolling is blocked while the overlay is active, and the scrollbar is hidden. If `contained` is also set, scrolling will only be blocked up to the overlay's [`offsetParent`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n\n<ExamplesExample file=\"v-overlay/scroll-block\" />",
    "metadata": {
      "component": "v-scroll-strategies",
      "section_type": "subsection",
      "subsection": "Block (default)",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001041",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001042",
    "text": "Component: v-scroll-strategies\nSection: Close\nType: documentation\n\n## v-scroll-strategies - Close\n\n`scroll-strategy=\"close\"`\n\nScrolling when the overlay is active will de-activate it.\n\n<ExamplesExample file=\"v-overlay/scroll-close\" />",
    "display_content": "## v-scroll-strategies - Close\n\n`scroll-strategy=\"close\"`\n\nScrolling when the overlay is active will de-activate it.\n\n<ExamplesExample file=\"v-overlay/scroll-close\" />",
    "metadata": {
      "component": "v-scroll-strategies",
      "section_type": "subsection",
      "subsection": "Close",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001042",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001043",
    "text": "Component: v-scroll-strategies\nSection: Reposition\nType: documentation\n\n## v-scroll-strategies - Reposition\n\n`scroll-strategy=\"reposition\"`\n\nWhen using the `connected` location strategy, this scroll strategy will reposition the overlay element to always respect the activator location.\n\n<ExamplesExample file=\"v-overlay/scroll-reposition\" />",
    "display_content": "## v-scroll-strategies - Reposition\n\n`scroll-strategy=\"reposition\"`\n\nWhen using the `connected` location strategy, this scroll strategy will reposition the overlay element to always respect the activator location.\n\n<ExamplesExample file=\"v-overlay/scroll-reposition\" />",
    "metadata": {
      "component": "v-scroll-strategies",
      "section_type": "subsection",
      "subsection": "Reposition",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001043",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001044",
    "text": "Component: v-scroll-strategies\nSection: None\nType: documentation\n\n## v-scroll-strategies - None\n\n`scroll-strategy=\"none\"`\n\nNo scroll strategy is used.\n\n<ExamplesExample file=\"v-overlay/scroll-none\" />",
    "display_content": "## v-scroll-strategies - None\n\n`scroll-strategy=\"none\"`\n\nNo scroll strategy is used.\n\n<ExamplesExample file=\"v-overlay/scroll-none\" />",
    "metadata": {
      "component": "v-scroll-strategies",
      "section_type": "subsection",
      "subsection": "None",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001044",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001045",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nA **contained** overlay is positioned absolutely and contained inside its parent element.\n\nAvailable sections: Contained, Advanced, Loader, Connected Playground, Scroll Block, Scroll Close, Scroll None, Scroll Reposition, Usage, Misc Advanced, Misc Loader, Prop Contained",
    "display_content": "# v-examples\n\nA **contained** overlay is positioned absolutely and contained inside its parent element.\n\nAvailable sections: Contained, Advanced, Loader, Connected Playground, Scroll Block, Scroll Close, Scroll None, Scroll Reposition, Usage, Misc Advanced, Misc Loader, Prop Contained",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001045",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001046",
    "text": "Component: v-examples\nSection: Contained\nType: documentation\n\n## v-examples - Contained\n\nA **contained** overlay is positioned absolutely and contained inside its parent element.\n\n::: info\n  Note: The parent element must have position: relative.\n:::\n\n<ExamplesExample file=\"v-overlay/prop-contained\" />",
    "display_content": "## v-examples - Contained\n\nA **contained** overlay is positioned absolutely and contained inside its parent element.\n\n::: info\n  Note: The parent element must have position: relative.\n:::\n\n<ExamplesExample file=\"v-overlay/prop-contained\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Contained",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001046",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001047",
    "text": "Component: v-examples\nSection: Advanced\nType: documentation\n\n## v-examples - Advanced\n\nUsing the [v-hover](/components/hover), we are able to add a nice scrim over the information card with additional actions the user can take.\n\n<ExamplesExample file=\"v-overlay/misc-advanced\" />",
    "display_content": "## v-examples - Advanced\n\nUsing the [v-hover](/components/hover), we are able to add a nice scrim over the information card with additional actions the user can take.\n\n<ExamplesExample file=\"v-overlay/misc-advanced\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Advanced",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001047",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001048",
    "text": "Component: v-examples\nSection: Loader\nType: documentation\n\n## v-examples - Loader\n\nUsing the `v-overlay` as a background, add a progress component to easily create a custom loader.\n\n<ExamplesExample file=\"v-overlay/misc-loader\" />",
    "display_content": "## v-examples - Loader\n\nUsing the `v-overlay` as a background, add a progress component to easily create a custom loader.\n\n<ExamplesExample file=\"v-overlay/misc-loader\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Loader",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001048",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001049",
    "text": "Component: v-examples\nSection: Connected Playground\nType: code_example\n\n## v-examples - Connected Playground\n\n```vue\n<template>\n  <div>\n    <v-row>\n      <v-col class=\"d-flex flex-column align-center\" cols=\"12\">\n        <code>{{ code }}</code>\n\n        <v-tooltip\n          :location=\"location\"\n          :origin=\"origin\"\n          no-click-animation\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn v-bind=\"props\" class=\"my-12\" text=\"Hover Me\"></v-btn>\n          </template>\n\n          <div>Overlay content</div>\n        </v-tooltip>\n      </v-col>\n\n      <v-col>\n        <v-radio-group v-model=\"locationSide\" label=\"Location side\">\n          <v-radio label=\"top\" value=\"top\"></v-radio>\n          <v-radio label=\"end\" value=\"end\"></v-radio>\n          <v-radio label=\"bottom\" value=\"bottom\"></v-radio>\n          <v-radio label=\"start\" value=\"start\"></v-radio>\n        </v-radio-group>\n      </v-col>\n\n      <v-col>\n        <v-radio-group v-model=\"locationAlign\" label=\"Location alignment\">\n          <v-radio :disabled=\"locationSide === 'top' || locationSide === 'bottom'\" label=\"top\" value=\"top\"></v-radio>\n          <v-radio :disabled=\"!(locationSide === 'top' || locationSide === 'bottom')\" label=\"start\" value=\"start\"></v-radio>\n          <v-radio label=\"center\" value=\"center\"></v-radio>\n          <v-radio :disabled=\"!(locationSide === 'top' || locationSide === 'bottom')\" label=\"end\" value=\"end\"></v-radio>\n          <v-radio :disabled=\"locationSide === 'top' || locationSide === 'bottom'\" label=\"bottom\" value=\"bottom\"></v-radio>\n        </v-radio-group>\n      </v-col>\n\n      <v-col>\n        <v-radio-group v-model=\"originSide\" label=\"Origin side\">\n          <v-radio label=\"auto\" value=\"auto\"></v-radio>\n          <v-radio label=\"overlap\" value=\"overlap\"></v-radio>\n          <v-radio label=\"top\" value=\"top\"></v-radio>\n          <v-radio label=\"end\" value=\"end\"></v-radio>\n          <v-radio label=\"bottom\" value=\"bottom\"></v-radio>\n          <v-radio label=\"start\" value=\"start\"></v-radio>\n        </v-radio-group>\n      </v-col>\n\n      <v-col>\n        <v-radio-group v-model=\"originAlign\" label=\"Origin alignment\">\n          <v-radio :disabled=\"originDisabled || originSide === 'top' || originSide === 'bottom'\" label=\"top\" value=\"top\"></v-radio>\n          <v-radio :disabled=\"originDisabled || !(originSide === 'top' || originSide === 'bottom')\" label=\"start\" value=\"start\"></v-radio>\n          <v-radio :disabled=\"originDisabled\" label=\"center\" value=\"center\"></v-radio>\n          <v-radio :disabled=\"originDisabled || !(originSide === 'top' || originSide === 'bottom')\" label=\"end\" value=\"end\"></v-radio>\n          <v-radio :disabled=\"originDisabled || originSide === 'top' || originSide === 'bottom'\" label=\"bottom\" value=\"bottom\"></v-radio>\n        </v-radio-group>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script setup>\n  import { computed, ref, watch } from 'vue'\n\n  const locationSide = ref('top')\n  const locationAlign = ref('center')\n  const originSide = ref('auto')\n  const originAlign = ref('')\n\n  const location = computed(() => {\n    return `${locationSide.value} ${locationAlign.value}`\n  })\n  const origin = computed(() => {\n    return originDisabled.value ? originSide.value : `${originSide.value} ${originAlign.value}`\n  })\n  const code = computed(() => {\n    return `<v-tooltip location=\"${location.value}\" origin=\"${origin.value}\" />`\n  })\n  const originDisabled = computed(() => {\n    return ['auto', 'overlap'].includes(originSide.value)\n  })\n\n  watch(locationSide, val => {\n    if (['top', 'bottom'].includes(val)) {\n      locationAlign.value = {\n        top: 'start',\n        bottom: 'end',\n      }[locationAlign.value] || locationAlign.value\n    } else {\n      locationAlign.value = {\n        start: 'top',\n        end: 'bottom',\n      }[locationAlign.value] || locationAlign.value\n    }\n  })\n  watch(originDisabled, val => {\n    if (!val && !originAlign.value) {\n      originAlign.value = 'center'\n    }\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Connected Playground\n\n```vue\n<template>\n  <div>\n    <v-row>\n      <v-col class=\"d-flex flex-column align-center\" cols=\"12\">\n        <code>{{ code }}</code>\n\n        <v-tooltip\n          :location=\"location\"\n          :origin=\"origin\"\n          no-click-animation\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn v-bind=\"props\" class=\"my-12\" text=\"Hover Me\"></v-btn>\n          </template>\n\n          <div>Overlay content</div>\n        </v-tooltip>\n      </v-col>\n\n      <v-col>\n        <v-radio-group v-model=\"locationSide\" label=\"Location side\">\n          <v-radio label=\"top\" value=\"top\"></v-radio>\n          <v-radio label=\"end\" value=\"end\"></v-radio>\n          <v-radio label=\"bottom\" value=\"bottom\"></v-radio>\n          <v-radio label=\"start\" value=\"start\"></v-radio>\n        </v-radio-group>\n      </v-col>\n\n      <v-col>\n        <v-radio-group v-model=\"locationAlign\" label=\"Location alignment\">\n          <v-radio :disabled=\"locationSide === 'top' || locationSide === 'bottom'\" label=\"top\" value=\"top\"></v-radio>\n          <v-radio :disabled=\"!(locationSide === 'top' || locationSide === 'bottom')\" label=\"start\" value=\"start\"></v-radio>\n          <v-radio label=\"center\" value=\"center\"></v-radio>\n          <v-radio :disabled=\"!(locationSide === 'top' || locationSide === 'bottom')\" label=\"end\" value=\"end\"></v-radio>\n          <v-radio :disabled=\"locationSide === 'top' || locationSide === 'bottom'\" label=\"bottom\" value=\"bottom\"></v-radio>\n        </v-radio-group>\n      </v-col>\n\n      <v-col>\n        <v-radio-group v-model=\"originSide\" label=\"Origin side\">\n          <v-radio label=\"auto\" value=\"auto\"></v-radio>\n          <v-radio label=\"overlap\" value=\"overlap\"></v-radio>\n          <v-radio label=\"top\" value=\"top\"></v-radio>\n          <v-radio label=\"end\" value=\"end\"></v-radio>\n          <v-radio label=\"bottom\" value=\"bottom\"></v-radio>\n          <v-radio label=\"start\" value=\"start\"></v-radio>\n        </v-radio-group>\n      </v-col>\n\n      <v-col>\n        <v-radio-group v-model=\"originAlign\" label=\"Origin alignment\">\n          <v-radio :disabled=\"originDisabled || originSide === 'top' || originSide === 'bottom'\" label=\"top\" value=\"top\"></v-radio>\n          <v-radio :disabled=\"originDisabled || !(originSide === 'top' || originSide === 'bottom')\" label=\"start\" value=\"start\"></v-radio>\n          <v-radio :disabled=\"originDisabled\" label=\"center\" value=\"center\"></v-radio>\n          <v-radio :disabled=\"originDisabled || !(originSide === 'top' || originSide === 'bottom')\" label=\"end\" value=\"end\"></v-radio>\n          <v-radio :disabled=\"originDisabled || originSide === 'top' || originSide === 'bottom'\" label=\"bottom\" value=\"bottom\"></v-radio>\n        </v-radio-group>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script setup>\n  import { computed, ref, watch } from 'vue'\n\n  const locationSide = ref('top')\n  const locationAlign = ref('center')\n  const originSide = ref('auto')\n  const originAlign = ref('')\n\n  const location = computed(() => {\n    return `${locationSide.value} ${locationAlign.value}`\n  })\n  const origin = computed(() => {\n    return originDisabled.value ? originSide.value : `${originSide.value} ${originAlign.value}`\n  })\n  const code = computed(() => {\n    return `<v-tooltip location=\"${location.value}\" origin=\"${origin.value}\" />`\n  })\n  const originDisabled = computed(() => {\n    return ['auto', 'overlap'].includes(originSide.value)\n  })\n\n  watch(locationSide, val => {\n    if (['top', 'bottom'].includes(val)) {\n      locationAlign.value = {\n        top: 'start',\n        bottom: 'end',\n      }[locationAlign.value] || locationAlign.value\n    } else {\n      locationAlign.value = {\n        start: 'top',\n        end: 'bottom',\n      }[locationAlign.value] || locationAlign.value\n    }\n  })\n  watch(originDisabled, val => {\n    if (!val && !originAlign.value) {\n      originAlign.value = 'center'\n    }\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Connected Playground",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001049",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001050",
    "text": "Component: v-examples\nSection: Scroll Block\nType: code_example\n\n## v-examples - Scroll Block\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-btn>\n      block\n\n      <v-overlay\n        activator=\"parent\"\n        location-strategy=\"connected\"\n        scroll-strategy=\"block\"\n      >\n        <v-card class=\"pa-2\">\n          Hello!\n        </v-card>\n      </v-overlay>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Scroll Block\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-btn>\n      block\n\n      <v-overlay\n        activator=\"parent\"\n        location-strategy=\"connected\"\n        scroll-strategy=\"block\"\n      >\n        <v-card class=\"pa-2\">\n          Hello!\n        </v-card>\n      </v-overlay>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Scroll Block",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001050",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001051",
    "text": "Component: v-examples\nSection: Scroll Close\nType: code_example\n\n## v-examples - Scroll Close\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-btn>\n      Close\n\n      <v-overlay\n        activator=\"parent\"\n        location-strategy=\"connected\"\n        scroll-strategy=\"close\"\n      >\n        <v-card class=\"pa-2\">\n          Hello!\n        </v-card>\n      </v-overlay>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Scroll Close\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-btn>\n      Close\n\n      <v-overlay\n        activator=\"parent\"\n        location-strategy=\"connected\"\n        scroll-strategy=\"close\"\n      >\n        <v-card class=\"pa-2\">\n          Hello!\n        </v-card>\n      </v-overlay>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Scroll Close",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001051",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001052",
    "text": "Component: v-examples\nSection: Scroll None\nType: code_example\n\n## v-examples - Scroll None\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-btn>\n      None\n\n      <v-overlay\n        activator=\"parent\"\n        location-strategy=\"connected\"\n        scroll-strategy=\"none\"\n      >\n        <v-card class=\"pa-2\">\n          Hello!\n        </v-card>\n      </v-overlay>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Scroll None\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-btn>\n      None\n\n      <v-overlay\n        activator=\"parent\"\n        location-strategy=\"connected\"\n        scroll-strategy=\"none\"\n      >\n        <v-card class=\"pa-2\">\n          Hello!\n        </v-card>\n      </v-overlay>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Scroll None",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001052",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001053",
    "text": "Component: v-examples\nSection: Scroll Reposition\nType: code_example\n\n## v-examples - Scroll Reposition\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-btn>\n      Reposition\n\n      <v-overlay\n        activator=\"parent\"\n        location-strategy=\"connected\"\n        scroll-strategy=\"reposition\"\n      >\n        <v-card class=\"pa-2\">\n          Hello!\n        </v-card>\n      </v-overlay>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Scroll Reposition\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-btn>\n      Reposition\n\n      <v-overlay\n        activator=\"parent\"\n        location-strategy=\"connected\"\n        scroll-strategy=\"reposition\"\n      >\n        <v-card class=\"pa-2\">\n          Hello!\n        </v-card>\n      </v-overlay>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Scroll Reposition",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001053",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001054",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      color=\"error\"\n      @click=\"overlay = !overlay\"\n    >\n      Show Overlay\n    </v-btn>\n\n    <v-overlay v-model=\"overlay\"></v-overlay>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      overlay: false,\n    }),\n\n    watch: {\n      overlay (val) {\n        val && setTimeout(() => {\n          this.overlay = false\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      color=\"error\"\n      @click=\"overlay = !overlay\"\n    >\n      Show Overlay\n    </v-btn>\n\n    <v-overlay v-model=\"overlay\"></v-overlay>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      overlay: false,\n    }),\n\n    watch: {\n      overlay (val) {\n        val && setTimeout(() => {\n          this.overlay = false\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001054",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001055",
    "text": "Component: v-examples\nSection: Misc Advanced\nType: code_example\n\n## v-examples - Misc Advanced\n\n```vue\n<template>\n  <div>\n    <v-hover v-slot=\"{ isHovering, props }\">\n      <v-card\n        class=\"mx-auto\"\n        max-width=\"344\"\n        v-bind=\"props\"\n      >\n        <v-img src=\"https://cdn.vuetifyjs.com/images/cards/forest-art.jpg\"></v-img>\n\n        <v-card-text>\n          <h2 class=\"text-h6 text-primary\">\n            Magento Forests\n          </h2>\n          Travel to the best outdoor experience on planet Earth. A vacation you will never forget!\n        </v-card-text>\n\n        <v-card-title>\n          <v-rating\n            :model-value=\"4\"\n            class=\"me-2\"\n            color=\"orange\"\n            density=\"compact\"\n            hover\n          ></v-rating>\n          <span class=\"text-primary text-subtitle-2\">64 Reviews</span>\n        </v-card-title>\n\n        <v-overlay\n          :model-value=\"!!isHovering\"\n          class=\"align-center justify-center\"\n          scrim=\"#036358\"\n          contained\n        >\n          <v-btn variant=\"flat\">See more info</v-btn>\n        </v-overlay>\n      </v-card>\n    </v-hover>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Advanced\n\n```vue\n<template>\n  <div>\n    <v-hover v-slot=\"{ isHovering, props }\">\n      <v-card\n        class=\"mx-auto\"\n        max-width=\"344\"\n        v-bind=\"props\"\n      >\n        <v-img src=\"https://cdn.vuetifyjs.com/images/cards/forest-art.jpg\"></v-img>\n\n        <v-card-text>\n          <h2 class=\"text-h6 text-primary\">\n            Magento Forests\n          </h2>\n          Travel to the best outdoor experience on planet Earth. A vacation you will never forget!\n        </v-card-text>\n\n        <v-card-title>\n          <v-rating\n            :model-value=\"4\"\n            class=\"me-2\"\n            color=\"orange\"\n            density=\"compact\"\n            hover\n          ></v-rating>\n          <span class=\"text-primary text-subtitle-2\">64 Reviews</span>\n        </v-card-title>\n\n        <v-overlay\n          :model-value=\"!!isHovering\"\n          class=\"align-center justify-center\"\n          scrim=\"#036358\"\n          contained\n        >\n          <v-btn variant=\"flat\">See more info</v-btn>\n        </v-overlay>\n      </v-card>\n    </v-hover>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Advanced",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001055",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001056",
    "text": "Component: v-examples\nSection: Misc Loader\nType: code_example\n\n## v-examples - Misc Loader\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      append-icon=\"mdi-open-in-new\"\n      color=\"deep-purple-accent-4\"\n      @click=\"overlay = !overlay\"\n    >\n      Launch Application\n    </v-btn>\n\n    <v-overlay\n      :model-value=\"overlay\"\n      class=\"align-center justify-center\"\n    >\n      <v-progress-circular\n        color=\"primary\"\n        size=\"64\"\n        indeterminate\n      ></v-progress-circular>\n    </v-overlay>\n  </div>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const overlay = ref(false)\n  watch(overlay, val => {\n    val && setTimeout(() => {\n      overlay.value = false\n    }, 3000)\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      overlay: false,\n    }),\n\n    watch: {\n      overlay (val) {\n        val && setTimeout(() => {\n          this.overlay = false\n        }, 3000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Loader\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      append-icon=\"mdi-open-in-new\"\n      color=\"deep-purple-accent-4\"\n      @click=\"overlay = !overlay\"\n    >\n      Launch Application\n    </v-btn>\n\n    <v-overlay\n      :model-value=\"overlay\"\n      class=\"align-center justify-center\"\n    >\n      <v-progress-circular\n        color=\"primary\"\n        size=\"64\"\n        indeterminate\n      ></v-progress-circular>\n    </v-overlay>\n  </div>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const overlay = ref(false)\n  watch(overlay, val => {\n    val && setTimeout(() => {\n      overlay.value = false\n    }, 3000)\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      overlay: false,\n    }),\n\n    watch: {\n      overlay (val) {\n        val && setTimeout(() => {\n          this.overlay = false\n        }, 3000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Loader",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001056",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001057",
    "text": "Component: v-examples\nSection: Prop Contained\nType: code_example\n\n## v-examples - Prop Contained\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    class=\"ma-4\"\n    justify=\"center\"\n  >\n    <v-card\n      height=\"300\"\n      width=\"250\"\n    >\n      <v-row justify=\"center\">\n        <v-btn\n          class=\"mt-12\"\n          color=\"success\"\n          @click=\"overlay = !overlay\"\n        >\n          Show Overlay\n        </v-btn>\n\n        <v-overlay\n          v-model=\"overlay\"\n          class=\"align-center justify-center\"\n          contained\n        >\n          <v-btn\n            color=\"success\"\n            @click=\"overlay = false\"\n          >\n            Hide Overlay\n          </v-btn>\n        </v-overlay>\n      </v-row>\n    </v-card>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const overlay = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      overlay: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Contained\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    class=\"ma-4\"\n    justify=\"center\"\n  >\n    <v-card\n      height=\"300\"\n      width=\"250\"\n    >\n      <v-row justify=\"center\">\n        <v-btn\n          class=\"mt-12\"\n          color=\"success\"\n          @click=\"overlay = !overlay\"\n        >\n          Show Overlay\n        </v-btn>\n\n        <v-overlay\n          v-model=\"overlay\"\n          class=\"align-center justify-center\"\n          contained\n        >\n          <v-btn\n            color=\"success\"\n            @click=\"overlay = false\"\n          >\n            Hide Overlay\n          </v-btn>\n        </v-overlay>\n      </v-row>\n    </v-card>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const overlay = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      overlay: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Contained",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001057",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001058",
    "text": "Component: v-pagination\nType: component_overview\n\n# v-pagination\n\nThe `v-pagination` component is used to separate long sets of data so that it is easier for a user to consume information.",
    "display_content": "# v-pagination\n\nThe `v-pagination` component is used to separate long sets of data so that it is easier for a user to consume information.",
    "metadata": {
      "component": "v-pagination",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001058",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001059",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nPagination by default displays the number of pages based on the set **length** prop, with **prev** and **next** buttons surrounding to help you navigate. Depending on the length provided, the pagination component will automatically scale. To maintain the current page, simply supply a **v-model** attribute.",
    "display_content": "# v-usage\n\nPagination by default displays the number of pages based on the set **length** prop, with **prev** and **next** buttons surrounding to help you navigate. Depending on the length provided, the pagination component will automatically scale. To maintain the current page, simply supply a **v-model** attribute.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001059",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001060",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-pagination](/api/v-pagination/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-pagination](/api/v-pagination/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001060",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001061",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe **rounded** prop allows you to render pagination buttons with alternative styles.\n\nAvailable sections: Rounded, Disabled, Icons, Length, Total visible, Prop Disabled, Prop Icons, Prop Length, Prop Rounded, Prop Total Visible, Usage",
    "display_content": "# v-examples\n\nThe **rounded** prop allows you to render pagination buttons with alternative styles.\n\nAvailable sections: Rounded, Disabled, Icons, Length, Total visible, Prop Disabled, Prop Icons, Prop Length, Prop Rounded, Prop Total Visible, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001061",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001062",
    "text": "Component: v-examples\nSection: Rounded\nType: documentation\n\n## v-examples - Rounded\n\nThe **rounded** prop allows you to render pagination buttons with alternative styles.\n\n<ExamplesExample file=\"v-pagination/prop-rounded\" />",
    "display_content": "## v-examples - Rounded\n\nThe **rounded** prop allows you to render pagination buttons with alternative styles.\n\n<ExamplesExample file=\"v-pagination/prop-rounded\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Rounded",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001062",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001063",
    "text": "Component: v-examples\nSection: Disabled\nType: documentation\n\n## v-examples - Disabled\n\nPagination items can be manually deactivated using the **disabled** prop.\n\n<ExamplesExample file=\"v-pagination/prop-disabled\" />",
    "display_content": "## v-examples - Disabled\n\nPagination items can be manually deactivated using the **disabled** prop.\n\n<ExamplesExample file=\"v-pagination/prop-disabled\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001063",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001064",
    "text": "Component: v-examples\nSection: Icons\nType: documentation\n\n## v-examples - Icons\n\nPrevious and next page icons can be customized with the **prev-icon** and **next-icon** props.\n\n<ExamplesExample file=\"v-pagination/prop-icons\" />",
    "display_content": "## v-examples - Icons\n\nPrevious and next page icons can be customized with the **prev-icon** and **next-icon** props.\n\n<ExamplesExample file=\"v-pagination/prop-icons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001064",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001065",
    "text": "Component: v-examples\nSection: Length\nType: documentation\n\n## v-examples - Length\n\nUsing the **length** prop you can set the length of `v-pagination`, if the number of page buttons exceeds the parent container, it will truncate the list.\n\n<ExamplesExample file=\"v-pagination/prop-length\" />",
    "display_content": "## v-examples - Length\n\nUsing the **length** prop you can set the length of `v-pagination`, if the number of page buttons exceeds the parent container, it will truncate the list.\n\n<ExamplesExample file=\"v-pagination/prop-length\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Length",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001065",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001066",
    "text": "Component: v-examples\nSection: Total visible\nType: documentation\n\n## v-examples - Total visible\n\nYou can also manually set the maximum number of visible page buttons with the **total-visible** prop.\n\n<ExamplesExample file=\"v-pagination/prop-total-visible\" />",
    "display_content": "## v-examples - Total visible\n\nYou can also manually set the maximum number of visible page buttons with the **total-visible** prop.\n\n<ExamplesExample file=\"v-pagination/prop-total-visible\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Total visible",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001066",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001067",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-pagination\n      :length=\"3\"\n      disabled\n    ></v-pagination>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-pagination\n      :length=\"3\"\n      disabled\n    ></v-pagination>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001067",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001068",
    "text": "Component: v-examples\nSection: Prop Icons\nType: code_example\n\n## v-examples - Prop Icons\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-pagination\n      v-model=\"page\"\n      :length=\"4\"\n      next-icon=\"mdi-menu-right\"\n      prev-icon=\"mdi-menu-left\"\n    ></v-pagination>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        page: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Icons\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-pagination\n      v-model=\"page\"\n      :length=\"4\"\n      next-icon=\"mdi-menu-right\"\n      prev-icon=\"mdi-menu-left\"\n    ></v-pagination>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        page: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001068",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001069",
    "text": "Component: v-examples\nSection: Prop Length\nType: code_example\n\n## v-examples - Prop Length\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-container>\n      <v-row justify=\"center\">\n        <v-col cols=\"8\">\n          <v-container class=\"max-width\">\n            <v-pagination\n              v-model=\"page\"\n              :length=\"15\"\n              class=\"my-4\"\n            ></v-pagination>\n          </v-container>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        page: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Length\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-container>\n      <v-row justify=\"center\">\n        <v-col cols=\"8\">\n          <v-container class=\"max-width\">\n            <v-pagination\n              v-model=\"page\"\n              :length=\"15\"\n              class=\"my-4\"\n            ></v-pagination>\n          </v-container>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        page: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Length",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001069",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001070",
    "text": "Component: v-examples\nSection: Prop Rounded\nType: code_example\n\n## v-examples - Prop Rounded\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-pagination\n      v-model=\"page\"\n      :length=\"4\"\n      rounded=\"circle\"\n    ></v-pagination>\n\n    <v-pagination\n      v-model=\"page\"\n      :length=\"4\"\n      rounded=\"0\"\n    ></v-pagination>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        page: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Rounded\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-pagination\n      v-model=\"page\"\n      :length=\"4\"\n      rounded=\"circle\"\n    ></v-pagination>\n\n    <v-pagination\n      v-model=\"page\"\n      :length=\"4\"\n      rounded=\"0\"\n    ></v-pagination>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        page: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rounded",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001070",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001071",
    "text": "Component: v-examples\nSection: Prop Total Visible\nType: code_example\n\n## v-examples - Prop Total Visible\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-pagination\n      v-model=\"page\"\n      :length=\"15\"\n      :total-visible=\"7\"\n    ></v-pagination>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        page: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Total Visible\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-pagination\n      v-model=\"page\"\n      :length=\"15\"\n      :total-visible=\"7\"\n    ></v-pagination>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const page = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        page: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Total Visible",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001071",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001072",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-pagination\n        v-bind=\"props\"\n      ></v-pagination>\n    </div>\n\n    <template v-slot:configuration>\n      <v-slider v-model=\"length\" label=\"Length\" max=\"20\" min=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-pagination'\n  const model = ref('default')\n  const length = ref(4)\n  const options = []\n\n  const props = computed(() => {\n    return {\n      length: length.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-pagination${propsToString(props.value)}>${slots.value}</v-pagination>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-pagination\n        v-bind=\"props\"\n      ></v-pagination>\n    </div>\n\n    <template v-slot:configuration>\n      <v-slider v-model=\"length\" label=\"Length\" max=\"20\" min=\"1\"></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-pagination'\n  const model = ref('default')\n  const length = ref(4)\n  const options = []\n\n  const props = computed(() => {\n    return {\n      length: length.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-pagination${propsToString(props.value)}>${slots.value}</v-pagination>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001072",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001073",
    "text": "Component: v-parallax\nType: component_overview\n\n# v-parallax\n\nThe `v-parallax` component creates a 3d effect that makes an image appear to scroll slower than the window.",
    "display_content": "# v-parallax\n\nThe `v-parallax` component creates a 3d effect that makes an image appear to scroll slower than the window.",
    "metadata": {
      "component": "v-parallax",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001073",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001074",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nA parallax causes a shift in a background image when the user scrolls the page.",
    "display_content": "# v-usage\n\nA parallax causes a shift in a background image when the user scrolls the page.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001074",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001075",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-parallax](/api/v-parallax/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-parallax](/api/v-parallax/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001075",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001076",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can also place any content inside of the parallax. This allows you to use the parallax as a hero image.\n\nAvailable sections: Content, Welcome, Custom height, Misc Content, Misc Custom Height, Misc Welcome, Usage",
    "display_content": "# v-examples\n\nYou can also place any content inside of the parallax. This allows you to use the parallax as a hero image.\n\nAvailable sections: Content, Welcome, Custom height, Misc Content, Misc Custom Height, Misc Welcome, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001076",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001077",
    "text": "Component: v-examples\nSection: Content\nType: documentation\n\n## v-examples - Content\n\nYou can also place any content inside of the parallax. This allows you to use the parallax as a hero image.\n\n<ExamplesExample file=\"v-parallax/misc-content\" />",
    "display_content": "## v-examples - Content\n\nYou can also place any content inside of the parallax. This allows you to use the parallax as a hero image.\n\n<ExamplesExample file=\"v-parallax/misc-content\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Content",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001077",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001078",
    "text": "Component: v-examples\nSection: Welcome\nType: documentation\n\n## v-examples - Welcome\n\nYou can use it as a welcome section or as a portfolio hero section.\n\n<ExamplesExample file=\"v-parallax/misc-welcome\" />",
    "display_content": "## v-examples - Welcome\n\nYou can use it as a welcome section or as a portfolio hero section.\n\n<ExamplesExample file=\"v-parallax/misc-welcome\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Welcome",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001078",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001079",
    "text": "Component: v-examples\nSection: Custom height\nType: documentation\n\n## v-examples - Custom height\n\nYou can specify a custom height on a parallax. Keep in mind this can break the parallax if your image is not sized properly\n\n<ExamplesExample file=\"v-parallax/misc-custom-height\" />",
    "display_content": "## v-examples - Custom height\n\nYou can specify a custom height on a parallax. Keep in mind this can break the parallax if your image is not sized properly\n\n<ExamplesExample file=\"v-parallax/misc-custom-height\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom height",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001079",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001080",
    "text": "Component: v-examples\nSection: Misc Content\nType: code_example\n\n## v-examples - Misc Content\n\n```vue\n<template>\n  <v-parallax\n    src=\"https://cdn.vuetifyjs.com/images/backgrounds/vbanner.jpg\"\n  >\n    <div class=\"d-flex flex-column fill-height justify-center align-center text-white\">\n      <h1 class=\"text-h4 font-weight-thin mb-4\">\n        Vuetify\n      </h1>\n      <h4 class=\"subheading\">\n        Build your application today!\n      </h4>\n    </div>\n  </v-parallax>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Content\n\n```vue\n<template>\n  <v-parallax\n    src=\"https://cdn.vuetifyjs.com/images/backgrounds/vbanner.jpg\"\n  >\n    <div class=\"d-flex flex-column fill-height justify-center align-center text-white\">\n      <h1 class=\"text-h4 font-weight-thin mb-4\">\n        Vuetify\n      </h1>\n      <h4 class=\"subheading\">\n        Build your application today!\n      </h4>\n    </div>\n  </v-parallax>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Content",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001080",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001081",
    "text": "Component: v-examples\nSection: Misc Custom Height\nType: code_example\n\n## v-examples - Misc Custom Height\n\n```vue\n<template>\n  <v-parallax\n    height=\"300\"\n    src=\"https://cdn.vuetifyjs.com/images/parallax/material2.jpg\"\n  ></v-parallax>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Custom Height\n\n```vue\n<template>\n  <v-parallax\n    height=\"300\"\n    src=\"https://cdn.vuetifyjs.com/images/parallax/material2.jpg\"\n  ></v-parallax>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Custom Height",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001081",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001082",
    "text": "Component: v-examples\nSection: Misc Welcome\nType: code_example\n\n## v-examples - Misc Welcome\n\n```vue\n<template>\n  <v-parallax src=\"https://cdn.vuetifyjs.com/images/backgrounds/vbanner.jpg\">\n    <v-container class=\"fill-height\">\n      <v-row\n        class=\"justify-center align-center flex-column-reverse flex-md-row\"\n      >\n        <v-col cols=\"12\" md=\"6\">\n          <h1 class=\"text-h1 mb-8\">John Doe</h1>\n          <h3 class=\"text-h3 mb-8 font-weight-thin\">Web Developer</h3>\n          <v-btn class=\"elevation-4 rounded-xl mb-4\" color=\"primary\">\n            Contact Me\n          </v-btn>\n        </v-col>\n        <v-col class=\"text-center\" cols=\"12\" md=\"6\">\n          <v-avatar :size=\"300\" class=\"elevation-12 mx-auto mb-8\">\n            <v-img src=\"https://randomuser.me/api/portraits/men/78.jpg\"></v-img>\n          </v-avatar>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-parallax>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Welcome\n\n```vue\n<template>\n  <v-parallax src=\"https://cdn.vuetifyjs.com/images/backgrounds/vbanner.jpg\">\n    <v-container class=\"fill-height\">\n      <v-row\n        class=\"justify-center align-center flex-column-reverse flex-md-row\"\n      >\n        <v-col cols=\"12\" md=\"6\">\n          <h1 class=\"text-h1 mb-8\">John Doe</h1>\n          <h3 class=\"text-h3 mb-8 font-weight-thin\">Web Developer</h3>\n          <v-btn class=\"elevation-4 rounded-xl mb-4\" color=\"primary\">\n            Contact Me\n          </v-btn>\n        </v-col>\n        <v-col class=\"text-center\" cols=\"12\" md=\"6\">\n          <v-avatar :size=\"300\" class=\"elevation-12 mx-auto mb-8\">\n            <v-img src=\"https://randomuser.me/api/portraits/men/78.jpg\"></v-img>\n          </v-avatar>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-parallax>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Welcome",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001082",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001083",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-parallax src=\"https://cdn.vuetifyjs.com/images/parallax/material.jpg\"></v-parallax>\n</template>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-parallax src=\"https://cdn.vuetifyjs.com/images/parallax/material.jpg\"></v-parallax>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001083",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001084",
    "text": "Component: v-progress-circular\nType: component_overview\n\n# v-progress-circular\n\nThe `v-progress-circular` component is used to convey data circularly to users. It also can be put into an indeterminate state to portray loading.",
    "display_content": "# v-progress-circular\n\nThe `v-progress-circular` component is used to convey data circularly to users. It also can be put into an indeterminate state to portray loading.",
    "metadata": {
      "component": "v-progress-circular",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001084",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001085",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nIn its simplest form, v-progress-circular displays a circular progress bar. Use the value prop to control the progress.",
    "display_content": "# v-usage\n\nIn its simplest form, v-progress-circular displays a circular progress bar. Use the value prop to control the progress.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001085",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001086",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-progress-circular](/api/v-progress-circular/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-progress-circular](/api/v-progress-circular/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001086",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001087",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nAlternate colors can be applied to `v-progress-circular` using the `color` prop.\n\nAvailable sections: Color, Indeterminate, Rotate, Size and Width, Default, Prop Color, Prop Indeterminate, Prop Rotate, Prop Size And Width, Prop Slot Default, Usage",
    "display_content": "# v-examples\n\nAlternate colors can be applied to `v-progress-circular` using the `color` prop.\n\nAvailable sections: Color, Indeterminate, Rotate, Size and Width, Default, Prop Color, Prop Indeterminate, Prop Rotate, Prop Size And Width, Prop Slot Default, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001087",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001088",
    "text": "Component: v-examples\nSection: Color\nType: documentation\n\n## v-examples - Color\n\nAlternate colors can be applied to `v-progress-circular` using the `color` prop.\n\n<ExamplesExample file=\"v-progress-circular/prop-color\" />",
    "display_content": "## v-examples - Color\n\nAlternate colors can be applied to `v-progress-circular` using the `color` prop.\n\n<ExamplesExample file=\"v-progress-circular/prop-color\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001088",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001089",
    "text": "Component: v-examples\nSection: Indeterminate\nType: documentation\n\n## v-examples - Indeterminate\n\nUsing the `indeterminate` prop, a `v-progress-circular` continues to animate indefinitely.\n\n<ExamplesExample file=\"v-progress-circular/prop-indeterminate\" />",
    "display_content": "## v-examples - Indeterminate\n\nUsing the `indeterminate` prop, a `v-progress-circular` continues to animate indefinitely.\n\n<ExamplesExample file=\"v-progress-circular/prop-indeterminate\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Indeterminate",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001089",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001090",
    "text": "Component: v-examples\nSection: Rotate\nType: documentation\n\n## v-examples - Rotate\n\nThe `rotate` prop gives you the ability to customize the `v-progress-circular`'s origin.\n\n<ExamplesExample file=\"v-progress-circular/prop-rotate\" />",
    "display_content": "## v-examples - Rotate\n\nThe `rotate` prop gives you the ability to customize the `v-progress-circular`'s origin.\n\n<ExamplesExample file=\"v-progress-circular/prop-rotate\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Rotate",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001090",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001091",
    "text": "Component: v-examples\nSection: Size and Width\nType: documentation\n\n## v-examples - Size and Width\n\nThe `size` and `width` props allow you to easily alter the size and width of the `v-progress-circular` component.\n\n<ExamplesExample file=\"v-progress-circular/prop-size-and-width\" />",
    "display_content": "## v-examples - Size and Width\n\nThe `size` and `width` props allow you to easily alter the size and width of the `v-progress-circular` component.\n\n<ExamplesExample file=\"v-progress-circular/prop-size-and-width\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Size and Width",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001091",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001092",
    "text": "Component: v-examples\nSection: Default\nType: documentation\n\n## v-examples - Default\n\n`default` slot can be used to replace the text inside the loader.\n\n<ExamplesExample file=\"v-progress-circular/prop-slot-default\" />",
    "display_content": "## v-examples - Default\n\n`default` slot can be used to replace the text inside the loader.\n\n<ExamplesExample file=\"v-progress-circular/prop-slot-default\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Default",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001092",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001093",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular\n      color=\"blue-grey\"\n      model-value=\"100\"\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"deep-orange-lighten-2\"\n      model-value=\"80\"\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"brown\"\n      model-value=\"60\"\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"lime\"\n      model-value=\"40\"\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"indigo-darken-2\"\n      model-value=\"20\"\n    ></v-progress-circular>\n  </div>\n</template>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular\n      color=\"blue-grey\"\n      model-value=\"100\"\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"deep-orange-lighten-2\"\n      model-value=\"80\"\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"brown\"\n      model-value=\"60\"\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"lime\"\n      model-value=\"40\"\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"indigo-darken-2\"\n      model-value=\"20\"\n    ></v-progress-circular>\n  </div>\n</template>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001093",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001094",
    "text": "Component: v-examples\nSection: Prop Indeterminate\nType: code_example\n\n## v-examples - Prop Indeterminate\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular\n      color=\"primary\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"red\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"purple\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"green\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"amber\"\n      indeterminate\n    ></v-progress-circular>\n  </div>\n</template>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "display_content": "## v-examples - Prop Indeterminate\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular\n      color=\"primary\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"red\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"purple\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"green\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      color=\"amber\"\n      indeterminate\n    ></v-progress-circular>\n  </div>\n</template>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Indeterminate",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001094",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001095",
    "text": "Component: v-examples\nSection: Prop Rotate\nType: code_example\n\n## v-examples - Prop Rotate\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular\n      :model-value=\"value\"\n      :rotate=\"360\"\n      :size=\"100\"\n      :width=\"15\"\n      color=\"teal\"\n    >\n      {{ value }}\n    </v-progress-circular>\n\n    <v-progress-circular\n      :model-value=\"value\"\n      :rotate=\"-90\"\n      :size=\"100\"\n      :width=\"15\"\n      color=\"primary\"\n    >\n      {{ value }}\n    </v-progress-circular>\n\n    <v-progress-circular\n      :model-value=\"value\"\n      :rotate=\"90\"\n      :size=\"100\"\n      :width=\"15\"\n      color=\"red\"\n    >\n      {{ value }}\n    </v-progress-circular>\n\n    <v-progress-circular\n      :model-value=\"value\"\n      :rotate=\"180\"\n      :size=\"100\"\n      :width=\"15\"\n      color=\"pink\"\n    >\n      {{ value }}\n    </v-progress-circular>\n  </div>\n</template>\n\n<script setup>\n  import { onBeforeUnmount, onMounted, ref } from 'vue'\n\n  const value = ref(0)\n\n  let interval = -1\n  onMounted(() => {\n    interval = setInterval(() => {\n      if (value.value === 100) {\n        return (value.value = 0)\n      }\n      value.value += 10\n    }, 1000)\n  })\n  onBeforeUnmount(() => {\n    clearInterval(interval)\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        interval: {},\n        value: 0,\n      }\n    },\n    beforeUnmount () {\n      clearInterval(this.interval)\n    },\n    mounted () {\n      this.interval = setInterval(() => {\n        if (this.value === 100) {\n          return (this.value = 0)\n        }\n        this.value += 10\n      }, 1000)\n    },\n  }\n</script>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "display_content": "## v-examples - Prop Rotate\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular\n      :model-value=\"value\"\n      :rotate=\"360\"\n      :size=\"100\"\n      :width=\"15\"\n      color=\"teal\"\n    >\n      {{ value }}\n    </v-progress-circular>\n\n    <v-progress-circular\n      :model-value=\"value\"\n      :rotate=\"-90\"\n      :size=\"100\"\n      :width=\"15\"\n      color=\"primary\"\n    >\n      {{ value }}\n    </v-progress-circular>\n\n    <v-progress-circular\n      :model-value=\"value\"\n      :rotate=\"90\"\n      :size=\"100\"\n      :width=\"15\"\n      color=\"red\"\n    >\n      {{ value }}\n    </v-progress-circular>\n\n    <v-progress-circular\n      :model-value=\"value\"\n      :rotate=\"180\"\n      :size=\"100\"\n      :width=\"15\"\n      color=\"pink\"\n    >\n      {{ value }}\n    </v-progress-circular>\n  </div>\n</template>\n\n<script setup>\n  import { onBeforeUnmount, onMounted, ref } from 'vue'\n\n  const value = ref(0)\n\n  let interval = -1\n  onMounted(() => {\n    interval = setInterval(() => {\n      if (value.value === 100) {\n        return (value.value = 0)\n      }\n      value.value += 10\n    }, 1000)\n  })\n  onBeforeUnmount(() => {\n    clearInterval(interval)\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        interval: {},\n        value: 0,\n      }\n    },\n    beforeUnmount () {\n      clearInterval(this.interval)\n    },\n    mounted () {\n      this.interval = setInterval(() => {\n        if (this.value === 100) {\n          return (this.value = 0)\n        }\n        this.value += 10\n      }, 1000)\n    },\n  }\n</script>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rotate",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001095",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001096",
    "text": "Component: v-examples\nSection: Prop Size And Width\nType: code_example\n\n## v-examples - Prop Size And Width\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular\n      :size=\"50\"\n      color=\"primary\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      :width=\"3\"\n      color=\"red\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      :size=\"70\"\n      :width=\"7\"\n      color=\"purple\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      :width=\"3\"\n      color=\"green\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      :size=\"50\"\n      color=\"amber\"\n      indeterminate\n    ></v-progress-circular>\n  </div>\n</template>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "display_content": "## v-examples - Prop Size And Width\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular\n      :size=\"50\"\n      color=\"primary\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      :width=\"3\"\n      color=\"red\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      :size=\"70\"\n      :width=\"7\"\n      color=\"purple\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      :width=\"3\"\n      color=\"green\"\n      indeterminate\n    ></v-progress-circular>\n\n    <v-progress-circular\n      :size=\"50\"\n      color=\"amber\"\n      indeterminate\n    ></v-progress-circular>\n  </div>\n</template>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Size And Width",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001096",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001097",
    "text": "Component: v-examples\nSection: Prop Slot Default\nType: code_example\n\n## v-examples - Prop Slot Default\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular :model-value=\"value\" :rotate=\"360\" :size=\"100\" :width=\"15\" color=\"teal\">\n      <template v-slot:default> {{ value }} % </template>\n    </v-progress-circular>\n  </div>\n</template>\n\n<script setup>\n  import { onBeforeUnmount, onMounted, ref } from 'vue'\n\n  const value = ref(0)\n\n  let interval = -1\n  onMounted(() => {\n    interval = setInterval(() => {\n      if (value.value === 100) {\n        return (value.value = 0)\n      }\n      value.value += 10\n    }, 1000)\n  })\n  onBeforeUnmount(() => {\n    clearInterval(interval)\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        interval: -1,\n        value: 0,\n      }\n    },\n    mounted () {\n      this.interval = setInterval(() => {\n        if (this.value === 100) {\n          return (this.value = 0)\n        }\n        this.value += 10\n      }, 1000)\n    },\n    beforeUnmount () {\n      clearInterval(this.interval)\n    },\n  }\n</script>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "display_content": "## v-examples - Prop Slot Default\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-progress-circular :model-value=\"value\" :rotate=\"360\" :size=\"100\" :width=\"15\" color=\"teal\">\n      <template v-slot:default> {{ value }} % </template>\n    </v-progress-circular>\n  </div>\n</template>\n\n<script setup>\n  import { onBeforeUnmount, onMounted, ref } from 'vue'\n\n  const value = ref(0)\n\n  let interval = -1\n  onMounted(() => {\n    interval = setInterval(() => {\n      if (value.value === 100) {\n        return (value.value = 0)\n      }\n      value.value += 10\n    }, 1000)\n  })\n  onBeforeUnmount(() => {\n    clearInterval(interval)\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        interval: -1,\n        value: 0,\n      }\n    },\n    mounted () {\n      this.interval = setInterval(() => {\n        if (this.value === 100) {\n          return (this.value = 0)\n        }\n        this.value += 10\n      }, 1000)\n    },\n    beforeUnmount () {\n      clearInterval(this.interval)\n    },\n  }\n</script>\n\n<style scoped>\n.v-progress-circular {\n  margin: 1rem;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Slot Default",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001097",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001098",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-progress-circular v-bind=\"props\"></v-progress-circular>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"['primary', 'blue-lighten-3', 'error', 'dark-blue']\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-slider\n        v-model=\"size\"\n        label=\"Size\"\n        max=\"128\"\n        min=\"32\"\n        step=\"1\"\n      ></v-slider>\n\n      <v-slider\n        v-model=\"width\"\n        label=\"Width\"\n        max=\"12\"\n        min=\"4\"\n        step=\"1\"\n      ></v-slider>\n\n      <v-checkbox v-model=\"indeterminate\" label=\"Indeterminate\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-progress-circular'\n  const model = ref('default')\n  const color = ref()\n  const indeterminate = ref(false)\n  const size = ref()\n  const width = ref()\n  const options = []\n  const props = computed(() => {\n    return {\n      color: color.value || undefined,\n      indeterminate: indeterminate.value || undefined,\n      'model-value': !indeterminate.value ? '20' : undefined,\n      size: size.value !== 32 ? size.value : undefined,\n      width: width.value !== 4 ? width.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-progress-circular v-bind=\"props\"></v-progress-circular>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"['primary', 'blue-lighten-3', 'error', 'dark-blue']\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-slider\n        v-model=\"size\"\n        label=\"Size\"\n        max=\"128\"\n        min=\"32\"\n        step=\"1\"\n      ></v-slider>\n\n      <v-slider\n        v-model=\"width\"\n        label=\"Width\"\n        max=\"12\"\n        min=\"4\"\n        step=\"1\"\n      ></v-slider>\n\n      <v-checkbox v-model=\"indeterminate\" label=\"Indeterminate\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-progress-circular'\n  const model = ref('default')\n  const color = ref()\n  const indeterminate = ref(false)\n  const size = ref()\n  const width = ref()\n  const options = []\n  const props = computed(() => {\n    return {\n      color: color.value || undefined,\n      indeterminate: indeterminate.value || undefined,\n      'model-value': !indeterminate.value ? '20' : undefined,\n      size: size.value !== 32 ? size.value : undefined,\n      width: width.value !== 4 ? width.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001098",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001099",
    "text": "Component: v-progress-linear\nType: component_overview\n\n# v-progress-linear\n\nThe `v-progress-linear` component is used to convey data visually to users. It supports both indeterminate amounts, such as loading or processing, and finite amounts of progress (including separate buffer values).",
    "display_content": "# v-progress-linear\n\nThe `v-progress-linear` component is used to convey data visually to users. It supports both indeterminate amounts, such as loading or processing, and finite amounts of progress (including separate buffer values).",
    "metadata": {
      "component": "v-progress-linear",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001099",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001100",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nIn its simplest form, `v-progress-linear` displays a horizontal progress bar. Use the **value** prop to control the progress.",
    "display_content": "# v-usage\n\nIn its simplest form, `v-progress-linear` displays a horizontal progress bar. Use the **value** prop to control the progress.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001100",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001101",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-progress-linear](/api/v-progress-linear/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-progress-linear](/api/v-progress-linear/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001101",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001102",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe primary value is controlled by **v-model**, whereas the buffer is controlled by the **buffer-value** prop.\n\nAvailable sections: Buffering, Colors, Indeterminate, Reversed, Rounded, Stream, Striped, Default, Determinate, File loader, Toolbar loader, Buffer color and opacity, Misc Buffer Color, Misc Determinate, Misc File Loader, Misc Toolbar Loader, Prop Buffer Value, Prop Colors, Prop Indeterminate, Prop Query, Prop Reverse, Prop Rounded, Prop Stream, Prop Striped, Slot Default, Usage",
    "display_content": "# v-examples\n\nThe primary value is controlled by **v-model**, whereas the buffer is controlled by the **buffer-value** prop.\n\nAvailable sections: Buffering, Colors, Indeterminate, Reversed, Rounded, Stream, Striped, Default, Determinate, File loader, Toolbar loader, Buffer color and opacity, Misc Buffer Color, Misc Determinate, Misc File Loader, Misc Toolbar Loader, Prop Buffer Value, Prop Colors, Prop Indeterminate, Prop Query, Prop Reverse, Prop Rounded, Prop Stream, Prop Striped, Slot Default, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001102",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001103",
    "text": "Component: v-examples\nSection: Buffering\nType: documentation\n\n## v-examples - Buffering\n\nThe primary value is controlled by **v-model**, whereas the buffer is controlled by the **buffer-value** prop.\n\n<ExamplesExample file=\"v-progress-linear/prop-buffer-value\" />",
    "display_content": "## v-examples - Buffering\n\nThe primary value is controlled by **v-model**, whereas the buffer is controlled by the **buffer-value** prop.\n\n<ExamplesExample file=\"v-progress-linear/prop-buffer-value\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Buffering",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001103",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001104",
    "text": "Component: v-examples\nSection: Colors\nType: documentation\n\n## v-examples - Colors\n\nYou can set the colors of the progress bar using the props **color** and **bg-color**.\n\n<ExamplesExample file=\"v-progress-linear/prop-colors\" />",
    "display_content": "## v-examples - Colors\n\nYou can set the colors of the progress bar using the props **color** and **bg-color**.\n\n<ExamplesExample file=\"v-progress-linear/prop-colors\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001104",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001105",
    "text": "Component: v-examples\nSection: Indeterminate\nType: documentation\n\n## v-examples - Indeterminate\n\nUsing the **indeterminate** prop, `v-progress-linear` continuously animates.\n\n<ExamplesExample file=\"v-progress-linear/prop-indeterminate\" />",
    "display_content": "## v-examples - Indeterminate\n\nUsing the **indeterminate** prop, `v-progress-linear` continuously animates.\n\n<ExamplesExample file=\"v-progress-linear/prop-indeterminate\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Indeterminate",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001105",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001106",
    "text": "Component: v-examples\nSection: Reversed\nType: documentation\n\n## v-examples - Reversed\n\nDisplays reversed progress. The component also has RTL support, such that a progress bar in right-to-left mode with **reverse** prop enabled will display left-to-right.\n\n<ExamplesExample file=\"v-progress-linear/prop-reverse\" />",
    "display_content": "## v-examples - Reversed\n\nDisplays reversed progress. The component also has RTL support, such that a progress bar in right-to-left mode with **reverse** prop enabled will display left-to-right.\n\n<ExamplesExample file=\"v-progress-linear/prop-reverse\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Reversed",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001106",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001107",
    "text": "Component: v-examples\nSection: Rounded\nType: documentation\n\n## v-examples - Rounded\n\nThe **rounded** prop is used to apply a border radius to the `v-progress-linear` component.\n\n<ExamplesExample file=\"v-progress-linear/prop-rounded\" />\n\n::: info\n  Use the **rounded-bar** property to add a border-radius to the inner edges of value bar. By default, the value bar's border-radius is equal to the default _border-radius_ of your application unless a different value is provided by the **rounded** prop or SASS variable.\n:::",
    "display_content": "## v-examples - Rounded\n\nThe **rounded** prop is used to apply a border radius to the `v-progress-linear` component.\n\n<ExamplesExample file=\"v-progress-linear/prop-rounded\" />\n\n::: info\n  Use the **rounded-bar** property to add a border-radius to the inner edges of value bar. By default, the value bar's border-radius is equal to the default _border-radius_ of your application unless a different value is provided by the **rounded** prop or SASS variable.\n:::",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Rounded",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001107",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001108",
    "text": "Component: v-examples\nSection: Stream\nType: documentation\n\n## v-examples - Stream\n\nThe **stream** property works with **buffer-value** to convey to the user that there is some action taking place.\n\n<ExamplesExample file=\"v-progress-linear/prop-stream\" />",
    "display_content": "## v-examples - Stream\n\nThe **stream** property works with **buffer-value** to convey to the user that there is some action taking place.\n\n<ExamplesExample file=\"v-progress-linear/prop-stream\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Stream",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001108",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001109",
    "text": "Component: v-examples\nSection: Striped\nType: documentation\n\n## v-examples - Striped\n\nThis applies a striped background over the value portion of the `v-progress-linear`. This prop has no effect when using **indeterminate**.\n\n<ExamplesExample file=\"v-progress-linear/prop-striped\" />",
    "display_content": "## v-examples - Striped\n\nThis applies a striped background over the value portion of the `v-progress-linear`. This prop has no effect when using **indeterminate**.\n\n<ExamplesExample file=\"v-progress-linear/prop-striped\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Striped",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001109",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001110",
    "text": "Component: v-examples\nSection: Default\nType: documentation\n\n## v-examples - Default\n\nThe `v-progress-linear` component will be responsive to user input when using **v-model**. You can use the default slot or bind a local model to display inside of the progress. If you are looking for advanced features on a linear type component, check out [v-slider](/components/sliders).\n\n<ExamplesExample file=\"v-progress-linear/slot-default\" />",
    "display_content": "## v-examples - Default\n\nThe `v-progress-linear` component will be responsive to user input when using **v-model**. You can use the default slot or bind a local model to display inside of the progress. If you are looking for advanced features on a linear type component, check out [v-slider](/components/sliders).\n\n<ExamplesExample file=\"v-progress-linear/slot-default\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Default",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001110",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001111",
    "text": "Component: v-examples\nSection: Determinate\nType: documentation\n\n## v-examples - Determinate\n\nThe progress linear component can have a determinate state modified by **v-model**.\n\n<ExamplesExample file=\"v-progress-linear/misc-determinate\" />",
    "display_content": "## v-examples - Determinate\n\nThe progress linear component can have a determinate state modified by **v-model**.\n\n<ExamplesExample file=\"v-progress-linear/misc-determinate\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Determinate",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001111",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001112",
    "text": "Component: v-examples\nSection: File loader\nType: documentation\n\n## v-examples - File loader\n\nThe `v-progress-linear` component is good for communicating to the user that they are waiting for a response.\n\n<ExamplesExample file=\"v-progress-linear/misc-file-loader\" />",
    "display_content": "## v-examples - File loader\n\nThe `v-progress-linear` component is good for communicating to the user that they are waiting for a response.\n\n<ExamplesExample file=\"v-progress-linear/misc-file-loader\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "File loader",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001112",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001113",
    "text": "Component: v-examples\nSection: Toolbar loader\nType: documentation\n\n## v-examples - Toolbar loader\n\nUsing the **absolute** prop we are able to position the `v-progress-linear` component at the bottom of the `v-toolbar`. We also use the **active** prop which allows us to control the visibility of the progress.\n\n<ExamplesExample file=\"v-progress-linear/misc-toolbar-loader\" />",
    "display_content": "## v-examples - Toolbar loader\n\nUsing the **absolute** prop we are able to position the `v-progress-linear` component at the bottom of the `v-toolbar`. We also use the **active** prop which allows us to control the visibility of the progress.\n\n<ExamplesExample file=\"v-progress-linear/misc-toolbar-loader\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Toolbar loader",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001113",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001114",
    "text": "Component: v-examples\nSection: Buffer color and opacity\nType: documentation\n\n## v-examples - Buffer color and opacity\n\n<DocIntroduced version=\"3.6.0\" />\n\nThe buffer color and opacity can be controlled using the **buffer-color** and **buffer-opacity** props. This enables you to make multi colored progress bars.\n\n<ExamplesExample file=\"v-progress-linear/misc-buffer-color\" />",
    "display_content": "## v-examples - Buffer color and opacity\n\n<DocIntroduced version=\"3.6.0\" />\n\nThe buffer color and opacity can be controlled using the **buffer-color** and **buffer-opacity** props. This enables you to make multi colored progress bars.\n\n<ExamplesExample file=\"v-progress-linear/misc-buffer-color\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Buffer color and opacity",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001114",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001115",
    "text": "Component: v-examples\nSection: Misc Buffer Color\nType: code_example\n\n## v-examples - Misc Buffer Color\n\n```vue\n<template>\n  <v-sheet\n    class=\"d-flex align-center px-4 py-8 mx-auto\"\n    color=\"#181a1b\"\n    max-width=\"250\"\n    rounded=\"lg\"\n  >\n    <v-progress-linear\n      :location=\"null\"\n      bg-color=\"#92aed9\"\n      buffer-color=\"#6a3e0b\"\n      buffer-opacity=\"1\"\n      buffer-value=\"3\"\n      color=\"#12512a\"\n      height=\"12\"\n      max=\"9\"\n      min=\"0\"\n      model-value=\"2\"\n      rounded\n    ></v-progress-linear>\n\n    <div class=\"ms-4 text-h6\">3/9</div>\n  </v-sheet>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Buffer Color\n\n```vue\n<template>\n  <v-sheet\n    class=\"d-flex align-center px-4 py-8 mx-auto\"\n    color=\"#181a1b\"\n    max-width=\"250\"\n    rounded=\"lg\"\n  >\n    <v-progress-linear\n      :location=\"null\"\n      bg-color=\"#92aed9\"\n      buffer-color=\"#6a3e0b\"\n      buffer-opacity=\"1\"\n      buffer-value=\"3\"\n      color=\"#12512a\"\n      height=\"12\"\n      max=\"9\"\n      min=\"0\"\n      model-value=\"2\"\n      rounded\n    ></v-progress-linear>\n\n    <div class=\"ms-4 text-h6\">3/9</div>\n  </v-sheet>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Buffer Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001115",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001116",
    "text": "Component: v-examples\nSection: Misc Determinate\nType: code_example\n\n## v-examples - Misc Determinate\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      v-model=\"valueDeterminate\"\n      color=\"deep-purple-accent-4\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"valueDeterminate\"\n      color=\"pink\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"valueDeterminate\"\n      color=\"indigo-darken-2\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"valueDeterminate\"\n      color=\"amber\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const valueDeterminate = ref(50)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        valueDeterminate: 50,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Determinate\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      v-model=\"valueDeterminate\"\n      color=\"deep-purple-accent-4\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"valueDeterminate\"\n      color=\"pink\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"valueDeterminate\"\n      color=\"indigo-darken-2\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"valueDeterminate\"\n      color=\"amber\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const valueDeterminate = ref(50)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        valueDeterminate: 50,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Determinate",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001116",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001117",
    "text": "Component: v-examples\nSection: Misc File Loader\nType: code_example\n\n## v-examples - Misc File Loader\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-toolbar color=\"deep-purple-accent-4\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>My Files</v-toolbar-title>\n\n      <v-btn\n        color=\"white\"\n        location=\"bottom left\"\n        absolute\n        icon\n      >\n        <v-icon>mdi-plus</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-share-variant</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-container style=\"height: 400px;\">\n      <v-row\n        align-content=\"center\"\n        class=\"fill-height\"\n        justify=\"center\"\n      >\n        <v-col\n          class=\"text-subtitle-1 text-center\"\n          cols=\"12\"\n        >\n          Getting your files\n        </v-col>\n        <v-col cols=\"6\">\n          <v-progress-linear\n            color=\"deep-purple-accent-4\"\n            height=\"6\"\n            indeterminate\n            rounded\n          ></v-progress-linear>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc File Loader\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-toolbar color=\"deep-purple-accent-4\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>My Files</v-toolbar-title>\n\n      <v-btn\n        color=\"white\"\n        location=\"bottom left\"\n        absolute\n        icon\n      >\n        <v-icon>mdi-plus</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-share-variant</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-container style=\"height: 400px;\">\n      <v-row\n        align-content=\"center\"\n        class=\"fill-height\"\n        justify=\"center\"\n      >\n        <v-col\n          class=\"text-subtitle-1 text-center\"\n          cols=\"12\"\n        >\n          Getting your files\n        </v-col>\n        <v-col cols=\"6\">\n          <v-progress-linear\n            color=\"deep-purple-accent-4\"\n            height=\"6\"\n            indeterminate\n            rounded\n          ></v-progress-linear>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc File Loader",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001117",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001118",
    "text": "Component: v-examples\nSection: Misc Toolbar Loader\nType: code_example\n\n## v-examples - Misc Toolbar Loader\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto mt-6\"\n    width=\"344\"\n  >\n    <v-toolbar>\n      <v-btn icon>\n        <v-icon>mdi-arrow-left</v-icon>\n      </v-btn>\n\n      <v-toolbar-title>My Recipes</v-toolbar-title>\n\n      <v-progress-linear\n        :active=\"loading\"\n        :indeterminate=\"loading\"\n        color=\"deep-purple-accent-4\"\n        location=\"bottom\"\n        absolute\n      ></v-progress-linear>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-container style=\"height: 282px;\">\n      <v-row\n        align=\"center\"\n        class=\"fill-height\"\n        justify=\"center\"\n      >\n        <v-scale-transition>\n          <div\n            v-if=\"!loading\"\n            class=\"text-center\"\n          >\n            <v-btn\n              color=\"primary\"\n              @click=\"loading = true\"\n            >\n              Start loading\n            </v-btn>\n          </div>\n        </v-scale-transition>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const loading = ref(false)\n\n  watch(loading, val => {\n    if (!val) return\n    setTimeout(() => (loading.value = false), 3000)\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loading: false,\n    }),\n\n    watch: {\n      loading (val) {\n        if (!val) return\n\n        setTimeout(() => (this.loading = false), 3000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Toolbar Loader\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto mt-6\"\n    width=\"344\"\n  >\n    <v-toolbar>\n      <v-btn icon>\n        <v-icon>mdi-arrow-left</v-icon>\n      </v-btn>\n\n      <v-toolbar-title>My Recipes</v-toolbar-title>\n\n      <v-progress-linear\n        :active=\"loading\"\n        :indeterminate=\"loading\"\n        color=\"deep-purple-accent-4\"\n        location=\"bottom\"\n        absolute\n      ></v-progress-linear>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n\n    <v-container style=\"height: 282px;\">\n      <v-row\n        align=\"center\"\n        class=\"fill-height\"\n        justify=\"center\"\n      >\n        <v-scale-transition>\n          <div\n            v-if=\"!loading\"\n            class=\"text-center\"\n          >\n            <v-btn\n              color=\"primary\"\n              @click=\"loading = true\"\n            >\n              Start loading\n            </v-btn>\n          </div>\n        </v-scale-transition>\n      </v-row>\n    </v-container>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const loading = ref(false)\n\n  watch(loading, val => {\n    if (!val) return\n    setTimeout(() => (loading.value = false), 3000)\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loading: false,\n    }),\n\n    watch: {\n      loading (val) {\n        if (!val) return\n\n        setTimeout(() => (this.loading = false), 3000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Toolbar Loader",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001118",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001119",
    "text": "Component: v-examples\nSection: Prop Buffer Value\nType: code_example\n\n## v-examples - Prop Buffer Value\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      v-model=\"value\"\n      :buffer-value=\"bufferValue\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"value\"\n      :buffer-value=\"bufferValue\"\n      color=\"purple\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"value\"\n      :buffer-value=\"bufferValue\"\n      color=\"red-lighten-2\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"value\"\n      :buffer-value=\"bufferValue\"\n      color=\"black\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n<script setup>\n  import { onBeforeUnmount, onMounted, ref, watch } from 'vue'\n\n  const value = ref(10)\n  const bufferValue = ref(20)\n  const interval = ref(0)\n\n  watch(value, val => {\n    if (val < 100) return\n    value.value = 0\n    bufferValue.value = 10\n    startBuffer()\n  })\n\n  onMounted(() => {\n    startBuffer()\n  })\n  onBeforeUnmount(() => {\n    clearInterval(interval.value)\n  })\n\n  function startBuffer () {\n    clearInterval(interval.value)\n    interval.value = setInterval(() => {\n      value.value += Math.random() * (15 - 5) + 5\n      bufferValue.value += Math.random() * (15 - 5) + 6\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 10,\n        bufferValue: 20,\n        interval: 0,\n      }\n    },\n\n    watch: {\n      value (val) {\n        if (val < 100) return\n\n        this.value = 0\n        this.bufferValue = 10\n        this.startBuffer()\n      },\n    },\n\n    mounted () {\n      this.startBuffer()\n    },\n\n    beforeUnmount () {\n      clearInterval(this.interval)\n    },\n\n    methods: {\n      startBuffer () {\n        clearInterval(this.interval)\n\n        this.interval = setInterval(() => {\n          this.value += Math.random() * (15 - 5) + 5\n          this.bufferValue += Math.random() * (15 - 5) + 6\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Buffer Value\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      v-model=\"value\"\n      :buffer-value=\"bufferValue\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"value\"\n      :buffer-value=\"bufferValue\"\n      color=\"purple\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"value\"\n      :buffer-value=\"bufferValue\"\n      color=\"red-lighten-2\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      v-model=\"value\"\n      :buffer-value=\"bufferValue\"\n      color=\"black\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n<script setup>\n  import { onBeforeUnmount, onMounted, ref, watch } from 'vue'\n\n  const value = ref(10)\n  const bufferValue = ref(20)\n  const interval = ref(0)\n\n  watch(value, val => {\n    if (val < 100) return\n    value.value = 0\n    bufferValue.value = 10\n    startBuffer()\n  })\n\n  onMounted(() => {\n    startBuffer()\n  })\n  onBeforeUnmount(() => {\n    clearInterval(interval.value)\n  })\n\n  function startBuffer () {\n    clearInterval(interval.value)\n    interval.value = setInterval(() => {\n      value.value += Math.random() * (15 - 5) + 5\n      bufferValue.value += Math.random() * (15 - 5) + 6\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 10,\n        bufferValue: 20,\n        interval: 0,\n      }\n    },\n\n    watch: {\n      value (val) {\n        if (val < 100) return\n\n        this.value = 0\n        this.bufferValue = 10\n        this.startBuffer()\n      },\n    },\n\n    mounted () {\n      this.startBuffer()\n    },\n\n    beforeUnmount () {\n      clearInterval(this.interval)\n    },\n\n    methods: {\n      startBuffer () {\n        clearInterval(this.interval)\n\n        this.interval = setInterval(() => {\n          this.value += Math.random() * (15 - 5) + 5\n          this.bufferValue += Math.random() * (15 - 5) + 6\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Buffer Value",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001119",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001120",
    "text": "Component: v-examples\nSection: Prop Colors\nType: code_example\n\n## v-examples - Prop Colors\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      bg-color=\"pink-lighten-3\"\n      color=\"pink-lighten-1\"\n      model-value=\"15\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      bg-color=\"blue-grey\"\n      color=\"lime\"\n      model-value=\"30\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      bg-color=\"success\"\n      color=\"error\"\n      model-value=\"45\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Colors\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      bg-color=\"pink-lighten-3\"\n      color=\"pink-lighten-1\"\n      model-value=\"15\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      bg-color=\"blue-grey\"\n      color=\"lime\"\n      model-value=\"30\"\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      bg-color=\"success\"\n      color=\"error\"\n      model-value=\"45\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Colors",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001120",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001121",
    "text": "Component: v-examples\nSection: Prop Indeterminate\nType: code_example\n\n## v-examples - Prop Indeterminate\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      color=\"yellow-darken-2\"\n      indeterminate\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"green\"\n      indeterminate\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"teal\"\n      indeterminate\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"cyan\"\n      indeterminate\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Indeterminate\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      color=\"yellow-darken-2\"\n      indeterminate\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"green\"\n      indeterminate\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"teal\"\n      indeterminate\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"cyan\"\n      indeterminate\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Indeterminate",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001121",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001122",
    "text": "Component: v-examples\nSection: Prop Query\nType: code_example\n\n## v-examples - Prop Query\n\n```vue\n<template>\n  <div style=\"min-height: 4px;\">\n    <v-progress-linear\n      v-model=\"value\"\n      :active=\"show\"\n      :indeterminate=\"query\"\n      :query=\"true\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n<script setup>\n  import { onBeforeUnmount, onMounted, ref } from 'vue'\n\n  const value = ref(0)\n  const query = ref(false)\n  const show = ref(true)\n\n  let interval = -1\n  onMounted(() => {\n    queryAndIndeterminate()\n  })\n  onBeforeUnmount(() => {\n    clearInterval(interval)\n  })\n\n  function queryAndIndeterminate () {\n    query.value = true\n    show.value = true\n    value.value = 0\n    setTimeout(() => {\n      query.value = false\n      interval = setInterval(() => {\n        if (value.value === 100) {\n          clearInterval(interval)\n          show.value = false\n          return setTimeout(queryAndIndeterminate, 2000)\n        }\n        value.value += 25\n      }, 1000)\n    }, 2500)\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 0,\n        query: false,\n        show: true,\n        interval: 0,\n      }\n    },\n\n    mounted () {\n      this.queryAndIndeterminate()\n    },\n\n    beforeUnmount () {\n      clearInterval(this.interval)\n    },\n\n    methods: {\n      queryAndIndeterminate () {\n        this.query = true\n        this.show = true\n        this.value = 0\n\n        setTimeout(() => {\n          this.query = false\n\n          this.interval = setInterval(() => {\n            if (this.value === 100) {\n              clearInterval(this.interval)\n              this.show = false\n              return setTimeout(this.queryAndIndeterminate, 2000)\n            }\n            this.value += 25\n          }, 1000)\n        }, 2500)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Query\n\n```vue\n<template>\n  <div style=\"min-height: 4px;\">\n    <v-progress-linear\n      v-model=\"value\"\n      :active=\"show\"\n      :indeterminate=\"query\"\n      :query=\"true\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n<script setup>\n  import { onBeforeUnmount, onMounted, ref } from 'vue'\n\n  const value = ref(0)\n  const query = ref(false)\n  const show = ref(true)\n\n  let interval = -1\n  onMounted(() => {\n    queryAndIndeterminate()\n  })\n  onBeforeUnmount(() => {\n    clearInterval(interval)\n  })\n\n  function queryAndIndeterminate () {\n    query.value = true\n    show.value = true\n    value.value = 0\n    setTimeout(() => {\n      query.value = false\n      interval = setInterval(() => {\n        if (value.value === 100) {\n          clearInterval(interval)\n          show.value = false\n          return setTimeout(queryAndIndeterminate, 2000)\n        }\n        value.value += 25\n      }, 1000)\n    }, 2500)\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 0,\n        query: false,\n        show: true,\n        interval: 0,\n      }\n    },\n\n    mounted () {\n      this.queryAndIndeterminate()\n    },\n\n    beforeUnmount () {\n      clearInterval(this.interval)\n    },\n\n    methods: {\n      queryAndIndeterminate () {\n        this.query = true\n        this.show = true\n        this.value = 0\n\n        setTimeout(() => {\n          this.query = false\n\n          this.interval = setInterval(() => {\n            if (this.value === 100) {\n              clearInterval(this.interval)\n              this.show = false\n              return setTimeout(this.queryAndIndeterminate, 2000)\n            }\n            this.value += 25\n          }, 1000)\n        }, 2500)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Query",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001122",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001123",
    "text": "Component: v-examples\nSection: Prop Reverse\nType: code_example\n\n## v-examples - Prop Reverse\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      color=\"pink\"\n      model-value=\"15\"\n      reverse\n    ></v-progress-linear>\n\n    <br>\n\n    <v-progress-linear\n      color=\"lime\"\n      indeterminate\n      reverse\n    ></v-progress-linear>\n\n    <br>\n\n    <v-progress-linear\n      buffer-value=\"55\"\n      color=\"success\"\n      model-value=\"30\"\n      reverse\n      streams\n    ></v-progress-linear>\n\n    <br>\n\n    <p>In specific cases you may want progress to display in left-to-right mode regardless of the application direction (LTR or RTL):</p>\n\n    <v-progress-linear\n      :reverse=\"$vuetify.locale.isRtl\"\n      model-value=\"15\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Reverse\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      color=\"pink\"\n      model-value=\"15\"\n      reverse\n    ></v-progress-linear>\n\n    <br>\n\n    <v-progress-linear\n      color=\"lime\"\n      indeterminate\n      reverse\n    ></v-progress-linear>\n\n    <br>\n\n    <v-progress-linear\n      buffer-value=\"55\"\n      color=\"success\"\n      model-value=\"30\"\n      reverse\n      streams\n    ></v-progress-linear>\n\n    <br>\n\n    <p>In specific cases you may want progress to display in left-to-right mode regardless of the application direction (LTR or RTL):</p>\n\n    <v-progress-linear\n      :reverse=\"$vuetify.locale.isRtl\"\n      model-value=\"15\"\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Reverse",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001123",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001124",
    "text": "Component: v-examples\nSection: Prop Rounded\nType: code_example\n\n## v-examples - Prop Rounded\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      color=\"red-darken-2\"\n      model-value=\"100\"\n      rounded\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"indigo\"\n      model-value=\"100\"\n      rounded\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"teal\"\n      model-value=\"100\"\n      rounded\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"cyan-darken-2\"\n      model-value=\"100\"\n      rounded\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Rounded\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      color=\"red-darken-2\"\n      model-value=\"100\"\n      rounded\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"indigo\"\n      model-value=\"100\"\n      rounded\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"teal\"\n      model-value=\"100\"\n      rounded\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"cyan-darken-2\"\n      model-value=\"100\"\n      rounded\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rounded",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001124",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001125",
    "text": "Component: v-examples\nSection: Prop Stream\nType: code_example\n\n## v-examples - Prop Stream\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      buffer-value=\"0\"\n      color=\"red-lighten-2\"\n      stream\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      buffer-value=\"0\"\n      color=\"teal\"\n      model-value=\"20\"\n      stream\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      buffer-value=\"50\"\n      color=\"cyan\"\n      stream\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      buffer-value=\"60\"\n      color=\"orange\"\n      model-value=\"40\"\n      stream\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Stream\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      buffer-value=\"0\"\n      color=\"red-lighten-2\"\n      stream\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      buffer-value=\"0\"\n      color=\"teal\"\n      model-value=\"20\"\n      stream\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      buffer-value=\"50\"\n      color=\"cyan\"\n      stream\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      buffer-value=\"60\"\n      color=\"orange\"\n      model-value=\"40\"\n      stream\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Stream",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001125",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001126",
    "text": "Component: v-examples\nSection: Prop Striped\nType: code_example\n\n## v-examples - Prop Striped\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      color=\"light-blue\"\n      height=\"10\"\n      model-value=\"10\"\n      striped\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"light-green-darken-4\"\n      height=\"10\"\n      model-value=\"20\"\n      striped\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"lime\"\n      height=\"10\"\n      model-value=\"45\"\n      striped\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"deep-orange\"\n      height=\"10\"\n      model-value=\"60\"\n      striped\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Striped\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      color=\"light-blue\"\n      height=\"10\"\n      model-value=\"10\"\n      striped\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"light-green-darken-4\"\n      height=\"10\"\n      model-value=\"20\"\n      striped\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"lime\"\n      height=\"10\"\n      model-value=\"45\"\n      striped\n    ></v-progress-linear>\n    <br>\n    <v-progress-linear\n      color=\"deep-orange\"\n      height=\"10\"\n      model-value=\"60\"\n      striped\n    ></v-progress-linear>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Striped",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001126",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001127",
    "text": "Component: v-examples\nSection: Slot Default\nType: code_example\n\n## v-examples - Slot Default\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      v-model=\"power\"\n      color=\"amber\"\n      height=\"25\"\n    ></v-progress-linear>\n\n    <br>\n\n    <v-progress-linear\n      v-model=\"skill\"\n      color=\"blue-grey\"\n      height=\"25\"\n    >\n      <template v-slot:default=\"{ value }\">\n        <strong>{{ Math.ceil(value) }}%</strong>\n      </template>\n    </v-progress-linear>\n\n    <br>\n\n    <v-progress-linear\n      v-model=\"knowledge\"\n      height=\"25\"\n    >\n      <strong>{{ Math.ceil(knowledge) }}%</strong>\n    </v-progress-linear>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const skill = ref(20)\n  const knowledge = ref(33)\n  const power = ref(78)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      skill: 20,\n      knowledge: 33,\n      power: 78,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Default\n\n```vue\n<template>\n  <div>\n    <v-progress-linear\n      v-model=\"power\"\n      color=\"amber\"\n      height=\"25\"\n    ></v-progress-linear>\n\n    <br>\n\n    <v-progress-linear\n      v-model=\"skill\"\n      color=\"blue-grey\"\n      height=\"25\"\n    >\n      <template v-slot:default=\"{ value }\">\n        <strong>{{ Math.ceil(value) }}%</strong>\n      </template>\n    </v-progress-linear>\n\n    <br>\n\n    <v-progress-linear\n      v-model=\"knowledge\"\n      height=\"25\"\n    >\n      <strong>{{ Math.ceil(knowledge) }}%</strong>\n    </v-progress-linear>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const skill = ref(20)\n  const knowledge = ref(33)\n  const power = ref(78)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      skill: 20,\n      knowledge: 33,\n      power: 78,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Default",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001127",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001128",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-progress-linear v-bind=\"props\"></v-progress-linear>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"['primary', 'blue-lighten-3', 'error', 'blue-darken-3']\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-slider\n        v-model=\"height\"\n        label=\"Height\"\n        max=\"12\"\n        min=\"4\"\n        step=\"1\"\n      ></v-slider>\n\n      <v-checkbox v-model=\"indeterminate\" label=\"Indeterminate\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-progress-linear'\n  const model = ref('default')\n  const color = ref()\n  const indeterminate = ref(false)\n  const height = ref()\n  const options = []\n  const props = computed(() => {\n    return {\n      color: color.value || undefined,\n      indeterminate: indeterminate.value || undefined,\n      'model-value': !indeterminate.value ? '20' : undefined,\n      height: height.value !== 4 ? height.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-progress-linear v-bind=\"props\"></v-progress-linear>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"['primary', 'blue-lighten-3', 'error', 'blue-darken-3']\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-slider\n        v-model=\"height\"\n        label=\"Height\"\n        max=\"12\"\n        min=\"4\"\n        step=\"1\"\n      ></v-slider>\n\n      <v-checkbox v-model=\"indeterminate\" label=\"Indeterminate\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-progress-linear'\n  const model = ref('default')\n  const color = ref()\n  const indeterminate = ref(false)\n  const height = ref()\n  const options = []\n  const props = computed(() => {\n    return {\n      color: color.value || undefined,\n      indeterminate: indeterminate.value || undefined,\n      'model-value': !indeterminate.value ? '20' : undefined,\n      height: height.value !== 4 ? height.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001128",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001129",
    "text": "Component: v-pull-to-refresh\nType: component_overview\n\n# v-pull-to-refresh\n\nThe PullToRefresh allows users to update content with a simple downward swipe on their screen. Works for Mobile and Desktop.",
    "display_content": "# v-pull-to-refresh\n\nThe PullToRefresh allows users to update content with a simple downward swipe on their screen. Works for Mobile and Desktop.",
    "metadata": {
      "component": "v-pull-to-refresh",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001129",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001130",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "display_content": "# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001130",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001131",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nDrag the list downward to activate the pull-to-refresh feature.",
    "display_content": "# v-usage\n\nDrag the list downward to activate the pull-to-refresh feature.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001131",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001132",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-pull-to-refresh](/api/v-pull-to-refresh/) | Primary Component |\n\nAvailable sections: Usage",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-pull-to-refresh](/api/v-pull-to-refresh/) | Primary Component |\n\nAvailable sections: Usage",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001132",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001133",
    "text": "Component: v-api\nSection: Usage\nType: code_example\n\n## v-api - Usage\n\n```vue\n<template>\n  <div class=\"scrollable-container bg-surface-light\">\n    <v-pull-to-refresh\n      :pull-down-threshold=\"pullDownThreshold\"\n      @load=\"load\"\n    >\n      <v-list>\n        <v-list-item\n          v-for=\"item in items\"\n          :key=\"item.value\"\n          :title=\"item.title\"\n        ></v-list-item>\n      </v-list>\n    </v-pull-to-refresh>\n  </div>\n</template>\n\n<script setup>\n  const pullDownThreshold = ref(64)\n\n  let items = [\n    {\n      title: '1',\n      value: 1,\n    },\n    {\n      title: '2',\n      value: 2,\n    },\n    {\n      title: '3',\n      value: 3,\n    },\n  ]\n\n  let count = 2\n\n  async function load ({ done }) {\n    console.log('loading')\n    await new Promise(resolve => setTimeout(() => resolve(), 2000))\n    items = Array.from({ length: count * 3 }, (k, v) => ({\n      title: `${v + 1}`,\n      value: v + 1,\n    }))\n    console.log('load finish')\n    count++\n    done('ok')\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      pullDownThreshold: 64,\n      items: [\n        {\n          title: '1',\n          value: 1,\n        },\n        {\n          title: '2',\n          value: 2,\n        },\n        {\n          title: '3',\n          value: 3,\n        },\n      ],\n    }),\n\n    methods: {\n      async load ({ done }) {\n        // Perform API call\n        console.log('loading')\n        await new Promise(resolve => setTimeout(() => resolve(), 2000))\n        this.items = Array.from({ length: 3 }, (k, v) => ({\n          title: `${v + 1}`,\n          value: v + 1,\n        }))\n        console.log('load finish')\n        done('ok')\n      },\n    },\n  }\n</script>\n\n<style>\n.scrollable-container {\n  max-height: 300px;\n  overflow-y: scroll;\n}\n</style>\n\n```",
    "display_content": "## v-api - Usage\n\n```vue\n<template>\n  <div class=\"scrollable-container bg-surface-light\">\n    <v-pull-to-refresh\n      :pull-down-threshold=\"pullDownThreshold\"\n      @load=\"load\"\n    >\n      <v-list>\n        <v-list-item\n          v-for=\"item in items\"\n          :key=\"item.value\"\n          :title=\"item.title\"\n        ></v-list-item>\n      </v-list>\n    </v-pull-to-refresh>\n  </div>\n</template>\n\n<script setup>\n  const pullDownThreshold = ref(64)\n\n  let items = [\n    {\n      title: '1',\n      value: 1,\n    },\n    {\n      title: '2',\n      value: 2,\n    },\n    {\n      title: '3',\n      value: 3,\n    },\n  ]\n\n  let count = 2\n\n  async function load ({ done }) {\n    console.log('loading')\n    await new Promise(resolve => setTimeout(() => resolve(), 2000))\n    items = Array.from({ length: count * 3 }, (k, v) => ({\n      title: `${v + 1}`,\n      value: v + 1,\n    }))\n    console.log('load finish')\n    count++\n    done('ok')\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      pullDownThreshold: 64,\n      items: [\n        {\n          title: '1',\n          value: 1,\n        },\n        {\n          title: '2',\n          value: 2,\n        },\n        {\n          title: '3',\n          value: 3,\n        },\n      ],\n    }),\n\n    methods: {\n      async load ({ done }) {\n        // Perform API call\n        console.log('loading')\n        await new Promise(resolve => setTimeout(() => resolve(), 2000))\n        this.items = Array.from({ length: 3 }, (k, v) => ({\n          title: `${v + 1}`,\n          value: v + 1,\n        }))\n        console.log('load finish')\n        done('ok')\n      },\n    },\n  }\n</script>\n\n<style>\n.scrollable-container {\n  max-height: 300px;\n  overflow-y: scroll;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-api",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001133",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001134",
    "text": "Component: v-radio-buttons\nType: component_overview\n\n# v-radio-buttons\n\nThe `v-radio` component is a simple radio button. When combined with  the `v-radio-group` component you can provide grouping functionality to allow users to select from a predefined set of options.",
    "display_content": "# v-radio-buttons\n\nThe `v-radio` component is a simple radio button. When combined with  the `v-radio-group` component you can provide grouping functionality to allow users to select from a predefined set of options.",
    "metadata": {
      "component": "v-radio-buttons",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001134",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001135",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nAlthough `v-radio` can be used on its own, it is best used in conjunction with `v-radio-group`.",
    "display_content": "# v-usage\n\nAlthough `v-radio` can be used on its own, it is best used in conjunction with `v-radio-group`.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001135",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001136",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-radio-group](/api/v-radio-group/) | Primary Component | | [v-radio](/api/v-radio/) | Sub-component used for modifying the `v-radio-group` state |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-radio-group](/api/v-radio-group/) | Primary Component | | [v-radio](/api/v-radio/) | Sub-component used for modifying the `v-radio-group` state |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001136",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001137",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nUsing the **v-model** (or **model-value**) you can access and control the selected radio button defined by the set **value** on the child `v-radio` components.\n\nAvailable sections: Model (group), Model (radio), Colors, Direction, Label",
    "display_content": "# v-examples\n\nUsing the **v-model** (or **model-value**) you can access and control the selected radio button defined by the set **value** on the child `v-radio` components.\n\nAvailable sections: Model (group), Model (radio), Colors, Direction, Label",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001137",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001138",
    "text": "Component: v-examples\nSection: Model (group)\nType: documentation\n\n## v-examples - Model (group)\n\nUsing the **v-model** (or **model-value**) you can access and control the selected radio button defined by the set **value** on the child `v-radio` components.\n\n<ExamplesExample file=\"v-radio-group/prop-model-group\" />\n\n::: info\n  If you are using integer values with **model-value**, you will need to use `:value` to set the value of the child `v-radio` otherwise it will be evaluated as a string.\n:::",
    "display_content": "## v-examples - Model (group)\n\nUsing the **v-model** (or **model-value**) you can access and control the selected radio button defined by the set **value** on the child `v-radio` components.\n\n<ExamplesExample file=\"v-radio-group/prop-model-group\" />\n\n::: info\n  If you are using integer values with **model-value**, you will need to use `:value` to set the value of the child `v-radio` otherwise it will be evaluated as a string.\n:::",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Model (group)",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001138",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001139",
    "text": "Component: v-examples\nSection: Model (radio)\nType: documentation\n\n## v-examples - Model (radio)\n\nThe **v-model** (or **model-value**) you can access and control the value of a single radio button. The `true`/`false` values can be independently defined using the **true-value** and **false-value** props.\n\n<ExamplesExample file=\"v-radio-group/prop-model-radio\" />",
    "display_content": "## v-examples - Model (radio)\n\nThe **v-model** (or **model-value**) you can access and control the value of a single radio button. The `true`/`false` values can be independently defined using the **true-value** and **false-value** props.\n\n<ExamplesExample file=\"v-radio-group/prop-model-radio\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Model (radio)",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001139",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001140",
    "text": "Component: v-examples\nSection: Colors\nType: documentation\n\n## v-examples - Colors\n\nRadios can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\n<ExamplesExample file=\"v-radio-group/prop-colors\" />",
    "display_content": "## v-examples - Colors\n\nRadios can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\n<ExamplesExample file=\"v-radio-group/prop-colors\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001140",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001141",
    "text": "Component: v-examples\nSection: Direction\nType: documentation\n\n## v-examples - Direction\n\nRadio-groups can be presented either as a row or a column, using their respective props. The default is as a column.\n\n<ExamplesExample file=\"v-radio-group/prop-direction\" />",
    "display_content": "## v-examples - Direction\n\nRadio-groups can be presented either as a row or a column, using their respective props. The default is as a column.\n\n<ExamplesExample file=\"v-radio-group/prop-direction\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Direction",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001141",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001142",
    "text": "Component: v-examples\nSection: Label\nType: documentation\n\n## v-examples - Label\n\nRadio Group labels can be defined in `label` slot - that will allow to use HTML content.\n\n<ExamplesExample file=\"v-radio-group/slot-label\" />",
    "display_content": "## v-examples - Label\n\nRadio Group labels can be defined in `label` slot - that will allow to use HTML content.\n\n<ExamplesExample file=\"v-radio-group/slot-label\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Label",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001142",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001143",
    "text": "Component: v-range-sliders\nType: component_overview\n\n# v-range-sliders\n\nThe `v-range-slider` component complements the `v-slider` component nicely when you are in need of representing a range of values.",
    "display_content": "# v-range-sliders\n\nThe `v-range-slider` component complements the `v-slider` component nicely when you are in need of representing a range of values.",
    "metadata": {
      "component": "v-range-sliders",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001143",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001144",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nSliders reflect a range of values along a bar, from which users may select a single value. They are ideal for adjusting settings such as volume, brightness, or applying image filters.",
    "display_content": "# v-usage\n\nSliders reflect a range of values along a bar, from which users may select a single value. They are ideal for adjusting settings such as volume, brightness, or applying image filters.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001144",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001145",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-range-slider](/api/v-range-slider/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-range-slider](/api/v-range-slider/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001145",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001146",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nWith the **strict** prop applied, the thumbs of the range slider are not allowed to cross over each other.\n\nAvailable sections: Strict, Disabled, Min and max, Step, Vertical sliders, Thumb label, Prop Disabled, Prop Min And Max, Prop Step, Prop Strict, Prop Vertical, Slot Thumb Label, Usage",
    "display_content": "# v-examples\n\nWith the **strict** prop applied, the thumbs of the range slider are not allowed to cross over each other.\n\nAvailable sections: Strict, Disabled, Min and max, Step, Vertical sliders, Thumb label, Prop Disabled, Prop Min And Max, Prop Step, Prop Strict, Prop Vertical, Slot Thumb Label, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001146",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001147",
    "text": "Component: v-examples\nSection: Strict\nType: documentation\n\n## v-examples - Strict\n\nWith the **strict** prop applied, the thumbs of the range slider are not allowed to cross over each other.\n\n<ExamplesExample file=\"v-range-slider/prop-strict\" />",
    "display_content": "## v-examples - Strict\n\nWith the **strict** prop applied, the thumbs of the range slider are not allowed to cross over each other.\n\n<ExamplesExample file=\"v-range-slider/prop-strict\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Strict",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001147",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001148",
    "text": "Component: v-examples\nSection: Disabled\nType: documentation\n\n## v-examples - Disabled\n\nYou cannot interact with **disabled** sliders.\n\n<ExamplesExample file=\"v-range-slider/prop-disabled\" />",
    "display_content": "## v-examples - Disabled\n\nYou cannot interact with **disabled** sliders.\n\n<ExamplesExample file=\"v-range-slider/prop-disabled\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001148",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001149",
    "text": "Component: v-examples\nSection: Min and max\nType: documentation\n\n## v-examples - Min and max\n\nYou can set **min** and **max** values of sliders.\n\n<ExamplesExample file=\"v-range-slider/prop-min-and-max\" />",
    "display_content": "## v-examples - Min and max\n\nYou can set **min** and **max** values of sliders.\n\n<ExamplesExample file=\"v-range-slider/prop-min-and-max\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Min and max",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001149",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001150",
    "text": "Component: v-examples\nSection: Step\nType: documentation\n\n## v-examples - Step\n\n`v-range-slider` can have steps other than 1. This can be helpful for some applications where you need to adjust values with more or less accuracy.\n\n<ExamplesExample file=\"v-range-slider/prop-step\" />",
    "display_content": "## v-examples - Step\n\n`v-range-slider` can have steps other than 1. This can be helpful for some applications where you need to adjust values with more or less accuracy.\n\n<ExamplesExample file=\"v-range-slider/prop-step\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Step",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001150",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001151",
    "text": "Component: v-examples\nSection: Vertical sliders\nType: documentation\n\n## v-examples - Vertical sliders\n\nYou can use the **vertical** prop to switch sliders to a vertical orientation. If you need to change the height of the slider, use css.\n\n<ExamplesExample file=\"v-range-slider/prop-vertical\" />",
    "display_content": "## v-examples - Vertical sliders\n\nYou can use the **vertical** prop to switch sliders to a vertical orientation. If you need to change the height of the slider, use css.\n\n<ExamplesExample file=\"v-range-slider/prop-vertical\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Vertical sliders",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001151",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001152",
    "text": "Component: v-examples\nSection: Thumb label\nType: documentation\n\n## v-examples - Thumb label\n\nUsing the **tick-labels** prop along with the `thumb-label` slot, you can create a very customized solution.\n\n<ExamplesExample file=\"v-range-slider/slot-thumb-label\" />",
    "display_content": "## v-examples - Thumb label\n\nUsing the **tick-labels** prop along with the `thumb-label` slot, you can create a very customized solution.\n\n<ExamplesExample file=\"v-range-slider/slot-thumb-label\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Thumb label",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001152",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001153",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-range-slider\n          v-model=\"value\"\n          label=\"Disabled\"\n          disabled\n        ></v-range-slider>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([30, 60])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: [30, 60],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-range-slider\n          v-model=\"value\"\n          label=\"Disabled\"\n          disabled\n        ></v-range-slider>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([30, 60])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: [30, 60],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001153",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001154",
    "text": "Component: v-examples\nSection: Prop Min And Max\nType: code_example\n\n## v-examples - Prop Min And Max\n\n```vue\n<template>\n  <v-range-slider\n    v-model=\"range\"\n    :max=\"10\"\n    :min=\"-10\"\n    :step=\"1\"\n    class=\"align-center\"\n    hide-details\n  >\n    <template v-slot:prepend>\n      <v-text-field\n        v-model=\"range[0]\"\n        density=\"compact\"\n        style=\"width: 70px\"\n        type=\"number\"\n        variant=\"outlined\"\n        hide-details\n        single-line\n      ></v-text-field>\n    </template>\n    <template v-slot:append>\n      <v-text-field\n        v-model=\"range[1]\"\n        density=\"compact\"\n        style=\"width: 70px\"\n        type=\"number\"\n        variant=\"outlined\"\n        hide-details\n        single-line\n      ></v-text-field>\n    </template>\n  </v-range-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const range = ref([-5, 5])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        range: [-5, 5],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Min And Max\n\n```vue\n<template>\n  <v-range-slider\n    v-model=\"range\"\n    :max=\"10\"\n    :min=\"-10\"\n    :step=\"1\"\n    class=\"align-center\"\n    hide-details\n  >\n    <template v-slot:prepend>\n      <v-text-field\n        v-model=\"range[0]\"\n        density=\"compact\"\n        style=\"width: 70px\"\n        type=\"number\"\n        variant=\"outlined\"\n        hide-details\n        single-line\n      ></v-text-field>\n    </template>\n    <template v-slot:append>\n      <v-text-field\n        v-model=\"range[1]\"\n        density=\"compact\"\n        style=\"width: 70px\"\n        type=\"number\"\n        variant=\"outlined\"\n        hide-details\n        single-line\n      ></v-text-field>\n    </template>\n  </v-range-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const range = ref([-5, 5])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        range: [-5, 5],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Min And Max",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001154",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001155",
    "text": "Component: v-examples\nSection: Prop Step\nType: code_example\n\n## v-examples - Prop Step\n\n```vue\n<template>\n  <v-range-slider\n    v-model=\"value\"\n    step=\"10\"\n    thumb-label=\"always\"\n  ></v-range-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([20, 40])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: [20, 40],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Step\n\n```vue\n<template>\n  <v-range-slider\n    v-model=\"value\"\n    step=\"10\"\n    thumb-label=\"always\"\n  ></v-range-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([20, 40])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: [20, 40],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Step",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001155",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001156",
    "text": "Component: v-examples\nSection: Prop Strict\nType: code_example\n\n## v-examples - Prop Strict\n\n```vue\n<template>\n  <v-card>\n    <v-card-text>\n      <v-range-slider\n        v-model=\"value\"\n        strict\n      ></v-range-slider>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([20, 40])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: [20, 40],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Strict\n\n```vue\n<template>\n  <v-card>\n    <v-card-text>\n      <v-range-slider\n        v-model=\"value\"\n        strict\n      ></v-range-slider>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([20, 40])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: [20, 40],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Strict",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001156",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001157",
    "text": "Component: v-examples\nSection: Prop Vertical\nType: code_example\n\n## v-examples - Prop Vertical\n\n```vue\n<template>\n  <v-range-slider\n    v-model=\"value\"\n    direction=\"vertical\"\n  ></v-range-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([20, 40])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: [20, 40],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Vertical\n\n```vue\n<template>\n  <v-range-slider\n    v-model=\"value\"\n    direction=\"vertical\"\n  ></v-range-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([20, 40])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: [20, 40],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Vertical",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001157",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001158",
    "text": "Component: v-examples\nSection: Slot Thumb Label\nType: code_example\n\n## v-examples - Slot Thumb Label\n\n```vue\n<template>\n  <v-row>\n    <v-col class=\"pa-12\">\n      <v-range-slider\n        :model-value=\"[0, 1]\"\n        :step=\"1\"\n        :ticks=\"seasons\"\n        max=\"3\"\n        min=\"0\"\n        show-ticks=\"always\"\n        thumb-label=\"always\"\n        tick-size=\"4\"\n      >\n        <template v-slot:thumb-label=\"{ modelValue }\">\n          <v-icon :icon=\"season(modelValue)\" theme=\"dark\"></v-icon>\n        </template>\n      </v-range-slider>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const seasons = ref({\n    0: 'Winter',\n    1: 'Spring',\n    2: 'Summer',\n    3: 'Fall',\n  })\n  const icons = ref([\n    'mdi-snowflake',\n    'mdi-leaf',\n    'mdi-fire',\n    'mdi-water',\n  ])\n  function season (val) {\n    return icons.value[val]\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      seasons: {\n        0: 'Winter',\n        1: 'Spring',\n        2: 'Summer',\n        3: 'Fall',\n      },\n      icons: [\n        'mdi-snowflake',\n        'mdi-leaf',\n        'mdi-fire',\n        'mdi-water',\n      ],\n    }),\n\n    methods: {\n      season (val) {\n        return this.icons[val]\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Thumb Label\n\n```vue\n<template>\n  <v-row>\n    <v-col class=\"pa-12\">\n      <v-range-slider\n        :model-value=\"[0, 1]\"\n        :step=\"1\"\n        :ticks=\"seasons\"\n        max=\"3\"\n        min=\"0\"\n        show-ticks=\"always\"\n        thumb-label=\"always\"\n        tick-size=\"4\"\n      >\n        <template v-slot:thumb-label=\"{ modelValue }\">\n          <v-icon :icon=\"season(modelValue)\" theme=\"dark\"></v-icon>\n        </template>\n      </v-range-slider>\n    </v-col>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const seasons = ref({\n    0: 'Winter',\n    1: 'Spring',\n    2: 'Summer',\n    3: 'Fall',\n  })\n  const icons = ref([\n    'mdi-snowflake',\n    'mdi-leaf',\n    'mdi-fire',\n    'mdi-water',\n  ])\n  function season (val) {\n    return icons.value[val]\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      seasons: {\n        0: 'Winter',\n        1: 'Spring',\n        2: 'Summer',\n        3: 'Fall',\n      },\n      icons: [\n        'mdi-snowflake',\n        'mdi-leaf',\n        'mdi-fire',\n        'mdi-water',\n      ],\n    }),\n\n    methods: {\n      season (val) {\n        return this.icons[val]\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Thumb Label",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001158",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001159",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-range-slider v-bind=\"props\"></v-range-slider>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-range-slider'\n  const model = ref('default')\n  const options = ['vertical']\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      direction: model.value === 'vertical' ? 'vertical' : undefined,\n      disabled: disabled.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-range-slider v-bind=\"props\"></v-range-slider>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-range-slider'\n  const model = ref('default')\n  const options = ['vertical']\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      direction: model.value === 'vertical' ? 'vertical' : undefined,\n      disabled: disabled.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001159",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001160",
    "text": "Component: v-ratings\nType: component_overview\n\n# v-ratings\n\nThe `v-rating` component is a specialized but important piece in building user widgets. Collecting user feedback via ratings is a simple analytic that can provide a lot of feedback to your product or application.",
    "display_content": "# v-ratings\n\nThe `v-rating` component is a specialized but important piece in building user widgets. Collecting user feedback via ratings is a simple analytic that can provide a lot of feedback to your product or application.",
    "metadata": {
      "component": "v-ratings",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001160",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001161",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-rating` component provides a simple interface for gathering user feedback.",
    "display_content": "# v-usage\n\nThe `v-rating` component provides a simple interface for gathering user feedback.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001161",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001162",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-rating](/api/v-rating/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-rating](/api/v-rating/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001162",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001163",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe `v-rating` component can be colored as you want, you can set both selected and not selected colors.\n\nAvailable sections: Color, Density, Clearable, Readonly, Hover effect, Labels, Icons, Length, Half increments, Size, Aria Label, Item slot, Custom labels slot, Misc, Card ratings, Misc Advanced, Misc Card Overview, Misc Card, Prop Clearable, Prop Color, Prop Density, Prop Half Increments, Prop Hover, Prop Icon Label, Prop Icons, Prop Item Labels, Prop Length, Prop Readonly, Prop Size, Slot Item Label, Slot Item, Usage",
    "display_content": "# v-examples\n\nThe `v-rating` component can be colored as you want, you can set both selected and not selected colors.\n\nAvailable sections: Color, Density, Clearable, Readonly, Hover effect, Labels, Icons, Length, Half increments, Size, Aria Label, Item slot, Custom labels slot, Misc, Card ratings, Misc Advanced, Misc Card Overview, Misc Card, Prop Clearable, Prop Color, Prop Density, Prop Half Increments, Prop Hover, Prop Icon Label, Prop Icons, Prop Item Labels, Prop Length, Prop Readonly, Prop Size, Slot Item Label, Slot Item, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001163",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001164",
    "text": "Component: v-examples\nSection: Color\nType: documentation\n\n## v-examples - Color\n\nThe `v-rating` component can be colored as you want, you can set both selected and not selected colors.\n\n<ExamplesExample file=\"v-rating/prop-color\" />",
    "display_content": "## v-examples - Color\n\nThe `v-rating` component can be colored as you want, you can set both selected and not selected colors.\n\n<ExamplesExample file=\"v-rating/prop-color\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001164",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001165",
    "text": "Component: v-examples\nSection: Density\nType: documentation\n\n## v-examples - Density\n\nControl the space occupied by `v-rating` items using the **density** prop.\n\n<ExamplesExample file=\"v-rating/prop-density\" />",
    "display_content": "## v-examples - Density\n\nControl the space occupied by `v-rating` items using the **density** prop.\n\n<ExamplesExample file=\"v-rating/prop-density\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001165",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001166",
    "text": "Component: v-examples\nSection: Clearable\nType: documentation\n\n## v-examples - Clearable\n\nClicking on a current rating value can reset the rating by using **clearable** prop.\n\n<ExamplesExample file=\"v-rating/prop-clearable\" />",
    "display_content": "## v-examples - Clearable\n\nClicking on a current rating value can reset the rating by using **clearable** prop.\n\n<ExamplesExample file=\"v-rating/prop-clearable\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Clearable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001166",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001167",
    "text": "Component: v-examples\nSection: Readonly\nType: documentation\n\n## v-examples - Readonly\n\nFor ratings that are not meant to be changed you can use **readonly** prop.\n\n<ExamplesExample file=\"v-rating/prop-readonly\" />",
    "display_content": "## v-examples - Readonly\n\nFor ratings that are not meant to be changed you can use **readonly** prop.\n\n<ExamplesExample file=\"v-rating/prop-readonly\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Readonly",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001167",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001168",
    "text": "Component: v-examples\nSection: Hover effect\nType: documentation\n\n## v-examples - Hover effect\n\nWhen using the **hover** prop, the rating icons will become a solid color and slightly increase its scale when the mouse is hovered over them.\n\n<ExamplesExample file=\"v-rating/prop-hover\" />",
    "display_content": "## v-examples - Hover effect\n\nWhen using the **hover** prop, the rating icons will become a solid color and slightly increase its scale when the mouse is hovered over them.\n\n<ExamplesExample file=\"v-rating/prop-hover\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Hover effect",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001168",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001169",
    "text": "Component: v-examples\nSection: Labels\nType: documentation\n\n## v-examples - Labels\n\nThe `v-rating` component can display labels above or below each item.\n\n<ExamplesExample file=\"v-rating/prop-item-labels\" />",
    "display_content": "## v-examples - Labels\n\nThe `v-rating` component can display labels above or below each item.\n\n<ExamplesExample file=\"v-rating/prop-item-labels\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Labels",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001169",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001170",
    "text": "Component: v-examples\nSection: Icons\nType: documentation\n\n## v-examples - Icons\n\nYou can use custom icons.\n\n<ExamplesExample file=\"v-rating/prop-icons\" />",
    "display_content": "## v-examples - Icons\n\nYou can use custom icons.\n\n<ExamplesExample file=\"v-rating/prop-icons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001170",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001171",
    "text": "Component: v-examples\nSection: Length\nType: documentation\n\n## v-examples - Length\n\nChange the number of items by modifying the the **length** prop.\n\n<ExamplesExample file=\"v-rating/prop-length\" />",
    "display_content": "## v-examples - Length\n\nChange the number of items by modifying the the **length** prop.\n\n<ExamplesExample file=\"v-rating/prop-length\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Length",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001171",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001172",
    "text": "Component: v-examples\nSection: Half increments\nType: documentation\n\n## v-examples - Half increments\n\nThe **half-increments** prop increases the granularity of the ratings, allow for `.5` values as well.\n\n<ExamplesExample file=\"v-rating/prop-half-increments\" />",
    "display_content": "## v-examples - Half increments\n\nThe **half-increments** prop increases the granularity of the ratings, allow for `.5` values as well.\n\n<ExamplesExample file=\"v-rating/prop-half-increments\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Half increments",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001172",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001173",
    "text": "Component: v-examples\nSection: Size\nType: documentation\n\n## v-examples - Size\n\nUtilize the same sizing classes available in `v-icon` or provide your own with the **size** prop.\n\n<ExamplesExample file=\"v-rating/prop-size\" />",
    "display_content": "## v-examples - Size\n\nUtilize the same sizing classes available in `v-icon` or provide your own with the **size** prop.\n\n<ExamplesExample file=\"v-rating/prop-size\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Size",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001173",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001174",
    "text": "Component: v-examples\nSection: Aria Label\nType: documentation\n\n## v-examples - Aria Label\n\nProvide a label to assistive technologies for each item.\n\n<ExamplesExample file=\"v-rating/prop-icon-label\" />",
    "display_content": "## v-examples - Aria Label\n\nProvide a label to assistive technologies for each item.\n\n<ExamplesExample file=\"v-rating/prop-icon-label\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Aria Label",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001174",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001175",
    "text": "Component: v-examples\nSection: Item slot\nType: slots_reference\n\n## v-examples - Item slot\n\nSlots enable advanced customization possibilities and provide you with more freedom in how you display the rating.\n\n<ExamplesExample file=\"v-rating/slot-item\" />",
    "display_content": "## v-examples - Item slot\n\nSlots enable advanced customization possibilities and provide you with more freedom in how you display the rating.\n\n<ExamplesExample file=\"v-rating/slot-item\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Item slot",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001175",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001176",
    "text": "Component: v-examples\nSection: Custom labels slot\nType: slots_reference\n\n## v-examples - Custom labels slot\n\nAny arbitrary content could be displayed for labels in **item-label** slot.\n\n<ExamplesExample file=\"v-rating/slot-item-label\" />",
    "display_content": "## v-examples - Custom labels slot\n\nAny arbitrary content could be displayed for labels in **item-label** slot.\n\n<ExamplesExample file=\"v-rating/slot-item-label\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom labels slot",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001176",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001177",
    "text": "Component: v-examples\nSection: Misc\nType: documentation\n\n## v-examples - Misc\n\n<!-- #### Advanced usage\n\nThe `v-rating` component fits right in with existing components. Build truly complex examples with rich features and beautiful designs.\n\n<ExamplesExample file=\"v-rating/misc-advanced\" /> -->",
    "display_content": "## v-examples - Misc\n\n<!-- #### Advanced usage\n\nThe `v-rating` component fits right in with existing components. Build truly complex examples with rich features and beautiful designs.\n\n<ExamplesExample file=\"v-rating/misc-advanced\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Misc",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001177",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001178",
    "text": "Component: v-examples\nSection: Card ratings\nType: documentation\n\n## v-examples - Card ratings\n\nThe rating component pairs well with products allowing you to gather and display customer feedback.\n\n<ExamplesExample file=\"v-rating/misc-card\" />\n\n<ExamplesExample file=\"v-rating/misc-card-overview\" />",
    "display_content": "## v-examples - Card ratings\n\nThe rating component pairs well with products allowing you to gather and display customer feedback.\n\n<ExamplesExample file=\"v-rating/misc-card\" />\n\n<ExamplesExample file=\"v-rating/misc-card-overview\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Card ratings",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001178",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001179",
    "text": "Component: v-examples\nSection: Misc Advanced\nType: code_example\n\n## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto overflow-hidden\"\n    max-width=\"600\"\n  >\n    <v-row>\n      <v-col\n        class=\"d-flex\"\n        cols=\"6\"\n      >\n        <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite1.png\"></v-img>\n      </v-col>\n\n      <v-col cols=\"6\">\n        <v-container class=\"pa-0 ps-2 my-n1\">\n          <v-row>\n            <v-col\n              class=\"d-flex\"\n              cols=\"7\"\n            >\n              <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite2.png\"></v-img>\n            </v-col>\n\n            <v-col\n              class=\"d-flex\"\n              cols=\"5\"\n            >\n              <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite3.png\"></v-img>\n            </v-col>\n\n            <v-col\n              class=\"d-flex\"\n              cols=\"5\"\n            >\n              <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite4.png\"></v-img>\n            </v-col>\n\n            <v-col\n              class=\"d-flex\"\n              cols=\"7\"\n            >\n              <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite5.png\"></v-img>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-col>\n    </v-row>\n\n    <v-card-title class=\"align-start\">\n      <div>\n        <span class=\"text-h5\">FORTNITE</span>\n        <div class=\"text-grey font-weight-light\">\n          Video game\n        </div>\n      </div>\n\n      <v-spacer></v-spacer>\n\n      <v-dialog\n        v-model=\"dialog\"\n        width=\"400\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-icon v-bind=\"props\" icon=\"mdi-share-variant\"></v-icon>\n        </template>\n\n        <v-card>\n          <v-card-title class=\"d-flex\">\n            <span class=\"text-h6 font-weight-bold\">Share</span>\n            <v-spacer></v-spacer>\n\n            <v-btn class=\"mx-0\" icon @click=\"dialog = false\">\n              <v-icon>mdi-close-circle-outline</v-icon>\n            </v-btn>\n          </v-card-title>\n\n          <v-list>\n            <v-list-item prepend-icon=\"mdi-facebook\" title=\"Facebook\"></v-list-item>\n            <v-list-item prepend-icon=\"mdi-twitter\" title=\"Twitter\"></v-list-item>\n            <v-list-item prepend-icon=\"mdi-email\" title=\"Email\"></v-list-item>\n          </v-list>\n\n          <v-text-field\n            ref=\"link\"\n            :label=\"copied ? 'Link copied' : 'Click to copy link'\"\n            class=\"pa-4\"\n            model-value=\"https://g.co/kgs/nkrK43\"\n            readonly\n            @click=\"copy\"\n          ></v-text-field>\n        </v-card>\n      </v-dialog>\n    </v-card-title>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <span class=\"ps-2 text-grey-darken-2 font-weight-light text-caption\">16,544 reviews</span>\n\n      <v-spacer></v-spacer>\n\n      <v-rating\n        v-model=\"rating\"\n        length=\"10\"\n        readonly\n      >\n        <template v-slot:item=\"props\">\n          <v-icon\n            :color=\"props.isFilled ? 'purple-darken-4' : ''\"\n            :icon=\"`mdi-numeric-${props.index}-box`\"\n            size=\"large\"\n          ></v-icon>\n        </template>\n      </v-rating>\n    </v-card-actions>\n    <div class=\"pa-4 pt-0 text-caption\">\n      <em>Portions of the materials used are trademarks and/or copyrighted works of Epic Games, Inc. All rights reserved by Epic. This material is not official and is not endorsed by Epic.</em>\n    </div>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const link = ref()\n\n  const copied = ref(false)\n  const dialog = ref(false)\n  const rating = ref(10)\n\n  function copy () {\n    link.value.focus()\n    document.execCommand('selectAll', false, null)\n    copied.value = document.execCommand('copy')\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      copied: false,\n      dialog: false,\n      rating: 10,\n    }),\n\n    methods: {\n      copy () {\n        this.$refs.link.focus()\n\n        document.execCommand('selectAll', false, null)\n\n        this.copied = document.execCommand('copy')\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto overflow-hidden\"\n    max-width=\"600\"\n  >\n    <v-row>\n      <v-col\n        class=\"d-flex\"\n        cols=\"6\"\n      >\n        <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite1.png\"></v-img>\n      </v-col>\n\n      <v-col cols=\"6\">\n        <v-container class=\"pa-0 ps-2 my-n1\">\n          <v-row>\n            <v-col\n              class=\"d-flex\"\n              cols=\"7\"\n            >\n              <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite2.png\"></v-img>\n            </v-col>\n\n            <v-col\n              class=\"d-flex\"\n              cols=\"5\"\n            >\n              <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite3.png\"></v-img>\n            </v-col>\n\n            <v-col\n              class=\"d-flex\"\n              cols=\"5\"\n            >\n              <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite4.png\"></v-img>\n            </v-col>\n\n            <v-col\n              class=\"d-flex\"\n              cols=\"7\"\n            >\n              <v-img src=\"https://cdn.vuetifyjs.com/images/ratings/fortnite5.png\"></v-img>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-col>\n    </v-row>\n\n    <v-card-title class=\"align-start\">\n      <div>\n        <span class=\"text-h5\">FORTNITE</span>\n        <div class=\"text-grey font-weight-light\">\n          Video game\n        </div>\n      </div>\n\n      <v-spacer></v-spacer>\n\n      <v-dialog\n        v-model=\"dialog\"\n        width=\"400\"\n      >\n        <template v-slot:activator=\"{ props }\">\n          <v-icon v-bind=\"props\" icon=\"mdi-share-variant\"></v-icon>\n        </template>\n\n        <v-card>\n          <v-card-title class=\"d-flex\">\n            <span class=\"text-h6 font-weight-bold\">Share</span>\n            <v-spacer></v-spacer>\n\n            <v-btn class=\"mx-0\" icon @click=\"dialog = false\">\n              <v-icon>mdi-close-circle-outline</v-icon>\n            </v-btn>\n          </v-card-title>\n\n          <v-list>\n            <v-list-item prepend-icon=\"mdi-facebook\" title=\"Facebook\"></v-list-item>\n            <v-list-item prepend-icon=\"mdi-twitter\" title=\"Twitter\"></v-list-item>\n            <v-list-item prepend-icon=\"mdi-email\" title=\"Email\"></v-list-item>\n          </v-list>\n\n          <v-text-field\n            ref=\"link\"\n            :label=\"copied ? 'Link copied' : 'Click to copy link'\"\n            class=\"pa-4\"\n            model-value=\"https://g.co/kgs/nkrK43\"\n            readonly\n            @click=\"copy\"\n          ></v-text-field>\n        </v-card>\n      </v-dialog>\n    </v-card-title>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <span class=\"ps-2 text-grey-darken-2 font-weight-light text-caption\">16,544 reviews</span>\n\n      <v-spacer></v-spacer>\n\n      <v-rating\n        v-model=\"rating\"\n        length=\"10\"\n        readonly\n      >\n        <template v-slot:item=\"props\">\n          <v-icon\n            :color=\"props.isFilled ? 'purple-darken-4' : ''\"\n            :icon=\"`mdi-numeric-${props.index}-box`\"\n            size=\"large\"\n          ></v-icon>\n        </template>\n      </v-rating>\n    </v-card-actions>\n    <div class=\"pa-4 pt-0 text-caption\">\n      <em>Portions of the materials used are trademarks and/or copyrighted works of Epic Games, Inc. All rights reserved by Epic. This material is not official and is not endorsed by Epic.</em>\n    </div>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const link = ref()\n\n  const copied = ref(false)\n  const dialog = ref(false)\n  const rating = ref(10)\n\n  function copy () {\n    link.value.focus()\n    document.execCommand('selectAll', false, null)\n    copied.value = document.execCommand('copy')\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      copied: false,\n      dialog: false,\n      rating: 10,\n    }),\n\n    methods: {\n      copy () {\n        this.$refs.link.focus()\n\n        document.execCommand('selectAll', false, null)\n\n        this.copied = document.execCommand('copy')\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Advanced",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001179",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001180",
    "text": "Component: v-examples\nSection: Misc Card Overview\nType: code_example\n\n## v-examples - Misc Card Overview\n\n```vue\n<template>\n  <v-card\n    class=\"d-flex flex-column mx-auto py-8\"\n    elevation=\"10\"\n    height=\"500\"\n    width=\"360\"\n  >\n    <div class=\"d-flex justify-center mt-auto text-h5 \">\n      Rating overview\n    </div>\n\n    <div class=\"d-flex align-center flex-column my-auto\">\n      <div class=\"text-h2 mt-5\">\n        3.5\n        <span class=\"text-h6 ml-n3\">/5</span>\n      </div>\n\n      <v-rating\n        :model-value=\"3.5\"\n        color=\"yellow-darken-3\"\n        half-increments\n      ></v-rating>\n      <div class=\"px-3\">3,360 ratings</div>\n    </div>\n\n    <v-list\n      bg-color=\"transparent\"\n      class=\"d-flex flex-column-reverse\"\n      density=\"compact\"\n    >\n      <v-list-item v-for=\"(rating,i) in 5\" :key=\"i\">\n        <v-progress-linear\n          :model-value=\"rating * 15\"\n          class=\"mx-n5\"\n          color=\"yellow-darken-3\"\n          height=\"20\"\n          rounded\n        ></v-progress-linear>\n\n        <template v-slot:prepend>\n          <span>{{ rating }}</span>\n          <v-icon class=\"mx-3\" icon=\"mdi-star\"></v-icon>\n        </template>\n\n        <template v-slot:append>\n          <div class=\"rating-values\">\n            <span class=\"d-flex justify-end\"> {{ rating * 224 }} </span>\n          </div>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<style>\n.rating-values {\n   width: 25px;\n}\n</style>\n\n```",
    "display_content": "## v-examples - Misc Card Overview\n\n```vue\n<template>\n  <v-card\n    class=\"d-flex flex-column mx-auto py-8\"\n    elevation=\"10\"\n    height=\"500\"\n    width=\"360\"\n  >\n    <div class=\"d-flex justify-center mt-auto text-h5 \">\n      Rating overview\n    </div>\n\n    <div class=\"d-flex align-center flex-column my-auto\">\n      <div class=\"text-h2 mt-5\">\n        3.5\n        <span class=\"text-h6 ml-n3\">/5</span>\n      </div>\n\n      <v-rating\n        :model-value=\"3.5\"\n        color=\"yellow-darken-3\"\n        half-increments\n      ></v-rating>\n      <div class=\"px-3\">3,360 ratings</div>\n    </div>\n\n    <v-list\n      bg-color=\"transparent\"\n      class=\"d-flex flex-column-reverse\"\n      density=\"compact\"\n    >\n      <v-list-item v-for=\"(rating,i) in 5\" :key=\"i\">\n        <v-progress-linear\n          :model-value=\"rating * 15\"\n          class=\"mx-n5\"\n          color=\"yellow-darken-3\"\n          height=\"20\"\n          rounded\n        ></v-progress-linear>\n\n        <template v-slot:prepend>\n          <span>{{ rating }}</span>\n          <v-icon class=\"mx-3\" icon=\"mdi-star\"></v-icon>\n        </template>\n\n        <template v-slot:append>\n          <div class=\"rating-values\">\n            <span class=\"d-flex justify-end\"> {{ rating * 224 }} </span>\n          </div>\n        </template>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n\n<style>\n.rating-values {\n   width: 25px;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Card Overview",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001180",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001181",
    "text": "Component: v-examples\nSection: Misc Card\nType: code_example\n\n## v-examples - Misc Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"purple\"\n    elevation=\"10\"\n    width=\"360\"\n  >\n    <div class=\"d-flex justify-between\">\n      <v-card-title class=\"flex-grow-1 flex-column align-start\">\n        <div class=\"text-h5\">\n          Halycon Days\n        </div>\n        <div class=\"text-h6 font-weight-thin\">Ellie Goulding</div>\n\n        <div class=\"text-h6 font-weight-thin\">(2013)</div>\n      </v-card-title>\n\n      <v-img\n        class=\"flex-grow-0\"\n        height=\"125px\"\n        src=\"https://cdn.vuetifyjs.com/images/cards/halcyon.png\"\n        style=\"flex-basis: 125px\"\n      ></v-img>\n    </div>\n\n    <v-divider></v-divider>\n\n    <v-card-actions class=\"pa-4\">\n      Rate this album\n\n      <v-spacer></v-spacer>\n\n      <span class=\"text-grey-lighten-2 text-caption me-2\">\n        ({{ rating }})\n      </span>\n\n      <v-rating\n        v-model=\"rating\"\n        active-color=\"yellow-accent-4\"\n        color=\"white\"\n        size=\"18\"\n        half-increments\n        hover\n      ></v-rating>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(4.5)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 4.5 }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Card\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"purple\"\n    elevation=\"10\"\n    width=\"360\"\n  >\n    <div class=\"d-flex justify-between\">\n      <v-card-title class=\"flex-grow-1 flex-column align-start\">\n        <div class=\"text-h5\">\n          Halycon Days\n        </div>\n        <div class=\"text-h6 font-weight-thin\">Ellie Goulding</div>\n\n        <div class=\"text-h6 font-weight-thin\">(2013)</div>\n      </v-card-title>\n\n      <v-img\n        class=\"flex-grow-0\"\n        height=\"125px\"\n        src=\"https://cdn.vuetifyjs.com/images/cards/halcyon.png\"\n        style=\"flex-basis: 125px\"\n      ></v-img>\n    </div>\n\n    <v-divider></v-divider>\n\n    <v-card-actions class=\"pa-4\">\n      Rate this album\n\n      <v-spacer></v-spacer>\n\n      <span class=\"text-grey-lighten-2 text-caption me-2\">\n        ({{ rating }})\n      </span>\n\n      <v-rating\n        v-model=\"rating\"\n        active-color=\"yellow-accent-4\"\n        color=\"white\"\n        size=\"18\"\n        half-increments\n        hover\n      ></v-rating>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(4.5)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 4.5 }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001181",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001182",
    "text": "Component: v-examples\nSection: Prop Clearable\nType: code_example\n\n## v-examples - Prop Clearable\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      clearable\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Clearable\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      clearable\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Clearable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001182",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001183",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      active-color=\"blue\"\n      color=\"orange-lighten-1\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 3 }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      active-color=\"blue\"\n      color=\"orange-lighten-1\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 3 }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001183",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001184",
    "text": "Component: v-examples\nSection: Prop Density\nType: code_example\n\n## v-examples - Prop Density\n\n```vue\n<template>\n  <div class=\"d-flex flex-column align-center justify-center\">\n    <v-rating\n      v-model=\"rating\"\n      class=\"ma-2\"\n      density=\"default\"\n    ></v-rating>\n\n    <v-rating\n      v-model=\"rating\"\n      class=\"ma-2\"\n      density=\"comfortable\"\n    ></v-rating>\n\n    <v-rating\n      v-model=\"rating\"\n      class=\"ma-2\"\n      density=\"compact\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 3 }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Density\n\n```vue\n<template>\n  <div class=\"d-flex flex-column align-center justify-center\">\n    <v-rating\n      v-model=\"rating\"\n      class=\"ma-2\"\n      density=\"default\"\n    ></v-rating>\n\n    <v-rating\n      v-model=\"rating\"\n      class=\"ma-2\"\n      density=\"comfortable\"\n    ></v-rating>\n\n    <v-rating\n      v-model=\"rating\"\n      class=\"ma-2\"\n      density=\"compact\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 3 }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Density",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001184",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001185",
    "text": "Component: v-examples\nSection: Prop Half Increments\nType: code_example\n\n## v-examples - Prop Half Increments\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      half-increments\n      hover\n    ></v-rating>\n    <pre>{{ rating }}</pre>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3.5)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3.5,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Half Increments\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      half-increments\n      hover\n    ></v-rating>\n    <pre>{{ rating }}</pre>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3.5)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3.5,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Half Increments",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001185",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001186",
    "text": "Component: v-examples\nSection: Prop Hover\nType: code_example\n\n## v-examples - Prop Hover\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      hover\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Hover\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      hover\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hover",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001186",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001187",
    "text": "Component: v-examples\nSection: Prop Icon Label\nType: code_example\n\n## v-examples - Prop Icon Label\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      item-aria-label=\"custom icon label text {0} of {1}\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(4)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 4 }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Icon Label\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      item-aria-label=\"custom icon label text {0} of {1}\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(4)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 4 }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Icon Label",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001187",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001188",
    "text": "Component: v-examples\nSection: Prop Icons\nType: code_example\n\n## v-examples - Prop Icons\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      empty-icon=\"mdi-circle-outline\"\n      full-icon=\"mdi-circle\"\n      half-increments\n      hover\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3.5)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3.5,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Icons\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      empty-icon=\"mdi-circle-outline\"\n      full-icon=\"mdi-circle\"\n      half-increments\n      hover\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3.5)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3.5,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001188",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001189",
    "text": "Component: v-examples\nSection: Prop Item Labels\nType: code_example\n\n## v-examples - Prop Item Labels\n\n```vue\n<template>\n  <div class=\"d-flex align-center justify-center flex-column\">\n    <v-rating\n      v-model=\"rating\"\n      :item-labels=\"['sad', '', '', '', 'happy']\"\n      class=\"ma-2\"\n      item-label-position=\"top\"\n    ></v-rating>\n\n    <v-rating\n      v-model=\"rating\"\n      :item-labels=\"['sad', '', '', '', 'happy']\"\n      class=\"ma-2\"\n      item-label-position=\"bottom\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(4)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 4 }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Item Labels\n\n```vue\n<template>\n  <div class=\"d-flex align-center justify-center flex-column\">\n    <v-rating\n      v-model=\"rating\"\n      :item-labels=\"['sad', '', '', '', 'happy']\"\n      class=\"ma-2\"\n      item-label-position=\"top\"\n    ></v-rating>\n\n    <v-rating\n      v-model=\"rating\"\n      :item-labels=\"['sad', '', '', '', 'happy']\"\n      class=\"ma-2\"\n      item-label-position=\"bottom\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(4)\n</script>\n\n<script>\n  export default {\n    data: () => ({ rating: 4 }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Item Labels",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001189",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001190",
    "text": "Component: v-examples\nSection: Prop Length\nType: code_example\n\n## v-examples - Prop Length\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      length=\"10\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(2)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 2,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Length\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      length=\"10\"\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(2)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 2,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Length",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001190",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001191",
    "text": "Component: v-examples\nSection: Prop Readonly\nType: code_example\n\n## v-examples - Prop Readonly\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      readonly\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Readonly\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      readonly\n    ></v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(3)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 3,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Readonly",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001191",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001192",
    "text": "Component: v-examples\nSection: Prop Size\nType: code_example\n\n## v-examples - Prop Size\n\n```vue\n<template>\n  <div class=\"d-flex flex-column align-center\">\n    <v-rating\n      model-value=\"3\"\n      size=\"x-small\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n      size=\"small\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n      size=\"large\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n      size=\"x-large\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n      size=\"72\"\n    ></v-rating>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Size\n\n```vue\n<template>\n  <div class=\"d-flex flex-column align-center\">\n    <v-rating\n      model-value=\"3\"\n      size=\"x-small\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n      size=\"small\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n      size=\"large\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n      size=\"x-large\"\n    ></v-rating>\n\n    <v-rating\n      model-value=\"3\"\n      size=\"72\"\n    ></v-rating>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Size",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001192",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001193",
    "text": "Component: v-examples\nSection: Slot Item Label\nType: code_example\n\n## v-examples - Slot Item Label\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      :item-labels=\"labels\"\n    >\n      <template v-slot:item-label=\"props\">\n        <span\n          :class=\"`text-${colors[props.index]}`\"\n          class=\"font-weight-black text-caption\"\n        >\n          {{ props.label }}\n        </span>\n      </template>\n    </v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(4)\n  const colors = ref(['red', 'orange', 'grey', 'cyan', 'green'])\n  const labels = ref(['bad', 'so so', 'ok', 'good', 'great'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 4,\n      colors: ['red', 'orange', 'grey', 'cyan', 'green'],\n      labels: ['bad', 'so so', 'ok', 'good', 'great'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Item Label\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating\n      v-model=\"rating\"\n      :item-labels=\"labels\"\n    >\n      <template v-slot:item-label=\"props\">\n        <span\n          :class=\"`text-${colors[props.index]}`\"\n          class=\"font-weight-black text-caption\"\n        >\n          {{ props.label }}\n        </span>\n      </template>\n    </v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rating = ref(4)\n  const colors = ref(['red', 'orange', 'grey', 'cyan', 'green'])\n  const labels = ref(['bad', 'so so', 'ok', 'good', 'great'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rating: 4,\n      colors: ['red', 'orange', 'grey', 'cyan', 'green'],\n      labels: ['bad', 'so so', 'ok', 'good', 'great'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Item Label",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001193",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001194",
    "text": "Component: v-examples\nSection: Slot Item\nType: code_example\n\n## v-examples - Slot Item\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating v-model=\"rating\">\n      <template v-slot:item=\"props\">\n        <v-icon\n          :color=\"props.isFilled ? colors[props.index] : 'grey-lighten-1'\"\n          size=\"large\"\n        >\n          {{ props.isFilled ? 'mdi-star-circle' : 'mdi-star-circle-outline' }}\n        </v-icon>\n      </template>\n    </v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const colors = ['green', 'purple', 'orange', 'indigo', 'red']\n\n  const rating = ref(4.5)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      colors: ['green', 'purple', 'orange', 'indigo', 'red'],\n      rating: 4.5,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Item\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-rating v-model=\"rating\">\n      <template v-slot:item=\"props\">\n        <v-icon\n          :color=\"props.isFilled ? colors[props.index] : 'grey-lighten-1'\"\n          size=\"large\"\n        >\n          {{ props.isFilled ? 'mdi-star-circle' : 'mdi-star-circle-outline' }}\n        </v-icon>\n      </template>\n    </v-rating>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const colors = ['green', 'purple', 'orange', 'indigo', 'red']\n\n  const rating = ref(4.5)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      colors: ['green', 'purple', 'orange', 'indigo', 'red'],\n      rating: 4.5,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Item",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001194",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001195",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"selectedOption\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"['Hearts']\"\n  >\n    <div class=\"text-center\">\n      <v-rating v-bind=\"props\"></v-rating>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"options['half-increments']\" label=\"Half increments\"></v-checkbox>\n      <v-checkbox v-model=\"options.hover\" label=\"Hover\"></v-checkbox>\n      <v-checkbox v-model=\"options.readonly\" label=\"Readonly\"></v-checkbox>\n\n      <br>\n\n      <v-slider v-model=\"options.length\" :max=\"8\" :min=\"1\" label=\"Length\"></v-slider>\n      <v-slider v-model=\"options.size\" :max=\"128\" :min=\"16\" label=\"Size\"></v-slider>\n      <v-slider v-model=\"options['model-value']\" :max=\"options.length\" :min=\"0\" :step=\"options['half-increments'] ? 0.5 : 1\" label=\"Value\"></v-slider>\n\n      <br>\n\n      <v-select v-model=\"options.color\" :items=\"colorOptions\" label=\"Color\"></v-select>\n      <v-select v-model=\"options['active-color']\" :items=\"colorOptions\" label=\"Active color\"></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const selectedOption = ref()\n\n  const options = reactive({\n    'half-increments': false,\n    hover: true,\n    readonly: false,\n\n    length: 5,\n    size: 32,\n    'model-value': 3,\n\n    color: null,\n    'active-color': 'primary',\n  })\n\n  const name = 'v-rating'\n  const props = computed(() => {\n    return Object.fromEntries(\n      Object.entries({\n        ...options,\n        ...(selectedOption.value === 'Hearts' ? {\n          'empty-icon': 'mdi-heart-outline',\n          'half-icon': 'mdi-heart-half-full',\n          'full-icon': 'mdi-heart',\n        } : undefined),\n      }).filter(([key, value]) => value)\n    )\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)} />`\n  })\n\n  const colorOptions = [\n    'primary',\n    'warning',\n    'green',\n    'red',\n    'blue',\n    'error',\n    'teal',\n    'red-lighten-3',\n  ]\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"selectedOption\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"['Hearts']\"\n  >\n    <div class=\"text-center\">\n      <v-rating v-bind=\"props\"></v-rating>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"options['half-increments']\" label=\"Half increments\"></v-checkbox>\n      <v-checkbox v-model=\"options.hover\" label=\"Hover\"></v-checkbox>\n      <v-checkbox v-model=\"options.readonly\" label=\"Readonly\"></v-checkbox>\n\n      <br>\n\n      <v-slider v-model=\"options.length\" :max=\"8\" :min=\"1\" label=\"Length\"></v-slider>\n      <v-slider v-model=\"options.size\" :max=\"128\" :min=\"16\" label=\"Size\"></v-slider>\n      <v-slider v-model=\"options['model-value']\" :max=\"options.length\" :min=\"0\" :step=\"options['half-increments'] ? 0.5 : 1\" label=\"Value\"></v-slider>\n\n      <br>\n\n      <v-select v-model=\"options.color\" :items=\"colorOptions\" label=\"Color\"></v-select>\n      <v-select v-model=\"options['active-color']\" :items=\"colorOptions\" label=\"Active color\"></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const selectedOption = ref()\n\n  const options = reactive({\n    'half-increments': false,\n    hover: true,\n    readonly: false,\n\n    length: 5,\n    size: 32,\n    'model-value': 3,\n\n    color: null,\n    'active-color': 'primary',\n  })\n\n  const name = 'v-rating'\n  const props = computed(() => {\n    return Object.fromEntries(\n      Object.entries({\n        ...options,\n        ...(selectedOption.value === 'Hearts' ? {\n          'empty-icon': 'mdi-heart-outline',\n          'half-icon': 'mdi-heart-half-full',\n          'full-icon': 'mdi-heart',\n        } : undefined),\n      }).filter(([key, value]) => value)\n    )\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)} />`\n  })\n\n  const colorOptions = [\n    'primary',\n    'warning',\n    'green',\n    'red',\n    'blue',\n    'error',\n    'teal',\n    'red-lighten-3',\n  ]\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001195",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001196",
    "text": "Component: v-selects\nType: component_overview\n\n# v-selects\n\nSelect fields components are used for collecting user provided information from a list of options.",
    "display_content": "# v-selects\n\nSelect fields components are used for collecting user provided information from a list of options.",
    "metadata": {
      "component": "v-selects",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001196",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001197",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-select](/api/v-select/) | Primary Component | | [v-autocomplete](/api/v-autocomplete/) | A select component that allows for advanced filtering | | [v-combobox](/api/v-combobox/) | A select component that allows for filtering and custom values |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-select](/api/v-select/) | Primary Component | | [v-autocomplete](/api/v-autocomplete/) | A select component that allows for advanced filtering | | [v-combobox](/api/v-combobox/) | A select component that allows for filtering and custom values |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001197",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001198",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: error",
    "display_content": "# v-caveats\n\n::: error",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001198",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001199",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-select` component is meant to be a direct replacement for a standard `<select>` element. It is commonly used with [v-form](/components/forms/) and other inputs & controls.\n\nAvailable sections: Props, Density, Multiple, Chips, Readonly, Disabled, Custom title and value, Menu props, Custom item props, Slots, Item, Append and prepend item, Selection, Prop Chips, Prop Custom Title And Value, Prop Dense, Prop Disabled, Prop Item Props, Prop Menu Props, Prop Multiple, Prop Readonly, Slot Append And Prepend Item, Slot Item, Slot Selection, Usage",
    "display_content": "# v-guide\n\nThe `v-select` component is meant to be a direct replacement for a standard `<select>` element. It is commonly used with [v-form](/components/forms/) and other inputs & controls.\n\nAvailable sections: Props, Density, Multiple, Chips, Readonly, Disabled, Custom title and value, Menu props, Custom item props, Slots, Item, Append and prepend item, Selection, Prop Chips, Prop Custom Title And Value, Prop Dense, Prop Disabled, Prop Item Props, Prop Menu Props, Prop Multiple, Prop Readonly, Slot Append And Prepend Item, Slot Item, Slot Selection, Usage",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001199",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001200",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nAll form inputs have a massive API that make it super easy to configure everything just the way you want it.",
    "display_content": "## v-guide - Props\n\nAll form inputs have a massive API that make it super easy to configure everything just the way you want it.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001200",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001201",
    "text": "Component: v-guide\nSection: Density\nType: documentation\n\n## v-guide - Density\n\nYou can use **density** prop to adjust vertical spacing within the component.\n\n<ExamplesExample file=\"v-select/prop-dense\" />",
    "display_content": "## v-guide - Density\n\nYou can use **density** prop to adjust vertical spacing within the component.\n\n<ExamplesExample file=\"v-select/prop-dense\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001201",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001202",
    "text": "Component: v-guide\nSection: Multiple\nType: documentation\n\n## v-guide - Multiple\n\nThe **multiple** prop allows for multiple selections.\n\n<ExamplesExample file=\"v-select/prop-multiple\" />",
    "display_content": "## v-guide - Multiple\n\nThe **multiple** prop allows for multiple selections.\n\n<ExamplesExample file=\"v-select/prop-multiple\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Multiple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001202",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001203",
    "text": "Component: v-guide\nSection: Chips\nType: documentation\n\n## v-guide - Chips\n\nDisplay selected items as chips with the **chips** prop.\n\n<ExamplesExample file=\"v-select/prop-chips\" />",
    "display_content": "## v-guide - Chips\n\nDisplay selected items as chips with the **chips** prop.\n\n<ExamplesExample file=\"v-select/prop-chips\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Chips",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001203",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001204",
    "text": "Component: v-guide\nSection: Readonly\nType: documentation\n\n## v-guide - Readonly\n\nYou can use the **readonly** prop on `v-select` which will prevent a user from changing its value.\n\n<ExamplesExample file=\"v-select/prop-readonly\" />",
    "display_content": "## v-guide - Readonly\n\nYou can use the **readonly** prop on `v-select` which will prevent a user from changing its value.\n\n<ExamplesExample file=\"v-select/prop-readonly\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Readonly",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001204",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001205",
    "text": "Component: v-guide\nSection: Disabled\nType: documentation\n\n## v-guide - Disabled\n\nApplying the **disabled** prop to a `v-select` will prevent a user from interacting with the component.\n\n<ExamplesExample file=\"v-select/prop-disabled\" />",
    "display_content": "## v-guide - Disabled\n\nApplying the **disabled** prop to a `v-select` will prevent a user from interacting with the component.\n\n<ExamplesExample file=\"v-select/prop-disabled\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001205",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001206",
    "text": "Component: v-guide\nSection: Custom title and value\nType: documentation\n\n## v-guide - Custom title and value\n\nYou can specify the specific properties within your items array that correspond to the title and value fields. By default, this is **title** and **value**. In this example we also use the **return-object** prop which will return the entire object of the selected item on selection.\n\n<ExamplesExample file=\"v-select/prop-custom-title-and-value\" />",
    "display_content": "## v-guide - Custom title and value\n\nYou can specify the specific properties within your items array that correspond to the title and value fields. By default, this is **title** and **value**. In this example we also use the **return-object** prop which will return the entire object of the selected item on selection.\n\n<ExamplesExample file=\"v-select/prop-custom-title-and-value\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Custom title and value",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001206",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001207",
    "text": "Component: v-guide\nSection: Menu props\nType: api_reference\n\n## v-guide - Menu props\n\nCustom props can be passed directly to `v-menu` using **menu-props** prop. In this example a scrim as added to the select and the menu closes when you scroll.\n\n<ExamplesExample file=\"v-select/prop-menu-props\" />",
    "display_content": "## v-guide - Menu props\n\nCustom props can be passed directly to `v-menu` using **menu-props** prop. In this example a scrim as added to the select and the menu closes when you scroll.\n\n<ExamplesExample file=\"v-select/prop-menu-props\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Menu props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001207",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001208",
    "text": "Component: v-guide\nSection: Custom item props\nType: code_example\n\n## v-guide - Custom item props\n\n`item-title` and `item-value` are provided for convenience, and additional props can be passed to list items either through the **item** slot (see below) or with the **itemProps** prop.\nSimilar to title and value, it has a default value of `\"props\"`, which will pass everything in the `props` key of each item object to the list item.\n\n```js\nconst items = [\n  {\n    title: 'John',\n    props: { subtitle: 'Engineering' },\n  },\n]\n```",
    "display_content": "## v-guide - Custom item props\n\n`item-title` and `item-value` are provided for convenience, and additional props can be passed to list items either through the **item** slot (see below) or with the **itemProps** prop.\nSimilar to title and value, it has a default value of `\"props\"`, which will pass everything in the `props` key of each item object to the list item.\n\n```js\nconst items = [\n  {\n    title: 'John',\n    props: { subtitle: 'Engineering' },\n  },\n]\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Custom item props",
      "content_type": "code_example",
      "language": "js",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001208",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001209",
    "text": "Component: v-guide\nSection: Custom item props\nType: code_example\n\n## v-guide - Custom item props\n\n`:item-props=\"true\"` will use the entire item object as props. This overrides `item-title` and `item-value`.\n\n```js\nconst items = [\n  {\n    title: 'John',\n    subtitle: 'Engineering',\n  },\n]\n```",
    "display_content": "## v-guide - Custom item props\n\n`:item-props=\"true\"` will use the entire item object as props. This overrides `item-title` and `item-value`.\n\n```js\nconst items = [\n  {\n    title: 'John',\n    subtitle: 'Engineering',\n  },\n]\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Custom item props",
      "content_type": "code_example",
      "language": "js",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001209",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001210",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe `v-select` component offers slots that make it easy to customize the output of certain parts of the component. This includes the **prepend** and **append** slots, the **selection** slot, and the **no-data** slot.",
    "display_content": "## v-guide - Slots\n\nThe `v-select` component offers slots that make it easy to customize the output of certain parts of the component. This includes the **prepend** and **append** slots, the **selection** slot, and the **no-data** slot.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001210",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001211",
    "text": "Component: v-guide\nSection: Item\nType: documentation\n\n## v-guide - Item\n\nThe item slot is used to change how items are rendered in the list. It provides `item`, an [InternalItem](/api/v-select/#slots-item) object containing the transformed item-title and item-value; and `props`, an object containing the props and events that would normally be bound to the list item.\n\n<ExamplesExample file=\"v-select/slot-item\" />",
    "display_content": "## v-guide - Item\n\nThe item slot is used to change how items are rendered in the list. It provides `item`, an [InternalItem](/api/v-select/#slots-item) object containing the transformed item-title and item-value; and `props`, an object containing the props and events that would normally be bound to the list item.\n\n<ExamplesExample file=\"v-select/slot-item\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Item",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001211",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001212",
    "text": "Component: v-guide\nSection: Append and prepend item\nType: documentation\n\n## v-guide - Append and prepend item\n\nThe `v-select` component can be optionally expanded with prepended and appended items. This is perfect for customized **select-all** functionality.\n\n<ExamplesExample file=\"v-select/slot-append-and-prepend-item\" />",
    "display_content": "## v-guide - Append and prepend item\n\nThe `v-select` component can be optionally expanded with prepended and appended items. This is perfect for customized **select-all** functionality.\n\n<ExamplesExample file=\"v-select/slot-append-and-prepend-item\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Append and prepend item",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001212",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001213",
    "text": "Component: v-guide\nSection: Selection\nType: documentation\n\n## v-guide - Selection\n\nThe **selection** slot can be used to customize the way selected values are shown in the input. This is great when you don't want the selection to occupy multiple lines.\n\n<ExamplesExample file=\"v-select/slot-selection\" />",
    "display_content": "## v-guide - Selection\n\nThe **selection** slot can be used to customize the way selected values are shown in the input. This is great when you don't want the selection to occupy multiple lines.\n\n<ExamplesExample file=\"v-select/slot-selection\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Selection",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001213",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001214",
    "text": "Component: v-guide\nSection: Prop Chips\nType: code_example\n\n## v-guide - Prop Chips\n\n```vue\n<template>\n  <v-select\n    v-model=\"value\"\n    :items=\"items\"\n    label=\"Chips\"\n    chips\n    multiple\n  ></v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = shallowRef(['foo', 'bar', 'fizz', 'buzz'])\n  const value = shallowRef(['foo', 'bar', 'fizz', 'buzz'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['foo', 'bar', 'fizz', 'buzz'],\n      value: ['foo', 'bar', 'fizz', 'buzz'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Chips\n\n```vue\n<template>\n  <v-select\n    v-model=\"value\"\n    :items=\"items\"\n    label=\"Chips\"\n    chips\n    multiple\n  ></v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = shallowRef(['foo', 'bar', 'fizz', 'buzz'])\n  const value = shallowRef(['foo', 'bar', 'fizz', 'buzz'])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['foo', 'bar', 'fizz', 'buzz'],\n      value: ['foo', 'bar', 'fizz', 'buzz'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Chips",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001214",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001215",
    "text": "Component: v-guide\nSection: Prop Custom Title And Value\nType: code_example\n\n## v-guide - Prop Custom Title And Value\n\n```vue\n<template>\n  <v-select\n    v-model=\"select\"\n    :hint=\"`${select.state}, ${select.abbr}`\"\n    :items=\"items\"\n    item-title=\"state\"\n    item-value=\"abbr\"\n    label=\"Select\"\n    persistent-hint\n    return-object\n    single-line\n  ></v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const select = shallowRef({ state: 'Florida', abbr: 'FL' })\n\n  const items = [\n    { state: 'Florida', abbr: 'FL' },\n    { state: 'Georgia', abbr: 'GA' },\n    { state: 'Nebraska', abbr: 'NE' },\n    { state: 'California', abbr: 'CA' },\n    { state: 'New York', abbr: 'NY' },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        select: { state: 'Florida', abbr: 'FL' },\n        items: [\n          { state: 'Florida', abbr: 'FL' },\n          { state: 'Georgia', abbr: 'GA' },\n          { state: 'Nebraska', abbr: 'NE' },\n          { state: 'California', abbr: 'CA' },\n          { state: 'New York', abbr: 'NY' },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Custom Title And Value\n\n```vue\n<template>\n  <v-select\n    v-model=\"select\"\n    :hint=\"`${select.state}, ${select.abbr}`\"\n    :items=\"items\"\n    item-title=\"state\"\n    item-value=\"abbr\"\n    label=\"Select\"\n    persistent-hint\n    return-object\n    single-line\n  ></v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const select = shallowRef({ state: 'Florida', abbr: 'FL' })\n\n  const items = [\n    { state: 'Florida', abbr: 'FL' },\n    { state: 'Georgia', abbr: 'GA' },\n    { state: 'Nebraska', abbr: 'NE' },\n    { state: 'California', abbr: 'CA' },\n    { state: 'New York', abbr: 'NY' },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        select: { state: 'Florida', abbr: 'FL' },\n        items: [\n          { state: 'Florida', abbr: 'FL' },\n          { state: 'Georgia', abbr: 'GA' },\n          { state: 'Nebraska', abbr: 'NE' },\n          { state: 'California', abbr: 'CA' },\n          { state: 'New York', abbr: 'NY' },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Custom Title And Value",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001215",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001216",
    "text": "Component: v-guide\nSection: Prop Dense\nType: code_example\n\n## v-guide - Prop Dense\n\n```vue\n<template>\n  <v-select\n    :items=\"items\"\n    density=\"compact\"\n    label=\"Compact\"\n  ></v-select>\n\n  <v-select\n    :items=\"items\"\n    density=\"comfortable\"\n    label=\"Comfortable\"\n  ></v-select>\n\n  <v-select\n    :items=\"items\"\n    label=\"Default\"\n  ></v-select>\n</template>\n\n<script setup>\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Dense\n\n```vue\n<template>\n  <v-select\n    :items=\"items\"\n    density=\"compact\"\n    label=\"Compact\"\n  ></v-select>\n\n  <v-select\n    :items=\"items\"\n    density=\"comfortable\"\n    label=\"Comfortable\"\n  ></v-select>\n\n  <v-select\n    :items=\"items\"\n    label=\"Default\"\n  ></v-select>\n</template>\n\n<script setup>\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Dense",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001216",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001217",
    "text": "Component: v-guide\nSection: Prop Disabled\nType: code_example\n\n## v-guide - Prop Disabled\n\n```vue\n<template>\n  <v-select\n    :items=\"items\"\n    label=\"Disabled\"\n    disabled\n  ></v-select>\n</template>\n\n<script setup>\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Disabled\n\n```vue\n<template>\n  <v-select\n    :items=\"items\"\n    label=\"Disabled\"\n    disabled\n  ></v-select>\n</template>\n\n<script setup>\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001217",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001218",
    "text": "Component: v-guide\nSection: Prop Item Props\nType: code_example\n\n## v-guide - Prop Item Props\n\n```vue\n<template>\n  <v-select\n    :item-props=\"itemProps\"\n    :items=\"items\"\n    label=\"User\"\n  ></v-select>\n</template>\n\n<script setup>\n  const items = [\n    {\n      name: 'John',\n      department: 'Marketing',\n    },\n    {\n      name: 'Jane',\n      department: 'Engineering',\n    },\n    {\n      name: 'Joe',\n      department: 'Sales',\n    },\n    {\n      name: 'Janet',\n      department: 'Engineering',\n    },\n    {\n      name: 'Jake',\n      department: 'Marketing',\n    },\n    {\n      name: 'Jack',\n      department: 'Sales',\n    },\n  ]\n\n  function itemProps (item) {\n    return {\n      title: item.name,\n      subtitle: item.department,\n    }\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          name: 'John',\n          department: 'Marketing',\n        },\n        {\n          name: 'Jane',\n          department: 'Engineering',\n        },\n        {\n          name: 'Joe',\n          department: 'Sales',\n        },\n        {\n          name: 'Janet',\n          department: 'Engineering',\n        },\n        {\n          name: 'Jake',\n          department: 'Marketing',\n        },\n        {\n          name: 'Jack',\n          department: 'Sales',\n        },\n      ],\n    }),\n\n    methods: {\n      itemProps (item) {\n        return {\n          title: item.name,\n          subtitle: item.department,\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Item Props\n\n```vue\n<template>\n  <v-select\n    :item-props=\"itemProps\"\n    :items=\"items\"\n    label=\"User\"\n  ></v-select>\n</template>\n\n<script setup>\n  const items = [\n    {\n      name: 'John',\n      department: 'Marketing',\n    },\n    {\n      name: 'Jane',\n      department: 'Engineering',\n    },\n    {\n      name: 'Joe',\n      department: 'Sales',\n    },\n    {\n      name: 'Janet',\n      department: 'Engineering',\n    },\n    {\n      name: 'Jake',\n      department: 'Marketing',\n    },\n    {\n      name: 'Jack',\n      department: 'Sales',\n    },\n  ]\n\n  function itemProps (item) {\n    return {\n      title: item.name,\n      subtitle: item.department,\n    }\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          name: 'John',\n          department: 'Marketing',\n        },\n        {\n          name: 'Jane',\n          department: 'Engineering',\n        },\n        {\n          name: 'Joe',\n          department: 'Sales',\n        },\n        {\n          name: 'Janet',\n          department: 'Engineering',\n        },\n        {\n          name: 'Jake',\n          department: 'Marketing',\n        },\n        {\n          name: 'Jack',\n          department: 'Sales',\n        },\n      ],\n    }),\n\n    methods: {\n      itemProps (item) {\n        return {\n          title: item.name,\n          subtitle: item.department,\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Item Props",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001218",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001219",
    "text": "Component: v-guide\nSection: Prop Menu Props\nType: code_example\n\n## v-guide - Prop Menu Props\n\n```vue\n<template>\n  <v-select\n    :items=\"items\"\n    :menu-props=\"{ scrim: true, scrollStrategy: 'close' }\"\n    label=\"Label\"\n  ></v-select>\n</template>\n\n<script setup>\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Menu Props\n\n```vue\n<template>\n  <v-select\n    :items=\"items\"\n    :menu-props=\"{ scrim: true, scrollStrategy: 'close' }\"\n    label=\"Label\"\n  ></v-select>\n</template>\n\n<script setup>\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Menu Props",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001219",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001220",
    "text": "Component: v-guide\nSection: Prop Multiple\nType: code_example\n\n## v-guide - Prop Multiple\n\n```vue\n<template>\n  <v-select\n    v-model=\"favorites\"\n    :items=\"states\"\n    hint=\"Pick your favorite states\"\n    label=\"Select\"\n    multiple\n    persistent-hint\n  ></v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const favorites = shallowRef([])\n\n  const states = [\n    'Alabama',\n    'Alaska',\n    'American Samoa',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'District of Columbia',\n    'Federated States of Micronesia',\n    'Florida',\n    'Georgia',\n    'Guam',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Marshall Islands',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Carolina',\n    'North Dakota',\n    'Northern Mariana Islands',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Palau',\n    'Pennsylvania',\n    'Puerto Rico',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virgin Island',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        favorites: [],\n        states: [\n          'Alabama', 'Alaska', 'American Samoa', 'Arizona',\n          'Arkansas', 'California', 'Colorado', 'Connecticut',\n          'Delaware', 'District of Columbia', 'Federated States of Micronesia',\n          'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho',\n          'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n          'Louisiana', 'Maine', 'Marshall Islands', 'Maryland',\n          'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n          'Missouri', 'Montana', 'Nebraska', 'Nevada',\n          'New Hampshire', 'New Jersey', 'New Mexico', 'New York',\n          'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio',\n          'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico',\n          'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee',\n          'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia',\n          'Washington', 'West Virginia', 'Wisconsin', 'Wyoming',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Multiple\n\n```vue\n<template>\n  <v-select\n    v-model=\"favorites\"\n    :items=\"states\"\n    hint=\"Pick your favorite states\"\n    label=\"Select\"\n    multiple\n    persistent-hint\n  ></v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const favorites = shallowRef([])\n\n  const states = [\n    'Alabama',\n    'Alaska',\n    'American Samoa',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'District of Columbia',\n    'Federated States of Micronesia',\n    'Florida',\n    'Georgia',\n    'Guam',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Marshall Islands',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Carolina',\n    'North Dakota',\n    'Northern Mariana Islands',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Palau',\n    'Pennsylvania',\n    'Puerto Rico',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virgin Island',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        favorites: [],\n        states: [\n          'Alabama', 'Alaska', 'American Samoa', 'Arizona',\n          'Arkansas', 'California', 'Colorado', 'Connecticut',\n          'Delaware', 'District of Columbia', 'Federated States of Micronesia',\n          'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho',\n          'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n          'Louisiana', 'Maine', 'Marshall Islands', 'Maryland',\n          'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n          'Missouri', 'Montana', 'Nebraska', 'Nevada',\n          'New Hampshire', 'New Jersey', 'New Mexico', 'New York',\n          'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio',\n          'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico',\n          'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee',\n          'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia',\n          'Washington', 'West Virginia', 'Wisconsin', 'Wyoming',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Multiple",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001220",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001221",
    "text": "Component: v-guide\nSection: Prop Readonly\nType: code_example\n\n## v-guide - Prop Readonly\n\n```vue\n<template>\n  <v-select\n    v-model=\"model\"\n    :items=\"items\"\n    label=\"Read-only\"\n    readonly\n  ></v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef('Foo')\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n      model: 'Foo',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Readonly\n\n```vue\n<template>\n  <v-select\n    v-model=\"model\"\n    :items=\"items\"\n    label=\"Read-only\"\n    readonly\n  ></v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const model = shallowRef('Foo')\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n      model: 'Foo',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Readonly",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001221",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001222",
    "text": "Component: v-guide\nSection: Slot Append And Prepend Item\nType: code_example\n\n## v-guide - Slot Append And Prepend Item\n\n```vue\n<template>\n  <v-select\n    v-model=\"selectedFruits\"\n    :items=\"fruits\"\n    label=\"Favorite Fruits\"\n    multiple\n  >\n    <template v-slot:prepend-item>\n      <v-list-item\n        title=\"Select All\"\n        @click=\"toggle\"\n      >\n        <template v-slot:prepend>\n          <v-checkbox-btn\n            :color=\"likesSomeFruit ? 'indigo-darken-4' : undefined\"\n            :indeterminate=\"likesSomeFruit && !likesAllFruit\"\n            :model-value=\"likesAllFruit\"\n          ></v-checkbox-btn>\n        </template>\n      </v-list-item>\n\n      <v-divider class=\"mt-2\"></v-divider>\n    </template>\n\n    <template v-slot:append-item>\n      <v-divider class=\"mb-2\"></v-divider>\n\n      <v-list-item\n        :subtitle=\"subtitle\"\n        :title=\"title\"\n        disabled\n      >\n        <template v-slot:prepend>\n          <v-avatar color=\"primary\" icon=\"mdi-food-apple\"></v-avatar>\n        </template>\n      </v-list-item>\n    </template>\n  </v-select>\n</template>\n\n<script setup>\n  import { computed, shallowRef } from 'vue'\n\n  const fruits = [\n    'Apples',\n    'Apricots',\n    'Avocado',\n    'Bananas',\n    'Blueberries',\n    'Blackberries',\n    'Boysenberries',\n    'Bread fruit',\n    'Cantaloupes (cantalope)',\n    'Cherries',\n    'Cranberries',\n    'Cucumbers',\n    'Currants',\n    'Dates',\n    'Eggplant',\n    'Figs',\n    'Grapes',\n    'Grapefruit',\n    'Guava',\n    'Honeydew melons',\n    'Huckleberries',\n    'Kiwis',\n    'Kumquat',\n    'Lemons',\n    'Limes',\n    'Mangos',\n    'Mulberries',\n    'Muskmelon',\n    'Nectarines',\n    'Olives',\n    'Oranges',\n    'Papaya',\n    'Peaches',\n    'Pears',\n    'Persimmon',\n    'Pineapple',\n    'Plums',\n    'Pomegranate',\n    'Raspberries',\n    'Rose Apple',\n    'Starfruit',\n    'Strawberries',\n    'Tangerines',\n    'Tomatoes',\n    'Watermelons',\n    'Zucchini',\n  ]\n\n  const selectedFruits = shallowRef([])\n\n  const likesAllFruit = computed(() => {\n    return selectedFruits.value.length === fruits.length\n  })\n  const likesSomeFruit = computed(() => {\n    return selectedFruits.value.length > 0\n  })\n  const title = computed(() => {\n    if (likesAllFruit.value) return 'Holy smokes, someone call the fruit police!'\n    if (likesSomeFruit.value) return 'Fruit Count'\n    return 'How could you not like fruit?'\n  })\n  const subtitle = computed(() => {\n    if (likesAllFruit.value) return undefined\n    if (likesSomeFruit.value) return selectedFruits.value.length\n    return 'Go ahead, make a selection above!'\n  })\n\n  function toggle () {\n    if (likesAllFruit.value) {\n      selectedFruits.value = []\n    } else {\n      selectedFruits.value = fruits.slice()\n    }\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      fruits: [\n        'Apples',\n        'Apricots',\n        'Avocado',\n        'Bananas',\n        'Blueberries',\n        'Blackberries',\n        'Boysenberries',\n        'Bread fruit',\n        'Cantaloupes (cantalope)',\n        'Cherries',\n        'Cranberries',\n        'Cucumbers',\n        'Currants',\n        'Dates',\n        'Eggplant',\n        'Figs',\n        'Grapes',\n        'Grapefruit',\n        'Guava',\n        'Honeydew melons',\n        'Huckleberries',\n        'Kiwis',\n        'Kumquat',\n        'Lemons',\n        'Limes',\n        'Mangos',\n        'Mulberries',\n        'Muskmelon',\n        'Nectarines',\n        'Olives',\n        'Oranges',\n        'Papaya',\n        'Peaches',\n        'Pears',\n        'Persimmon',\n        'Pineapple',\n        'Plums',\n        'Pomegranate',\n        'Raspberries',\n        'Rose Apple',\n        'Starfruit',\n        'Strawberries',\n        'Tangerines',\n        'Tomatoes',\n        'Watermelons',\n        'Zucchini',\n      ],\n      selectedFruits: [],\n    }),\n\n    computed: {\n      likesAllFruit () {\n        return this.selectedFruits.length === this.fruits.length\n      },\n      likesSomeFruit () {\n        return this.selectedFruits.length > 0\n      },\n      title () {\n        if (this.likesAllFruit) return 'Holy smokes, someone call the fruit police!'\n\n        if (this.likesSomeFruit) return 'Fruit Count'\n\n        return 'How could you not like fruit?'\n      },\n      subtitle () {\n        if (this.likesAllFruit) return undefined\n\n        if (this.likesSomeFruit) return this.selectedFruits.length\n\n        return 'Go ahead, make a selection above!'\n      },\n    },\n\n    methods: {\n      toggle () {\n        if (this.likesAllFruit) {\n          this.selectedFruits = []\n        } else {\n          this.selectedFruits = this.fruits.slice()\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Slot Append And Prepend Item\n\n```vue\n<template>\n  <v-select\n    v-model=\"selectedFruits\"\n    :items=\"fruits\"\n    label=\"Favorite Fruits\"\n    multiple\n  >\n    <template v-slot:prepend-item>\n      <v-list-item\n        title=\"Select All\"\n        @click=\"toggle\"\n      >\n        <template v-slot:prepend>\n          <v-checkbox-btn\n            :color=\"likesSomeFruit ? 'indigo-darken-4' : undefined\"\n            :indeterminate=\"likesSomeFruit && !likesAllFruit\"\n            :model-value=\"likesAllFruit\"\n          ></v-checkbox-btn>\n        </template>\n      </v-list-item>\n\n      <v-divider class=\"mt-2\"></v-divider>\n    </template>\n\n    <template v-slot:append-item>\n      <v-divider class=\"mb-2\"></v-divider>\n\n      <v-list-item\n        :subtitle=\"subtitle\"\n        :title=\"title\"\n        disabled\n      >\n        <template v-slot:prepend>\n          <v-avatar color=\"primary\" icon=\"mdi-food-apple\"></v-avatar>\n        </template>\n      </v-list-item>\n    </template>\n  </v-select>\n</template>\n\n<script setup>\n  import { computed, shallowRef } from 'vue'\n\n  const fruits = [\n    'Apples',\n    'Apricots',\n    'Avocado',\n    'Bananas',\n    'Blueberries',\n    'Blackberries',\n    'Boysenberries',\n    'Bread fruit',\n    'Cantaloupes (cantalope)',\n    'Cherries',\n    'Cranberries',\n    'Cucumbers',\n    'Currants',\n    'Dates',\n    'Eggplant',\n    'Figs',\n    'Grapes',\n    'Grapefruit',\n    'Guava',\n    'Honeydew melons',\n    'Huckleberries',\n    'Kiwis',\n    'Kumquat',\n    'Lemons',\n    'Limes',\n    'Mangos',\n    'Mulberries',\n    'Muskmelon',\n    'Nectarines',\n    'Olives',\n    'Oranges',\n    'Papaya',\n    'Peaches',\n    'Pears',\n    'Persimmon',\n    'Pineapple',\n    'Plums',\n    'Pomegranate',\n    'Raspberries',\n    'Rose Apple',\n    'Starfruit',\n    'Strawberries',\n    'Tangerines',\n    'Tomatoes',\n    'Watermelons',\n    'Zucchini',\n  ]\n\n  const selectedFruits = shallowRef([])\n\n  const likesAllFruit = computed(() => {\n    return selectedFruits.value.length === fruits.length\n  })\n  const likesSomeFruit = computed(() => {\n    return selectedFruits.value.length > 0\n  })\n  const title = computed(() => {\n    if (likesAllFruit.value) return 'Holy smokes, someone call the fruit police!'\n    if (likesSomeFruit.value) return 'Fruit Count'\n    return 'How could you not like fruit?'\n  })\n  const subtitle = computed(() => {\n    if (likesAllFruit.value) return undefined\n    if (likesSomeFruit.value) return selectedFruits.value.length\n    return 'Go ahead, make a selection above!'\n  })\n\n  function toggle () {\n    if (likesAllFruit.value) {\n      selectedFruits.value = []\n    } else {\n      selectedFruits.value = fruits.slice()\n    }\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      fruits: [\n        'Apples',\n        'Apricots',\n        'Avocado',\n        'Bananas',\n        'Blueberries',\n        'Blackberries',\n        'Boysenberries',\n        'Bread fruit',\n        'Cantaloupes (cantalope)',\n        'Cherries',\n        'Cranberries',\n        'Cucumbers',\n        'Currants',\n        'Dates',\n        'Eggplant',\n        'Figs',\n        'Grapes',\n        'Grapefruit',\n        'Guava',\n        'Honeydew melons',\n        'Huckleberries',\n        'Kiwis',\n        'Kumquat',\n        'Lemons',\n        'Limes',\n        'Mangos',\n        'Mulberries',\n        'Muskmelon',\n        'Nectarines',\n        'Olives',\n        'Oranges',\n        'Papaya',\n        'Peaches',\n        'Pears',\n        'Persimmon',\n        'Pineapple',\n        'Plums',\n        'Pomegranate',\n        'Raspberries',\n        'Rose Apple',\n        'Starfruit',\n        'Strawberries',\n        'Tangerines',\n        'Tomatoes',\n        'Watermelons',\n        'Zucchini',\n      ],\n      selectedFruits: [],\n    }),\n\n    computed: {\n      likesAllFruit () {\n        return this.selectedFruits.length === this.fruits.length\n      },\n      likesSomeFruit () {\n        return this.selectedFruits.length > 0\n      },\n      title () {\n        if (this.likesAllFruit) return 'Holy smokes, someone call the fruit police!'\n\n        if (this.likesSomeFruit) return 'Fruit Count'\n\n        return 'How could you not like fruit?'\n      },\n      subtitle () {\n        if (this.likesAllFruit) return undefined\n\n        if (this.likesSomeFruit) return this.selectedFruits.length\n\n        return 'Go ahead, make a selection above!'\n      },\n    },\n\n    methods: {\n      toggle () {\n        if (this.likesAllFruit) {\n          this.selectedFruits = []\n        } else {\n          this.selectedFruits = this.fruits.slice()\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Slot Append And Prepend Item",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001222",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001223",
    "text": "Component: v-guide\nSection: Slot Item\nType: code_example\n\n## v-guide - Slot Item\n\n```vue\n<template>\n  <v-select :items=\"items\" item-title=\"name\" label=\"User\">\n    <template v-slot:item=\"{ props: itemProps, item }\">\n      <v-list-item v-bind=\"itemProps\" :subtitle=\"item.raw.department\"></v-list-item>\n    </template>\n  </v-select>\n</template>\n\n<script setup>\n  const items = [\n    {\n      name: 'John',\n      department: 'Marketing',\n    },\n    {\n      name: 'Jane',\n      department: 'Engineering',\n    },\n    {\n      name: 'Joe',\n      department: 'Sales',\n    },\n    {\n      name: 'Janet',\n      department: 'Engineering',\n    },\n    {\n      name: 'Jake',\n      department: 'Marketing',\n    },\n    {\n      name: 'Jack',\n      department: 'Sales',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          name: 'John',\n          department: 'Marketing',\n        },\n        {\n          name: 'Jane',\n          department: 'Engineering',\n        },\n        {\n          name: 'Joe',\n          department: 'Sales',\n        },\n        {\n          name: 'Janet',\n          department: 'Engineering',\n        },\n        {\n          name: 'Jake',\n          department: 'Marketing',\n        },\n        {\n          name: 'Jack',\n          department: 'Sales',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Slot Item\n\n```vue\n<template>\n  <v-select :items=\"items\" item-title=\"name\" label=\"User\">\n    <template v-slot:item=\"{ props: itemProps, item }\">\n      <v-list-item v-bind=\"itemProps\" :subtitle=\"item.raw.department\"></v-list-item>\n    </template>\n  </v-select>\n</template>\n\n<script setup>\n  const items = [\n    {\n      name: 'John',\n      department: 'Marketing',\n    },\n    {\n      name: 'Jane',\n      department: 'Engineering',\n    },\n    {\n      name: 'Joe',\n      department: 'Sales',\n    },\n    {\n      name: 'Janet',\n      department: 'Engineering',\n    },\n    {\n      name: 'Jake',\n      department: 'Marketing',\n    },\n    {\n      name: 'Jack',\n      department: 'Sales',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          name: 'John',\n          department: 'Marketing',\n        },\n        {\n          name: 'Jane',\n          department: 'Engineering',\n        },\n        {\n          name: 'Joe',\n          department: 'Sales',\n        },\n        {\n          name: 'Janet',\n          department: 'Engineering',\n        },\n        {\n          name: 'Jake',\n          department: 'Marketing',\n        },\n        {\n          name: 'Jack',\n          department: 'Sales',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Slot Item",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001223",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001224",
    "text": "Component: v-guide\nSection: Slot Selection\nType: code_example\n\n## v-guide - Slot Selection\n\n```vue\n<template>\n  <v-select\n    v-model=\"value\"\n    :items=\"items\"\n    label=\"Select Item\"\n    multiple\n  >\n    <template v-slot:selection=\"{ item, index }\">\n      <v-chip v-if=\"index < 2\" :text=\"item.title\"></v-chip>\n\n      <span\n        v-if=\"index === 2\"\n        class=\"text-grey text-caption align-self-center\"\n      >\n        (+{{ value.length - 2 }} others)\n      </span>\n    </template>\n  </v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const value = shallowRef(['foo', 'bar', 'fizz'])\n  const items = ['foo', 'bar', 'fizz', 'buzz', 'fizzbuzz', 'foobar']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: ['foo', 'bar', 'fizz'],\n      items: ['foo', 'bar', 'fizz', 'buzz', 'fizzbuzz', 'foobar'],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Slot Selection\n\n```vue\n<template>\n  <v-select\n    v-model=\"value\"\n    :items=\"items\"\n    label=\"Select Item\"\n    multiple\n  >\n    <template v-slot:selection=\"{ item, index }\">\n      <v-chip v-if=\"index < 2\" :text=\"item.title\"></v-chip>\n\n      <span\n        v-if=\"index === 2\"\n        class=\"text-grey text-caption align-self-center\"\n      >\n        (+{{ value.length - 2 }} others)\n      </span>\n    </template>\n  </v-select>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const value = shallowRef(['foo', 'bar', 'fizz'])\n  const items = ['foo', 'bar', 'fizz', 'buzz', 'fizzbuzz', 'foobar']\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: ['foo', 'bar', 'fizz'],\n      items: ['foo', 'bar', 'fizz', 'buzz', 'fizzbuzz', 'foobar'],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Slot Selection",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001224",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001225",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-select v-bind=\"props\"></v-select>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"chips\" label=\"Chips\"></v-checkbox>\n\n      <v-checkbox v-model=\"multiple\" label=\"Multiple\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-select'\n  const model = shallowRef('default')\n  const clear = shallowRef(false)\n  const chips = shallowRef(false)\n  const multiple = shallowRef(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      chips: chips.value || undefined,\n      label: 'Select',\n      items: ['California', 'Colorado', 'Florida', 'Georgia', 'Texas', 'Wyoming'],\n      multiple: multiple.value || undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-select v-bind=\"props\"></v-select>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"clear\" label=\"Clearable\"></v-checkbox>\n\n      <v-checkbox v-model=\"chips\" label=\"Chips\"></v-checkbox>\n\n      <v-checkbox v-model=\"multiple\" label=\"Multiple\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-select'\n  const model = shallowRef('default')\n  const clear = shallowRef(false)\n  const chips = shallowRef(false)\n  const multiple = shallowRef(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clear.value || undefined,\n      chips: chips.value || undefined,\n      label: 'Select',\n      items: ['California', 'Colorado', 'Florida', 'Georgia', 'Texas', 'Wyoming'],\n      multiple: multiple.value || undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001225",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001226",
    "text": "Component: v-sheets\nType: component_overview\n\n# v-sheets\n\nThe `v-sheet` component is a transformable piece of _paper_ that provides a basic foundation for Vuetify features.",
    "display_content": "# v-sheets\n\nThe `v-sheet` component is a transformable piece of _paper_ that provides a basic foundation for Vuetify features.",
    "metadata": {
      "component": "v-sheets",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001226",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001227",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe sheet component has support for elevation, rounded corners, color, and more. It can be used as a container for other components or as a standalone.",
    "display_content": "# v-usage\n\nThe sheet component has support for elevation, rounded corners, color, and more. It can be used as a container for other components or as a standalone.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001227",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001228",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-sheet](/api/v-sheet/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-sheet](/api/v-sheet/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001228",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001229",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe `v-sheet` component contains only a default slot.",
    "display_content": "# v-anatomy\n\nThe `v-sheet` component contains only a default slot.",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001229",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001230",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nOften when building out a user interface, you will need to create a container for content and other custom components. The `v-sheet` component is a great way to do this. It provides a baseline for elevation, rounded corners, and color.\n\nAvailable sections: Props, Elevation, Rounded, Color",
    "display_content": "# v-guide\n\nOften when building out a user interface, you will need to create a container for content and other custom components. The `v-sheet` component is a great way to do this. It provides a baseline for elevation, rounded corners, and color.\n\nAvailable sections: Props, Elevation, Rounded, Color",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001230",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001231",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nSome of the standard props that can be applied to the `v-sheet` component are listed below.",
    "display_content": "## v-guide - Props\n\nSome of the standard props that can be applied to the `v-sheet` component are listed below.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001231",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001232",
    "text": "Component: v-guide\nSection: Elevation\nType: documentation\n\n## v-guide - Elevation\n\nThe `v-sheet` component accepts a custom elevation between **0** and **24** (0 is default). The _elevation_ property modifies the `box-shadow` property.\n\n<ExamplesExample file=\"v-sheet/prop-elevation\" />",
    "display_content": "## v-guide - Elevation\n\nThe `v-sheet` component accepts a custom elevation between **0** and **24** (0 is default). The _elevation_ property modifies the `box-shadow` property.\n\n<ExamplesExample file=\"v-sheet/prop-elevation\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Elevation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001232",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001233",
    "text": "Component: v-guide\nSection: Rounded\nType: documentation\n\n## v-guide - Rounded\n\nThe **rounded** prop adds a default `border-radius` of _4px_. By default, the `v-sheet` component has no border-radius. Customize the radius's size and location by providing a custom rounded value; e.g. a rounded value of _tr-xl l-pill_ equates to _rounded-tr-xl rounded-l-pill_. Additional information is on the [Border Radius](/styles/border-radius/) page.\n\n<ExamplesExample file=\"v-sheet/prop-rounded\" />",
    "display_content": "## v-guide - Rounded\n\nThe **rounded** prop adds a default `border-radius` of _4px_. By default, the `v-sheet` component has no border-radius. Customize the radius's size and location by providing a custom rounded value; e.g. a rounded value of _tr-xl l-pill_ equates to _rounded-tr-xl rounded-l-pill_. Additional information is on the [Border Radius](/styles/border-radius/) page.\n\n<ExamplesExample file=\"v-sheet/prop-rounded\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Rounded",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001233",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001234",
    "text": "Component: v-guide\nSection: Color\nType: documentation\n\n## v-guide - Color\n\nSheets and components based on them can have different sizes and colors.\n\nThe `v-sheet` component accepts custom [Material Design Color](/styles/colors/) values such as `warning`, `amber darken-3`, and `deep-purple accent` — as well as _rgb_, _rgba_, and _hexadecimal_ values.\n\n<ExamplesExample file=\"v-sheet/prop-color\" />",
    "display_content": "## v-guide - Color\n\nSheets and components based on them can have different sizes and colors.\n\nThe `v-sheet` component accepts custom [Material Design Color](/styles/colors/) values such as `warning`, `amber darken-3`, and `deep-purple accent` — as well as _rgb_, _rgba_, and _hexadecimal_ values.\n\n<ExamplesExample file=\"v-sheet/prop-color\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001234",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001235",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-sheet` component.\n\nAvailable sections: Congratulations, Reconcile Notification, Privacy Policy, Referral program, Misc Congratulations, Misc Privacy Policy, Misc Reconcile, Misc Referral Program, Prop Color, Prop Elevation, Prop Rounded, Usage",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-sheet` component.\n\nAvailable sections: Congratulations, Reconcile Notification, Privacy Policy, Referral program, Misc Congratulations, Misc Privacy Policy, Misc Reconcile, Misc Referral Program, Prop Color, Prop Elevation, Prop Rounded, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001235",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001236",
    "text": "Component: v-examples\nSection: Congratulations\nType: documentation\n\n## v-examples - Congratulations\n\nThis example uses a sheet component to create a banner congratulating users for signing up for the Vuetify community.\n\n<ExamplesExample file=\"v-sheet/misc-congratulations\" />",
    "display_content": "## v-examples - Congratulations\n\nThis example uses a sheet component to create a banner congratulating users for signing up for the Vuetify community.\n\n<ExamplesExample file=\"v-sheet/misc-congratulations\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Congratulations",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001236",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001237",
    "text": "Component: v-examples\nSection: Reconcile Notification\nType: documentation\n\n## v-examples - Reconcile Notification\n\nThe following example uses a sheet component to create a banner that notifies users that the account balance has been reconciled.\n\n<ExamplesExample file=\"v-sheet/misc-reconcile\" />",
    "display_content": "## v-examples - Reconcile Notification\n\nThe following example uses a sheet component to create a banner that notifies users that the account balance has been reconciled.\n\n<ExamplesExample file=\"v-sheet/misc-reconcile\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Reconcile Notification",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001237",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001238",
    "text": "Component: v-examples\nSection: Privacy Policy\nType: documentation\n\n## v-examples - Privacy Policy\n\nCreating a Privacy Policy notification is a great use case for the `v-sheet` component.\n\n<ExamplesExample file=\"v-sheet/misc-privacy-policy\" />",
    "display_content": "## v-examples - Privacy Policy\n\nCreating a Privacy Policy notification is a great use case for the `v-sheet` component.\n\n<ExamplesExample file=\"v-sheet/misc-privacy-policy\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Privacy Policy",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001238",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001239",
    "text": "Component: v-examples\nSection: Referral program\nType: documentation\n\n## v-examples - Referral program\n\nEven for simple use-cases, the `v-sheet` component is versatile makes it easy to contain content and other components.\n\n<ExamplesExample file=\"v-sheet/misc-referral-program\" />",
    "display_content": "## v-examples - Referral program\n\nEven for simple use-cases, the `v-sheet` component is versatile makes it easy to contain content and other components.\n\n<ExamplesExample file=\"v-sheet/misc-referral-program\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Referral program",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001239",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001240",
    "text": "Component: v-examples\nSection: Misc Congratulations\nType: code_example\n\n## v-examples - Misc Congratulations\n\n```vue\n<template>\n  <v-sheet\n    class=\"d-flex align-center justify-center flex-wrap text-center mx-auto px-4\"\n    elevation=\"4\"\n    height=\"250\"\n    max-width=\"800\"\n    width=\"100%\"\n    rounded\n  >\n    <div>\n      <h2 class=\"text-h4 font-weight-black text-orange\">Congratulations!</h2>\n\n      <div class=\"text-h5 font-weight-medium mb-2\">\n        You are officially a part of the Vuetify Community!\n      </div>\n\n      <p class=\"text-body-2 mb-4\">\n        Please head over to your inbox/spam or others folder to find our verification email.\n      </p>\n\n      <v-btn color=\"orange\" variant=\"text\">Go to Login</v-btn>\n    </div>\n  </v-sheet>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Congratulations\n\n```vue\n<template>\n  <v-sheet\n    class=\"d-flex align-center justify-center flex-wrap text-center mx-auto px-4\"\n    elevation=\"4\"\n    height=\"250\"\n    max-width=\"800\"\n    width=\"100%\"\n    rounded\n  >\n    <div>\n      <h2 class=\"text-h4 font-weight-black text-orange\">Congratulations!</h2>\n\n      <div class=\"text-h5 font-weight-medium mb-2\">\n        You are officially a part of the Vuetify Community!\n      </div>\n\n      <p class=\"text-body-2 mb-4\">\n        Please head over to your inbox/spam or others folder to find our verification email.\n      </p>\n\n      <v-btn color=\"orange\" variant=\"text\">Go to Login</v-btn>\n    </div>\n  </v-sheet>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Congratulations",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001240",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001241",
    "text": "Component: v-examples\nSection: Misc Privacy Policy\nType: code_example\n\n## v-examples - Misc Privacy Policy\n\n```vue\n<template>\n  <v-sheet\n    border=\"md\"\n    class=\"pa-6 text-white mx-auto\"\n    color=\"#141518\"\n    max-width=\"400\"\n  >\n    <h4 class=\"text-h5 font-weight-bold mb-4\">Your Privacy</h4>\n\n    <p class=\"mb-8\">\n      This business determines the use of personal data collected on our media properties and across the internet. We may collect data that you submit to us directly or data that we collect automatically including from cookies (such as device information or IP address).\n\n      <br>\n      <br>\n\n      Please read our <a class=\"text-red-accent-2\" href=\"#\">Privacy Policy</a> to learn about our privacy practices or click \"Your Preferences\" to exercise control over your data.\n    </p>\n\n    <v-btn\n      class=\"text-none text-black mb-4\"\n      color=\"red-accent-2\"\n      size=\"x-large\"\n      variant=\"flat\"\n      block\n    >\n      Accept\n    </v-btn>\n\n    <v-btn\n      class=\"text-none text-black\"\n      color=\"red-accent-2\"\n      size=\"x-large\"\n      variant=\"outlined\"\n      block\n    >\n      Your Preferences\n    </v-btn>\n  </v-sheet>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Privacy Policy\n\n```vue\n<template>\n  <v-sheet\n    border=\"md\"\n    class=\"pa-6 text-white mx-auto\"\n    color=\"#141518\"\n    max-width=\"400\"\n  >\n    <h4 class=\"text-h5 font-weight-bold mb-4\">Your Privacy</h4>\n\n    <p class=\"mb-8\">\n      This business determines the use of personal data collected on our media properties and across the internet. We may collect data that you submit to us directly or data that we collect automatically including from cookies (such as device information or IP address).\n\n      <br>\n      <br>\n\n      Please read our <a class=\"text-red-accent-2\" href=\"#\">Privacy Policy</a> to learn about our privacy practices or click \"Your Preferences\" to exercise control over your data.\n    </p>\n\n    <v-btn\n      class=\"text-none text-black mb-4\"\n      color=\"red-accent-2\"\n      size=\"x-large\"\n      variant=\"flat\"\n      block\n    >\n      Accept\n    </v-btn>\n\n    <v-btn\n      class=\"text-none text-black\"\n      color=\"red-accent-2\"\n      size=\"x-large\"\n      variant=\"outlined\"\n      block\n    >\n      Your Preferences\n    </v-btn>\n  </v-sheet>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Privacy Policy",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001241",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001242",
    "text": "Component: v-examples\nSection: Misc Reconcile\nType: code_example\n\n## v-examples - Misc Reconcile\n\n```vue\n<template>\n  <v-sheet\n    class=\"pa-4 text-center mx-auto\"\n    elevation=\"12\"\n    max-width=\"600\"\n    rounded=\"lg\"\n    width=\"100%\"\n  >\n    <v-icon\n      class=\"mb-5\"\n      color=\"success\"\n      icon=\"mdi-check-circle\"\n      size=\"112\"\n    ></v-icon>\n\n    <h2 class=\"text-h5 mb-6\">You reconciled this account</h2>\n\n    <p class=\"mb-4 text-medium-emphasis text-body-2\">\n      To see a report on this reconciliation, click <a class=\"text-decoration-none text-info\" href=\"#\">View reconciliation report.</a>\n\n      <br>\n\n      Otherwise, you're done!\n    </p>\n\n    <v-divider class=\"mb-4\"></v-divider>\n\n    <div class=\"text-end\">\n      <v-btn\n        class=\"text-none\"\n        color=\"success\"\n        variant=\"flat\"\n        width=\"90\"\n        rounded\n      >\n        Done\n      </v-btn>\n    </div>\n  </v-sheet>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Reconcile\n\n```vue\n<template>\n  <v-sheet\n    class=\"pa-4 text-center mx-auto\"\n    elevation=\"12\"\n    max-width=\"600\"\n    rounded=\"lg\"\n    width=\"100%\"\n  >\n    <v-icon\n      class=\"mb-5\"\n      color=\"success\"\n      icon=\"mdi-check-circle\"\n      size=\"112\"\n    ></v-icon>\n\n    <h2 class=\"text-h5 mb-6\">You reconciled this account</h2>\n\n    <p class=\"mb-4 text-medium-emphasis text-body-2\">\n      To see a report on this reconciliation, click <a class=\"text-decoration-none text-info\" href=\"#\">View reconciliation report.</a>\n\n      <br>\n\n      Otherwise, you're done!\n    </p>\n\n    <v-divider class=\"mb-4\"></v-divider>\n\n    <div class=\"text-end\">\n      <v-btn\n        class=\"text-none\"\n        color=\"success\"\n        variant=\"flat\"\n        width=\"90\"\n        rounded\n      >\n        Done\n      </v-btn>\n    </div>\n  </v-sheet>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Reconcile",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001242",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001243",
    "text": "Component: v-examples\nSection: Misc Referral Program\nType: code_example\n\n## v-examples - Misc Referral Program\n\n```vue\n<template>\n  <v-sheet\n    border=\"lg opacity-12\"\n    class=\"text-body-2 mx-auto\"\n    max-width=\"550\"\n  >\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\" md=\"3\">\n          <v-img height=\"88\" src=\"https://cdn.vuetifyjs.com/docs/images/graphics/img-placeholder.png\" cover></v-img>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"9\">\n          <p class=\"mb-4\">\n            This is part of our <a href=\"#\">Most Comprehensive Guide to Referral Programs</a> > <a href=\"#\">Do I Need A Referral Program?</a> section. You may enjoy other related articles:\n          </p>\n\n          <ul class=\"ps-4 mb-6\">\n            <li>\n              <a href=\"#\">5 Ways to See if Referral Programs Can Work for You</a>\n            </li>\n            <li>\n              <a href=\"#\">The 6 Key Benefits of Referral Marketing</a>\n            </li>\n            <li>\n              <a href=\"#\">Leading Indicators of Referral Program Success</a>\n            </li>\n            <li>\n              <a href=\"#\">Debunking the Top 5 Worst Referral Program Myths</a>\n            </li>\n          </ul>\n\n          <v-btn\n            class=\"text-none\"\n            color=\"info\"\n            rounded=\"0\"\n            variant=\"flat\"\n            block\n          >\n            <span class=\"hidden-sm-and-down\">\n              Explore our 38+ Referral Program Resources\n            </span>\n\n            <span class=\"hidden-md-and-up\">\n              Explore Referral Resources\n            </span>\n          </v-btn>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-sheet>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Referral Program\n\n```vue\n<template>\n  <v-sheet\n    border=\"lg opacity-12\"\n    class=\"text-body-2 mx-auto\"\n    max-width=\"550\"\n  >\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\" md=\"3\">\n          <v-img height=\"88\" src=\"https://cdn.vuetifyjs.com/docs/images/graphics/img-placeholder.png\" cover></v-img>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"9\">\n          <p class=\"mb-4\">\n            This is part of our <a href=\"#\">Most Comprehensive Guide to Referral Programs</a> > <a href=\"#\">Do I Need A Referral Program?</a> section. You may enjoy other related articles:\n          </p>\n\n          <ul class=\"ps-4 mb-6\">\n            <li>\n              <a href=\"#\">5 Ways to See if Referral Programs Can Work for You</a>\n            </li>\n            <li>\n              <a href=\"#\">The 6 Key Benefits of Referral Marketing</a>\n            </li>\n            <li>\n              <a href=\"#\">Leading Indicators of Referral Program Success</a>\n            </li>\n            <li>\n              <a href=\"#\">Debunking the Top 5 Worst Referral Program Myths</a>\n            </li>\n          </ul>\n\n          <v-btn\n            class=\"text-none\"\n            color=\"info\"\n            rounded=\"0\"\n            variant=\"flat\"\n            block\n          >\n            <span class=\"hidden-sm-and-down\">\n              Explore our 38+ Referral Program Resources\n            </span>\n\n            <span class=\"hidden-md-and-up\">\n              Explore Referral Resources\n            </span>\n          </v-btn>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-sheet>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Referral Program",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001243",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001244",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <v-container>\n    <v-row class=\"flex-child text-subtitle-2\">\n      <v-col\n        class=\"d-flex\"\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-sheet\n          class=\"d-flex\"\n          color=\"grey-lighten-3\"\n          height=\"424\"\n        >\n          <sheet-footer>\n            #1: (3r x 2c)\n          </sheet-footer>\n        </v-sheet>\n      </v-col>\n\n      <v-col\n        class=\"d-flex\"\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-row class=\"ma-n3\">\n          <v-col cols=\"6\">\n            <v-sheet\n              class=\"d-flex\"\n              color=\"green-lighten-3\"\n              height=\"150\"\n            >\n              <sheet-footer>\n                #2: (1r x 1c)\n              </sheet-footer>\n            </v-sheet>\n          </v-col>\n\n          <v-col cols=\"6\">\n            <v-sheet\n              class=\"d-flex\"\n              color=\"yellow-lighten-3\"\n              height=\"150\"\n            >\n              <sheet-footer>\n                #3: (1r x 1c)\n              </sheet-footer>\n            </v-sheet>\n          </v-col>\n\n          <v-col cols=\"12\">\n            <v-sheet\n              class=\"d-flex\"\n              color=\"red-lighten-3\"\n              height=\"250\"\n            >\n              <sheet-footer>\n                #5: (2r x 2c)\n              </sheet-footer>\n            </v-sheet>\n          </v-col>\n        </v-row>\n      </v-col>\n\n      <v-col\n        cols=\"6\"\n        md=\"2\"\n      >\n        <v-sheet\n          class=\"d-flex\"\n          color=\"teal-lighten-3\"\n          height=\"300\"\n        >\n          <sheet-footer>\n            #4: (2r x 1c)\n          </sheet-footer>\n        </v-sheet>\n      </v-col>\n\n      <v-col\n        class=\"d-flex\"\n        cols=\"6\"\n        md=\"2\"\n      >\n        <v-sheet\n          class=\"d-flex mt-auto\"\n          color=\"purple-lighten-3\"\n          height=\"300\"\n        >\n          <sheet-footer>\n            #6: (2r x 1c)\n          </sheet-footer>\n        </v-sheet>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { h } from 'vue'\n\n  const SheetFooter = {\n    setup (_, { slots }) {\n      return () => h('v-sheet', {\n        class: 'ma-auto px-4',\n        color: 'rgba(0, 0, 0, .36)',\n        height: 50,\n      }, slots.default())\n    },\n  }\n</script>\n\n<script>\n  import { h } from 'vue'\n\n  export default {\n    components: {\n      // A simple helper component\n      SheetFooter: {\n        setup (_, { slots }) {\n          return () => h('v-sheet', {\n            class: 'ma-auto px-4',\n            color: 'rgba(0, 0, 0, .36)',\n            height: 50,\n          }, slots.default())\n        },\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <v-container>\n    <v-row class=\"flex-child text-subtitle-2\">\n      <v-col\n        class=\"d-flex\"\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-sheet\n          class=\"d-flex\"\n          color=\"grey-lighten-3\"\n          height=\"424\"\n        >\n          <sheet-footer>\n            #1: (3r x 2c)\n          </sheet-footer>\n        </v-sheet>\n      </v-col>\n\n      <v-col\n        class=\"d-flex\"\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-row class=\"ma-n3\">\n          <v-col cols=\"6\">\n            <v-sheet\n              class=\"d-flex\"\n              color=\"green-lighten-3\"\n              height=\"150\"\n            >\n              <sheet-footer>\n                #2: (1r x 1c)\n              </sheet-footer>\n            </v-sheet>\n          </v-col>\n\n          <v-col cols=\"6\">\n            <v-sheet\n              class=\"d-flex\"\n              color=\"yellow-lighten-3\"\n              height=\"150\"\n            >\n              <sheet-footer>\n                #3: (1r x 1c)\n              </sheet-footer>\n            </v-sheet>\n          </v-col>\n\n          <v-col cols=\"12\">\n            <v-sheet\n              class=\"d-flex\"\n              color=\"red-lighten-3\"\n              height=\"250\"\n            >\n              <sheet-footer>\n                #5: (2r x 2c)\n              </sheet-footer>\n            </v-sheet>\n          </v-col>\n        </v-row>\n      </v-col>\n\n      <v-col\n        cols=\"6\"\n        md=\"2\"\n      >\n        <v-sheet\n          class=\"d-flex\"\n          color=\"teal-lighten-3\"\n          height=\"300\"\n        >\n          <sheet-footer>\n            #4: (2r x 1c)\n          </sheet-footer>\n        </v-sheet>\n      </v-col>\n\n      <v-col\n        class=\"d-flex\"\n        cols=\"6\"\n        md=\"2\"\n      >\n        <v-sheet\n          class=\"d-flex mt-auto\"\n          color=\"purple-lighten-3\"\n          height=\"300\"\n        >\n          <sheet-footer>\n            #6: (2r x 1c)\n          </sheet-footer>\n        </v-sheet>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { h } from 'vue'\n\n  const SheetFooter = {\n    setup (_, { slots }) {\n      return () => h('v-sheet', {\n        class: 'ma-auto px-4',\n        color: 'rgba(0, 0, 0, .36)',\n        height: 50,\n      }, slots.default())\n    },\n  }\n</script>\n\n<script>\n  import { h } from 'vue'\n\n  export default {\n    components: {\n      // A simple helper component\n      SheetFooter: {\n        setup (_, { slots }) {\n          return () => h('v-sheet', {\n            class: 'ma-auto px-4',\n            color: 'rgba(0, 0, 0, .36)',\n            height: 50,\n          }, slots.default())\n        },\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001244",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001245",
    "text": "Component: v-examples\nSection: Prop Elevation\nType: code_example\n\n## v-examples - Prop Elevation\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-col\n        v-for=\"elevation in elevations\"\n        :key=\"elevation\"\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-sheet\n          class=\"pa-12\"\n          color=\"grey-lighten-3\"\n        >\n          <v-sheet\n            :elevation=\"elevation\"\n            class=\"mx-auto\"\n            height=\"100\"\n            width=\"100\"\n          ></v-sheet>\n        </v-sheet>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  const elevations = [0, 4, 8, 12, 16, 20]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      elevations: [0, 4, 8, 12, 16, 20],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Elevation\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-col\n        v-for=\"elevation in elevations\"\n        :key=\"elevation\"\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-sheet\n          class=\"pa-12\"\n          color=\"grey-lighten-3\"\n        >\n          <v-sheet\n            :elevation=\"elevation\"\n            class=\"mx-auto\"\n            height=\"100\"\n            width=\"100\"\n          ></v-sheet>\n        </v-sheet>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  const elevations = [0, 4, 8, 12, 16, 20]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      elevations: [0, 4, 8, 12, 16, 20],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Elevation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001245",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001246",
    "text": "Component: v-examples\nSection: Prop Rounded\nType: code_example\n\n## v-examples - Prop Rounded\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-col\n        v-for=\"rounded in [false, true, 'xl']\"\n        :key=\"String(rounded)\"\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-sheet\n          class=\"pa-12\"\n          color=\"grey-lighten-3\"\n        >\n          <div></div>\n          <v-sheet\n            :rounded=\"rounded\"\n            class=\"mx-auto\"\n            height=\"100\"\n            width=\"100\"\n          ></v-sheet>\n          <div></div>\n        </v-sheet>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Rounded\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-col\n        v-for=\"rounded in [false, true, 'xl']\"\n        :key=\"String(rounded)\"\n        cols=\"12\"\n        md=\"4\"\n      >\n        <v-sheet\n          class=\"pa-12\"\n          color=\"grey-lighten-3\"\n        >\n          <div></div>\n          <v-sheet\n            :rounded=\"rounded\"\n            class=\"mx-auto\"\n            height=\"100\"\n            width=\"100\"\n          ></v-sheet>\n          <div></div>\n        </v-sheet>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rounded",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001246",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001247",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"py-8 bg-surface-bright\">\n      <v-sheet\n        v-if=\"sheet\"\n        v-model=\"sheet\"\n        v-bind=\"props\"\n        class=\"mx-auto\"\n      >\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n        </template>\n      </v-sheet>\n\n      <div class=\"text-center\">\n        <v-btn v-if=\"!sheet\" @click=\"sheet = true\">\n          Show sheet\n        </v-btn>\n      </div>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"[\n          'success',\n          'info',\n          'warning',\n          'error',\n        ]\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-checkbox v-model=\"border\" label=\"Border\"></v-checkbox>\n\n      <v-checkbox v-model=\"rounded\" label=\"Rounded\"></v-checkbox>\n\n      <v-slider\n        v-model=\"elevation\"\n        label=\"Elevation\"\n        max=\"24\"\n        min=\"0\"\n      ></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-sheet'\n  const model = ref('default')\n  const sheet = ref(true)\n  const border = ref(false)\n  const elevation = ref(0)\n  const rounded = ref(false)\n  const color = ref()\n  const options = []\n  const props = computed(() => {\n    return {\n      elevation: elevation.value || undefined,\n      height: 200,\n      width: 200,\n      border: border.value || undefined,\n      color: color.value || undefined,\n      rounded: rounded.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"py-8 bg-surface-bright\">\n      <v-sheet\n        v-if=\"sheet\"\n        v-model=\"sheet\"\n        v-bind=\"props\"\n        class=\"mx-auto\"\n      >\n        <template v-slot:text>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n        </template>\n      </v-sheet>\n\n      <div class=\"text-center\">\n        <v-btn v-if=\"!sheet\" @click=\"sheet = true\">\n          Show sheet\n        </v-btn>\n      </div>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"[\n          'success',\n          'info',\n          'warning',\n          'error',\n        ]\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-checkbox v-model=\"border\" label=\"Border\"></v-checkbox>\n\n      <v-checkbox v-model=\"rounded\" label=\"Rounded\"></v-checkbox>\n\n      <v-slider\n        v-model=\"elevation\"\n        label=\"Elevation\"\n        max=\"24\"\n        min=\"0\"\n      ></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-sheet'\n  const model = ref('default')\n  const sheet = ref(true)\n  const border = ref(false)\n  const elevation = ref(0)\n  const rounded = ref(false)\n  const color = ref()\n  const options = []\n  const props = computed(() => {\n    return {\n      elevation: elevation.value || undefined,\n      height: 200,\n      width: 200,\n      border: border.value || undefined,\n      color: color.value || undefined,\n      rounded: rounded.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001247",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001248",
    "text": "Component: v-skeleton-loaders\nType: component_overview\n\n# v-skeleton-loaders\n\nSkeleton loaders provide a simple way to display loading placeholders in your application.",
    "display_content": "# v-skeleton-loaders\n\nSkeleton loaders provide a simple way to display loading placeholders in your application.",
    "metadata": {
      "component": "v-skeleton-loaders",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001248",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001249",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-skeleton-loader` component provides a user with a visual indicator that content is coming / loading. This is better received than traditional full-screen loaders.",
    "display_content": "# v-usage\n\nThe `v-skeleton-loader` component provides a user with a visual indicator that content is coming / loading. This is better received than traditional full-screen loaders.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001249",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001250",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-skeleton-loader](/api/v-skeleton-loader/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-skeleton-loader](/api/v-skeleton-loader/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001250",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001251",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe `v-skeleton-loader` has a default slot that is rendered when the component is not in a loading state.",
    "display_content": "# v-anatomy\n\nThe `v-skeleton-loader` has a default slot that is rendered when the component is not in a loading state.",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001251",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001252",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-skeleton-loader` component can be used in a variety of contexts, including cards, lists, and tables. It can be used to create a placeholder loading state for when content is being fetched from a server or loaded asynchronously.\n\nAvailable sections: Props, Type, Loading, Elevation, Boilerplate",
    "display_content": "# v-guide\n\nThe `v-skeleton-loader` component can be used in a variety of contexts, including cards, lists, and tables. It can be used to create a placeholder loading state for when content is being fetched from a server or loaded asynchronously.\n\nAvailable sections: Props, Type, Loading, Elevation, Boilerplate",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001252",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001253",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-skeleton-loader` component has a small API mainly used to configure the root and item height.",
    "display_content": "## v-guide - Props\n\nThe `v-skeleton-loader` component has a small API mainly used to configure the root and item height.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001253",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001254",
    "text": "Component: v-guide\nSection: Type\nType: documentation\n\n## v-guide - Type\n\nThe **type** property is used to define the type of skeleton loader. Types can be combined to create more complex skeletons. For example, the **card** type is a combination of the **image** and **heading** types.",
    "display_content": "## v-guide - Type\n\nThe **type** property is used to define the type of skeleton loader. Types can be combined to create more complex skeletons. For example, the **card** type is a combination of the **image** and **heading** types.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Type",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001254",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001255",
    "text": "Component: v-guide\nSection: Type\nType: documentation\n\n## v-guide - Type\n\n<ExamplesExample file=\"v-skeleton-loader/prop-type\" />\n\nThe following built-in types are available:\n\n| Type | Composition |\n| - | - |\n| **actions** | button@2 |\n| **article** | heading, paragraph |\n| **avatar** | avatar |\n| **button** | button |\n| **card** | image, heading |\n| **card-avatar** | image, list-item-avatar |\n| **chip** | chip |\n| **date-picker** | list-item, heading, divider, date-picker-options, date-picker-days, actions |\n| **date-picker-options** | text, avatar@2 |\n| **date-picker-days** | avatar@28 |\n| **divider** | divider |\n| **heading** | heading |\n| **image** | image |\n| **list-item** | text |\n| **list-item-avatar** | avatar, text |\n| **list-item-two-line** | sentences |\n| **list-item-avatar-two-line** | avatar, sentences |\n| **list-item-three-line** | paragraph |\n| **list-item-avatar-three-line** | avatar, paragraph |\n| **ossein** | ossein |\n| **paragraph** | text@3 |\n| **sentences** | text@2 |\n| **subtitle** | text |\n| **table** | table-heading, table-thead, table-tbody, table-tfoot |\n| **table-heading** | heading, text |\n| **table-thead** | heading@6 |\n| **table-tbody** | table-row-divider@6 |\n| **table-row-divider** | table-row, divider |\n| **table-row** | text@6 |\n| **table-tfoot** | text@2, avatar@2 |\n| **text** | text |",
    "display_content": "## v-guide - Type\n\n<ExamplesExample file=\"v-skeleton-loader/prop-type\" />\n\nThe following built-in types are available:\n\n| Type | Composition |\n| - | - |\n| **actions** | button@2 |\n| **article** | heading, paragraph |\n| **avatar** | avatar |\n| **button** | button |\n| **card** | image, heading |\n| **card-avatar** | image, list-item-avatar |\n| **chip** | chip |\n| **date-picker** | list-item, heading, divider, date-picker-options, date-picker-days, actions |\n| **date-picker-options** | text, avatar@2 |\n| **date-picker-days** | avatar@28 |\n| **divider** | divider |\n| **heading** | heading |\n| **image** | image |\n| **list-item** | text |\n| **list-item-avatar** | avatar, text |\n| **list-item-two-line** | sentences |\n| **list-item-avatar-two-line** | avatar, sentences |\n| **list-item-three-line** | paragraph |\n| **list-item-avatar-three-line** | avatar, paragraph |\n| **ossein** | ossein |\n| **paragraph** | text@3 |\n| **sentences** | text@2 |\n| **subtitle** | text |\n| **table** | table-heading, table-thead, table-tbody, table-tfoot |\n| **table-heading** | heading, text |\n| **table-thead** | heading@6 |\n| **table-tbody** | table-row-divider@6 |\n| **table-row-divider** | table-row, divider |\n| **table-row** | text@6 |\n| **table-tfoot** | text@2, avatar@2 |\n| **text** | text |",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Type",
      "content_type": "documentation",
      "chunk_index": 1,
      "chunk_id": "vuetify_chunk_001255",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001256",
    "text": "Component: v-guide\nSection: Loading\nType: documentation\n\n## v-guide - Loading\n\nA skeleton loader is considered to be in a loading state if one of the following conditions are met:\n\n* The default slot is not used\n* The **loading** property is set to **true**\n\nIf either condition is met, the skeleton loader returns the type structure in place of the default slot and applies dimensions values; e.g. **height**, **width**, **min-height**, etc. If the condition is not met, the default slot is returned.\n\n<ExamplesExample file=\"v-skeleton-loader/prop-loading\" />",
    "display_content": "## v-guide - Loading\n\nA skeleton loader is considered to be in a loading state if one of the following conditions are met:\n\n* The default slot is not used\n* The **loading** property is set to **true**\n\nIf either condition is met, the skeleton loader returns the type structure in place of the default slot and applies dimensions values; e.g. **height**, **width**, **min-height**, etc. If the condition is not met, the default slot is returned.\n\n<ExamplesExample file=\"v-skeleton-loader/prop-loading\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Loading",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001256",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001257",
    "text": "Component: v-guide\nSection: Elevation\nType: documentation\n\n## v-guide - Elevation\n\nThe **elevation** property makes it easy to match the elevation of the skeleton loader to the content it is replacing.\n\n<ExamplesExample file=\"v-skeleton-loader/prop-elevation\" />",
    "display_content": "## v-guide - Elevation\n\nThe **elevation** property makes it easy to match the elevation of the skeleton loader to the content it is replacing.\n\n<ExamplesExample file=\"v-skeleton-loader/prop-elevation\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Elevation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001257",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001258",
    "text": "Component: v-guide\nSection: Boilerplate\nType: documentation\n\n## v-guide - Boilerplate\n\nThe `v-skeleton-loader` can be used as boilerplate designs when creating mockups. Mix and match various pre-defined options or create your own unique implementations. In this example, we use a custom **data** property to apply the same props to multiple `v-skeleton-loader`'s at once.\n\n<ExamplesExample file=\"v-skeleton-loader/prop-boilerplate\" />",
    "display_content": "## v-guide - Boilerplate\n\nThe `v-skeleton-loader` can be used as boilerplate designs when creating mockups. Mix and match various pre-defined options or create your own unique implementations. In this example, we use a custom **data** property to apply the same props to multiple `v-skeleton-loader`'s at once.\n\n<ExamplesExample file=\"v-skeleton-loader/prop-boilerplate\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Boilerplate",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001258",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001259",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-skeleton-loader` component.\n\nAvailable sections: Ice-cream suggestions",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-skeleton-loader` component.\n\nAvailable sections: Ice-cream suggestions",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001259",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001260",
    "text": "Component: v-examples\nSection: Ice-cream suggestions\nType: documentation\n\n## v-examples - Ice-cream suggestions\n\nThe following example demonstrates how the `v-skeleton-loader` component can be used to create a placeholder loading state for when content is being fetched from a server or loaded asynchronously.\n\n<ExamplesExample file=\"v-skeleton-loader/misc-ice-cream\" />",
    "display_content": "## v-examples - Ice-cream suggestions\n\nThe following example demonstrates how the `v-skeleton-loader` component can be used to create a placeholder loading state for when content is being fetched from a server or loaded asynchronously.\n\n<ExamplesExample file=\"v-skeleton-loader/misc-ice-cream\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Ice-cream suggestions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001260",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001261",
    "text": "Component: v-sass-variables\nType: component_overview\n\n# v-sass-variables\n\nMake fine tuned changes by modifying the `v-skeleton-loader` [SASS variables](/features/sass-variables). This is useful when you want to change the default button height or padding.",
    "display_content": "# v-sass-variables\n\nMake fine tuned changes by modifying the `v-skeleton-loader` [SASS variables](/features/sass-variables). This is useful when you want to change the default button height or padding.",
    "metadata": {
      "component": "v-sass-variables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001261",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001262",
    "text": "Component: v-accessibility\nType: component_overview\n\n# v-accessibility\n\nBy default, the `v-skeleton-loader` component is assigned a [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/) role of [**alert**](https://www.w3.org/TR/wai-aria/#alert). We augment this role with three aria properties. An [**aria-busy**](https://www.w3.org/TR/wai-aria-1.0/states_and_properties#aria-busy) value of **true** denotes that a widget is missing required owned elements. An [**aria-live**](https://www.w3.org/TR/wai-aria-1.1/#aria-live) value of **polite** sets the screen reader's priority of live regions. And finally, [**aria-label**](https://www.w3.org/TR/WCAG20-TECHS/ARIA6.html), which is used to provide a human readable description of the element.\n\nAvailable sections: Configuring the aria-label, Misc Ice Cream, Prop Boilerplate, Prop Elevation, Prop Loading, Prop Type, Usage",
    "display_content": "# v-accessibility\n\nBy default, the `v-skeleton-loader` component is assigned a [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/) role of [**alert**](https://www.w3.org/TR/wai-aria/#alert). We augment this role with three aria properties. An [**aria-busy**](https://www.w3.org/TR/wai-aria-1.0/states_and_properties#aria-busy) value of **true** denotes that a widget is missing required owned elements. An [**aria-live**](https://www.w3.org/TR/wai-aria-1.1/#aria-live) value of **polite** sets the screen reader's priority of live regions. And finally, [**aria-label**](https://www.w3.org/TR/WCAG20-TECHS/ARIA6.html), which is used to provide a human readable description of the element.\n\nAvailable sections: Configuring the aria-label, Misc Ice Cream, Prop Boilerplate, Prop Elevation, Prop Loading, Prop Type, Usage",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001262",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001263",
    "text": "Component: v-accessibility\nSection: Misc Ice Cream\nType: code_example\n\n## v-accessibility - Misc Ice Cream\n\n```vue\n<template>\n  <div>\n    <div class=\"text-center\">\n      <v-btn\n        class=\"mb-12\"\n        size=\"x-large\"\n        @click=\"loading = !loading\"\n      >\n        Toggle Loading\n      </v-btn>\n    </div>\n\n    <v-card\n      max-width=\"800\"\n      rounded=\"lg\"\n      theme=\"dark\"\n    >\n      <v-container>\n        <v-row>\n          <v-col\n            v-for=\"{ src, title, subtitle } in cards\"\n            :key=\"title\"\n            cols=\"12\"\n            lg=\"4\"\n            md=\"6\"\n          >\n            <v-skeleton-loader\n              :loading=\"loading\"\n              height=\"240\"\n              type=\"image, list-item-two-line\"\n            >\n              <v-responsive>\n                <v-img\n                  :src=\"src\"\n                  class=\"rounded-lg mb-2\"\n                  height=\"184\"\n                  cover\n                ></v-img>\n\n                <v-list-item\n                  :subtitle=\"subtitle\"\n                  :title=\"title\"\n                  class=\"px-0\"\n                ></v-list-item>\n              </v-responsive>\n            </v-skeleton-loader>\n          </v-col>\n        </v-row>\n\n        <br>\n\n        <v-chip\n          prepend-icon=\"mdi-check-circle\"\n          size=\"large\"\n          variant=\"text\"\n          border\n        >\n          <template v-slot:prepend>\n            <v-icon color=\"disabled\"></v-icon>\n          </template>\n\n          <span class=\"text-subtitle-1\">\n            Homemade Dulce de Leche Ice Cream with Chocolate Chips\n          </span>\n        </v-chip>\n      </v-container>\n    </v-card>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const cards = [\n    {\n      title: 'Homemade Dulce de Leche Ice Cream with Chocolate Chips',\n      subtitle: 'Happy Foods',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/dulce-ice-cream.png',\n    },\n    {\n      title: 'Salted Caramel Swirl Ice Cream',\n      subtitle: 'Stone Kitchen',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/salted-caramel-ice-cream.png',\n    },\n    {\n      title: 'Peanut Butter No-Churn Ice Cream',\n      subtitle: 'The Sweeter Side',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/peanut-butter-ice-cream.png',\n    },\n  ]\n\n  const loading = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      cards: [\n        {\n          title: 'Homemade Dulce de Leche Ice Cream with Chocolate Chips',\n          subtitle: 'Happy Foods',\n          src: 'https://cdn.vuetifyjs.com/docs/images/graphics/dulce-ice-cream.png',\n        },\n        {\n          title: 'Salted Caramel Swirl Ice Cream',\n          subtitle: 'Stone Kitchen',\n          src: 'https://cdn.vuetifyjs.com/docs/images/graphics/salted-caramel-ice-cream.png',\n        },\n        {\n          title: 'Peanut Butter No-Churn Ice Cream',\n          subtitle: 'The Sweeter Side',\n          src: 'https://cdn.vuetifyjs.com/docs/images/graphics/peanut-butter-ice-cream.png',\n        },\n      ],\n      loading: true,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-accessibility - Misc Ice Cream\n\n```vue\n<template>\n  <div>\n    <div class=\"text-center\">\n      <v-btn\n        class=\"mb-12\"\n        size=\"x-large\"\n        @click=\"loading = !loading\"\n      >\n        Toggle Loading\n      </v-btn>\n    </div>\n\n    <v-card\n      max-width=\"800\"\n      rounded=\"lg\"\n      theme=\"dark\"\n    >\n      <v-container>\n        <v-row>\n          <v-col\n            v-for=\"{ src, title, subtitle } in cards\"\n            :key=\"title\"\n            cols=\"12\"\n            lg=\"4\"\n            md=\"6\"\n          >\n            <v-skeleton-loader\n              :loading=\"loading\"\n              height=\"240\"\n              type=\"image, list-item-two-line\"\n            >\n              <v-responsive>\n                <v-img\n                  :src=\"src\"\n                  class=\"rounded-lg mb-2\"\n                  height=\"184\"\n                  cover\n                ></v-img>\n\n                <v-list-item\n                  :subtitle=\"subtitle\"\n                  :title=\"title\"\n                  class=\"px-0\"\n                ></v-list-item>\n              </v-responsive>\n            </v-skeleton-loader>\n          </v-col>\n        </v-row>\n\n        <br>\n\n        <v-chip\n          prepend-icon=\"mdi-check-circle\"\n          size=\"large\"\n          variant=\"text\"\n          border\n        >\n          <template v-slot:prepend>\n            <v-icon color=\"disabled\"></v-icon>\n          </template>\n\n          <span class=\"text-subtitle-1\">\n            Homemade Dulce de Leche Ice Cream with Chocolate Chips\n          </span>\n        </v-chip>\n      </v-container>\n    </v-card>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const cards = [\n    {\n      title: 'Homemade Dulce de Leche Ice Cream with Chocolate Chips',\n      subtitle: 'Happy Foods',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/dulce-ice-cream.png',\n    },\n    {\n      title: 'Salted Caramel Swirl Ice Cream',\n      subtitle: 'Stone Kitchen',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/salted-caramel-ice-cream.png',\n    },\n    {\n      title: 'Peanut Butter No-Churn Ice Cream',\n      subtitle: 'The Sweeter Side',\n      src: 'https://cdn.vuetifyjs.com/docs/images/graphics/peanut-butter-ice-cream.png',\n    },\n  ]\n\n  const loading = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      cards: [\n        {\n          title: 'Homemade Dulce de Leche Ice Cream with Chocolate Chips',\n          subtitle: 'Happy Foods',\n          src: 'https://cdn.vuetifyjs.com/docs/images/graphics/dulce-ice-cream.png',\n        },\n        {\n          title: 'Salted Caramel Swirl Ice Cream',\n          subtitle: 'Stone Kitchen',\n          src: 'https://cdn.vuetifyjs.com/docs/images/graphics/salted-caramel-ice-cream.png',\n        },\n        {\n          title: 'Peanut Butter No-Churn Ice Cream',\n          subtitle: 'The Sweeter Side',\n          src: 'https://cdn.vuetifyjs.com/docs/images/graphics/peanut-butter-ice-cream.png',\n        },\n      ],\n      loading: true,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Misc Ice Cream",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001263",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001264",
    "text": "Component: v-accessibility\nSection: Prop Boilerplate\nType: code_example\n\n## v-accessibility - Prop Boilerplate\n\n```vue\n<template>\n  <v-skeleton-loader\n    class=\"mx-auto\"\n    elevation=\"2\"\n    max-width=\"360\"\n    type=\"card-avatar, article, actions\"\n    boilerplate\n  ></v-skeleton-loader>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Boilerplate\n\n```vue\n<template>\n  <v-skeleton-loader\n    class=\"mx-auto\"\n    elevation=\"2\"\n    max-width=\"360\"\n    type=\"card-avatar, article, actions\"\n    boilerplate\n  ></v-skeleton-loader>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Boilerplate",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001264",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001265",
    "text": "Component: v-accessibility\nSection: Prop Elevation\nType: code_example\n\n## v-accessibility - Prop Elevation\n\n```vue\n<template>\n  <v-skeleton-loader\n    class=\"mx-auto\"\n    elevation=\"12\"\n    max-width=\"400\"\n    type=\"table-heading, list-item-two-line, image, table-tfoot\"\n  ></v-skeleton-loader>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Elevation\n\n```vue\n<template>\n  <v-skeleton-loader\n    class=\"mx-auto\"\n    elevation=\"12\"\n    max-width=\"400\"\n    type=\"table-heading, list-item-two-line, image, table-tfoot\"\n  ></v-skeleton-loader>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Elevation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001265",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001266",
    "text": "Component: v-accessibility\nSection: Prop Loading\nType: code_example\n\n## v-accessibility - Prop Loading\n\n```vue\n<template>\n  <v-container>\n    <div class=\"text-center mb-12\">\n      <v-btn\n        size=\"x-large\"\n        @click=\"loading = !loading\"\n      >\n        Toggle Loading\n      </v-btn>\n    </div>\n\n    <v-row justify=\"center\">\n      <v-col\n        class=\"mb-12\"\n        cols=\"12\"\n        md=\"6\"\n      >\n        <div class=\"text-h5 text-center\">\n          Using slot\n        </div>\n\n        <v-skeleton-loader\n          :loading=\"loading\"\n          type=\"list-item-two-line\"\n        >\n          <v-list-item\n            lines=\"two\"\n            subtitle=\"Subtitle\"\n            title=\"Title\"\n            rounded\n          ></v-list-item>\n        </v-skeleton-loader>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <div class=\"text-h5 text-center\">\n          Using if\n        </div>\n\n        <v-skeleton-loader\n          v-if=\"loading\"\n          type=\"list-item-two-line\"\n        ></v-skeleton-loader>\n\n        <v-list-item\n          v-else\n          lines=\"two\"\n          subtitle=\"Subtitle\"\n          title=\"Title\"\n          rounded\n        ></v-list-item>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const loading = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loading: true,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-accessibility - Prop Loading\n\n```vue\n<template>\n  <v-container>\n    <div class=\"text-center mb-12\">\n      <v-btn\n        size=\"x-large\"\n        @click=\"loading = !loading\"\n      >\n        Toggle Loading\n      </v-btn>\n    </div>\n\n    <v-row justify=\"center\">\n      <v-col\n        class=\"mb-12\"\n        cols=\"12\"\n        md=\"6\"\n      >\n        <div class=\"text-h5 text-center\">\n          Using slot\n        </div>\n\n        <v-skeleton-loader\n          :loading=\"loading\"\n          type=\"list-item-two-line\"\n        >\n          <v-list-item\n            lines=\"two\"\n            subtitle=\"Subtitle\"\n            title=\"Title\"\n            rounded\n          ></v-list-item>\n        </v-skeleton-loader>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <div class=\"text-h5 text-center\">\n          Using if\n        </div>\n\n        <v-skeleton-loader\n          v-if=\"loading\"\n          type=\"list-item-two-line\"\n        ></v-skeleton-loader>\n\n        <v-list-item\n          v-else\n          lines=\"two\"\n          subtitle=\"Subtitle\"\n          title=\"Title\"\n          rounded\n        ></v-list-item>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const loading = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loading: true,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Loading",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001266",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001267",
    "text": "Component: v-accessibility\nSection: Prop Type\nType: code_example\n\n## v-accessibility - Prop Type\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" md=\"6\">\n        <v-skeleton-loader\n          class=\"mx-auto border\"\n          max-width=\"300\"\n          type=\"card-avatar, actions\"\n        ></v-skeleton-loader>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-skeleton-loader\n          class=\"mx-auto border\"\n          max-width=\"300\"\n          type=\"image, article\"\n        ></v-skeleton-loader>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-accessibility - Prop Type\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\" md=\"6\">\n        <v-skeleton-loader\n          class=\"mx-auto border\"\n          max-width=\"300\"\n          type=\"card-avatar, actions\"\n        ></v-skeleton-loader>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"6\">\n        <v-skeleton-loader\n          class=\"mx-auto border\"\n          max-width=\"300\"\n          type=\"image, article\"\n        ></v-skeleton-loader>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Prop Type",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001267",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001268",
    "text": "Component: v-accessibility\nSection: Usage\nType: code_example\n\n## v-accessibility - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-skeleton-loader\n        v-bind=\"props\"\n        class=\"mx-auto\"\n        max-width=\"300\"\n      ></v-skeleton-loader>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"type\"\n        :items=\"types\"\n        label=\"Type\"\n        clearable\n      ></v-select>\n\n      <v-select\n        v-model=\"color\"\n        :items=\"colors\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-slider\n        v-model=\"elevation\"\n        label=\"Elevation\"\n        max=\"24\"\n        min=\"0\"\n      ></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-skeleton-loader'\n  const model = ref('default')\n  const options = ['boilerplate']\n  const elevation = ref()\n  const color = ref()\n  const colors = ['primary', 'secondary', 'success', 'info', 'warning', 'error']\n  const type = ref('card')\n  const types = ['card', 'paragraph', 'list-item-avatar', 'article', 'card-avatar']\n\n  const props = computed(() => {\n    return {\n      elevation: elevation.value || undefined,\n      boilerplate: model.value === 'boilerplate' || undefined,\n      color: color.value || undefined,\n      type: type.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-skeleton-loader${propsToString(props.value)}>${slots.value}</v-skeleton-loader>`\n  })\n</script>\n\n```",
    "display_content": "## v-accessibility - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-skeleton-loader\n        v-bind=\"props\"\n        class=\"mx-auto\"\n        max-width=\"300\"\n      ></v-skeleton-loader>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"type\"\n        :items=\"types\"\n        label=\"Type\"\n        clearable\n      ></v-select>\n\n      <v-select\n        v-model=\"color\"\n        :items=\"colors\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-slider\n        v-model=\"elevation\"\n        label=\"Elevation\"\n        max=\"24\"\n        min=\"0\"\n      ></v-slider>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-skeleton-loader'\n  const model = ref('default')\n  const options = ['boilerplate']\n  const elevation = ref()\n  const color = ref()\n  const colors = ['primary', 'secondary', 'success', 'info', 'warning', 'error']\n  const type = ref('card')\n  const types = ['card', 'paragraph', 'list-item-avatar', 'article', 'card-avatar']\n\n  const props = computed(() => {\n    return {\n      elevation: elevation.value || undefined,\n      boilerplate: model.value === 'boilerplate' || undefined,\n      color: color.value || undefined,\n      type: type.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-skeleton-loader${propsToString(props.value)}>${slots.value}</v-skeleton-loader>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001268",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001269",
    "text": "Component: v-slide-groups\nType: component_overview\n\n# v-slide-groups\n\nThe `v-slide-group` component is used to display pseudo paginated information. It uses [v-item-group](/components/item-groups) at its core and provides a baseline for components such as [v-tabs](/components/tabs) and [v-chip-group](/components/chip-groups).",
    "display_content": "# v-slide-groups\n\nThe `v-slide-group` component is used to display pseudo paginated information. It uses [v-item-group](/components/item-groups) at its core and provides a baseline for components such as [v-tabs](/components/tabs) and [v-chip-group](/components/chip-groups).",
    "metadata": {
      "component": "v-slide-groups",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001269",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001270",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nSimilar to the [v-window](/components/windows) component, `v-slide-group` lets items to take up as much space as needed, allowing the user to move horizontally through the provided information.",
    "display_content": "# v-usage\n\nSimilar to the [v-window](/components/windows) component, `v-slide-group` lets items to take up as much space as needed, allowing the user to move horizontally through the provided information.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001270",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001271",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-slide-group](/api/v-slide-group/) | Primary Component | | [v-slide-group-item](/api/v-slide-group-item/) | Sub-component used for modifying the `v-slide-group` state |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-slide-group](/api/v-slide-group/) | Primary Component | | [v-slide-group-item](/api/v-slide-group-item/) | Sub-component used for modifying the `v-slide-group` state |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001271",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001272",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\n**selected-class** prop allows you to pass a class to customize the active items.\n\nAvailable sections: Selected class, Center active, Custom icons, Mandatory, Multiple, Pseudo Carousel, Misc Pseudo Carousel, Prop Active Class, Prop Center Active, Prop Custom Icons, Prop Mandatory, Prop Multiple, Usage",
    "display_content": "# v-examples\n\n**selected-class** prop allows you to pass a class to customize the active items.\n\nAvailable sections: Selected class, Center active, Custom icons, Mandatory, Multiple, Pseudo Carousel, Misc Pseudo Carousel, Prop Active Class, Prop Center Active, Prop Custom Icons, Prop Mandatory, Prop Multiple, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001272",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001273",
    "text": "Component: v-examples\nSection: Selected class\nType: documentation\n\n## v-examples - Selected class\n\n**selected-class** prop allows you to pass a class to customize the active items.\n\n<ExamplesExample file=\"v-slide-group/prop-active-class\" />",
    "display_content": "## v-examples - Selected class\n\n**selected-class** prop allows you to pass a class to customize the active items.\n\n<ExamplesExample file=\"v-slide-group/prop-active-class\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Selected class",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001273",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001274",
    "text": "Component: v-examples\nSection: Center active\nType: documentation\n\n## v-examples - Center active\n\nUsing the **center-active** prop will make the active item always centered.\n\n<ExamplesExample file=\"v-slide-group/prop-center-active\" />",
    "display_content": "## v-examples - Center active\n\nUsing the **center-active** prop will make the active item always centered.\n\n<ExamplesExample file=\"v-slide-group/prop-center-active\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Center active",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001274",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001275",
    "text": "Component: v-examples\nSection: Custom icons\nType: documentation\n\n## v-examples - Custom icons\n\nYou can add your custom pagination icons instead of arrows using the **next-icon** and **prev-icon** props.\n\n<ExamplesExample file=\"v-slide-group/prop-custom-icons\" />",
    "display_content": "## v-examples - Custom icons\n\nYou can add your custom pagination icons instead of arrows using the **next-icon** and **prev-icon** props.\n\n<ExamplesExample file=\"v-slide-group/prop-custom-icons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001275",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001276",
    "text": "Component: v-examples\nSection: Mandatory\nType: documentation\n\n## v-examples - Mandatory\n\nthe **mandatory** prop will make the slide group require at least 1 item must be selected.\n\n<ExamplesExample file=\"v-slide-group/prop-mandatory\" />",
    "display_content": "## v-examples - Mandatory\n\nthe **mandatory** prop will make the slide group require at least 1 item must be selected.\n\n<ExamplesExample file=\"v-slide-group/prop-mandatory\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Mandatory",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001276",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001277",
    "text": "Component: v-examples\nSection: Multiple\nType: documentation\n\n## v-examples - Multiple\n\nYou can select multiple items by setting the **multiple** prop.\n\n<ExamplesExample file=\"v-slide-group/prop-multiple\" />",
    "display_content": "## v-examples - Multiple\n\nYou can select multiple items by setting the **multiple** prop.\n\n<ExamplesExample file=\"v-slide-group/prop-multiple\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Multiple",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001277",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001278",
    "text": "Component: v-examples\nSection: Pseudo Carousel\nType: documentation\n\n## v-examples - Pseudo Carousel\n\nCustomize the slide group to creatively display information on sheets. Using the selection, we can display auxiliary information easily for the user.\n\n<ExamplesExample file=\"v-slide-group/misc-pseudo-carousel\" />",
    "display_content": "## v-examples - Pseudo Carousel\n\nCustomize the slide group to creatively display information on sheets. Using the selection, we can display auxiliary information easily for the user.\n\n<ExamplesExample file=\"v-slide-group/misc-pseudo-carousel\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Pseudo Carousel",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001278",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001279",
    "text": "Component: v-examples\nSection: Misc Pseudo Carousel\nType: code_example\n\n## v-examples - Misc Pseudo Carousel\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      selected-class=\"bg-primary\"\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n\n    <v-expand-transition>\n      <v-sheet\n        v-if=\"model != null\"\n        height=\"200\"\n      >\n        <div class=\"d-flex fill-height align-center justify-center\">\n          <h3 class=\"text-h6\">\n            Selected {{ model }}\n          </h3>\n        </div>\n      </v-sheet>\n    </v-expand-transition>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Pseudo Carousel\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      selected-class=\"bg-primary\"\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n\n    <v-expand-transition>\n      <v-sheet\n        v-if=\"model != null\"\n        height=\"200\"\n      >\n        <div class=\"d-flex fill-height align-center justify-center\">\n          <h3 class=\"text-h6\">\n            Selected {{ model }}\n          </h3>\n        </div>\n      </v-sheet>\n    </v-expand-transition>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Pseudo Carousel",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001279",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001280",
    "text": "Component: v-examples\nSection: Prop Active Class\nType: code_example\n\n## v-examples - Prop Active Class\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      selected-class=\"bg-success\"\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Active Class\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      selected-class=\"bg-success\"\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Active Class",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001280",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001281",
    "text": "Component: v-examples\nSection: Prop Center Active\nType: code_example\n\n## v-examples - Prop Center Active\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      center-active\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle }\"\n      >\n        <v-card\n          :color=\"isSelected ? 'primary' : 'grey-lighten-1'\"\n          class=\"ma-4\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Center Active\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      center-active\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle }\"\n      >\n        <v-card\n          :color=\"isSelected ? 'primary' : 'grey-lighten-1'\"\n          class=\"ma-4\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Center Active",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001281",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001282",
    "text": "Component: v-examples\nSection: Prop Custom Icons\nType: code_example\n\n## v-examples - Prop Custom Icons\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      next-icon=\"mdi-plus\"\n      prev-icon=\"mdi-minus\"\n      selected-class=\"bg-primary\"\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Custom Icons\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      next-icon=\"mdi-plus\"\n      prev-icon=\"mdi-minus\"\n      selected-class=\"bg-primary\"\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Custom Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001282",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001283",
    "text": "Component: v-examples\nSection: Prop Mandatory\nType: code_example\n\n## v-examples - Prop Mandatory\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      selected-class=\"bg-primary\"\n      mandatory\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Mandatory\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      selected-class=\"bg-primary\"\n      mandatory\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Mandatory",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001283",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001284",
    "text": "Component: v-examples\nSection: Prop Multiple\nType: code_example\n\n## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      selected-class=\"bg-primary\"\n      multiple\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: [],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Multiple\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    elevation=\"8\"\n    max-width=\"800\"\n  >\n    <v-slide-group\n      v-model=\"model\"\n      class=\"pa-4\"\n      selected-class=\"bg-primary\"\n      multiple\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 15\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle, selectedClass }\"\n      >\n        <v-card\n          :class=\"['ma-4', selectedClass]\"\n          color=\"grey-lighten-1\"\n          height=\"200\"\n          width=\"100\"\n          @click=\"toggle\"\n        >\n          <div class=\"d-flex fill-height align-center justify-center\">\n            <v-scale-transition>\n              <v-icon\n                v-if=\"isSelected\"\n                color=\"white\"\n                icon=\"mdi-close-circle-outline\"\n                size=\"48\"\n              ></v-icon>\n            </v-scale-transition>\n          </div>\n        </v-card>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: [],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Multiple",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001284",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001285",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    max-width=\"600\"\n  >\n    <v-slide-group\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 25\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle }\"\n      >\n        <v-btn\n          :color=\"isSelected ? 'primary' : undefined\"\n          class=\"ma-2\"\n          rounded\n          @click=\"toggle\"\n        >\n          Options {{ n }}\n        </v-btn>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-sheet\n    class=\"mx-auto\"\n    max-width=\"600\"\n  >\n    <v-slide-group\n      show-arrows\n    >\n      <v-slide-group-item\n        v-for=\"n in 25\"\n        :key=\"n\"\n        v-slot=\"{ isSelected, toggle }\"\n      >\n        <v-btn\n          :color=\"isSelected ? 'primary' : undefined\"\n          class=\"ma-2\"\n          rounded\n          @click=\"toggle\"\n        >\n          Options {{ n }}\n        </v-btn>\n      </v-slide-group-item>\n    </v-slide-group>\n  </v-sheet>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001285",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001286",
    "text": "Component: v-sliders\nType: component_overview\n\n# v-sliders\n\nThe `v-slider` component can be used as an alternative visualization instead of a number input.",
    "display_content": "# v-sliders\n\nThe `v-slider` component can be used as an alternative visualization instead of a number input.",
    "metadata": {
      "component": "v-sliders",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001286",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001287",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nSliders reflect a range of values along a track, from which users may select a single value. They are ideal for adjusting settings such as volume, brightness, or applying image filters.",
    "display_content": "# v-usage\n\nSliders reflect a range of values along a track, from which users may select a single value. They are ideal for adjusting settings such as volume, brightness, or applying image filters.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001287",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001288",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-slider](/api/v-slider/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-slider](/api/v-slider/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001288",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001289",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can set the colors of the slider using the props **color**, **track-color** and **thumb-color**.\n\nAvailable sections: Colors, Disabled, Step, Icons, Min and max, Readonly, Thumb, Ticks, Vertical sliders, Append and prepend, Append text field, Prop Colors, Prop Disabled, Prop Icons, Prop Min And Max, Prop Readonly, Prop Step, Prop Thumb, Prop Ticks, Prop Validation, Prop Vertical, Slot Append And Prepend, Slot Append Text Field, Usage",
    "display_content": "# v-examples\n\nYou can set the colors of the slider using the props **color**, **track-color** and **thumb-color**.\n\nAvailable sections: Colors, Disabled, Step, Icons, Min and max, Readonly, Thumb, Ticks, Vertical sliders, Append and prepend, Append text field, Prop Colors, Prop Disabled, Prop Icons, Prop Min And Max, Prop Readonly, Prop Step, Prop Thumb, Prop Ticks, Prop Validation, Prop Vertical, Slot Append And Prepend, Slot Append Text Field, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001289",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001290",
    "text": "Component: v-examples\nSection: Colors\nType: documentation\n\n## v-examples - Colors\n\nYou can set the colors of the slider using the props **color**, **track-color** and **thumb-color**.\n\n<ExamplesExample file=\"v-slider/prop-colors\" />",
    "display_content": "## v-examples - Colors\n\nYou can set the colors of the slider using the props **color**, **track-color** and **thumb-color**.\n\n<ExamplesExample file=\"v-slider/prop-colors\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001290",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001291",
    "text": "Component: v-examples\nSection: Disabled\nType: documentation\n\n## v-examples - Disabled\n\nYou cannot interact with **disabled** sliders.\n\n<ExamplesExample file=\"v-slider/prop-disabled\" />",
    "display_content": "## v-examples - Disabled\n\nYou cannot interact with **disabled** sliders.\n\n<ExamplesExample file=\"v-slider/prop-disabled\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001291",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001292",
    "text": "Component: v-examples\nSection: Step\nType: documentation\n\n## v-examples - Step\n\nUsing the **step** prop you can control the precision of the slider, and how much it should move each step.\n\n<ExamplesExample file=\"v-slider/prop-step\" />",
    "display_content": "## v-examples - Step\n\nUsing the **step** prop you can control the precision of the slider, and how much it should move each step.\n\n<ExamplesExample file=\"v-slider/prop-step\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Step",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001292",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001293",
    "text": "Component: v-examples\nSection: Icons\nType: documentation\n\n## v-examples - Icons\n\nYou can add icons to the slider with the **append-icon** and **prepend-icon** props. With `@click:append` and `@click:prepend` you can trigger a callback function when click the icon.\n\n<ExamplesExample file=\"v-slider/prop-icons\" />",
    "display_content": "## v-examples - Icons\n\nYou can add icons to the slider with the **append-icon** and **prepend-icon** props. With `@click:append` and `@click:prepend` you can trigger a callback function when click the icon.\n\n<ExamplesExample file=\"v-slider/prop-icons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001293",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001294",
    "text": "Component: v-examples\nSection: Min and max\nType: documentation\n\n## v-examples - Min and max\n\nYou can set **min** and **max** values of sliders.\n\n<ExamplesExample file=\"v-slider/prop-min-and-max\" />",
    "display_content": "## v-examples - Min and max\n\nYou can set **min** and **max** values of sliders.\n\n<ExamplesExample file=\"v-slider/prop-min-and-max\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Min and max",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001294",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001295",
    "text": "Component: v-examples\nSection: Readonly\nType: documentation\n\n## v-examples - Readonly\n\nYou cannot interact with **readonly** sliders, but they look as ordinary ones.\n\n<ExamplesExample file=\"v-slider/prop-readonly\" />",
    "display_content": "## v-examples - Readonly\n\nYou cannot interact with **readonly** sliders, but they look as ordinary ones.\n\n<ExamplesExample file=\"v-slider/prop-readonly\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Readonly",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001295",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001296",
    "text": "Component: v-examples\nSection: Thumb\nType: documentation\n\n## v-examples - Thumb\n\nYou can display a thumb label while sliding or always with the **thumb-label** prop . It can have a custom color by setting **thumb-color** prop and a custom size with the **thumb-size** prop.\n\n<ExamplesExample file=\"v-slider/prop-thumb\" />",
    "display_content": "## v-examples - Thumb\n\nYou can display a thumb label while sliding or always with the **thumb-label** prop . It can have a custom color by setting **thumb-color** prop and a custom size with the **thumb-size** prop.\n\n<ExamplesExample file=\"v-slider/prop-thumb\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Thumb",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001296",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001297",
    "text": "Component: v-examples\nSection: Ticks\nType: documentation\n\n## v-examples - Ticks\n\nTick marks represent predetermined values to which the user can move the slider.\n\n<ExamplesExample file=\"v-slider/prop-ticks\" />\n\n<!-- #### Validation\n\nVuetify includes simple validation through the **rules** prop. The prop accepts a mixed array of types `function`, `boolean` and `string`. When the input value changes, each element in the array will be validated. Functions pass the current v-model as an argument and must return either `true` / `false` or a `string` containing an error message.\n\n<ExamplesExample file=\"v-slider/prop-validation\" /> -->",
    "display_content": "## v-examples - Ticks\n\nTick marks represent predetermined values to which the user can move the slider.\n\n<ExamplesExample file=\"v-slider/prop-ticks\" />\n\n<!-- #### Validation\n\nVuetify includes simple validation through the **rules** prop. The prop accepts a mixed array of types `function`, `boolean` and `string`. When the input value changes, each element in the array will be validated. Functions pass the current v-model as an argument and must return either `true` / `false` or a `string` containing an error message.\n\n<ExamplesExample file=\"v-slider/prop-validation\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Ticks",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001297",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001298",
    "text": "Component: v-examples\nSection: Vertical sliders\nType: documentation\n\n## v-examples - Vertical sliders\n\nYou can use the **direction** prop to switch sliders to a vertical orientation. If you need to change the height of the slider, use css.\n\n<ExamplesExample file=\"v-slider/prop-vertical\" />",
    "display_content": "## v-examples - Vertical sliders\n\nYou can use the **direction** prop to switch sliders to a vertical orientation. If you need to change the height of the slider, use css.\n\n<ExamplesExample file=\"v-slider/prop-vertical\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Vertical sliders",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001298",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001299",
    "text": "Component: v-examples\nSection: Append and prepend\nType: documentation\n\n## v-examples - Append and prepend\n\nUse slots such as `append` and `prepend` to easily customize the `v-slider` to fit any situation.\n\n<ExamplesExample file=\"v-slider/slot-append-and-prepend\" />",
    "display_content": "## v-examples - Append and prepend\n\nUse slots such as `append` and `prepend` to easily customize the `v-slider` to fit any situation.\n\n<ExamplesExample file=\"v-slider/slot-append-and-prepend\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Append and prepend",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001299",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001300",
    "text": "Component: v-examples\nSection: Append text field\nType: documentation\n\n## v-examples - Append text field\n\nSliders can be combined with other components in its `append` slot, such as `v-text-field`, to add additional functionality to the component.\n\n<ExamplesExample file=\"v-slider/slot-append-text-field\" />",
    "display_content": "## v-examples - Append text field\n\nSliders can be combined with other components in its `append` slot, such as `v-text-field`, to add additional functionality to the component.\n\n<ExamplesExample file=\"v-slider/slot-append-text-field\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Append text field",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001300",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001301",
    "text": "Component: v-examples\nSection: Prop Colors\nType: code_example\n\n## v-examples - Prop Colors\n\n```vue\n<template>\n  <div>\n    <v-slider\n      v-model=\"slider1\"\n      color=\"orange\"\n      label=\"color\"\n    ></v-slider>\n\n    <v-slider\n      v-model=\"slider2\"\n      label=\"track-color\"\n      track-color=\"green\"\n    ></v-slider>\n\n    <v-slider\n      v-model=\"slider3\"\n      label=\"thumb-color\"\n      thumb-color=\"purple\"\n    ></v-slider>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const slider1 = ref(0)\n  const slider2 = ref(50)\n  const slider3 = ref(100)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      slider1: 0,\n      slider2: 50,\n      slider3: 100,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Colors\n\n```vue\n<template>\n  <div>\n    <v-slider\n      v-model=\"slider1\"\n      color=\"orange\"\n      label=\"color\"\n    ></v-slider>\n\n    <v-slider\n      v-model=\"slider2\"\n      label=\"track-color\"\n      track-color=\"green\"\n    ></v-slider>\n\n    <v-slider\n      v-model=\"slider3\"\n      label=\"thumb-color\"\n      thumb-color=\"purple\"\n    ></v-slider>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const slider1 = ref(0)\n  const slider2 = ref(50)\n  const slider3 = ref(100)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      slider1: 0,\n      slider2: 50,\n      slider3: 100,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Colors",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001301",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001302",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-slider\n    model-value=\"30\"\n    disabled\n  ></v-slider>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-slider\n    model-value=\"30\"\n    disabled\n  ></v-slider>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001302",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001303",
    "text": "Component: v-examples\nSection: Prop Icons\nType: code_example\n\n## v-examples - Prop Icons\n\n```vue\n<template>\n  <div>\n    <div class=\"text-caption\">Media volume</div>\n\n    <v-slider\n      v-model=\"media\"\n      prepend-icon=\"mdi-volume-high\"\n    ></v-slider>\n\n    <div class=\"text-caption\">Alarm volume</div>\n\n    <v-slider\n      v-model=\"alarm\"\n      append-icon=\"mdi-alarm\"\n    ></v-slider>\n\n    <div class=\"text-caption\">Icon click callback</div>\n\n    <v-slider\n      v-model=\"zoom\"\n      append-icon=\"mdi-magnify-plus-outline\"\n      prepend-icon=\"mdi-magnify-minus-outline\"\n      @click:append=\"zoomIn\"\n      @click:prepend=\"zoomOut\"\n    ></v-slider>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const media = ref(0)\n  const alarm = ref(0)\n  const zoom = ref(0)\n\n  function zoomOut () {\n    zoom.value = (zoom.value - 10) || 0\n  }\n  function zoomIn () {\n    zoom.value = (zoom.value + 10) || 100\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        media: 0,\n        alarm: 0,\n        zoom: 0,\n      }\n    },\n\n    methods: {\n      zoomOut () {\n        this.zoom = (this.zoom - 10) || 0\n      },\n      zoomIn () {\n        this.zoom = (this.zoom + 10) || 100\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Icons\n\n```vue\n<template>\n  <div>\n    <div class=\"text-caption\">Media volume</div>\n\n    <v-slider\n      v-model=\"media\"\n      prepend-icon=\"mdi-volume-high\"\n    ></v-slider>\n\n    <div class=\"text-caption\">Alarm volume</div>\n\n    <v-slider\n      v-model=\"alarm\"\n      append-icon=\"mdi-alarm\"\n    ></v-slider>\n\n    <div class=\"text-caption\">Icon click callback</div>\n\n    <v-slider\n      v-model=\"zoom\"\n      append-icon=\"mdi-magnify-plus-outline\"\n      prepend-icon=\"mdi-magnify-minus-outline\"\n      @click:append=\"zoomIn\"\n      @click:prepend=\"zoomOut\"\n    ></v-slider>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const media = ref(0)\n  const alarm = ref(0)\n  const zoom = ref(0)\n\n  function zoomOut () {\n    zoom.value = (zoom.value - 10) || 0\n  }\n  function zoomIn () {\n    zoom.value = (zoom.value + 10) || 100\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        media: 0,\n        alarm: 0,\n        zoom: 0,\n      }\n    },\n\n    methods: {\n      zoomOut () {\n        this.zoom = (this.zoom - 10) || 0\n      },\n      zoomIn () {\n        this.zoom = (this.zoom + 10) || 100\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001303",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001304",
    "text": "Component: v-examples\nSection: Prop Min And Max\nType: code_example\n\n## v-examples - Prop Min And Max\n\n```vue\n<template>\n  <v-slider\n    v-model=\"slider\"\n    :max=\"max\"\n    :min=\"min\"\n    class=\"align-center\"\n    hide-details\n  >\n    <template v-slot:append>\n      <v-text-field\n        v-model=\"slider\"\n        density=\"compact\"\n        style=\"width: 70px\"\n        type=\"number\"\n        hide-details\n        single-line\n      ></v-text-field>\n    </template>\n  </v-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const min = ref(-50)\n  const max = ref(90)\n  const slider = ref(40)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        min: -50,\n        max: 90,\n        slider: 40,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Min And Max\n\n```vue\n<template>\n  <v-slider\n    v-model=\"slider\"\n    :max=\"max\"\n    :min=\"min\"\n    class=\"align-center\"\n    hide-details\n  >\n    <template v-slot:append>\n      <v-text-field\n        v-model=\"slider\"\n        density=\"compact\"\n        style=\"width: 70px\"\n        type=\"number\"\n        hide-details\n        single-line\n      ></v-text-field>\n    </template>\n  </v-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const min = ref(-50)\n  const max = ref(90)\n  const slider = ref(40)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        min: -50,\n        max: 90,\n        slider: 40,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Min And Max",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001304",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001305",
    "text": "Component: v-examples\nSection: Prop Readonly\nType: code_example\n\n## v-examples - Prop Readonly\n\n```vue\n<template>\n  <v-slider\n    label=\"Readonly\"\n    model-value=\"30\"\n    readonly\n  ></v-slider>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Readonly\n\n```vue\n<template>\n  <v-slider\n    label=\"Readonly\"\n    model-value=\"30\"\n    readonly\n  ></v-slider>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Readonly",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001305",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001306",
    "text": "Component: v-examples\nSection: Prop Step\nType: code_example\n\n## v-examples - Prop Step\n\n```vue\n<template>\n  <v-slider\n    v-model=\"value\"\n    :max=\"1\"\n    :min=\"0\"\n    :step=\"0.2\"\n    thumb-label\n  ></v-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(0)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 0,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Step\n\n```vue\n<template>\n  <v-slider\n    v-model=\"value\"\n    :max=\"1\"\n    :min=\"0\"\n    :step=\"0.2\"\n    thumb-label\n  ></v-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(0)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 0,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Step",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001306",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001307",
    "text": "Component: v-examples\nSection: Prop Thumb\nType: code_example\n\n## v-examples - Prop Thumb\n\n```vue\n<template>\n  <div class=\"d-flex flex-column\">\n    <div>\n      <div class=\"text-caption\">\n        Show thumb when using slider\n      </div>\n      <v-slider\n        v-model=\"slider1\"\n        thumb-label\n      ></v-slider>\n    </div>\n\n    <div>\n      <div class=\"text-caption\">\n        Always show thumb label\n      </div>\n      <v-slider\n        v-model=\"slider2\"\n        thumb-label=\"always\"\n      ></v-slider>\n    </div>\n\n    <div>\n      <div class=\"text-caption\">\n        Custom thumb size\n      </div>\n      <v-slider\n        v-model=\"slider3\"\n        :thumb-size=\"36\"\n        thumb-label=\"always\"\n      ></v-slider>\n    </div>\n\n    <div>\n      <div class=\"text-caption\">\n        Custom thumb label\n      </div>\n      <v-slider\n        v-model=\"slider4\"\n        thumb-label=\"always\"\n      >\n        <template v-slot:thumb-label=\"{ modelValue }\">\n          {{ satisfactionEmojis[Math.min(Math.floor(modelValue / 10), 9)] }}\n        </template>\n      </v-slider>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const slider1 = ref(50)\n  const slider2 = ref(50)\n  const slider3 = ref(50)\n  const slider4 = ref(50)\n\n  const satisfactionEmojis = ['\\uD83D\\uDE2D', '\\uD83D\\uDE22', '\\u2639\\uFE0F', '\\uD83D\\uDE41', '\\uD83D\\uDE10', '\\uD83D\\uDE42', '\\uD83D\\uDE0A', '\\uD83D\\uDE01', '\\uD83D\\uDE04', '\\uD83D\\uDE0D']\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        slider1: 50,\n        slider2: 50,\n        slider3: 50,\n        slider4: 50,\n        satisfactionEmojis: ['😭', '😢', '☹️', '🙁', '😐', '🙂', '😊', '😁', '😄', '😍'],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Thumb\n\n```vue\n<template>\n  <div class=\"d-flex flex-column\">\n    <div>\n      <div class=\"text-caption\">\n        Show thumb when using slider\n      </div>\n      <v-slider\n        v-model=\"slider1\"\n        thumb-label\n      ></v-slider>\n    </div>\n\n    <div>\n      <div class=\"text-caption\">\n        Always show thumb label\n      </div>\n      <v-slider\n        v-model=\"slider2\"\n        thumb-label=\"always\"\n      ></v-slider>\n    </div>\n\n    <div>\n      <div class=\"text-caption\">\n        Custom thumb size\n      </div>\n      <v-slider\n        v-model=\"slider3\"\n        :thumb-size=\"36\"\n        thumb-label=\"always\"\n      ></v-slider>\n    </div>\n\n    <div>\n      <div class=\"text-caption\">\n        Custom thumb label\n      </div>\n      <v-slider\n        v-model=\"slider4\"\n        thumb-label=\"always\"\n      >\n        <template v-slot:thumb-label=\"{ modelValue }\">\n          {{ satisfactionEmojis[Math.min(Math.floor(modelValue / 10), 9)] }}\n        </template>\n      </v-slider>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const slider1 = ref(50)\n  const slider2 = ref(50)\n  const slider3 = ref(50)\n  const slider4 = ref(50)\n\n  const satisfactionEmojis = ['\\uD83D\\uDE2D', '\\uD83D\\uDE22', '\\u2639\\uFE0F', '\\uD83D\\uDE41', '\\uD83D\\uDE10', '\\uD83D\\uDE42', '\\uD83D\\uDE0A', '\\uD83D\\uDE01', '\\uD83D\\uDE04', '\\uD83D\\uDE0D']\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        slider1: 50,\n        slider2: 50,\n        slider3: 50,\n        slider4: 50,\n        satisfactionEmojis: ['😭', '😢', '☹️', '🙁', '😐', '🙂', '😊', '😁', '😄', '😍'],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Thumb",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001307",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001308",
    "text": "Component: v-examples\nSection: Prop Ticks\nType: code_example\n\n## v-examples - Prop Ticks\n\n```vue\n<template>\n  <div>\n    <div class=\"text-caption\">Show ticks when using slider</div>\n\n    <v-slider\n      step=\"10\"\n      show-ticks\n    ></v-slider>\n\n    <div class=\"text-caption\">Always show ticks</div>\n\n    <v-slider\n      show-ticks=\"always\"\n      step=\"10\"\n    ></v-slider>\n\n    <div class=\"text-caption\">Tick size</div>\n\n    <v-slider\n      show-ticks=\"always\"\n      step=\"10\"\n      tick-size=\"4\"\n    ></v-slider>\n\n    <div class=\"text-caption\">Tick labels</div>\n\n    <v-slider\n      :max=\"3\"\n      :ticks=\"tickLabels\"\n      show-ticks=\"always\"\n      step=\"1\"\n      tick-size=\"4\"\n    ></v-slider>\n  </div>\n</template>\n\n<script setup>\n  const tickLabels = {\n    0: 'Figs',\n    1: 'Lemon',\n    2: 'Pear',\n    3: 'Apple',\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tickLabels: {\n          0: 'Figs',\n          1: 'Lemon',\n          2: 'Pear',\n          3: 'Apple',\n        },\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Ticks\n\n```vue\n<template>\n  <div>\n    <div class=\"text-caption\">Show ticks when using slider</div>\n\n    <v-slider\n      step=\"10\"\n      show-ticks\n    ></v-slider>\n\n    <div class=\"text-caption\">Always show ticks</div>\n\n    <v-slider\n      show-ticks=\"always\"\n      step=\"10\"\n    ></v-slider>\n\n    <div class=\"text-caption\">Tick size</div>\n\n    <v-slider\n      show-ticks=\"always\"\n      step=\"10\"\n      tick-size=\"4\"\n    ></v-slider>\n\n    <div class=\"text-caption\">Tick labels</div>\n\n    <v-slider\n      :max=\"3\"\n      :ticks=\"tickLabels\"\n      show-ticks=\"always\"\n      step=\"1\"\n      tick-size=\"4\"\n    ></v-slider>\n  </div>\n</template>\n\n<script setup>\n  const tickLabels = {\n    0: 'Figs',\n    1: 'Lemon',\n    2: 'Pear',\n    3: 'Apple',\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tickLabels: {\n          0: 'Figs',\n          1: 'Lemon',\n          2: 'Pear',\n          3: 'Apple',\n        },\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Ticks",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001308",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001309",
    "text": "Component: v-examples\nSection: Prop Validation\nType: code_example\n\n## v-examples - Prop Validation\n\n```vue\n<template>\n  <v-card\n    color=\"transparent\"\n    flat\n  >\n    <div class=\"text-subtitle-2\">Rules</div>\n\n    <v-card-text class=\"pt-0\">\n      <v-slider\n        v-model=\"value\"\n        :rules=\"rules\"\n        label=\"How many?\"\n        step=\"10\"\n        thumb-label=\"always\"\n        ticks\n      ></v-slider>\n    </v-card-text>\n\n    <div class=\"text-subtitle-2\">Persistent hint</div>\n\n    <v-card-text class=\"pt-0\">\n      <v-slider\n        v-model=\"value\"\n        :rules=\"rules\"\n        hint=\"40 in stock\"\n        label=\"How many?\"\n        step=\"10\"\n        thumb-label=\"always\"\n        persistent-hint\n        ticks\n      ></v-slider>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(30)\n\n  const rules = [\n    v => v <= 40 || 'Only 40 in stock',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 30,\n        rules: [\n          v => v <= 40 || 'Only 40 in stock',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Validation\n\n```vue\n<template>\n  <v-card\n    color=\"transparent\"\n    flat\n  >\n    <div class=\"text-subtitle-2\">Rules</div>\n\n    <v-card-text class=\"pt-0\">\n      <v-slider\n        v-model=\"value\"\n        :rules=\"rules\"\n        label=\"How many?\"\n        step=\"10\"\n        thumb-label=\"always\"\n        ticks\n      ></v-slider>\n    </v-card-text>\n\n    <div class=\"text-subtitle-2\">Persistent hint</div>\n\n    <v-card-text class=\"pt-0\">\n      <v-slider\n        v-model=\"value\"\n        :rules=\"rules\"\n        hint=\"40 in stock\"\n        label=\"How many?\"\n        step=\"10\"\n        thumb-label=\"always\"\n        persistent-hint\n        ticks\n      ></v-slider>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(30)\n\n  const rules = [\n    v => v <= 40 || 'Only 40 in stock',\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 30,\n        rules: [\n          v => v <= 40 || 'Only 40 in stock',\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Validation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001309",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001310",
    "text": "Component: v-examples\nSection: Prop Vertical\nType: code_example\n\n## v-examples - Prop Vertical\n\n```vue\n<template>\n  <v-slider\n    v-model=\"value\"\n    direction=\"vertical\"\n    label=\"Regular\"\n  ></v-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(10)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 10,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Vertical\n\n```vue\n<template>\n  <v-slider\n    v-model=\"value\"\n    direction=\"vertical\"\n    label=\"Regular\"\n  ></v-slider>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref(10)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        value: 10,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Vertical",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001310",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001311",
    "text": "Component: v-examples\nSection: Slot Append And Prepend\nType: code_example\n\n## v-examples - Slot Append And Prepend\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"600\"\n  >\n    <v-toolbar\n      dense\n      flat\n    >\n      <v-toolbar-title>\n        <span class=\"text-subheading\">METRONOME</span>\n      </v-toolbar-title>\n      <v-btn icon=\"mdi-share-variant\" variant=\"text\"></v-btn>\n    </v-toolbar>\n\n    <v-card-text>\n      <v-row\n        class=\"mb-4\"\n        justify=\"space-between\"\n      >\n        <v-col class=\"text-left\">\n          <span\n            class=\"text-h2 font-weight-light\"\n            v-text=\"bpm\"\n          ></span>\n          <span class=\"subheading font-weight-light me-1\">BPM</span>\n          <v-fade-transition>\n            <v-avatar\n              v-if=\"isPlaying\"\n              :color=\"color\"\n              :style=\"{\n                animationDuration: animationDuration\n              }\"\n              class=\"mb-1 v-avatar--metronome\"\n              size=\"12\"\n            ></v-avatar>\n          </v-fade-transition>\n        </v-col>\n        <v-col class=\"text-right\">\n          <v-btn\n            :color=\"color\"\n            elevation=\"0\"\n            theme=\"dark\"\n            icon\n            @click=\"toggle\"\n          >\n            <v-icon :icon=\"isPlaying ? 'mdi-pause' : 'mdi-play'\" size=\"large\"></v-icon>\n          </v-btn>\n        </v-col>\n      </v-row>\n\n      <v-slider\n        v-model=\"bpm\"\n        :color=\"color\"\n        :step=\"1\"\n        max=\"218\"\n        min=\"40\"\n        track-color=\"grey\"\n      >\n        <template v-slot:prepend>\n          <v-btn\n            :color=\"color\"\n            icon=\"mdi-minus\"\n            size=\"small\"\n            variant=\"text\"\n            @click=\"decrement\"\n          ></v-btn>\n        </template>\n\n        <template v-slot:append>\n          <v-btn\n            :color=\"color\"\n            icon=\"mdi-plus\"\n            size=\"small\"\n            variant=\"text\"\n            @click=\"increment\"\n          ></v-btn>\n        </template>\n      </v-slider>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const bpm = ref(40)\n  const isPlaying = ref(false)\n\n  const color = computed(() => {\n    if (bpm.value < 100) return 'indigo'\n    if (bpm.value < 125) return 'teal'\n    if (bpm.value < 140) return 'green'\n    if (bpm.value < 175) return 'orange'\n    return 'red'\n  })\n  const animationDuration = computed(() => {\n    return `${60 / bpm.value}s`\n  })\n\n  function decrement () {\n    bpm.value--\n  }\n  function increment () {\n    bpm.value++\n  }\n  function toggle () {\n    isPlaying.value = !isPlaying.value\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      bpm: 40,\n      isPlaying: false,\n    }),\n\n    computed: {\n      color () {\n        if (this.bpm < 100) return 'indigo'\n        if (this.bpm < 125) return 'teal'\n        if (this.bpm < 140) return 'green'\n        if (this.bpm < 175) return 'orange'\n        return 'red'\n      },\n      animationDuration () {\n        return `${60 / this.bpm}s`\n      },\n    },\n\n    methods: {\n      decrement () {\n        this.bpm--\n      },\n      increment () {\n        this.bpm++\n      },\n      toggle () {\n        this.isPlaying = !this.isPlaying\n      },\n    },\n  }\n</script>\n\n<style>\n  @keyframes metronome-example {\n    from {\n      transform: scale(.5);\n    }\n\n    to {\n      transform: scale(1);\n    }\n  }\n\n  .v-avatar--metronome {\n    animation-name: metronome-example;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n  }\n</style>\n\n```",
    "display_content": "## v-examples - Slot Append And Prepend\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"600\"\n  >\n    <v-toolbar\n      dense\n      flat\n    >\n      <v-toolbar-title>\n        <span class=\"text-subheading\">METRONOME</span>\n      </v-toolbar-title>\n      <v-btn icon=\"mdi-share-variant\" variant=\"text\"></v-btn>\n    </v-toolbar>\n\n    <v-card-text>\n      <v-row\n        class=\"mb-4\"\n        justify=\"space-between\"\n      >\n        <v-col class=\"text-left\">\n          <span\n            class=\"text-h2 font-weight-light\"\n            v-text=\"bpm\"\n          ></span>\n          <span class=\"subheading font-weight-light me-1\">BPM</span>\n          <v-fade-transition>\n            <v-avatar\n              v-if=\"isPlaying\"\n              :color=\"color\"\n              :style=\"{\n                animationDuration: animationDuration\n              }\"\n              class=\"mb-1 v-avatar--metronome\"\n              size=\"12\"\n            ></v-avatar>\n          </v-fade-transition>\n        </v-col>\n        <v-col class=\"text-right\">\n          <v-btn\n            :color=\"color\"\n            elevation=\"0\"\n            theme=\"dark\"\n            icon\n            @click=\"toggle\"\n          >\n            <v-icon :icon=\"isPlaying ? 'mdi-pause' : 'mdi-play'\" size=\"large\"></v-icon>\n          </v-btn>\n        </v-col>\n      </v-row>\n\n      <v-slider\n        v-model=\"bpm\"\n        :color=\"color\"\n        :step=\"1\"\n        max=\"218\"\n        min=\"40\"\n        track-color=\"grey\"\n      >\n        <template v-slot:prepend>\n          <v-btn\n            :color=\"color\"\n            icon=\"mdi-minus\"\n            size=\"small\"\n            variant=\"text\"\n            @click=\"decrement\"\n          ></v-btn>\n        </template>\n\n        <template v-slot:append>\n          <v-btn\n            :color=\"color\"\n            icon=\"mdi-plus\"\n            size=\"small\"\n            variant=\"text\"\n            @click=\"increment\"\n          ></v-btn>\n        </template>\n      </v-slider>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const bpm = ref(40)\n  const isPlaying = ref(false)\n\n  const color = computed(() => {\n    if (bpm.value < 100) return 'indigo'\n    if (bpm.value < 125) return 'teal'\n    if (bpm.value < 140) return 'green'\n    if (bpm.value < 175) return 'orange'\n    return 'red'\n  })\n  const animationDuration = computed(() => {\n    return `${60 / bpm.value}s`\n  })\n\n  function decrement () {\n    bpm.value--\n  }\n  function increment () {\n    bpm.value++\n  }\n  function toggle () {\n    isPlaying.value = !isPlaying.value\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      bpm: 40,\n      isPlaying: false,\n    }),\n\n    computed: {\n      color () {\n        if (this.bpm < 100) return 'indigo'\n        if (this.bpm < 125) return 'teal'\n        if (this.bpm < 140) return 'green'\n        if (this.bpm < 175) return 'orange'\n        return 'red'\n      },\n      animationDuration () {\n        return `${60 / this.bpm}s`\n      },\n    },\n\n    methods: {\n      decrement () {\n        this.bpm--\n      },\n      increment () {\n        this.bpm++\n      },\n      toggle () {\n        this.isPlaying = !this.isPlaying\n      },\n    },\n  }\n</script>\n\n<style>\n  @keyframes metronome-example {\n    from {\n      transform: scale(.5);\n    }\n\n    to {\n      transform: scale(1);\n    }\n  }\n\n  .v-avatar--metronome {\n    animation-name: metronome-example;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n  }\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Append And Prepend",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001311",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001312",
    "text": "Component: v-examples\nSection: Slot Append Text Field\nType: code_example\n\n## v-examples - Slot Append Text Field\n\n```vue\n<template>\n  <v-card style=\"margin: auto\" width=\"400\">\n    <v-responsive\n      :style=\"{ background: `rgb(${red}, ${green}, ${blue})` }\"\n      height=\"300px\"\n    ></v-responsive>\n\n    <v-card-text>\n      <v-slider\n        v-model=\"red\"\n        :max=\"255\"\n        :step=\"1\"\n        class=\"ma-4\"\n        label=\"R\"\n        hide-details\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"red\"\n            density=\"compact\"\n            style=\"width: 80px\"\n            type=\"number\"\n            variant=\"outlined\"\n            hide-details\n          ></v-text-field>\n        </template>\n      </v-slider>\n\n      <v-slider\n        v-model=\"green\"\n        :max=\"255\"\n        :step=\"1\"\n        class=\"ma-4\"\n        label=\"G\"\n        hide-details\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"green\"\n            density=\"compact\"\n            style=\"width: 80px\"\n            type=\"number\"\n            variant=\"outlined\"\n            hide-details\n          ></v-text-field>\n        </template>\n      </v-slider>\n\n      <v-slider\n        v-model=\"blue\"\n        :max=\"255\"\n        :step=\"1\"\n        class=\"ma-4\"\n        label=\"B\"\n        hide-details\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"blue\"\n            density=\"compact\"\n            style=\"width: 80px\"\n            type=\"number\"\n            variant=\"outlined\"\n            hide-details\n          ></v-text-field>\n        </template>\n      </v-slider>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const red = ref(64)\n  const green = ref(128)\n  const blue = ref(10)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        red: 64,\n        green: 128,\n        blue: 10,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Append Text Field\n\n```vue\n<template>\n  <v-card style=\"margin: auto\" width=\"400\">\n    <v-responsive\n      :style=\"{ background: `rgb(${red}, ${green}, ${blue})` }\"\n      height=\"300px\"\n    ></v-responsive>\n\n    <v-card-text>\n      <v-slider\n        v-model=\"red\"\n        :max=\"255\"\n        :step=\"1\"\n        class=\"ma-4\"\n        label=\"R\"\n        hide-details\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"red\"\n            density=\"compact\"\n            style=\"width: 80px\"\n            type=\"number\"\n            variant=\"outlined\"\n            hide-details\n          ></v-text-field>\n        </template>\n      </v-slider>\n\n      <v-slider\n        v-model=\"green\"\n        :max=\"255\"\n        :step=\"1\"\n        class=\"ma-4\"\n        label=\"G\"\n        hide-details\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"green\"\n            density=\"compact\"\n            style=\"width: 80px\"\n            type=\"number\"\n            variant=\"outlined\"\n            hide-details\n          ></v-text-field>\n        </template>\n      </v-slider>\n\n      <v-slider\n        v-model=\"blue\"\n        :max=\"255\"\n        :step=\"1\"\n        class=\"ma-4\"\n        label=\"B\"\n        hide-details\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"blue\"\n            density=\"compact\"\n            style=\"width: 80px\"\n            type=\"number\"\n            variant=\"outlined\"\n            hide-details\n          ></v-text-field>\n        </template>\n      </v-slider>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const red = ref(64)\n  const green = ref(128)\n  const blue = ref(10)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        red: 64,\n        green: 128,\n        blue: 10,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Append Text Field",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001312",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001313",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-slider v-bind=\"props\"></v-slider>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-slider'\n  const model = ref('default')\n  const options = ['vertical']\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      direction: model.value === 'vertical' ? 'vertical' : undefined,\n      disabled: disabled.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-slider v-bind=\"props\"></v-slider>\n    </div>\n\n    <template v-slot:configuration>\n      <v-checkbox v-model=\"disabled\" label=\"Disabled\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-slider'\n  const model = ref('default')\n  const options = ['vertical']\n  const disabled = ref(false)\n  const props = computed(() => {\n    return {\n      direction: model.value === 'vertical' ? 'vertical' : undefined,\n      disabled: disabled.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001313",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001314",
    "text": "Component: v-snackbars\nType: component_overview\n\n# v-snackbars\n\nThe `v-snackbar` component is used to display a quick message to a user. Snackbars support positioning, removal delay, and callbacks.",
    "display_content": "# v-snackbars\n\nThe `v-snackbar` component is used to display a quick message to a user. Snackbars support positioning, removal delay, and callbacks.",
    "metadata": {
      "component": "v-snackbars",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001314",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001315",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\na `v-snackbar` in its simplest form displays a temporary and closable notification to the user.",
    "display_content": "# v-usage\n\na `v-snackbar` in its simplest form displays a temporary and closable notification to the user.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001315",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001316",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-snackbar](/api/v-snackbar/) | Primary Component | | [v-btn](/api/v-btn/) | Sub-component typically used for actions |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-snackbar](/api/v-snackbar/) | Primary Component | | [v-btn](/api/v-btn/) | Sub-component typically used for actions |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001316",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001317",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe **multi-line** property extends the height of the `v-snackbar` to give you a little more room for content.\n\nAvailable sections: Multi line, Timeout, Variants, Vertical, Prop Multi Line, Prop Timeout, Prop Variants, Prop Vertical, Usage",
    "display_content": "# v-examples\n\nThe **multi-line** property extends the height of the `v-snackbar` to give you a little more room for content.\n\nAvailable sections: Multi line, Timeout, Variants, Vertical, Prop Multi Line, Prop Timeout, Prop Variants, Prop Vertical, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001317",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001318",
    "text": "Component: v-examples\nSection: Multi line\nType: documentation\n\n## v-examples - Multi line\n\nThe **multi-line** property extends the height of the `v-snackbar` to give you a little more room for content.\n\n<ExamplesExample file=\"v-snackbar/prop-multi-line\" />",
    "display_content": "## v-examples - Multi line\n\nThe **multi-line** property extends the height of the `v-snackbar` to give you a little more room for content.\n\n<ExamplesExample file=\"v-snackbar/prop-multi-line\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Multi line",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001318",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001319",
    "text": "Component: v-examples\nSection: Timeout\nType: documentation\n\n## v-examples - Timeout\n\nThe **timeout** property lets you customize the delay before the `v-snackbar` is hidden.\n\n<ExamplesExample file=\"v-snackbar/prop-timeout\" />",
    "display_content": "## v-examples - Timeout\n\nThe **timeout** property lets you customize the delay before the `v-snackbar` is hidden.\n\n<ExamplesExample file=\"v-snackbar/prop-timeout\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Timeout",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001319",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001320",
    "text": "Component: v-examples\nSection: Variants\nType: documentation\n\n## v-examples - Variants\n\nApply different styles to the snackbar using props such as **text**, **shaped**, **outlined**, and more.\n\n<ExamplesExample file=\"v-snackbar/prop-variants\" />",
    "display_content": "## v-examples - Variants\n\nApply different styles to the snackbar using props such as **text**, **shaped**, **outlined**, and more.\n\n<ExamplesExample file=\"v-snackbar/prop-variants\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Variants",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001320",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001321",
    "text": "Component: v-examples\nSection: Vertical\nType: documentation\n\n## v-examples - Vertical\n\nThe **vertical** property allows you to stack the content of your `v-snackbar`.\n\n<ExamplesExample file=\"v-snackbar/prop-vertical\" />",
    "display_content": "## v-examples - Vertical\n\nThe **vertical** property allows you to stack the content of your `v-snackbar`.\n\n<ExamplesExample file=\"v-snackbar/prop-vertical\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Vertical",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001321",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001322",
    "text": "Component: v-examples\nSection: Prop Multi Line\nType: code_example\n\n## v-examples - Prop Multi Line\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      color=\"red-darken-2\"\n      @click=\"snackbar = true\"\n    >\n      Open Snackbar\n    </v-btn>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      multi-line\n    >\n      {{ text }}\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"red\"\n          variant=\"text\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const snackbar = ref(false)\n\n  const text = `I am a multi-line snackbar.\\nI can have more than one line. This is another line that is quite long.`\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      snackbar: false,\n      text: `I am a multi-line snackbar.\\nI can have more than one line. This is another line that is quite long.`,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Multi Line\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      color=\"red-darken-2\"\n      @click=\"snackbar = true\"\n    >\n      Open Snackbar\n    </v-btn>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      multi-line\n    >\n      {{ text }}\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"red\"\n          variant=\"text\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const snackbar = ref(false)\n\n  const text = `I am a multi-line snackbar.\\nI can have more than one line. This is another line that is quite long.`\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      snackbar: false,\n      text: `I am a multi-line snackbar.\\nI can have more than one line. This is another line that is quite long.`,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Multi Line",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001322",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001323",
    "text": "Component: v-examples\nSection: Prop Timeout\nType: code_example\n\n## v-examples - Prop Timeout\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      color=\"orange-darken-2\"\n      @click=\"snackbar = true\"\n    >\n      Open Snackbar\n    </v-btn>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      :timeout=\"timeout\"\n    >\n      {{ text }}\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"blue\"\n          variant=\"text\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const snackbar = ref(false)\n  const text = ref('My timeout is set to 2000.')\n  const timeout = ref(2000)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      snackbar: false,\n      text: 'My timeout is set to 2000.',\n      timeout: 2000,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Timeout\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      color=\"orange-darken-2\"\n      @click=\"snackbar = true\"\n    >\n      Open Snackbar\n    </v-btn>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      :timeout=\"timeout\"\n    >\n      {{ text }}\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"blue\"\n          variant=\"text\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const snackbar = ref(false)\n  const text = ref('My timeout is set to 2000.')\n  const timeout = ref(2000)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      snackbar: false,\n      text: 'My timeout is set to 2000.',\n      timeout: 2000,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Timeout",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001323",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001324",
    "text": "Component: v-examples\nSection: Prop Variants\nType: code_example\n\n## v-examples - Prop Variants\n\n```vue\n<template>\n  <v-sheet\n    class=\"d-flex flex-column\"\n  >\n    <v-snackbar\n      :timeout=\"2000\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Lorem ipsum dolor sit amet consectetur.\n    </v-snackbar>\n\n    <v-snackbar\n      :timeout=\"2000\"\n      color=\"blue-grey\"\n      rounded=\"pill\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" color=\"blue-grey\" rounded=\"pill\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Snackbar with <strong>rounded=\"pill\"</strong>.\n    </v-snackbar>\n\n    <v-snackbar\n      :timeout=\"2000\"\n      class=\"elevation-24\"\n      color=\"deep-purple-accent-4\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" color=\"deep-purple-accent-4\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Snackbar with <strong>elevation=\"24\"</strong>.\n    </v-snackbar>\n\n    <v-snackbar\n      :timeout=\"2000\"\n      color=\"primary\"\n      variant=\"tonal\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" color=\"primary\" variant=\"tonal\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Snackbar with <strong>tonal</strong> variant.\n    </v-snackbar>\n\n    <v-snackbar\n      :timeout=\"2000\"\n      color=\"success\"\n      variant=\"outlined\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" color=\"success\" variant=\"outlined\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Snackbar with <strong>outlined</strong> variant.\n    </v-snackbar>\n  </v-sheet>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Variants\n\n```vue\n<template>\n  <v-sheet\n    class=\"d-flex flex-column\"\n  >\n    <v-snackbar\n      :timeout=\"2000\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Lorem ipsum dolor sit amet consectetur.\n    </v-snackbar>\n\n    <v-snackbar\n      :timeout=\"2000\"\n      color=\"blue-grey\"\n      rounded=\"pill\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" color=\"blue-grey\" rounded=\"pill\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Snackbar with <strong>rounded=\"pill\"</strong>.\n    </v-snackbar>\n\n    <v-snackbar\n      :timeout=\"2000\"\n      class=\"elevation-24\"\n      color=\"deep-purple-accent-4\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" color=\"deep-purple-accent-4\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Snackbar with <strong>elevation=\"24\"</strong>.\n    </v-snackbar>\n\n    <v-snackbar\n      :timeout=\"2000\"\n      color=\"primary\"\n      variant=\"tonal\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" color=\"primary\" variant=\"tonal\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Snackbar with <strong>tonal</strong> variant.\n    </v-snackbar>\n\n    <v-snackbar\n      :timeout=\"2000\"\n      color=\"success\"\n      variant=\"outlined\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn class=\"ma-2\" color=\"success\" variant=\"outlined\" v-bind=\"props\">open</v-btn>\n      </template>\n\n      Snackbar with <strong>outlined</strong> variant.\n    </v-snackbar>\n  </v-sheet>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Variants",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001324",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001325",
    "text": "Component: v-examples\nSection: Prop Vertical\nType: code_example\n\n## v-examples - Prop Vertical\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      color=\"indigo\"\n      @click=\"snackbar = true\"\n    >\n      Open Snackbar\n    </v-btn>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      vertical\n    >\n      <div class=\"text-subtitle-1 pb-2\">This is a snackbar message</div>\n\n      <p>This is a longer paragraph explaining something</p>\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"indigo\"\n          variant=\"text\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const snackbar = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      snackbar: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Vertical\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-btn\n      color=\"indigo\"\n      @click=\"snackbar = true\"\n    >\n      Open Snackbar\n    </v-btn>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      vertical\n    >\n      <div class=\"text-subtitle-1 pb-2\">This is a snackbar message</div>\n\n      <p>This is a longer paragraph explaining something</p>\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"indigo\"\n          variant=\"text\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const snackbar = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      snackbar: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Vertical",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001325",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001326",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <div class=\"text-center ma-2\">\n    <v-btn\n      @click=\"snackbar = true\"\n    >\n      Open Snackbar\n    </v-btn>\n    <v-snackbar\n      v-model=\"snackbar\"\n    >\n      {{ text }}\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"pink\"\n          variant=\"text\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      snackbar: false,\n      text: `Hello, I'm a snackbar`,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <div class=\"text-center ma-2\">\n    <v-btn\n      @click=\"snackbar = true\"\n    >\n      Open Snackbar\n    </v-btn>\n    <v-snackbar\n      v-model=\"snackbar\"\n    >\n      {{ text }}\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"pink\"\n          variant=\"text\"\n          @click=\"snackbar = false\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      snackbar: false,\n      text: `Hello, I'm a snackbar`,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001326",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001327",
    "text": "Component: v-snackbar-queue\nType: component_overview\n\n# v-snackbar-queue\n\nThe `v-snackbar-queue` component is used to display a sequence of messages to the user.",
    "display_content": "# v-snackbar-queue\n\nThe `v-snackbar-queue` component is used to display a sequence of messages to the user.",
    "metadata": {
      "component": "v-snackbar-queue",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001327",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001328",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nMessages are passed as an array of strings to `v-model`, when a message is displayed it will be removed from the start of the array.",
    "display_content": "# v-usage\n\nMessages are passed as an array of strings to `v-model`, when a message is displayed it will be removed from the start of the array.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001328",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001329",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-snackbar-queue](/api/v-snackbar-queue/) | Primary Component | | [v-snackbar](/api/v-snackbar/) | The actual Snackbar Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-snackbar-queue](/api/v-snackbar-queue/) | Primary Component | | [v-snackbar](/api/v-snackbar/) | The actual Snackbar Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001329",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001330",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nSnackbar props can be set either on the queue to apply to all messages:\n\nAvailable sections: Additional props, Global state, Usage",
    "display_content": "# v-examples\n\nSnackbar props can be set either on the queue to apply to all messages:\n\nAvailable sections: Additional props, Global state, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001330",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001331",
    "text": "Component: v-examples\nSection: Additional props\nType: code_example\n\n## v-examples - Additional props\n\nSnackbar props can be set either on the queue to apply to all messages:\n\n```html\n<v-snackbar-queue timeout=\"2000\" color=\"error\" />\n```",
    "display_content": "## v-examples - Additional props\n\nSnackbar props can be set either on the queue to apply to all messages:\n\n```html\n<v-snackbar-queue timeout=\"2000\" color=\"error\" />\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Additional props",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001331",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001332",
    "text": "Component: v-examples\nSection: Additional props\nType: code_example\n\n## v-examples - Additional props\n\nOr individual messages as objects:\n\n```js\nqueue.push({\n  text: text.value,\n  timeout: 2000,\n  color: 'error',\n})\n```",
    "display_content": "## v-examples - Additional props\n\nOr individual messages as objects:\n\n```js\nqueue.push({\n  text: text.value,\n  timeout: 2000,\n  color: 'error',\n})\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Additional props",
      "content_type": "code_example",
      "language": "js",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001332",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001333",
    "text": "Component: v-examples\nSection: Global state\nType: code_example\n\n## v-examples - Global state\n\nYou can use pinia or vuex to display messages from any component:\n\n```js { resource=\"stores/messages.js\" }\nexport const useMessagesStore = defineStore('messages', () => {\n  const queue = ref([])\n  function add (message) {\n    queue.push(message)\n  }\n\n  return { queue, add }\n})\n\n```\n\n```",
    "display_content": "## v-examples - Global state\n\nYou can use pinia or vuex to display messages from any component:\n\n```js { resource=\"stores/messages.js\" }\nexport const useMessagesStore = defineStore('messages', () => {\n  const queue = ref([])\n  function add (message) {\n    queue.push(message)\n  }\n\n  return { queue, add }\n})\n\n```\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Global state",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001333",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001334",
    "text": "Component: v-examples\nSection: Global state\nType: code_example\n\n## v-examples - Global state\n\nhtml { resource=\"App.vue\" }\n<template>\n  <v-app>\n    <router-view></router-view>\n\n    <v-snackbar-queue v-model=\"messages.queue\"></v-snackbar-queue>\n  </v-app>\n</template>\n\n<script setup>\n  const messages = useMessagesStore()\n</script>\n\n```\n\n```",
    "display_content": "## v-examples - Global state\n\nhtml { resource=\"App.vue\" }\n<template>\n  <v-app>\n    <router-view></router-view>\n\n    <v-snackbar-queue v-model=\"messages.queue\"></v-snackbar-queue>\n  </v-app>\n</template>\n\n<script setup>\n  const messages = useMessagesStore()\n</script>\n\n```\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Global state",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001334",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001335",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n    :script=\"script\"\n  >\n    <div style=\"height: 188px\">\n      <v-text-field\n        v-model=\"text\"\n        label=\"Queue a message\"\n        hide-details\n        @keydown.enter=\"onClick\"\n      >\n        <template v-slot:append-inner>\n          <v-btn\n            :disabled=\"!text\"\n            append-icon=\"mdi-arrow-right\"\n            text=\"Queue\"\n            variant=\"flat\"\n            slim\n            @click=\"onClick\"\n          ></v-btn>\n        </template>\n      </v-text-field>\n\n      <v-list density=\"compact\" variant=\"tonal\" nav>\n        <v-list-subheader>Queue:</v-list-subheader>\n        <v-fade-transition\n          v-for=\"message in queue\"\n          :key=\"message\"\n          appear\n        >\n          <v-list-item\n            :color=\"message.color\"\n            :subtitle=\"message.timeout + 'ms'\"\n            :title=\"message.text\"\n          ></v-list-item>\n        </v-fade-transition>\n      </v-list>\n\n      <v-snackbar-queue v-model=\"queue\" :color=\"color\" :timeout=\"timeout\"></v-snackbar-queue>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"['primary', 'secondary', 'success', 'info', 'warning', 'error']\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-number-input v-model=\"timeout\" min=\"-1\"></v-number-input>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-snackbar-queue'\n  const model = ref('default')\n  const options = []\n  const color = shallowRef()\n  const timeout = shallowRef(5000)\n  const queue = ref([])\n  const text = shallowRef('')\n\n  function onClick () {\n    queue.value.push({\n      text: text.value,\n      timeout: timeout.value,\n      color: color.value,\n    })\n    text.value = ''\n  }\n\n  const props = computed(() => {\n    return {\n      'v-model': 'messages',\n      color: color.value ?? undefined,\n      timeout: timeout.value !== 5000 ? timeout.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-snackbar-queue${propsToString(props.value)}>${slots.value}</v-snackbar-queue>`\n  })\n\n  const script = computed(() => {\n    return `<script setup>\n  const text = ref('')\n  const messages = ref([])\n\n  function onClick () {\n    messages.value.push(text.value)\n  }\n<` + '/script>'\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n    :script=\"script\"\n  >\n    <div style=\"height: 188px\">\n      <v-text-field\n        v-model=\"text\"\n        label=\"Queue a message\"\n        hide-details\n        @keydown.enter=\"onClick\"\n      >\n        <template v-slot:append-inner>\n          <v-btn\n            :disabled=\"!text\"\n            append-icon=\"mdi-arrow-right\"\n            text=\"Queue\"\n            variant=\"flat\"\n            slim\n            @click=\"onClick\"\n          ></v-btn>\n        </template>\n      </v-text-field>\n\n      <v-list density=\"compact\" variant=\"tonal\" nav>\n        <v-list-subheader>Queue:</v-list-subheader>\n        <v-fade-transition\n          v-for=\"message in queue\"\n          :key=\"message\"\n          appear\n        >\n          <v-list-item\n            :color=\"message.color\"\n            :subtitle=\"message.timeout + 'ms'\"\n            :title=\"message.text\"\n          ></v-list-item>\n        </v-fade-transition>\n      </v-list>\n\n      <v-snackbar-queue v-model=\"queue\" :color=\"color\" :timeout=\"timeout\"></v-snackbar-queue>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select\n        v-model=\"color\"\n        :items=\"['primary', 'secondary', 'success', 'info', 'warning', 'error']\"\n        label=\"Color\"\n        clearable\n      ></v-select>\n\n      <v-number-input v-model=\"timeout\" min=\"-1\"></v-number-input>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-snackbar-queue'\n  const model = ref('default')\n  const options = []\n  const color = shallowRef()\n  const timeout = shallowRef(5000)\n  const queue = ref([])\n  const text = shallowRef('')\n\n  function onClick () {\n    queue.value.push({\n      text: text.value,\n      timeout: timeout.value,\n      color: color.value,\n    })\n    text.value = ''\n  }\n\n  const props = computed(() => {\n    return {\n      'v-model': 'messages',\n      color: color.value ?? undefined,\n      timeout: timeout.value !== 5000 ? timeout.value : undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<v-snackbar-queue${propsToString(props.value)}>${slots.value}</v-snackbar-queue>`\n  })\n\n  const script = computed(() => {\n    return `<script setup>\n  const text = ref('')\n  const messages = ref([])\n\n  function onClick () {\n    messages.value.push(text.value)\n  }\n<` + '/script>'\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001335",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001336",
    "text": "Component: v-sparklines\nType: component_overview\n\n# v-sparklines\n\nThe sparkline component can be used to create simple graphs, like GitHub's contribution chart.",
    "display_content": "# v-sparklines\n\nThe sparkline component can be used to create simple graphs, like GitHub's contribution chart.",
    "metadata": {
      "component": "v-sparklines",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001336",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001337",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nA sparkline is a tiny chart that provides a visual representation of data. The sparkline component comes in 2 variations, **trend** (default) and **bar**. Each supports a multitude of options for customizing the look and feel of the sparkline.",
    "display_content": "# v-usage\n\nA sparkline is a tiny chart that provides a visual representation of data. The sparkline component comes in 2 variations, **trend** (default) and **bar**. Each supports a multitude of options for customizing the look and feel of the sparkline.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001337",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001338",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-sparkline](/api/v-sparkline/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-sparkline](/api/v-sparkline/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001338",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001339",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can create a `v-sparkline` with fill using the `fill` property.\n\nAvailable sections: Fill, Custom labels, Dashboard card, Heart rate, Misc Custom Labels, Misc Dashboard Card, Misc Heart Rate, Prop Fill, Usage",
    "display_content": "# v-examples\n\nYou can create a `v-sparkline` with fill using the `fill` property.\n\nAvailable sections: Fill, Custom labels, Dashboard card, Heart rate, Misc Custom Labels, Misc Dashboard Card, Misc Heart Rate, Prop Fill, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001339",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001340",
    "text": "Component: v-examples\nSection: Fill\nType: documentation\n\n## v-examples - Fill\n\nYou can create a `v-sparkline` with fill using the `fill` property.\n\n<ExamplesExample file=\"v-sparkline/prop-fill\" />",
    "display_content": "## v-examples - Fill\n\nYou can create a `v-sparkline` with fill using the `fill` property.\n\n<ExamplesExample file=\"v-sparkline/prop-fill\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Fill",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001340",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001341",
    "text": "Component: v-examples\nSection: Custom labels\nType: documentation\n\n## v-examples - Custom labels\n\nBy providing a **label** slot, we are able to modify the displayed content by adding a dollar sign ($). This slot is **_exclusively_** for text content. For more information on the svg `<text>` element, [navigate here](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text).\n\n<ExamplesExample file=\"v-sparkline/misc-custom-labels\" />",
    "display_content": "## v-examples - Custom labels\n\nBy providing a **label** slot, we are able to modify the displayed content by adding a dollar sign ($). This slot is **_exclusively_** for text content. For more information on the svg `<text>` element, [navigate here](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text).\n\n<ExamplesExample file=\"v-sparkline/misc-custom-labels\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom labels",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001341",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001342",
    "text": "Component: v-examples\nSection: Dashboard card\nType: documentation\n\n## v-examples - Dashboard card\n\nThe `v-sparkline` component pairs nicely with `v-card` and `v-sheet` to create customized information cards, perfect for admin dashboards. Here we use custom labels to provide additional context for the sparkline.\n\n<ExamplesExample file=\"v-sparkline/misc-dashboard-card\" />",
    "display_content": "## v-examples - Dashboard card\n\nThe `v-sparkline` component pairs nicely with `v-card` and `v-sheet` to create customized information cards, perfect for admin dashboards. Here we use custom labels to provide additional context for the sparkline.\n\n<ExamplesExample file=\"v-sparkline/misc-dashboard-card\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dashboard card",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001342",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001343",
    "text": "Component: v-examples\nSection: Heart rate\nType: documentation\n\n## v-examples - Heart rate\n\nFor concise information, a complete chart might be overkill. Using a trend line with gradient provides enough detail for the user without showing too much information.\n\n<ExamplesExample file=\"v-sparkline/misc-heart-rate\" />",
    "display_content": "## v-examples - Heart rate\n\nFor concise information, a complete chart might be overkill. Using a trend line with gradient provides enough detail for the user without showing too much information.\n\n<ExamplesExample file=\"v-sparkline/misc-heart-rate\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Heart rate",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001343",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001344",
    "text": "Component: v-examples\nSection: Misc Custom Labels\nType: code_example\n\n## v-examples - Misc Custom Labels\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto text-center\"\n    color=\"green\"\n    max-width=\"600\"\n    dark\n  >\n    <v-card-text>\n      <v-sheet color=\"rgba(0, 0, 0, .12)\">\n        <v-sparkline\n          :model-value=\"value\"\n          color=\"rgba(255, 255, 255, .7)\"\n          height=\"100\"\n          padding=\"24\"\n          stroke-linecap=\"round\"\n          smooth\n        >\n          <template v-slot:label=\"item\">\n            ${{ item.value }}\n          </template>\n        </v-sparkline>\n      </v-sheet>\n    </v-card-text>\n\n    <v-card-text>\n      <div class=\"text-h4 font-weight-thin\">\n        Sales Last 24h\n      </div>\n    </v-card-text>\n\n    <v-divider></v-divider>\n\n    <v-card-actions class=\"justify-center\">\n      <v-btn\n        variant=\"text\"\n        block\n      >\n        Go to Report\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([\n    423,\n    446,\n    675,\n    510,\n    590,\n    610,\n    760,\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: [\n        423,\n        446,\n        675,\n        510,\n        590,\n        610,\n        760,\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Custom Labels\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto text-center\"\n    color=\"green\"\n    max-width=\"600\"\n    dark\n  >\n    <v-card-text>\n      <v-sheet color=\"rgba(0, 0, 0, .12)\">\n        <v-sparkline\n          :model-value=\"value\"\n          color=\"rgba(255, 255, 255, .7)\"\n          height=\"100\"\n          padding=\"24\"\n          stroke-linecap=\"round\"\n          smooth\n        >\n          <template v-slot:label=\"item\">\n            ${{ item.value }}\n          </template>\n        </v-sparkline>\n      </v-sheet>\n    </v-card-text>\n\n    <v-card-text>\n      <div class=\"text-h4 font-weight-thin\">\n        Sales Last 24h\n      </div>\n    </v-card-text>\n\n    <v-divider></v-divider>\n\n    <v-card-actions class=\"justify-center\">\n      <v-btn\n        variant=\"text\"\n        block\n      >\n        Go to Report\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref([\n    423,\n    446,\n    675,\n    510,\n    590,\n    610,\n    760,\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: [\n        423,\n        446,\n        675,\n        510,\n        590,\n        610,\n        760,\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Custom Labels",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001344",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001345",
    "text": "Component: v-examples\nSection: Misc Dashboard Card\nType: code_example\n\n## v-examples - Misc Dashboard Card\n\n```vue\n<template>\n  <v-card\n    class=\"mt-8 mx-auto overflow-visible\"\n    max-width=\"400\"\n  >\n    <v-sheet\n      class=\"v-sheet--offset mx-auto\"\n      color=\"cyan\"\n      elevation=\"12\"\n      max-width=\"calc(100% - 32px)\"\n      rounded=\"lg\"\n    >\n      <v-sparkline\n        :labels=\"labels\"\n        :model-value=\"value\"\n        color=\"white\"\n        line-width=\"2\"\n        padding=\"16\"\n      ></v-sparkline>\n    </v-sheet>\n\n    <v-card-text class=\"pt-0\">\n      <div class=\"text-h6 font-weight-light mb-2\">\n        User Registrations\n      </div>\n      <div class=\"subheading font-weight-light text-grey\">\n        Last Campaign Performance\n      </div>\n      <v-divider class=\"my-2\"></v-divider>\n      <v-icon\n        class=\"me-2\"\n        size=\"small\"\n      >\n        mdi-clock\n      </v-icon>\n      <span class=\"text-caption text-grey font-weight-light\">last registration 26 minutes ago</span>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const labels = ref([\n    '12am',\n    '3am',\n    '6am',\n    '9am',\n    '12pm',\n    '3pm',\n    '6pm',\n    '9pm',\n  ])\n  const value = ref([\n    200,\n    675,\n    410,\n    390,\n    310,\n    460,\n    250,\n    240,\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      labels: [\n        '12am',\n        '3am',\n        '6am',\n        '9am',\n        '12pm',\n        '3pm',\n        '6pm',\n        '9pm',\n      ],\n      value: [\n        200,\n        675,\n        410,\n        390,\n        310,\n        460,\n        250,\n        240,\n      ],\n    }),\n  }\n</script>\n\n<style>\n  .v-sheet--offset {\n    top: -24px;\n    position: relative;\n  }\n</style>\n\n```",
    "display_content": "## v-examples - Misc Dashboard Card\n\n```vue\n<template>\n  <v-card\n    class=\"mt-8 mx-auto overflow-visible\"\n    max-width=\"400\"\n  >\n    <v-sheet\n      class=\"v-sheet--offset mx-auto\"\n      color=\"cyan\"\n      elevation=\"12\"\n      max-width=\"calc(100% - 32px)\"\n      rounded=\"lg\"\n    >\n      <v-sparkline\n        :labels=\"labels\"\n        :model-value=\"value\"\n        color=\"white\"\n        line-width=\"2\"\n        padding=\"16\"\n      ></v-sparkline>\n    </v-sheet>\n\n    <v-card-text class=\"pt-0\">\n      <div class=\"text-h6 font-weight-light mb-2\">\n        User Registrations\n      </div>\n      <div class=\"subheading font-weight-light text-grey\">\n        Last Campaign Performance\n      </div>\n      <v-divider class=\"my-2\"></v-divider>\n      <v-icon\n        class=\"me-2\"\n        size=\"small\"\n      >\n        mdi-clock\n      </v-icon>\n      <span class=\"text-caption text-grey font-weight-light\">last registration 26 minutes ago</span>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const labels = ref([\n    '12am',\n    '3am',\n    '6am',\n    '9am',\n    '12pm',\n    '3pm',\n    '6pm',\n    '9pm',\n  ])\n  const value = ref([\n    200,\n    675,\n    410,\n    390,\n    310,\n    460,\n    250,\n    240,\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      labels: [\n        '12am',\n        '3am',\n        '6am',\n        '9am',\n        '12pm',\n        '3pm',\n        '6pm',\n        '9pm',\n      ],\n      value: [\n        200,\n        675,\n        410,\n        390,\n        310,\n        460,\n        250,\n        240,\n      ],\n    }),\n  }\n</script>\n\n<style>\n  .v-sheet--offset {\n    top: -24px;\n    position: relative;\n  }\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Dashboard Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001345",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001346",
    "text": "Component: v-examples\nSection: Misc Heart Rate\nType: code_example\n\n## v-examples - Misc Heart Rate\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"surface-light\"\n    max-width=\"600\"\n  >\n    <template v-slot:prepend>\n      <v-icon\n        :color=\"checking ? 'red lighten-2' : 'indigo-lighten-2'\"\n        class=\"me-8\"\n        icon=\"mdi-heart-pulse\"\n        size=\"64\"\n        @click=\"takePulse\"\n      ></v-icon>\n    </template>\n\n    <template v-slot:title>\n      <div class=\"text-caption text-grey text-uppercase\">\n        Heart rate\n      </div>\n\n      <span\n        class=\"text-h3 font-weight-black\"\n        v-text=\"avg || '—'\"\n      ></span>\n      <strong v-if=\"avg\">BPM</strong>\n    </template>\n\n    <template v-slot:append>\n      <v-btn\n        class=\"align-self-start\"\n        icon=\"mdi-arrow-right-thick\"\n        size=\"34\"\n        variant=\"text\"\n      ></v-btn>\n    </template>\n\n    <v-sheet color=\"transparent\">\n      <v-sparkline\n        :key=\"String(avg)\"\n        :gradient=\"['#f72047', '#ffd200', '#1feaea']\"\n        :line-width=\"3\"\n        :model-value=\"heartbeats\"\n        :smooth=\"16\"\n        stroke-linecap=\"round\"\n        auto-draw\n      ></v-sparkline>\n    </v-sheet>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const exhale = ms => new Promise(resolve => setTimeout(resolve, ms))\n  const checking = ref(false)\n  const heartbeats = ref([])\n  const avg = computed(() => {\n    const sum = heartbeats.value.reduce((acc, cur) => acc + cur, 0)\n    const length = heartbeats.value.length\n    if (!sum && !length) return 0\n    return Math.ceil(sum / length)\n  })\n  function heartbeat () {\n    return Math.ceil(Math.random() * (120 - 80) + 80)\n  }\n  async function takePulse (inhale = true) {\n    checking.value = true\n    inhale && await exhale(1000)\n    heartbeats.value = Array.from({ length: 20 }, heartbeat)\n    checking.value = false\n  }\n  takePulse(false)\n</script>\n\n<script>\n  const exhale = ms =>\n    new Promise(resolve => setTimeout(resolve, ms))\n\n  export default {\n    data: () => ({\n      checking: false,\n      heartbeats: [],\n    }),\n\n    computed: {\n      avg () {\n        const sum = this.heartbeats.reduce((acc, cur) => acc + cur, 0)\n        const length = this.heartbeats.length\n\n        if (!sum && !length) return 0\n\n        return Math.ceil(sum / length)\n      },\n    },\n\n    created () {\n      this.takePulse(false)\n    },\n\n    methods: {\n      heartbeat () {\n        return Math.ceil(Math.random() * (120 - 80) + 80)\n      },\n      async takePulse (inhale = true) {\n        this.checking = true\n\n        inhale && await exhale(1000)\n\n        this.heartbeats = Array.from({ length: 20 }, this.heartbeat)\n\n        this.checking = false\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Heart Rate\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"surface-light\"\n    max-width=\"600\"\n  >\n    <template v-slot:prepend>\n      <v-icon\n        :color=\"checking ? 'red lighten-2' : 'indigo-lighten-2'\"\n        class=\"me-8\"\n        icon=\"mdi-heart-pulse\"\n        size=\"64\"\n        @click=\"takePulse\"\n      ></v-icon>\n    </template>\n\n    <template v-slot:title>\n      <div class=\"text-caption text-grey text-uppercase\">\n        Heart rate\n      </div>\n\n      <span\n        class=\"text-h3 font-weight-black\"\n        v-text=\"avg || '—'\"\n      ></span>\n      <strong v-if=\"avg\">BPM</strong>\n    </template>\n\n    <template v-slot:append>\n      <v-btn\n        class=\"align-self-start\"\n        icon=\"mdi-arrow-right-thick\"\n        size=\"34\"\n        variant=\"text\"\n      ></v-btn>\n    </template>\n\n    <v-sheet color=\"transparent\">\n      <v-sparkline\n        :key=\"String(avg)\"\n        :gradient=\"['#f72047', '#ffd200', '#1feaea']\"\n        :line-width=\"3\"\n        :model-value=\"heartbeats\"\n        :smooth=\"16\"\n        stroke-linecap=\"round\"\n        auto-draw\n      ></v-sparkline>\n    </v-sheet>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const exhale = ms => new Promise(resolve => setTimeout(resolve, ms))\n  const checking = ref(false)\n  const heartbeats = ref([])\n  const avg = computed(() => {\n    const sum = heartbeats.value.reduce((acc, cur) => acc + cur, 0)\n    const length = heartbeats.value.length\n    if (!sum && !length) return 0\n    return Math.ceil(sum / length)\n  })\n  function heartbeat () {\n    return Math.ceil(Math.random() * (120 - 80) + 80)\n  }\n  async function takePulse (inhale = true) {\n    checking.value = true\n    inhale && await exhale(1000)\n    heartbeats.value = Array.from({ length: 20 }, heartbeat)\n    checking.value = false\n  }\n  takePulse(false)\n</script>\n\n<script>\n  const exhale = ms =>\n    new Promise(resolve => setTimeout(resolve, ms))\n\n  export default {\n    data: () => ({\n      checking: false,\n      heartbeats: [],\n    }),\n\n    computed: {\n      avg () {\n        const sum = this.heartbeats.reduce((acc, cur) => acc + cur, 0)\n        const length = this.heartbeats.length\n\n        if (!sum && !length) return 0\n\n        return Math.ceil(sum / length)\n      },\n    },\n\n    created () {\n      this.takePulse(false)\n    },\n\n    methods: {\n      heartbeat () {\n        return Math.ceil(Math.random() * (120 - 80) + 80)\n      },\n      async takePulse (inhale = true) {\n        this.checking = true\n\n        inhale && await exhale(1000)\n\n        this.heartbeats = Array.from({ length: 20 }, this.heartbeat)\n\n        this.checking = false\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Heart Rate",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001346",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001347",
    "text": "Component: v-examples\nSection: Prop Fill\nType: code_example\n\n## v-examples - Prop Fill\n\n```vue\n<template>\n  <v-container fluid>\n    <v-sparkline\n      :fill=\"fill\"\n      :gradient=\"selectedGradient\"\n      :line-width=\"lineWidth\"\n      :model-value=\"value\"\n      :padding=\"padding\"\n      :smooth=\"smooth\"\n      auto-draw\n    ></v-sparkline>\n\n    <v-divider></v-divider>\n\n    <v-row>\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-row\n          align=\"center\"\n          class=\"fill-height\"\n        >\n          <v-item-group\n            v-model=\"selectedGradient\"\n            mandatory\n          >\n            <v-row\n              class=\"pt-6 pl-6\"\n            >\n              <v-item\n                v-for=\"(gradient, i) in gradients\"\n                :key=\"i\"\n                v-slot=\"{ active, toggle }\"\n                :value=\"gradient\"\n              >\n                <v-card\n                  :style=\"{\n                    background: gradient.length > 1\n                      ? `linear-gradient(0deg, ${gradient})`\n                      : gradient[0],\n                    border: '2px solid',\n                    borderColor: active ? '#222' : 'white'\n                  }\"\n                  class=\"me-2\"\n                  height=\"30\"\n                  width=\"30\"\n                  @click=\"toggle\"\n                ></v-card>\n              </v-item>\n            </v-row>\n          </v-item-group>\n        </v-row>\n      </v-col>\n    </v-row>\n\n    <v-row\n      class=\"mt-5\"\n    >\n      <v-col\n        cols=\"2\"\n      >\n        Filled\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        <v-switch\n          v-model=\"fill\"\n          class=\"switch\"\n        ></v-switch>\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        Line width\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        <v-slider\n          v-model=\"lineWidth\"\n          max=\"10\"\n          min=\"0.1\"\n          step=\"0.1\"\n          thumb-label\n        ></v-slider>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col\n        cols=\"2\"\n      >\n        Smooth\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        <v-switch\n          v-model=\"smooth\"\n          class=\"switch\"\n        ></v-switch>\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        Padding\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        <v-slider\n          v-model=\"padding\"\n          cols=\"3\"\n          max=\"25\"\n          min=\"0\"\n          thumb-label\n        ></v-slider>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const gradients = [\n    ['#222'],\n    ['#42b3f4'],\n    ['red', 'orange', 'yellow'],\n    ['purple', 'violet'],\n    ['#00c6ff', '#F0F', '#FF0'],\n    ['#f72047', '#ffd200', '#1feaea'],\n  ]\n  const fill = ref(true)\n  const selectedGradient = ref(gradients[4])\n  const padding = ref(8)\n  const smooth = ref(true)\n  const value = ref([0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0])\n  const lineWidth = ref(2)\n</script>\n\n<script>\n  const gradients = [\n    ['#222'],\n    ['#42b3f4'],\n    ['red', 'orange', 'yellow'],\n    ['purple', 'violet'],\n    ['#00c6ff', '#F0F', '#FF0'],\n    ['#f72047', '#ffd200', '#1feaea'],\n  ]\n\n  export default {\n    data: () => ({\n      fill: true,\n      selectedGradient: gradients[4],\n      gradients,\n      padding: 8,\n      smooth: true,\n      value: [0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0],\n      lineWidth: 2,\n    }),\n  }\n</script>\n\n<style scoped>\n.switch {\n  position: relative;\n  top: -12px;\n}\n</style>\n\n```",
    "display_content": "## v-examples - Prop Fill\n\n```vue\n<template>\n  <v-container fluid>\n    <v-sparkline\n      :fill=\"fill\"\n      :gradient=\"selectedGradient\"\n      :line-width=\"lineWidth\"\n      :model-value=\"value\"\n      :padding=\"padding\"\n      :smooth=\"smooth\"\n      auto-draw\n    ></v-sparkline>\n\n    <v-divider></v-divider>\n\n    <v-row>\n      <v-col\n        cols=\"12\"\n        md=\"6\"\n      >\n        <v-row\n          align=\"center\"\n          class=\"fill-height\"\n        >\n          <v-item-group\n            v-model=\"selectedGradient\"\n            mandatory\n          >\n            <v-row\n              class=\"pt-6 pl-6\"\n            >\n              <v-item\n                v-for=\"(gradient, i) in gradients\"\n                :key=\"i\"\n                v-slot=\"{ active, toggle }\"\n                :value=\"gradient\"\n              >\n                <v-card\n                  :style=\"{\n                    background: gradient.length > 1\n                      ? `linear-gradient(0deg, ${gradient})`\n                      : gradient[0],\n                    border: '2px solid',\n                    borderColor: active ? '#222' : 'white'\n                  }\"\n                  class=\"me-2\"\n                  height=\"30\"\n                  width=\"30\"\n                  @click=\"toggle\"\n                ></v-card>\n              </v-item>\n            </v-row>\n          </v-item-group>\n        </v-row>\n      </v-col>\n    </v-row>\n\n    <v-row\n      class=\"mt-5\"\n    >\n      <v-col\n        cols=\"2\"\n      >\n        Filled\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        <v-switch\n          v-model=\"fill\"\n          class=\"switch\"\n        ></v-switch>\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        Line width\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        <v-slider\n          v-model=\"lineWidth\"\n          max=\"10\"\n          min=\"0.1\"\n          step=\"0.1\"\n          thumb-label\n        ></v-slider>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col\n        cols=\"2\"\n      >\n        Smooth\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        <v-switch\n          v-model=\"smooth\"\n          class=\"switch\"\n        ></v-switch>\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        Padding\n      </v-col>\n      <v-col\n        cols=\"3\"\n      >\n        <v-slider\n          v-model=\"padding\"\n          cols=\"3\"\n          max=\"25\"\n          min=\"0\"\n          thumb-label\n        ></v-slider>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const gradients = [\n    ['#222'],\n    ['#42b3f4'],\n    ['red', 'orange', 'yellow'],\n    ['purple', 'violet'],\n    ['#00c6ff', '#F0F', '#FF0'],\n    ['#f72047', '#ffd200', '#1feaea'],\n  ]\n  const fill = ref(true)\n  const selectedGradient = ref(gradients[4])\n  const padding = ref(8)\n  const smooth = ref(true)\n  const value = ref([0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0])\n  const lineWidth = ref(2)\n</script>\n\n<script>\n  const gradients = [\n    ['#222'],\n    ['#42b3f4'],\n    ['red', 'orange', 'yellow'],\n    ['purple', 'violet'],\n    ['#00c6ff', '#F0F', '#FF0'],\n    ['#f72047', '#ffd200', '#1feaea'],\n  ]\n\n  export default {\n    data: () => ({\n      fill: true,\n      selectedGradient: gradients[4],\n      gradients,\n      padding: 8,\n      smooth: true,\n      value: [0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0],\n      lineWidth: 2,\n    }),\n  }\n</script>\n\n<style scoped>\n.switch {\n  position: relative;\n  top: -12px;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Fill",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001347",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001348",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-sparkline\n    :auto-line-width=\"autoLineWidth\"\n    :fill=\"fill\"\n    :gradient=\"gradient\"\n    :gradient-direction=\"gradientDirection\"\n    :line-width=\"width\"\n    :model-value=\"value\"\n    :padding=\"padding\"\n    :smooth=\"radius || false\"\n    :stroke-linecap=\"lineCap\"\n    :type=\"type\"\n    auto-draw\n  ></v-sparkline>\n</template>\n\n<script>\n  const gradients = [\n    ['#222'],\n    ['#42b3f4'],\n    ['red', 'orange', 'yellow'],\n    ['purple', 'violet'],\n    ['#00c6ff', '#F0F', '#FF0'],\n    ['#f72047', '#ffd200', '#1feaea'],\n  ]\n\n  export default {\n    data: () => ({\n      width: 2,\n      radius: 10,\n      padding: 8,\n      lineCap: 'round',\n      gradient: gradients[5],\n      value: [0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0],\n      gradientDirection: 'top',\n      gradients,\n      fill: false,\n      type: 'trend',\n      autoLineWidth: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-sparkline\n    :auto-line-width=\"autoLineWidth\"\n    :fill=\"fill\"\n    :gradient=\"gradient\"\n    :gradient-direction=\"gradientDirection\"\n    :line-width=\"width\"\n    :model-value=\"value\"\n    :padding=\"padding\"\n    :smooth=\"radius || false\"\n    :stroke-linecap=\"lineCap\"\n    :type=\"type\"\n    auto-draw\n  ></v-sparkline>\n</template>\n\n<script>\n  const gradients = [\n    ['#222'],\n    ['#42b3f4'],\n    ['red', 'orange', 'yellow'],\n    ['purple', 'violet'],\n    ['#00c6ff', '#F0F', '#FF0'],\n    ['#f72047', '#ffd200', '#1feaea'],\n  ]\n\n  export default {\n    data: () => ({\n      width: 2,\n      radius: 10,\n      padding: 8,\n      lineCap: 'round',\n      gradient: gradients[5],\n      value: [0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0],\n      gradientDirection: 'top',\n      gradients,\n      fill: false,\n      type: 'trend',\n      autoLineWidth: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001348",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001349",
    "text": "Component: v-speed-dials\nType: component_overview\n\n# v-speed-dials\n\nThe `v-speed-dial` component can be used as a floating action button that can reveal additional actions when clicked.",
    "display_content": "# v-speed-dials\n\nThe `v-speed-dial` component can be used as a floating action button that can reveal additional actions when clicked.",
    "metadata": {
      "component": "v-speed-dials",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001349",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001350",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nSpeed dials can be attached to material to signify a promoted action in your application. The default size will be used in most cases, whereas the `small` variant can be used to maintain continuity with similar sized elements.",
    "display_content": "# v-usage\n\nSpeed dials can be attached to material to signify a promoted action in your application. The default size will be used in most cases, whereas the `small` variant can be used to maintain continuity with similar sized elements.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001350",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001351",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-speed-dial](/api/v-speed-dial/) | Primary Component |\n\nAvailable sections: Guide, Usage",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-speed-dial](/api/v-speed-dial/) | Primary Component |\n\nAvailable sections: Guide, Usage",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001351",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001352",
    "text": "Component: v-api\nSection: Guide\nType: documentation\n\n## v-api - Guide\n\nComing soon.",
    "display_content": "## v-api - Guide\n\nComing soon.",
    "metadata": {
      "component": "v-api",
      "section_type": "subsection",
      "subsection": "Guide",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001352",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001353",
    "text": "Component: v-api\nSection: Usage\nType: code_example\n\n## v-api - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-sheet class=\"text-center\" height=\"420\">\n      <v-fab icon=\"$vuetify\" size=\"large\">\n        <v-icon></v-icon>\n\n        <v-speed-dial\n          activator=\"parent\"\n          v-bind=\"props\"\n        >\n          <v-btn key=\"1\" color=\"surface-variant\" icon=\"$success\"></v-btn>\n          <v-btn key=\"2\" color=\"surface-variant\" icon=\"$info\"></v-btn>\n          <v-btn key=\"3\" color=\"surface-variant\" icon=\"$warning\"></v-btn>\n          <v-btn key=\"4\" color=\"surface-variant\" icon=\"$error\"></v-btn>\n        </v-speed-dial>\n      </v-fab>\n    </v-sheet>\n\n    <template v-slot:configuration>\n      <v-select v-model=\"location1\" :items=\"locations1\" label=\"Location 1\"></v-select>\n      <v-select v-model=\"location2\" :items=\"locations2\" label=\"Location 2\"></v-select>\n      <v-select v-model=\"transition\" :items=\"transitions\" label=\"Transition\"></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-speed-dial'\n  const model = shallowRef('default')\n  const options = []\n  const location1 = shallowRef('Bottom')\n  const locations1 = ['Top', 'Bottom', 'Left', 'Right']\n  const location2 = shallowRef('Center')\n  const locations2 = ['Top', 'Bottom', 'Center', 'Left', 'Right']\n  const location = computed(() => `${location1.value.toLowerCase()} ${location2.value.toLowerCase()}`)\n  const transition = shallowRef('fade-transition')\n  const transitions = ['scale-transition', 'slide-x-transition', 'slide-y-transition', 'slide-x-reverse-transition', 'slide-y-reverse-transition']\n  const props = computed(() => {\n    return {\n      location: location.value,\n      transition: transition.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:activator=\"{ props: activatorProps }\">\n    <v-fab\n      v-bind=\"activatorProps\"\n      size=\"large\"\n      icon=\"$vuetify\"\n    ></v-fab>\n  </template>\n\n  <v-btn key=\"1\" icon=\"$success\"></v-btn>\n  <v-btn key=\"2\" icon=\"$info\"></v-btn>\n  <v-btn key=\"3\" icon=\"$warning\"></v-btn>\n  <v-btn key=\"4\" icon=\"$error\"></v-btn>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-api - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-sheet class=\"text-center\" height=\"420\">\n      <v-fab icon=\"$vuetify\" size=\"large\">\n        <v-icon></v-icon>\n\n        <v-speed-dial\n          activator=\"parent\"\n          v-bind=\"props\"\n        >\n          <v-btn key=\"1\" color=\"surface-variant\" icon=\"$success\"></v-btn>\n          <v-btn key=\"2\" color=\"surface-variant\" icon=\"$info\"></v-btn>\n          <v-btn key=\"3\" color=\"surface-variant\" icon=\"$warning\"></v-btn>\n          <v-btn key=\"4\" color=\"surface-variant\" icon=\"$error\"></v-btn>\n        </v-speed-dial>\n      </v-fab>\n    </v-sheet>\n\n    <template v-slot:configuration>\n      <v-select v-model=\"location1\" :items=\"locations1\" label=\"Location 1\"></v-select>\n      <v-select v-model=\"location2\" :items=\"locations2\" label=\"Location 2\"></v-select>\n      <v-select v-model=\"transition\" :items=\"transitions\" label=\"Transition\"></v-select>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-speed-dial'\n  const model = shallowRef('default')\n  const options = []\n  const location1 = shallowRef('Bottom')\n  const locations1 = ['Top', 'Bottom', 'Left', 'Right']\n  const location2 = shallowRef('Center')\n  const locations2 = ['Top', 'Bottom', 'Center', 'Left', 'Right']\n  const location = computed(() => `${location1.value.toLowerCase()} ${location2.value.toLowerCase()}`)\n  const transition = shallowRef('fade-transition')\n  const transitions = ['scale-transition', 'slide-x-transition', 'slide-y-transition', 'slide-x-reverse-transition', 'slide-y-reverse-transition']\n  const props = computed(() => {\n    return {\n      location: location.value,\n      transition: transition.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:activator=\"{ props: activatorProps }\">\n    <v-fab\n      v-bind=\"activatorProps\"\n      size=\"large\"\n      icon=\"$vuetify\"\n    ></v-fab>\n  </template>\n\n  <v-btn key=\"1\" icon=\"$success\"></v-btn>\n  <v-btn key=\"2\" icon=\"$info\"></v-btn>\n  <v-btn key=\"3\" icon=\"$warning\"></v-btn>\n  <v-btn key=\"4\" icon=\"$error\"></v-btn>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-api",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001353",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001354",
    "text": "Component: v-steppers\nType: component_overview\n\n# v-steppers\n\nThe `v-stepper` component displays progress through numbered steps.",
    "display_content": "# v-steppers\n\nThe `v-stepper` component displays progress through numbered steps.",
    "metadata": {
      "component": "v-steppers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001354",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001355",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nA stepper can be used for a multitude of scenarios, including shopping carts, record creation and more.",
    "display_content": "# v-usage\n\nA stepper can be used for a multitude of scenarios, including shopping carts, record creation and more.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001355",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001356",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-stepper](/api/v-stepper/) | Primary Component | | [v-stepper-actions](/api/v-stepper-actions/) | Actions for stepper | | [v-stepper-header](/api/v-stepper-header/) | Container for stepper items | | [v-stepper-item](/api/v-stepper-item/) | Primary Component | | [v-stepper-window](/api/v-stepper-window/) | Window container for stepper window items | | [v-stepper-window-item](/api/v-stepper-window-item/) | Items for stepper window |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-stepper](/api/v-stepper/) | Primary Component | | [v-stepper-actions](/api/v-stepper-actions/) | Actions for stepper | | [v-stepper-header](/api/v-stepper-header/) | Container for stepper items | | [v-stepper-item](/api/v-stepper-item/) | Primary Component | | [v-stepper-window](/api/v-stepper-window/) | Window container for stepper window items | | [v-stepper-window-item](/api/v-stepper-window-item/) | Items for stepper window |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001356",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001357",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-stepper` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-stepper` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001357",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001358",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-stepper` component provides a linear progression process for gathering and displaying information to a user, similar to a form wizard.\n\nAvailable sections: Props, Non editable steps, Editable steps, Alternate label, Linear steppers, Optional steps, Items, Mobile, Errors, Dynamic steps, Alternative label with errors, Non linear, Misc Alternate Error, Misc Dynamic, Misc Editable, Misc Error, Misc Horizontal, Misc Linear, Misc Non Editable, Misc Optional, Misc Vertical Error, Prop Alternate Label, Prop Mobile, Prop Non Linear, Prop Vertical, Usage",
    "display_content": "# v-guide\n\nThe `v-stepper` component provides a linear progression process for gathering and displaying information to a user, similar to a form wizard.\n\nAvailable sections: Props, Non editable steps, Editable steps, Alternate label, Linear steppers, Optional steps, Items, Mobile, Errors, Dynamic steps, Alternative label with errors, Non linear, Misc Alternate Error, Misc Dynamic, Misc Editable, Misc Error, Misc Horizontal, Misc Linear, Misc Non Editable, Misc Optional, Misc Vertical Error, Prop Alternate Label, Prop Mobile, Prop Non Linear, Prop Vertical, Usage",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001358",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001359",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-stepper` component has multiple props to customize its visual appearance and functionality.",
    "display_content": "## v-guide - Props\n\nThe `v-stepper` component has multiple props to customize its visual appearance and functionality.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001359",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001360",
    "text": "Component: v-guide\nSection: Non editable steps\nType: documentation\n\n## v-guide - Non editable steps\n\nA basic stepper has non-editable steps that force a user to move linearly through your process.\n\n<ExamplesExample file=\"v-stepper/misc-non-editable\" />",
    "display_content": "## v-guide - Non editable steps\n\nA basic stepper has non-editable steps that force a user to move linearly through your process.\n\n<ExamplesExample file=\"v-stepper/misc-non-editable\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Non editable steps",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001360",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001361",
    "text": "Component: v-guide\nSection: Editable steps\nType: documentation\n\n## v-guide - Editable steps\n\nAn editable step can be selected by a user at any point and will navigate them to that step.\n\n<ExamplesExample file=\"v-stepper/misc-editable\" />",
    "display_content": "## v-guide - Editable steps\n\nAn editable step can be selected by a user at any point and will navigate them to that step.\n\n<ExamplesExample file=\"v-stepper/misc-editable\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Editable steps",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001361",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001362",
    "text": "Component: v-guide\nSection: Alternate label\nType: documentation\n\n## v-guide - Alternate label\n\nSteppers also have an alternative label style which places the title under the step itself.\n\n<ExamplesExample file=\"v-stepper/prop-alternate-label\" />",
    "display_content": "## v-guide - Alternate label\n\nSteppers also have an alternative label style which places the title under the step itself.\n\n<ExamplesExample file=\"v-stepper/prop-alternate-label\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Alternate label",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001362",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001363",
    "text": "Component: v-guide\nSection: Linear steppers\nType: documentation\n\n## v-guide - Linear steppers\n\nLinear steppers will always move a user through your defined path.\n\n<ExamplesExample file=\"v-stepper/misc-linear\" />",
    "display_content": "## v-guide - Linear steppers\n\nLinear steppers will always move a user through your defined path.\n\n<ExamplesExample file=\"v-stepper/misc-linear\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Linear steppers",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001363",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001364",
    "text": "Component: v-guide\nSection: Optional steps\nType: documentation\n\n## v-guide - Optional steps\n\nAn optional step can be called out with sub-text.\n\n<ExamplesExample file=\"v-stepper/misc-optional\" />",
    "display_content": "## v-guide - Optional steps\n\nAn optional step can be called out with sub-text.\n\n<ExamplesExample file=\"v-stepper/misc-optional\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Optional steps",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001364",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001365",
    "text": "Component: v-guide\nSection: Items\nType: documentation\n\n## v-guide - Items\n\nThe stepper component accepts an array of items similar to other components such as [v-list](/components/lists/) and [v-select](/components/selects/).\n\n<ExamplesExample file=\"v-stepper/misc-horizontal\" />\n\n::: warning\n\nIf no value is provided, the stepper will assign a value based off of its index + 1\n\n:::",
    "display_content": "## v-guide - Items\n\nThe stepper component accepts an array of items similar to other components such as [v-list](/components/lists/) and [v-select](/components/selects/).\n\n<ExamplesExample file=\"v-stepper/misc-horizontal\" />\n\n::: warning\n\nIf no value is provided, the stepper will assign a value based off of its index + 1\n\n:::",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Items",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001365",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001366",
    "text": "Component: v-guide\nSection: Mobile\nType: documentation\n\n## v-guide - Mobile\n\nUse the **mobile** prop to hide the title and subtitle of the `v-stepper-item` component.\n\n<ExamplesExample file=\"v-stepper/prop-mobile\" />",
    "display_content": "## v-guide - Mobile\n\nUse the **mobile** prop to hide the title and subtitle of the `v-stepper-item` component.\n\n<ExamplesExample file=\"v-stepper/prop-mobile\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Mobile",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001366",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001367",
    "text": "Component: v-guide\nSection: Errors\nType: documentation\n\n## v-guide - Errors\n\nAn error state can be displayed to notify the user of some action that must be taken.\n\n<ExamplesExample file=\"v-stepper/misc-error\" />",
    "display_content": "## v-guide - Errors\n\nAn error state can be displayed to notify the user of some action that must be taken.\n\n<ExamplesExample file=\"v-stepper/misc-error\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Errors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001367",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001368",
    "text": "Component: v-guide\nSection: Dynamic steps\nType: documentation\n\n## v-guide - Dynamic steps\n\nSteppers can have their steps dynamically added or removed. If a currently active step is removed, be sure to account for this by changing the applied model.\n\n<ExamplesExample file=\"v-stepper/misc-dynamic\" />",
    "display_content": "## v-guide - Dynamic steps\n\nSteppers can have their steps dynamically added or removed. If a currently active step is removed, be sure to account for this by changing the applied model.\n\n<ExamplesExample file=\"v-stepper/misc-dynamic\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Dynamic steps",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001368",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001369",
    "text": "Component: v-guide\nSection: Alternative label with errors\nType: documentation\n\n## v-guide - Alternative label with errors\n\nThe error state can also be applied to the alternative label style.\n\n<ExamplesExample file=\"v-stepper/misc-alternate-error\" />",
    "display_content": "## v-guide - Alternative label with errors\n\nThe error state can also be applied to the alternative label style.\n\n<ExamplesExample file=\"v-stepper/misc-alternate-error\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Alternative label with errors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001369",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001370",
    "text": "Component: v-guide\nSection: Non linear\nType: documentation\n\n## v-guide - Non linear\n\nNon-linear steppers allow the user to move through your process in whatever way they choose.\n\n<ExamplesExample file=\"v-stepper/prop-non-linear\" />",
    "display_content": "## v-guide - Non linear\n\nNon-linear steppers allow the user to move through your process in whatever way they choose.\n\n<ExamplesExample file=\"v-stepper/prop-non-linear\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Non linear",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001370",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001371",
    "text": "Component: v-guide\nSection: Misc Alternate Error\nType: code_example\n\n## v-guide - Misc Alternate Error\n\n```vue\n<template>\n  <v-stepper alt-labels>\n    <v-stepper-header>\n      <v-stepper-item\n        value=\"1\"\n        complete\n      >\n        <template v-slot:title>\n          Ad type\n        </template>\n      </v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        value=\"2\"\n        complete\n      >\n        <template v-slot:title>\n          Ad style\n        </template>\n      </v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        :rules=\"[() => false]\"\n        value=\"3\"\n      >\n        <template v-slot:title>\n          Custom channels\n        </template>\n\n        <template v-slot:subtitle>\n          Alert message\n        </template>\n      </v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item value=\"46\">\n        <template v-slot:title>\n          Get code\n        </template>\n      </v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "display_content": "## v-guide - Misc Alternate Error\n\n```vue\n<template>\n  <v-stepper alt-labels>\n    <v-stepper-header>\n      <v-stepper-item\n        value=\"1\"\n        complete\n      >\n        <template v-slot:title>\n          Ad type\n        </template>\n      </v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        value=\"2\"\n        complete\n      >\n        <template v-slot:title>\n          Ad style\n        </template>\n      </v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        :rules=\"[() => false]\"\n        value=\"3\"\n      >\n        <template v-slot:title>\n          Custom channels\n        </template>\n\n        <template v-slot:subtitle>\n          Alert message\n        </template>\n      </v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item value=\"46\">\n        <template v-slot:title>\n          Get code\n        </template>\n      </v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Alternate Error",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001371",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001372",
    "text": "Component: v-guide\nSection: Misc Dynamic\nType: code_example\n\n## v-guide - Misc Dynamic\n\n```vue\n<template>\n  <div>\n    <v-card class=\"mb-4\">\n      <v-card-text>\n        <v-select\n          v-model=\"steps\"\n          :items=\"[2, 3, 4, 5, 6]\"\n          label=\"# of steps\"\n        ></v-select>\n      </v-card-text>\n    </v-card>\n\n    <v-stepper v-model=\"e1\">\n      <template v-slot:default=\"{ prev, next }\">\n        <v-stepper-header>\n          <template v-for=\"n in steps\" :key=\"`${n}-step`\">\n            <v-stepper-item\n              :complete=\"e1 > n\"\n              :step=\"`Step {{ n }}`\"\n              :value=\"n\"\n              editable\n            ></v-stepper-item>\n\n            <v-divider\n              v-if=\"n !== steps\"\n              :key=\"n\"\n            ></v-divider>\n          </template>\n        </v-stepper-header>\n\n        <v-stepper-window>\n          <v-stepper-window-item\n            v-for=\"n in steps\"\n            :key=\"`${n}-content`\"\n            :value=\"n\"\n          >\n            <v-card\n              color=\"grey-lighten-1\"\n              height=\"200\"\n            ></v-card>\n          </v-stepper-window-item>\n        </v-stepper-window>\n\n        <v-stepper-actions\n          :disabled=\"disabled\"\n          @click:next=\"next\"\n          @click:prev=\"prev\"\n        ></v-stepper-actions>\n      </template>\n    </v-stepper>\n  </div>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const e1 = ref(1)\n  const steps = ref(2)\n\n  const disabled = computed(() => {\n    return e1.value === 1 ? 'prev' : e1.value === steps.value ? 'next' : undefined\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        e1: 1,\n        steps: 2,\n      }\n    },\n\n    computed: {\n      disabled () {\n        return this.e1 === 1 ? 'prev' : this.e1 === this.steps ? 'next' : undefined\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Dynamic\n\n```vue\n<template>\n  <div>\n    <v-card class=\"mb-4\">\n      <v-card-text>\n        <v-select\n          v-model=\"steps\"\n          :items=\"[2, 3, 4, 5, 6]\"\n          label=\"# of steps\"\n        ></v-select>\n      </v-card-text>\n    </v-card>\n\n    <v-stepper v-model=\"e1\">\n      <template v-slot:default=\"{ prev, next }\">\n        <v-stepper-header>\n          <template v-for=\"n in steps\" :key=\"`${n}-step`\">\n            <v-stepper-item\n              :complete=\"e1 > n\"\n              :step=\"`Step {{ n }}`\"\n              :value=\"n\"\n              editable\n            ></v-stepper-item>\n\n            <v-divider\n              v-if=\"n !== steps\"\n              :key=\"n\"\n            ></v-divider>\n          </template>\n        </v-stepper-header>\n\n        <v-stepper-window>\n          <v-stepper-window-item\n            v-for=\"n in steps\"\n            :key=\"`${n}-content`\"\n            :value=\"n\"\n          >\n            <v-card\n              color=\"grey-lighten-1\"\n              height=\"200\"\n            ></v-card>\n          </v-stepper-window-item>\n        </v-stepper-window>\n\n        <v-stepper-actions\n          :disabled=\"disabled\"\n          @click:next=\"next\"\n          @click:prev=\"prev\"\n        ></v-stepper-actions>\n      </template>\n    </v-stepper>\n  </div>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const e1 = ref(1)\n  const steps = ref(2)\n\n  const disabled = computed(() => {\n    return e1.value === 1 ? 'prev' : e1.value === steps.value ? 'next' : undefined\n  })\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        e1: 1,\n        steps: 2,\n      }\n    },\n\n    computed: {\n      disabled () {\n        return this.e1 === 1 ? 'prev' : this.e1 === this.steps ? 'next' : undefined\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Dynamic",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001372",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001373",
    "text": "Component: v-guide\nSection: Misc Editable\nType: code_example\n\n## v-guide - Misc Editable\n\n```vue\n<template>\n  <v-stepper>\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n        editable\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n        editable\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "display_content": "## v-guide - Misc Editable\n\n```vue\n<template>\n  <v-stepper>\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n        editable\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n        editable\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Editable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001373",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001374",
    "text": "Component: v-guide\nSection: Misc Error\nType: code_example\n\n## v-guide - Misc Error\n\n```vue\n<template>\n  <v-stepper model-value=\"3\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Job Search\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        :rules=\"[() => false]\"\n        subtitle=\"Missing Details\"\n        title=\"Submit Application\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Interview Process\"\n        value=\"3\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Hiring Decision\"\n        value=\"4\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "display_content": "## v-guide - Misc Error\n\n```vue\n<template>\n  <v-stepper model-value=\"3\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Job Search\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        :rules=\"[() => false]\"\n        subtitle=\"Missing Details\"\n        title=\"Submit Application\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Interview Process\"\n        value=\"3\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Hiring Decision\"\n        value=\"4\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Error",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001374",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001375",
    "text": "Component: v-guide\nSection: Misc Horizontal\nType: code_example\n\n## v-guide - Misc Horizontal\n\n```vue\n<template>\n  <v-stepper\n    v-model=\"step\"\n    :items=\"items\"\n    show-actions\n  >\n    <template v-slot:item.1>\n      <h3 class=\"text-h6\">Order</h3>\n\n      <br>\n\n      <v-sheet border>\n        <v-table>\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th class=\"text-end\">Quantity</th>\n              <th class=\"text-end\">Price</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr v-for=\"(product, index) in products\" :key=\"index\">\n              <td v-text=\"product.name\"></td>\n              <td class=\"text-end\" v-text=\"product.quantity\"></td>\n              <td class=\"text-end\" v-text=\"product.quantity * product.price\"></td>\n            </tr>\n\n            <tr>\n              <th>Total</th>\n              <th></th>\n              <th class=\"text-end\">\n                ${{ subtotal }}\n              </th>\n            </tr>\n          </tbody>\n        </v-table>\n      </v-sheet>\n    </template>\n\n    <template v-slot:item.2>\n      <h3 class=\"text-h6\">Shipping</h3>\n\n      <br>\n\n      <v-radio-group v-model=\"shipping\" label=\"Delivery Method\">\n        <v-radio label=\"Standard Shipping\" value=\"5\"></v-radio>\n        <v-radio label=\"Priority Shipping\" value=\"10\"></v-radio>\n        <v-radio label=\"Express Shipping\" value=\"15\"></v-radio>\n      </v-radio-group>\n    </template>\n\n    <template v-slot:item.3>\n      <h3 class=\"text-h6\">Confirm</h3>\n\n      <br>\n\n      <v-sheet border>\n        <v-table>\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th class=\"text-end\">Quantity</th>\n              <th class=\"text-end\">Price</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr v-for=\"(product, index) in products\" :key=\"index\">\n              <td v-text=\"product.name\"></td>\n              <td class=\"text-end\" v-text=\"product.quantity\"></td>\n              <td class=\"text-end\" v-text=\"product.quantity * product.price\"></td>\n            </tr>\n\n            <tr>\n              <td>Shipping</td>\n              <td></td>\n              <td class=\"text-end\" v-text=\"shipping\"></td>\n            </tr>\n\n            <tr>\n              <th>Total</th>\n              <th></th>\n              <th class=\"text-end\">\n                ${{ total }}\n              </th>\n            </tr>\n          </tbody>\n        </v-table>\n      </v-sheet>\n    </template>\n  </v-stepper>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const shipping = ref(0)\n  const step = ref(1)\n  const subtotal = computed(() => products.reduce((acc, product) => acc + product.quantity * product.price, 0))\n  const total = computed(() => subtotal.value + Number(shipping.value ?? 0))\n\n  const items = [\n    'Review Order',\n    'Select Shipping',\n    'Submit',\n  ]\n  const products = [\n    {\n      name: 'Product 1',\n      price: 10,\n      quantity: 2,\n    },\n    {\n      name: 'Product 2',\n      price: 15,\n      quantity: 10,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      shipping: 0,\n      step: 1,\n      items: [\n        'Review Order',\n        'Select Shipping',\n        'Submit',\n      ],\n      products: [\n        {\n          name: 'Product 1',\n          price: 10,\n          quantity: 2,\n        },\n        {\n          name: 'Product 2',\n          price: 15,\n          quantity: 10,\n        },\n      ],\n    }),\n\n    computed: {\n      subtotal () {\n        return this.products.reduce((acc, product) => acc + product.quantity * product.price, 0)\n      },\n      total () {\n        return this.subtotal + Number(this.shipping ?? 0)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Horizontal\n\n```vue\n<template>\n  <v-stepper\n    v-model=\"step\"\n    :items=\"items\"\n    show-actions\n  >\n    <template v-slot:item.1>\n      <h3 class=\"text-h6\">Order</h3>\n\n      <br>\n\n      <v-sheet border>\n        <v-table>\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th class=\"text-end\">Quantity</th>\n              <th class=\"text-end\">Price</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr v-for=\"(product, index) in products\" :key=\"index\">\n              <td v-text=\"product.name\"></td>\n              <td class=\"text-end\" v-text=\"product.quantity\"></td>\n              <td class=\"text-end\" v-text=\"product.quantity * product.price\"></td>\n            </tr>\n\n            <tr>\n              <th>Total</th>\n              <th></th>\n              <th class=\"text-end\">\n                ${{ subtotal }}\n              </th>\n            </tr>\n          </tbody>\n        </v-table>\n      </v-sheet>\n    </template>\n\n    <template v-slot:item.2>\n      <h3 class=\"text-h6\">Shipping</h3>\n\n      <br>\n\n      <v-radio-group v-model=\"shipping\" label=\"Delivery Method\">\n        <v-radio label=\"Standard Shipping\" value=\"5\"></v-radio>\n        <v-radio label=\"Priority Shipping\" value=\"10\"></v-radio>\n        <v-radio label=\"Express Shipping\" value=\"15\"></v-radio>\n      </v-radio-group>\n    </template>\n\n    <template v-slot:item.3>\n      <h3 class=\"text-h6\">Confirm</h3>\n\n      <br>\n\n      <v-sheet border>\n        <v-table>\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th class=\"text-end\">Quantity</th>\n              <th class=\"text-end\">Price</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr v-for=\"(product, index) in products\" :key=\"index\">\n              <td v-text=\"product.name\"></td>\n              <td class=\"text-end\" v-text=\"product.quantity\"></td>\n              <td class=\"text-end\" v-text=\"product.quantity * product.price\"></td>\n            </tr>\n\n            <tr>\n              <td>Shipping</td>\n              <td></td>\n              <td class=\"text-end\" v-text=\"shipping\"></td>\n            </tr>\n\n            <tr>\n              <th>Total</th>\n              <th></th>\n              <th class=\"text-end\">\n                ${{ total }}\n              </th>\n            </tr>\n          </tbody>\n        </v-table>\n      </v-sheet>\n    </template>\n  </v-stepper>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const shipping = ref(0)\n  const step = ref(1)\n  const subtotal = computed(() => products.reduce((acc, product) => acc + product.quantity * product.price, 0))\n  const total = computed(() => subtotal.value + Number(shipping.value ?? 0))\n\n  const items = [\n    'Review Order',\n    'Select Shipping',\n    'Submit',\n  ]\n  const products = [\n    {\n      name: 'Product 1',\n      price: 10,\n      quantity: 2,\n    },\n    {\n      name: 'Product 2',\n      price: 15,\n      quantity: 10,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      shipping: 0,\n      step: 1,\n      items: [\n        'Review Order',\n        'Select Shipping',\n        'Submit',\n      ],\n      products: [\n        {\n          name: 'Product 1',\n          price: 10,\n          quantity: 2,\n        },\n        {\n          name: 'Product 2',\n          price: 15,\n          quantity: 10,\n        },\n      ],\n    }),\n\n    computed: {\n      subtotal () {\n        return this.products.reduce((acc, product) => acc + product.quantity * product.price, 0)\n      },\n      total () {\n        return this.subtotal + Number(this.shipping ?? 0)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Horizontal",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001375",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001376",
    "text": "Component: v-guide\nSection: Misc Linear\nType: code_example\n\n## v-guide - Misc Linear\n\n```vue\n<template>\n  <v-stepper>\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n\n  <br>\n\n  <v-stepper model-value=\"2\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n\n  <br>\n\n  <v-stepper model-value=\"3\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "display_content": "## v-guide - Misc Linear\n\n```vue\n<template>\n  <v-stepper>\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n\n  <br>\n\n  <v-stepper model-value=\"2\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n\n  <br>\n\n  <v-stepper model-value=\"3\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Linear",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001376",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001377",
    "text": "Component: v-guide\nSection: Misc Non Editable\nType: code_example\n\n## v-guide - Misc Non Editable\n\n```vue\n<template>\n  <v-stepper model-value=\"2\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "display_content": "## v-guide - Misc Non Editable\n\n```vue\n<template>\n  <v-stepper model-value=\"2\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Non Editable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001377",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001378",
    "text": "Component: v-guide\nSection: Misc Optional\nType: code_example\n\n## v-guide - Misc Optional\n\n```vue\n<template>\n  <v-stepper model-value=\"1\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        subtitle=\"Optional\"\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n\n  <br>\n\n  <v-stepper model-value=\"2\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        subtitle=\"Optional\"\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "display_content": "## v-guide - Misc Optional\n\n```vue\n<template>\n  <v-stepper model-value=\"1\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        subtitle=\"Optional\"\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n\n  <br>\n\n  <v-stepper model-value=\"2\">\n    <v-stepper-header>\n      <v-stepper-item\n        title=\"Select campaign settings\"\n        value=\"1\"\n        complete\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        subtitle=\"Optional\"\n        title=\"Create an ad group\"\n        value=\"2\"\n      ></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item\n        title=\"Create an ad\"\n        value=\"3\"\n      ></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Optional",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001378",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001379",
    "text": "Component: v-guide\nSection: Misc Vertical Error\nType: code_example\n\n## v-guide - Misc Vertical Error\n\n```vue\n<template>\n  <v-stepper\n    v-model=\"e13\"\n    vertical\n  >\n    <v-stepper-step\n      step=\"1\"\n      complete\n    >\n      Name of step 1\n    </v-stepper-step>\n\n    <v-stepper-content step=\"1\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e13 = 2\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step\n      step=\"2\"\n      complete\n    >\n      Name of step 2\n    </v-stepper-step>\n\n    <v-stepper-content step=\"2\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e13 = 3\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step\n      :rules=\"[() => false]\"\n      step=\"3\"\n    >\n      Ad templates\n      <small>Alert message</small>\n    </v-stepper-step>\n\n    <v-stepper-content step=\"3\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e13 = 4\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step step=\"4\">\n      View setup instructions\n    </v-stepper-step>\n\n    <v-stepper-content step=\"4\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e13 = 1\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n  </v-stepper>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const e13 = ref(2)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        e13: 2,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Vertical Error\n\n```vue\n<template>\n  <v-stepper\n    v-model=\"e13\"\n    vertical\n  >\n    <v-stepper-step\n      step=\"1\"\n      complete\n    >\n      Name of step 1\n    </v-stepper-step>\n\n    <v-stepper-content step=\"1\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e13 = 2\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step\n      step=\"2\"\n      complete\n    >\n      Name of step 2\n    </v-stepper-step>\n\n    <v-stepper-content step=\"2\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e13 = 3\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step\n      :rules=\"[() => false]\"\n      step=\"3\"\n    >\n      Ad templates\n      <small>Alert message</small>\n    </v-stepper-step>\n\n    <v-stepper-content step=\"3\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e13 = 4\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step step=\"4\">\n      View setup instructions\n    </v-stepper-step>\n\n    <v-stepper-content step=\"4\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e13 = 1\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n  </v-stepper>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const e13 = ref(2)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        e13: 2,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Vertical Error",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001379",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001380",
    "text": "Component: v-guide\nSection: Prop Alternate Label\nType: code_example\n\n## v-guide - Prop Alternate Label\n\n```vue\n<template>\n  <v-stepper alt-labels>\n    <v-stepper-header>\n      <v-stepper-item title=\"Ad unit details\" value=\"1\"></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item title=\"Ad sizes\" value=\"2\"></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item title=\"Ad templates\" value=\"3\"></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Alternate Label\n\n```vue\n<template>\n  <v-stepper alt-labels>\n    <v-stepper-header>\n      <v-stepper-item title=\"Ad unit details\" value=\"1\"></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item title=\"Ad sizes\" value=\"2\"></v-stepper-item>\n\n      <v-divider></v-divider>\n\n      <v-stepper-item title=\"Ad templates\" value=\"3\"></v-stepper-item>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Alternate Label",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001380",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001381",
    "text": "Component: v-guide\nSection: Prop Mobile\nType: code_example\n\n## v-guide - Prop Mobile\n\n```vue\n<template>\n  <v-stepper mobile>\n    <v-stepper-header>\n      <template v-for=\"(item, i) in items\" :key=\"i\">\n        <v-divider v-if=\"i\"></v-divider>\n\n        <v-stepper-item v-bind=\"item\"></v-stepper-item>\n      </template>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n<script setup>\n  const items = Array.from({ length: 10 }).map((_, i) => ({\n    title: `Step ${i + 1}`,\n    subtitle: `Step ${i + 1} subtitle`,\n    value: i + 1,\n  }))\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: Array.from({ length: 10 }).map((_, i) => ({\n        title: `Step ${i + 1}`,\n        subtitle: `Step ${i + 1} subtitle`,\n        value: i + 1,\n      })),\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Mobile\n\n```vue\n<template>\n  <v-stepper mobile>\n    <v-stepper-header>\n      <template v-for=\"(item, i) in items\" :key=\"i\">\n        <v-divider v-if=\"i\"></v-divider>\n\n        <v-stepper-item v-bind=\"item\"></v-stepper-item>\n      </template>\n    </v-stepper-header>\n  </v-stepper>\n</template>\n\n<script setup>\n  const items = Array.from({ length: 10 }).map((_, i) => ({\n    title: `Step ${i + 1}`,\n    subtitle: `Step ${i + 1} subtitle`,\n    value: i + 1,\n  }))\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: Array.from({ length: 10 }).map((_, i) => ({\n        title: `Step ${i + 1}`,\n        subtitle: `Step ${i + 1} subtitle`,\n        value: i + 1,\n      })),\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Mobile",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001381",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001382",
    "text": "Component: v-guide\nSection: Prop Non Linear\nType: code_example\n\n## v-guide - Prop Non Linear\n\n```vue\n<template>\n  <div>\n    <v-stepper non-linear>\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          editable\n        >\n          Select campaign settings\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          editable\n        >\n          Create an ad group\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          editable\n        >\n          Create an ad\n        </v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n\n    <v-stepper\n      class=\"mt-12\"\n      non-linear\n    >\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          complete\n          editable\n        >\n          Select campaign settings\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          editable\n        >\n          Create an ad group\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          complete\n          editable\n        >\n          Create an ad\n        </v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n\n    <v-stepper\n      class=\"mt-12\"\n      value=\"3\"\n      non-linear\n    >\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          complete\n          editable\n        >\n          Select campaign settings\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          complete\n          editable\n        >\n          Create an ad group\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          complete\n          editable\n        >\n          Create an ad\n        </v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Non Linear\n\n```vue\n<template>\n  <div>\n    <v-stepper non-linear>\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          editable\n        >\n          Select campaign settings\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          editable\n        >\n          Create an ad group\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          editable\n        >\n          Create an ad\n        </v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n\n    <v-stepper\n      class=\"mt-12\"\n      non-linear\n    >\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          complete\n          editable\n        >\n          Select campaign settings\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          editable\n        >\n          Create an ad group\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          complete\n          editable\n        >\n          Create an ad\n        </v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n\n    <v-stepper\n      class=\"mt-12\"\n      value=\"3\"\n      non-linear\n    >\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          complete\n          editable\n        >\n          Select campaign settings\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          complete\n          editable\n        >\n          Create an ad group\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          complete\n          editable\n        >\n          Create an ad\n        </v-stepper-item>\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Non Linear",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001382",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001383",
    "text": "Component: v-guide\nSection: Prop Vertical\nType: code_example\n\n## v-guide - Prop Vertical\n\n```vue\n<template>\n  <v-stepper\n    v-model=\"e6\"\n    vertical\n  >\n    <v-stepper-step\n      :complete=\"e6 > 1\"\n      step=\"1\"\n    >\n      Select an app\n      <small>Summarize if needed</small>\n    </v-stepper-step>\n\n    <v-stepper-content step=\"1\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e6 = 2\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step\n      :complete=\"e6 > 2\"\n      step=\"2\"\n    >\n      Configure analytics for this app\n    </v-stepper-step>\n\n    <v-stepper-content step=\"2\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e6 = 3\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step\n      :complete=\"e6 > 3\"\n      step=\"3\"\n    >\n      Select an ad format and name ad unit\n    </v-stepper-step>\n\n    <v-stepper-content step=\"3\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e6 = 4\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step step=\"4\">\n      View setup instructions\n    </v-stepper-step>\n    <v-stepper-content step=\"4\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e6 = 1\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n  </v-stepper>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const e6 = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        e6: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Vertical\n\n```vue\n<template>\n  <v-stepper\n    v-model=\"e6\"\n    vertical\n  >\n    <v-stepper-step\n      :complete=\"e6 > 1\"\n      step=\"1\"\n    >\n      Select an app\n      <small>Summarize if needed</small>\n    </v-stepper-step>\n\n    <v-stepper-content step=\"1\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e6 = 2\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step\n      :complete=\"e6 > 2\"\n      step=\"2\"\n    >\n      Configure analytics for this app\n    </v-stepper-step>\n\n    <v-stepper-content step=\"2\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e6 = 3\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step\n      :complete=\"e6 > 3\"\n      step=\"3\"\n    >\n      Select an ad format and name ad unit\n    </v-stepper-step>\n\n    <v-stepper-content step=\"3\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e6 = 4\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n\n    <v-stepper-step step=\"4\">\n      View setup instructions\n    </v-stepper-step>\n    <v-stepper-content step=\"4\">\n      <v-card\n        class=\"mb-12\"\n        color=\"grey-lighten-1\"\n        height=\"200px\"\n      ></v-card>\n      <v-btn\n        color=\"primary\"\n        @click=\"e6 = 1\"\n      >\n        Continue\n      </v-btn>\n      <v-btn variant=\"text\">\n        Cancel\n      </v-btn>\n    </v-stepper-content>\n  </v-stepper>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const e6 = ref(1)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        e6: 1,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Vertical",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001383",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001384",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-stepper v-bind=\"props\" v-model=\"step\">\n      <template v-slot:item.1>\n        <v-card title=\"Step One\" flat>\n          <template v-slot:text>\n            <div @blur=\"onBlur\" @dblclick=\"onDblClick\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n            </div>\n          </template>\n        </v-card>\n      </template>\n\n      <template v-slot:item.2>\n        <v-card title=\"Step Two\" flat>\n          <template v-slot:text>\n            <div @blur=\"onBlur\" @dblclick=\"onDblClick\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus!\n            </div>\n          </template>\n        </v-card>\n      </template>\n\n      <template v-slot:item.3>\n        <v-card title=\"Step Three\" flat>\n          <template v-slot:text>\n            <div @blur=\"onBlur\" @dblclick=\"onDblClick\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n            </div>\n          </template>\n        </v-card>\n      </template>\n    </v-stepper>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"prev\" label=\"Previous text\"></v-text-field>\n\n      <v-text-field v-model=\"next\" label=\"Next text\"></v-text-field>\n\n      <v-checkbox v-model=\"hideActions\" label=\"Hide actions\"></v-checkbox>\n\n      <v-checkbox v-model=\"editable\" label=\"Editable\"></v-checkbox>\n\n      <v-checkbox v-model=\"altLabels\" label=\"Alt labels\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-stepper'\n  const model = ref('default')\n  const options = []\n  const step = ref(1)\n  const altLabels = ref(false)\n  const editable = ref(false)\n  const hideActions = ref(false)\n  const prev = ref('$vuetify.stepper.prev')\n  const next = ref('$vuetify.stepper.next')\n\n  function onDblClick (e) {\n    e.target.contentEditable = true\n  }\n\n  function onBlur (e) {\n    e.target.contentEditable = false\n  }\n\n  const props = computed(() => {\n    return {\n      'alt-labels': altLabels.value || undefined,\n      editable: editable.value || undefined,\n      'hide-actions': hideActions.value || undefined,\n      'prev-text': prev.value.startsWith('$vuetify') ? undefined : prev.value,\n      'next-text': next.value.startsWith('$vuetify') ? undefined : next.value,\n      items: [\n        'Step 1',\n        'Step 2',\n        'Step 3',\n      ],\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:item.1>\n    <v-card title=\"Step One\" flat>...</v-card>\n  </template>\n\n  <template v-slot:item.2>\n    <v-card title=\"Step Two\" flat>...</v-card>\n  </template>\n\n  <template v-slot:item.3>\n    <v-card title=\"Step Three\" flat>...</v-card>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-stepper${propsToString(props.value)}>${slots.value}</v-stepper>`\n  })\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-stepper v-bind=\"props\" v-model=\"step\">\n      <template v-slot:item.1>\n        <v-card title=\"Step One\" flat>\n          <template v-slot:text>\n            <div @blur=\"onBlur\" @dblclick=\"onDblClick\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n            </div>\n          </template>\n        </v-card>\n      </template>\n\n      <template v-slot:item.2>\n        <v-card title=\"Step Two\" flat>\n          <template v-slot:text>\n            <div @blur=\"onBlur\" @dblclick=\"onDblClick\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus!\n            </div>\n          </template>\n        </v-card>\n      </template>\n\n      <template v-slot:item.3>\n        <v-card title=\"Step Three\" flat>\n          <template v-slot:text>\n            <div @blur=\"onBlur\" @dblclick=\"onDblClick\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n            </div>\n          </template>\n        </v-card>\n      </template>\n    </v-stepper>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"prev\" label=\"Previous text\"></v-text-field>\n\n      <v-text-field v-model=\"next\" label=\"Next text\"></v-text-field>\n\n      <v-checkbox v-model=\"hideActions\" label=\"Hide actions\"></v-checkbox>\n\n      <v-checkbox v-model=\"editable\" label=\"Editable\"></v-checkbox>\n\n      <v-checkbox v-model=\"altLabels\" label=\"Alt labels\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-stepper'\n  const model = ref('default')\n  const options = []\n  const step = ref(1)\n  const altLabels = ref(false)\n  const editable = ref(false)\n  const hideActions = ref(false)\n  const prev = ref('$vuetify.stepper.prev')\n  const next = ref('$vuetify.stepper.next')\n\n  function onDblClick (e) {\n    e.target.contentEditable = true\n  }\n\n  function onBlur (e) {\n    e.target.contentEditable = false\n  }\n\n  const props = computed(() => {\n    return {\n      'alt-labels': altLabels.value || undefined,\n      editable: editable.value || undefined,\n      'hide-actions': hideActions.value || undefined,\n      'prev-text': prev.value.startsWith('$vuetify') ? undefined : prev.value,\n      'next-text': next.value.startsWith('$vuetify') ? undefined : next.value,\n      items: [\n        'Step 1',\n        'Step 2',\n        'Step 3',\n      ],\n    }\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:item.1>\n    <v-card title=\"Step One\" flat>...</v-card>\n  </template>\n\n  <template v-slot:item.2>\n    <v-card title=\"Step Two\" flat>...</v-card>\n  </template>\n\n  <template v-slot:item.3>\n    <v-card title=\"Step Three\" flat>...</v-card>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<v-stepper${propsToString(props.value)}>${slots.value}</v-stepper>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001384",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001385",
    "text": "Component: v-switches\nType: component_overview\n\n# v-switches\n\nThe `v-switch` component provides users the ability to choose between two distinct values. These are very similar to a toggle, or on/off switch, though aesthetically different than a checkbox.",
    "display_content": "# v-switches\n\nThe `v-switch` component provides users the ability to choose between two distinct values. These are very similar to a toggle, or on/off switch, though aesthetically different than a checkbox.",
    "metadata": {
      "component": "v-switches",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001385",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001386",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nA `v-switch` in its simplest form provides a toggle between 2 values.",
    "display_content": "# v-usage\n\nA `v-switch` in its simplest form provides a toggle between 2 values.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001386",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001387",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-switch](/api/v-switch/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-switch](/api/v-switch/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001387",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001388",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nSwitches can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\nAvailable sections: Colors, Inset, Model as array, Custom true/false values, States, Label",
    "display_content": "# v-examples\n\nSwitches can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\nAvailable sections: Colors, Inset, Model as array, Custom true/false values, States, Label",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001388",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001389",
    "text": "Component: v-examples\nSection: Colors\nType: documentation\n\n## v-examples - Colors\n\nSwitches can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\n<ExamplesExample file=\"v-switch/prop-colors\" />\n\n<!-- #### Flat\n\nYou can make switch render without elevation of thumb using **flat** property.\n\n<ExamplesExample file=\"v-switch/prop-flat\" /> -->",
    "display_content": "## v-examples - Colors\n\nSwitches can be colored by using any of the builtin colors and contextual names using the **color** prop.\n\n<ExamplesExample file=\"v-switch/prop-colors\" />\n\n<!-- #### Flat\n\nYou can make switch render without elevation of thumb using **flat** property.\n\n<ExamplesExample file=\"v-switch/prop-flat\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001389",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001390",
    "text": "Component: v-examples\nSection: Inset\nType: documentation\n\n## v-examples - Inset\n\nYou can make switch render in inset mode.\n\n<ExamplesExample file=\"v-switch/prop-inset\" />",
    "display_content": "## v-examples - Inset\n\nYou can make switch render in inset mode.\n\n<ExamplesExample file=\"v-switch/prop-inset\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Inset",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001390",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001391",
    "text": "Component: v-examples\nSection: Model as array\nType: documentation\n\n## v-examples - Model as array\n\nMultiple `v-switch`'s can share the same **v-model** by using an array.\n\n<ExamplesExample file=\"v-switch/prop-model-as-array\" />",
    "display_content": "## v-examples - Model as array\n\nMultiple `v-switch`'s can share the same **v-model** by using an array.\n\n<ExamplesExample file=\"v-switch/prop-model-as-array\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Model as array",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001391",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001392",
    "text": "Component: v-examples\nSection: Custom true/false values\nType: documentation\n\n## v-examples - Custom true/false values\n\nThe switch can use custom values for its v-model, using the props **true-value** and **false-value**.\n\n<ExamplesExample file=\"v-switch/prop-custom-values\" />",
    "display_content": "## v-examples - Custom true/false values\n\nThe switch can use custom values for its v-model, using the props **true-value** and **false-value**.\n\n<ExamplesExample file=\"v-switch/prop-custom-values\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom true/false values",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001392",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001393",
    "text": "Component: v-examples\nSection: States\nType: documentation\n\n## v-examples - States\n\n`v-switch` can have different states such as **default**, **disabled**, and **loading**.\n\n<ExamplesExample file=\"v-switch/prop-states\" />",
    "display_content": "## v-examples - States\n\n`v-switch` can have different states such as **default**, **disabled**, and **loading**.\n\n<ExamplesExample file=\"v-switch/prop-states\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "States",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001393",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001394",
    "text": "Component: v-examples\nSection: Label\nType: documentation\n\n## v-examples - Label\n\nIf you need to render a switch label with more complex markup than plain text, you can use the **label** slot.\n\n<ExamplesExample file=\"v-switch/slot-label\" />",
    "display_content": "## v-examples - Label\n\nIf you need to render a switch label with more complex markup than plain text, you can use the **label** slot.\n\n<ExamplesExample file=\"v-switch/slot-label\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Label",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001394",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001395",
    "text": "Component: v-system-bars\nType: component_overview\n\n# v-system-bars\n\nThe `v-system-bar` component can be used for displaying statuses to the user. It looks like the Android system bar and can contain icons, spacers, and some text.",
    "display_content": "# v-system-bars\n\nThe `v-system-bar` component can be used for displaying statuses to the user. It looks like the Android system bar and can contain icons, spacers, and some text.",
    "metadata": {
      "component": "v-system-bars",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001395",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001396",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\n`v-system-bar` in its simplest form displays a small container with default theme.",
    "display_content": "# v-usage\n\n`v-system-bar` in its simplest form displays a small container with default theme.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001396",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001397",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-system-bar](/api/v-system-bar/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-system-bar](/api/v-system-bar/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001397",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001398",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-system-bar` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-system-bar` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001398",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001399",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can optionally change the color of the `v-system-bar` by using the `color` prop.\n\nAvailable sections: Color, Window, Prop Color, Prop Window, Usage",
    "display_content": "# v-examples\n\nYou can optionally change the color of the `v-system-bar` by using the `color` prop.\n\nAvailable sections: Color, Window, Prop Color, Prop Window, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001399",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001400",
    "text": "Component: v-examples\nSection: Color\nType: documentation\n\n## v-examples - Color\n\nYou can optionally change the color of the `v-system-bar` by using the `color` prop.\n\n<ExamplesExample file=\"v-system-bar/prop-color\" />",
    "display_content": "## v-examples - Color\n\nYou can optionally change the color of the `v-system-bar` by using the `color` prop.\n\n<ExamplesExample file=\"v-system-bar/prop-color\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001400",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001401",
    "text": "Component: v-examples\nSection: Window\nType: documentation\n\n## v-examples - Window\n\nA window bar with window controls and status info.\n\n<ExamplesExample file=\"v-system-bar/prop-window\" />",
    "display_content": "## v-examples - Window\n\nA window bar with window controls and status info.\n\n<ExamplesExample file=\"v-system-bar/prop-window\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Window",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001401",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001402",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <div>\n    <v-layout style=\"height: 50px\">\n      <v-system-bar color=\"primary\">\n        <v-icon class=\"ms-2\" icon=\"mdi-wifi-strength-4\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-signal-cellular-outline\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-battery\"></v-icon>\n\n        <span class=\"ms-2\">08:30</span>\n      </v-system-bar>\n    </v-layout>\n\n    <v-layout style=\"height: 50px\">\n      <v-system-bar color=\"red-lighten-2\">\n        <v-icon class=\"ms-2\" icon=\"mdi-wifi-strength-2\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-signal-cellular-outline\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-battery\"></v-icon>\n\n        <span class=\"ms-2\">18:30</span>\n      </v-system-bar>\n    </v-layout>\n\n    <v-layout style=\"height: 50px\">\n      <v-system-bar color=\"indigo-darken-2\">\n        <v-icon class=\"ms-2\" icon=\"mdi-wifi-strength-3\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-signal-cellular-outline\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-battery\"></v-icon>\n\n        <span class=\"ms-2\">13:24</span>\n      </v-system-bar>\n    </v-layout>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <div>\n    <v-layout style=\"height: 50px\">\n      <v-system-bar color=\"primary\">\n        <v-icon class=\"ms-2\" icon=\"mdi-wifi-strength-4\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-signal-cellular-outline\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-battery\"></v-icon>\n\n        <span class=\"ms-2\">08:30</span>\n      </v-system-bar>\n    </v-layout>\n\n    <v-layout style=\"height: 50px\">\n      <v-system-bar color=\"red-lighten-2\">\n        <v-icon class=\"ms-2\" icon=\"mdi-wifi-strength-2\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-signal-cellular-outline\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-battery\"></v-icon>\n\n        <span class=\"ms-2\">18:30</span>\n      </v-system-bar>\n    </v-layout>\n\n    <v-layout style=\"height: 50px\">\n      <v-system-bar color=\"indigo-darken-2\">\n        <v-icon class=\"ms-2\" icon=\"mdi-wifi-strength-3\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-signal-cellular-outline\"></v-icon>\n\n        <v-icon class=\"ms-2\" icon=\"mdi-battery\"></v-icon>\n\n        <span class=\"ms-2\">13:24</span>\n      </v-system-bar>\n    </v-layout>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001402",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001403",
    "text": "Component: v-examples\nSection: Prop Window\nType: code_example\n\n## v-examples - Prop Window\n\n```vue\n<template>\n  <v-layout style=\"height: 50px\">\n    <v-system-bar window>\n      <v-icon class=\"me-2\" icon=\"mdi-message\"></v-icon>\n\n      <span>10 unread messages</span>\n\n      <v-spacer></v-spacer>\n\n      <v-btn icon=\"mdi-minus\" variant=\"text\"></v-btn>\n\n      <v-btn class=\"ms-2\" icon=\"mdi-checkbox-blank-outline\" variant=\"text\"></v-btn>\n\n      <v-btn class=\"ms-2\" icon=\"mdi-close\" variant=\"text\"></v-btn>\n    </v-system-bar>\n  </v-layout>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Window\n\n```vue\n<template>\n  <v-layout style=\"height: 50px\">\n    <v-system-bar window>\n      <v-icon class=\"me-2\" icon=\"mdi-message\"></v-icon>\n\n      <span>10 unread messages</span>\n\n      <v-spacer></v-spacer>\n\n      <v-btn icon=\"mdi-minus\" variant=\"text\"></v-btn>\n\n      <v-btn class=\"ms-2\" icon=\"mdi-checkbox-blank-outline\" variant=\"text\"></v-btn>\n\n      <v-btn class=\"ms-2\" icon=\"mdi-close\" variant=\"text\"></v-btn>\n    </v-system-bar>\n  </v-layout>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Window",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001403",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001404",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-layout\n      class=\"elevation-2 rounded mx-auto bg-white\"\n      style=\"max-width: 448px; height: 150px\"\n    >\n      <v-system-bar v-bind=\"props\">\n        <v-icon icon=\"mdi-wifi-strength-4\"></v-icon>\n        <v-icon class=\"ms-2\" icon=\"mdi-signal\"></v-icon>\n        <v-icon class=\"ms-2\" icon=\"mdi-battery\"></v-icon>\n\n        <span class=\"ms-2\">3:13PM</span>\n      </v-system-bar>\n\n      <v-main></v-main>\n    </v-layout>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-system-bar'\n  const model = ref('default')\n  const options = ['window']\n\n  const props = computed(() => {\n    return {\n      window: model.value === 'window' || undefined,\n    }\n  })\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>\n  <v-icon icon=\"mdi-wifi-strength-4\"></v-icon>\n  <v-icon icon=\"mdi-signal\" class=\"ms-2\"></v-icon>\n  <v-icon icon=\"mdi-battery\" class=\"ms-2\"></v-icon>\n\n  <span class=\"ms-2\">3:13PM</span>\n</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-layout\n      class=\"elevation-2 rounded mx-auto bg-white\"\n      style=\"max-width: 448px; height: 150px\"\n    >\n      <v-system-bar v-bind=\"props\">\n        <v-icon icon=\"mdi-wifi-strength-4\"></v-icon>\n        <v-icon class=\"ms-2\" icon=\"mdi-signal\"></v-icon>\n        <v-icon class=\"ms-2\" icon=\"mdi-battery\"></v-icon>\n\n        <span class=\"ms-2\">3:13PM</span>\n      </v-system-bar>\n\n      <v-main></v-main>\n    </v-layout>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-system-bar'\n  const model = ref('default')\n  const options = ['window']\n\n  const props = computed(() => {\n    return {\n      window: model.value === 'window' || undefined,\n    }\n  })\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>\n  <v-icon icon=\"mdi-wifi-strength-4\"></v-icon>\n  <v-icon icon=\"mdi-signal\" class=\"ms-2\"></v-icon>\n  <v-icon icon=\"mdi-battery\" class=\"ms-2\"></v-icon>\n\n  <span class=\"ms-2\">3:13PM</span>\n</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001404",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001405",
    "text": "Component: v-tables\nType: component_overview\n\n# v-tables\n\nThe simpler of the table components is `v-table`, a basic wrapper component for the HTML `<table>` element. In addition, regular table elements such as `<thead>`, `<tbody>`, `<tr>`, and `<td>` work by default.",
    "display_content": "# v-tables\n\nThe simpler of the table components is `v-table`, a basic wrapper component for the HTML `<table>` element. In addition, regular table elements such as `<thead>`, `<tbody>`, `<tr>`, and `<td>` work by default.",
    "metadata": {
      "component": "v-tables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001405",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001406",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-table](/api/v-table/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-table](/api/v-table/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001406",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001407",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nUse **theme** prop to switch table to another theme.\n\nAvailable sections: Theme, Density, Height, Fixed header, Prop Dark, Prop Dense, Prop Fixed Header, Prop Height, Usage",
    "display_content": "# v-examples\n\nUse **theme** prop to switch table to another theme.\n\nAvailable sections: Theme, Density, Height, Fixed header, Prop Dark, Prop Dense, Prop Fixed Header, Prop Height, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001407",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001408",
    "text": "Component: v-examples\nSection: Theme\nType: documentation\n\n## v-examples - Theme\n\nUse **theme** prop to switch table to another theme.\n\n<ExamplesExample file=\"v-table/prop-dark\" />",
    "display_content": "## v-examples - Theme\n\nUse **theme** prop to switch table to another theme.\n\n<ExamplesExample file=\"v-table/prop-dark\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Theme",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001408",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001409",
    "text": "Component: v-examples\nSection: Density\nType: documentation\n\n## v-examples - Density\n\nYou can show a dense version of the table by using the **density** prop.\n\n<ExamplesExample file=\"v-table/prop-dense\" />",
    "display_content": "## v-examples - Density\n\nYou can show a dense version of the table by using the **density** prop.\n\n<ExamplesExample file=\"v-table/prop-dense\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001409",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001410",
    "text": "Component: v-examples\nSection: Height\nType: documentation\n\n## v-examples - Height\n\nUse the **height** prop to set the height of the table.\n\n<ExamplesExample file=\"v-table/prop-height\" />",
    "display_content": "## v-examples - Height\n\nUse the **height** prop to set the height of the table.\n\n<ExamplesExample file=\"v-table/prop-height\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Height",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001410",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001411",
    "text": "Component: v-examples\nSection: Fixed header\nType: documentation\n\n## v-examples - Fixed header\n\nUse the **fixed-header** prop together with the **height** prop to fix the header to the top of the table.\n\n<ExamplesExample file=\"v-table/prop-fixed-header\" />",
    "display_content": "## v-examples - Fixed header\n\nUse the **fixed-header** prop together with the **height** prop to fix the header to the top of the table.\n\n<ExamplesExample file=\"v-table/prop-fixed-header\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Fixed header",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001411",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001412",
    "text": "Component: v-examples\nSection: Prop Dark\nType: code_example\n\n## v-examples - Prop Dark\n\n```vue\n<template>\n  <v-table theme=\"dark\">\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const desserts = ref([\n    {\n      name: 'Frozen Yogurt',\n      calories: 159,\n    },\n    {\n      name: 'Ice cream sandwich',\n      calories: 237,\n    },\n    {\n      name: 'Eclair',\n      calories: 262,\n    },\n    {\n      name: 'Cupcake',\n      calories: 305,\n    },\n    {\n      name: 'Gingerbread',\n      calories: 356,\n    },\n    {\n      name: 'Jelly bean',\n      calories: 375,\n    },\n    {\n      name: 'Lollipop',\n      calories: 392,\n    },\n    {\n      name: 'Honeycomb',\n      calories: 408,\n    },\n    {\n      name: 'Donut',\n      calories: 452,\n    },\n    {\n      name: 'KitKat',\n      calories: 518,\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Dark\n\n```vue\n<template>\n  <v-table theme=\"dark\">\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const desserts = ref([\n    {\n      name: 'Frozen Yogurt',\n      calories: 159,\n    },\n    {\n      name: 'Ice cream sandwich',\n      calories: 237,\n    },\n    {\n      name: 'Eclair',\n      calories: 262,\n    },\n    {\n      name: 'Cupcake',\n      calories: 305,\n    },\n    {\n      name: 'Gingerbread',\n      calories: 356,\n    },\n    {\n      name: 'Jelly bean',\n      calories: 375,\n    },\n    {\n      name: 'Lollipop',\n      calories: 392,\n    },\n    {\n      name: 'Honeycomb',\n      calories: 408,\n    },\n    {\n      name: 'Donut',\n      calories: 452,\n    },\n    {\n      name: 'KitKat',\n      calories: 518,\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Dark",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001412",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001413",
    "text": "Component: v-examples\nSection: Prop Dense\nType: code_example\n\n## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-table density=\"compact\">\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const desserts = ref([\n    {\n      name: 'Frozen Yogurt',\n      calories: 159,\n    },\n    {\n      name: 'Ice cream sandwich',\n      calories: 237,\n    },\n    {\n      name: 'Eclair',\n      calories: 262,\n    },\n    {\n      name: 'Cupcake',\n      calories: 305,\n    },\n    {\n      name: 'Gingerbread',\n      calories: 356,\n    },\n    {\n      name: 'Jelly bean',\n      calories: 375,\n    },\n    {\n      name: 'Lollipop',\n      calories: 392,\n    },\n    {\n      name: 'Honeycomb',\n      calories: 408,\n    },\n    {\n      name: 'Donut',\n      calories: 452,\n    },\n    {\n      name: 'KitKat',\n      calories: 518,\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-table density=\"compact\">\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const desserts = ref([\n    {\n      name: 'Frozen Yogurt',\n      calories: 159,\n    },\n    {\n      name: 'Ice cream sandwich',\n      calories: 237,\n    },\n    {\n      name: 'Eclair',\n      calories: 262,\n    },\n    {\n      name: 'Cupcake',\n      calories: 305,\n    },\n    {\n      name: 'Gingerbread',\n      calories: 356,\n    },\n    {\n      name: 'Jelly bean',\n      calories: 375,\n    },\n    {\n      name: 'Lollipop',\n      calories: 392,\n    },\n    {\n      name: 'Honeycomb',\n      calories: 408,\n    },\n    {\n      name: 'Donut',\n      calories: 452,\n    },\n    {\n      name: 'KitKat',\n      calories: 518,\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Dense",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001413",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001414",
    "text": "Component: v-examples\nSection: Prop Fixed Header\nType: code_example\n\n## v-examples - Prop Fixed Header\n\n```vue\n<template>\n  <v-table\n    height=\"300px\"\n    fixed-header\n  >\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script setup>\n  const desserts = [\n    {\n      name: 'Frozen Yogurt',\n      calories: 159,\n    },\n    {\n      name: 'Ice cream sandwich',\n      calories: 237,\n    },\n    {\n      name: 'Eclair',\n      calories: 262,\n    },\n    {\n      name: 'Cupcake',\n      calories: 305,\n    },\n    {\n      name: 'Gingerbread',\n      calories: 356,\n    },\n    {\n      name: 'Jelly bean',\n      calories: 375,\n    },\n    {\n      name: 'Lollipop',\n      calories: 392,\n    },\n    {\n      name: 'Honeycomb',\n      calories: 408,\n    },\n    {\n      name: 'Donut',\n      calories: 452,\n    },\n    {\n      name: 'KitKat',\n      calories: 518,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Fixed Header\n\n```vue\n<template>\n  <v-table\n    height=\"300px\"\n    fixed-header\n  >\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script setup>\n  const desserts = [\n    {\n      name: 'Frozen Yogurt',\n      calories: 159,\n    },\n    {\n      name: 'Ice cream sandwich',\n      calories: 237,\n    },\n    {\n      name: 'Eclair',\n      calories: 262,\n    },\n    {\n      name: 'Cupcake',\n      calories: 305,\n    },\n    {\n      name: 'Gingerbread',\n      calories: 356,\n    },\n    {\n      name: 'Jelly bean',\n      calories: 375,\n    },\n    {\n      name: 'Lollipop',\n      calories: 392,\n    },\n    {\n      name: 'Honeycomb',\n      calories: 408,\n    },\n    {\n      name: 'Donut',\n      calories: 452,\n    },\n    {\n      name: 'KitKat',\n      calories: 518,\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Fixed Header",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001414",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001415",
    "text": "Component: v-examples\nSection: Prop Height\nType: code_example\n\n## v-examples - Prop Height\n\n```vue\n<template>\n  <v-table height=\"300px\">\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const desserts = ref([\n    {\n      name: 'Frozen Yogurt',\n      calories: 159,\n    },\n    {\n      name: 'Ice cream sandwich',\n      calories: 237,\n    },\n    {\n      name: 'Eclair',\n      calories: 262,\n    },\n    {\n      name: 'Cupcake',\n      calories: 305,\n    },\n    {\n      name: 'Gingerbread',\n      calories: 356,\n    },\n    {\n      name: 'Jelly bean',\n      calories: 375,\n    },\n    {\n      name: 'Lollipop',\n      calories: 392,\n    },\n    {\n      name: 'Honeycomb',\n      calories: 408,\n    },\n    {\n      name: 'Donut',\n      calories: 452,\n    },\n    {\n      name: 'KitKat',\n      calories: 518,\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Height\n\n```vue\n<template>\n  <v-table height=\"300px\">\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const desserts = ref([\n    {\n      name: 'Frozen Yogurt',\n      calories: 159,\n    },\n    {\n      name: 'Ice cream sandwich',\n      calories: 237,\n    },\n    {\n      name: 'Eclair',\n      calories: 262,\n    },\n    {\n      name: 'Cupcake',\n      calories: 305,\n    },\n    {\n      name: 'Gingerbread',\n      calories: 356,\n    },\n    {\n      name: 'Jelly bean',\n      calories: 375,\n    },\n    {\n      name: 'Lollipop',\n      calories: 392,\n    },\n    {\n      name: 'Honeycomb',\n      calories: 408,\n    },\n    {\n      name: 'Donut',\n      calories: 452,\n    },\n    {\n      name: 'KitKat',\n      calories: 518,\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Height",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001415",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001416",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-table>\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-table>\n    <thead>\n      <tr>\n        <th class=\"text-left\">\n          Name\n        </th>\n        <th class=\"text-left\">\n          Calories\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"item in desserts\"\n        :key=\"item.name\"\n      >\n        <td>{{ item.name }}</td>\n        <td>{{ item.calories }}</td>\n      </tr>\n    </tbody>\n  </v-table>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        desserts: [\n          {\n            name: 'Frozen Yogurt',\n            calories: 159,\n          },\n          {\n            name: 'Ice cream sandwich',\n            calories: 237,\n          },\n          {\n            name: 'Eclair',\n            calories: 262,\n          },\n          {\n            name: 'Cupcake',\n            calories: 305,\n          },\n          {\n            name: 'Gingerbread',\n            calories: 356,\n          },\n          {\n            name: 'Jelly bean',\n            calories: 375,\n          },\n          {\n            name: 'Lollipop',\n            calories: 392,\n          },\n          {\n            name: 'Honeycomb',\n            calories: 408,\n          },\n          {\n            name: 'Donut',\n            calories: 452,\n          },\n          {\n            name: 'KitKat',\n            calories: 518,\n          },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001416",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001417",
    "text": "Component: v-tabs\nType: component_overview\n\n# v-tabs\n\nThe `v-tabs` component is used for hiding content behind a selectable item. This can also be used as a pseudo-navigation for a page, where the tabs are links and the tab-items are the content.",
    "display_content": "# v-tabs\n\nThe `v-tabs` component is used for hiding content behind a selectable item. This can also be used as a pseudo-navigation for a page, where the tabs are links and the tab-items are the content.",
    "metadata": {
      "component": "v-tabs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001417",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001418",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `v-tabs` component is a styled extension of [v-slide-group](/components/slide-groups). It provides an easy to use interface for organizing content into separate sections.",
    "display_content": "# v-usage\n\nThe `v-tabs` component is a styled extension of [v-slide-group](/components/slide-groups). It provides an easy to use interface for organizing content into separate sections.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001418",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001419",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-tabs](/api/v-tabs/) | Primary Component | | [v-tab](/api/v-tab/) | Sub-component used for modifying the `v-tabs` state |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-tabs](/api/v-tabs/) | Primary Component | | [v-tab](/api/v-tab/) | Sub-component used for modifying the `v-tabs` state |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001419",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001420",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe **align-tabs** prop will align tabs to the `start`, `center`, or `end` of its container.\n\nAvailable sections: Align tabs, Align tabs with title, Center active, Custom icons, Fixed tabs, Grow, Stacked, Pagination, Vertical tabs, Content, Mobile tabs, Dynamic Tabs, Overflow to menu, Tab and window items, Misc Content, Misc Dynamic Height, Misc Dynamic, Misc Mobile, Misc Overflow To Menu, Misc Pagination, Misc Tab Items, Prop Align Tabs Center, Prop Align Tabs End, Prop Align Tabs Title, Prop Center Active, Prop Direction, Prop Fixed Tabs, Prop Grow, Prop Icons, Prop Stacked, Slot Tabs, Usage",
    "display_content": "# v-examples\n\nThe **align-tabs** prop will align tabs to the `start`, `center`, or `end` of its container.\n\nAvailable sections: Align tabs, Align tabs with title, Center active, Custom icons, Fixed tabs, Grow, Stacked, Pagination, Vertical tabs, Content, Mobile tabs, Dynamic Tabs, Overflow to menu, Tab and window items, Misc Content, Misc Dynamic Height, Misc Dynamic, Misc Mobile, Misc Overflow To Menu, Misc Pagination, Misc Tab Items, Prop Align Tabs Center, Prop Align Tabs End, Prop Align Tabs Title, Prop Center Active, Prop Direction, Prop Fixed Tabs, Prop Grow, Prop Icons, Prop Stacked, Slot Tabs, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001420",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001421",
    "text": "Component: v-examples\nSection: Align tabs\nType: documentation\n\n## v-examples - Align tabs\n\nThe **align-tabs** prop will align tabs to the `start`, `center`, or `end` of its container.\n\n<ExamplesExample file=\"v-tabs/prop-align-tabs-center\" />\n\n<ExamplesExample file=\"v-tabs/prop-align-tabs-end\" />",
    "display_content": "## v-examples - Align tabs\n\nThe **align-tabs** prop will align tabs to the `start`, `center`, or `end` of its container.\n\n<ExamplesExample file=\"v-tabs/prop-align-tabs-center\" />\n\n<ExamplesExample file=\"v-tabs/prop-align-tabs-end\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Align tabs",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001421",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001422",
    "text": "Component: v-examples\nSection: Align tabs with title\nType: documentation\n\n## v-examples - Align tabs with title\n\nMake `v-tabs` line up with the `v-toolbar-title` component by setting the **align-tabs** prop to `title` (`v-app-bar-nav-icon` or `v-btn` must be used in `v-toolbar`).\n\n<ExamplesExample file=\"v-tabs/prop-align-tabs-title\" />",
    "display_content": "## v-examples - Align tabs with title\n\nMake `v-tabs` line up with the `v-toolbar-title` component by setting the **align-tabs** prop to `title` (`v-app-bar-nav-icon` or `v-btn` must be used in `v-toolbar`).\n\n<ExamplesExample file=\"v-tabs/prop-align-tabs-title\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Align tabs with title",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001422",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001423",
    "text": "Component: v-examples\nSection: Center active\nType: documentation\n\n## v-examples - Center active\n\nThe **center-active** prop will make the active tab always centered.\n\n<ExamplesExample file=\"v-tabs/prop-center-active\" />",
    "display_content": "## v-examples - Center active\n\nThe **center-active** prop will make the active tab always centered.\n\n<ExamplesExample file=\"v-tabs/prop-center-active\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Center active",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001423",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001424",
    "text": "Component: v-examples\nSection: Custom icons\nType: documentation\n\n## v-examples - Custom icons\n\n**prev-icon** and **next-icon** can be used for applying custom pagination icons.\n\n<ExamplesExample file=\"v-tabs/prop-icons\" />",
    "display_content": "## v-examples - Custom icons\n\n**prev-icon** and **next-icon** can be used for applying custom pagination icons.\n\n<ExamplesExample file=\"v-tabs/prop-icons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001424",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001425",
    "text": "Component: v-examples\nSection: Fixed tabs\nType: documentation\n\n## v-examples - Fixed tabs\n\nThe **fixed-tabs** prop forces `v-tab` items to take up all available space up to their maximum width (300px), and centers them.\n\n<ExamplesExample file=\"v-tabs/prop-fixed-tabs\" />",
    "display_content": "## v-examples - Fixed tabs\n\nThe **fixed-tabs** prop forces `v-tab` items to take up all available space up to their maximum width (300px), and centers them.\n\n<ExamplesExample file=\"v-tabs/prop-fixed-tabs\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Fixed tabs",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001425",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001426",
    "text": "Component: v-examples\nSection: Grow\nType: documentation\n\n## v-examples - Grow\n\nThe **grow** prop will make the tab items take up all available space with no limit.\n\n<ExamplesExample file=\"v-tabs/prop-grow\" />",
    "display_content": "## v-examples - Grow\n\nThe **grow** prop will make the tab items take up all available space with no limit.\n\n<ExamplesExample file=\"v-tabs/prop-grow\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Grow",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001426",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001427",
    "text": "Component: v-examples\nSection: Stacked\nType: documentation\n\n## v-examples - Stacked\n\nUsing **stacked** increases the `v-tabs` height to 72px to allow for both icons and text to be displayed.\n\n<ExamplesExample file=\"v-tabs/prop-stacked\" />",
    "display_content": "## v-examples - Stacked\n\nUsing **stacked** increases the `v-tabs` height to 72px to allow for both icons and text to be displayed.\n\n<ExamplesExample file=\"v-tabs/prop-stacked\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Stacked",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001427",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001428",
    "text": "Component: v-examples\nSection: Pagination\nType: documentation\n\n## v-examples - Pagination\n\nIf the tab items overflow their container, pagination controls will appear on desktop. For mobile devices, arrows will only display with the **show-arrows** prop.\n\n<ExamplesExample file=\"v-tabs/misc-pagination\" />",
    "display_content": "## v-examples - Pagination\n\nIf the tab items overflow their container, pagination controls will appear on desktop. For mobile devices, arrows will only display with the **show-arrows** prop.\n\n<ExamplesExample file=\"v-tabs/misc-pagination\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Pagination",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001428",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001429",
    "text": "Component: v-examples\nSection: Vertical tabs\nType: documentation\n\n## v-examples - Vertical tabs\n\nThe **direction** prop allows for `v-tab` components to stack vertically.\n\n<ExamplesExample file=\"v-tabs/prop-direction\" />",
    "display_content": "## v-examples - Vertical tabs\n\nThe **direction** prop allows for `v-tab` components to stack vertically.\n\n<ExamplesExample file=\"v-tabs/prop-direction\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Vertical tabs",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001429",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001430",
    "text": "Component: v-examples\nSection: Content\nType: documentation\n\n## v-examples - Content\n\nIt is common to put `v-tabs` inside the **extension** slot of `v-toolbar`.\n\n<ExamplesExample file=\"v-tabs/misc-content\" />",
    "display_content": "## v-examples - Content\n\nIt is common to put `v-tabs` inside the **extension** slot of `v-toolbar`.\n\n<ExamplesExample file=\"v-tabs/misc-content\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Content",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001430",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001431",
    "text": "Component: v-examples\nSection: Mobile tabs\nType: documentation\n\n## v-examples - Mobile tabs\n\nOn mobile you can use `v-tab` items with just icons to conserve space.\n\n<ExamplesExample file=\"v-tabs/misc-mobile\" />",
    "display_content": "## v-examples - Mobile tabs\n\nOn mobile you can use `v-tab` items with just icons to conserve space.\n\n<ExamplesExample file=\"v-tabs/misc-mobile\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Mobile tabs",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001431",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001432",
    "text": "Component: v-examples\nSection: Dynamic Tabs\nType: documentation\n\n## v-examples - Dynamic Tabs\n\nTabs can be dynamically added and removed. In this example when we add a new tab, we automatically change our model to match. As we add more tabs and overflow the container, the selected item will be automatically scrolled into view. Remove all `v-tab` items and the slider will disappear.\n\n<ExamplesExample file=\"v-tabs/misc-dynamic\" />",
    "display_content": "## v-examples - Dynamic Tabs\n\nTabs can be dynamically added and removed. In this example when we add a new tab, we automatically change our model to match. As we add more tabs and overflow the container, the selected item will be automatically scrolled into view. Remove all `v-tab` items and the slider will disappear.\n\n<ExamplesExample file=\"v-tabs/misc-dynamic\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dynamic Tabs",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001432",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001433",
    "text": "Component: v-examples\nSection: Overflow to menu\nType: documentation\n\n## v-examples - Overflow to menu\n\nYou can use a menu to hold additional tabs, swapping them out on the fly.\n\n<ExamplesExample file=\"v-tabs/misc-overflow-to-menu\" />",
    "display_content": "## v-examples - Overflow to menu\n\nYou can use a menu to hold additional tabs, swapping them out on the fly.\n\n<ExamplesExample file=\"v-tabs/misc-overflow-to-menu\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Overflow to menu",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001433",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001434",
    "text": "Component: v-examples\nSection: Tab and window items\nType: documentation\n\n## v-examples - Tab and window items\n\nUse the **tab** and **item** slots with the **items** prop to reduce the markup required to build tabs.\n\n<DocIntroduced version=\"3.6.0\" />\n\n<ExamplesExample file=\"v-tabs/slot-tabs\" />",
    "display_content": "## v-examples - Tab and window items\n\nUse the **tab** and **item** slots with the **items** prop to reduce the markup required to build tabs.\n\n<DocIntroduced version=\"3.6.0\" />\n\n<ExamplesExample file=\"v-tabs/slot-tabs\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Tab and window items",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001434",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001435",
    "text": "Component: v-examples\nSection: Misc Content\nType: code_example\n\n## v-examples - Misc Content\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar color=\"primary\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Page title</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"model\"\n          align-tabs=\"center\"\n        >\n          <v-tab\n            v-for=\"i in 3\"\n            :key=\"i\"\n            :text=\"`Item ${i}`\"\n            :value=\"i\"\n          ></v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"model\">\n      <v-tabs-window-item\n        v-for=\"i in 3\"\n        :key=\"i\"\n        :value=\"i\"\n      >\n        <v-card>\n          <v-card-text>{{ text }}</v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n\n  const model = ref('tab-2')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        model: 'tab-2',\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Content\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar color=\"primary\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Page title</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"model\"\n          align-tabs=\"center\"\n        >\n          <v-tab\n            v-for=\"i in 3\"\n            :key=\"i\"\n            :text=\"`Item ${i}`\"\n            :value=\"i\"\n          ></v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"model\">\n      <v-tabs-window-item\n        v-for=\"i in 3\"\n        :key=\"i\"\n        :value=\"i\"\n      >\n        <v-card>\n          <v-card-text>{{ text }}</v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n\n  const model = ref('tab-2')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        model: 'tab-2',\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Content",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001435",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001436",
    "text": "Component: v-examples\nSection: Misc Dynamic Height\nType: code_example\n\n## v-examples - Misc Dynamic Height\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar color=\"purple\" flat>\n      <v-text-field\n        append-icon=\"mdi-microphone\"\n        class=\"mx-4\"\n        label=\"Search\"\n        prepend-inner-icon=\"mdi-magnify\"\n        variant=\"solo-inverted\"\n        flat\n        hide-details\n      ></v-text-field>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"tabs\"\n          align-tabs=\"center\"\n        >\n          <v-tab\n            v-for=\"n in 3\"\n            :key=\"n\"\n            :text=\"`Item ${n}`\"\n          ></v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"tabs\">\n      <v-tabs-window-item>\n        <v-card flat>\n          <v-card-text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n      <v-tabs-window-item>\n        <v-card flat>\n          <v-card-title class=\"text-h5\">\n            An awesome title\n          </v-card-title>\n          <v-card-text>\n            <p>\n              Duis lobortis massa imperdiet quam. Donec vitae orci sed dolor rutrum auctor. Vestibulum facilisis, purus nec pulvinar iaculis, ligula mi congue nunc, vitae euismod ligula urna in dolor. Praesent congue erat at massa.\n            </p>\n\n            <p>\n              Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Pellentesque egestas, neque sit amet convallis pulvinar, justo nulla eleifend augue, ac auctor orci leo non est. Etiam sit amet orci eget eros faucibus tincidunt. Donec sodales sagittis magna.\n            </p>\n\n            <p class=\"mb-0\">\n              Ut leo. Suspendisse potenti. Duis vel nibh at velit scelerisque suscipit. Fusce pharetra convallis urna.\n            </p>\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n      <v-tabs-window-item>\n        <v-card flat>\n          <v-card-title class=\"text-h5\">\n            An even better title\n          </v-card-title>\n          <v-card-text>\n            <p>\n              Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Sed hendrerit. Maecenas malesuada. Vestibulum ullamcorper mauris at ligula. Proin faucibus arcu quis ante.\n            </p>\n\n            <p class=\"mb-0\">\n              Etiam vitae tortor. Curabitur ullamcorper ultricies nisi. Sed magna purus, fermentum eu, tincidunt eu, varius ut, felis. Aliquam lobortis. Suspendisse potenti.\n            </p>\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tabs = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tabs: null,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Dynamic Height\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar color=\"purple\" flat>\n      <v-text-field\n        append-icon=\"mdi-microphone\"\n        class=\"mx-4\"\n        label=\"Search\"\n        prepend-inner-icon=\"mdi-magnify\"\n        variant=\"solo-inverted\"\n        flat\n        hide-details\n      ></v-text-field>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"tabs\"\n          align-tabs=\"center\"\n        >\n          <v-tab\n            v-for=\"n in 3\"\n            :key=\"n\"\n            :text=\"`Item ${n}`\"\n          ></v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"tabs\">\n      <v-tabs-window-item>\n        <v-card flat>\n          <v-card-text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n      <v-tabs-window-item>\n        <v-card flat>\n          <v-card-title class=\"text-h5\">\n            An awesome title\n          </v-card-title>\n          <v-card-text>\n            <p>\n              Duis lobortis massa imperdiet quam. Donec vitae orci sed dolor rutrum auctor. Vestibulum facilisis, purus nec pulvinar iaculis, ligula mi congue nunc, vitae euismod ligula urna in dolor. Praesent congue erat at massa.\n            </p>\n\n            <p>\n              Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Pellentesque egestas, neque sit amet convallis pulvinar, justo nulla eleifend augue, ac auctor orci leo non est. Etiam sit amet orci eget eros faucibus tincidunt. Donec sodales sagittis magna.\n            </p>\n\n            <p class=\"mb-0\">\n              Ut leo. Suspendisse potenti. Duis vel nibh at velit scelerisque suscipit. Fusce pharetra convallis urna.\n            </p>\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n      <v-tabs-window-item>\n        <v-card flat>\n          <v-card-title class=\"text-h5\">\n            An even better title\n          </v-card-title>\n          <v-card-text>\n            <p>\n              Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Sed hendrerit. Maecenas malesuada. Vestibulum ullamcorper mauris at ligula. Proin faucibus arcu quis ante.\n            </p>\n\n            <p class=\"mb-0\">\n              Etiam vitae tortor. Curabitur ullamcorper ultricies nisi. Sed magna purus, fermentum eu, tincidunt eu, varius ut, felis. Aliquam lobortis. Suspendisse potenti.\n            </p>\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tabs = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tabs: null,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Dynamic Height",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001436",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001437",
    "text": "Component: v-examples\nSection: Misc Dynamic\nType: code_example\n\n## v-examples - Misc Dynamic\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      bg-color=\"red-lighten-2\"\n    >\n      <v-tab\n        v-for=\"n in length\"\n        :key=\"n\"\n        :text=\"`Item ${n}`\"\n        :value=\"n\"\n      ></v-tab>\n    </v-tabs>\n\n    <v-card-text class=\"text-center\">\n      <v-btn\n        :disabled=\"!length\"\n        text=\"Remove Tab\"\n        variant=\"text\"\n        @click=\"length--\"\n      ></v-btn>\n\n      <v-divider\n        class=\"mx-4\"\n        vertical\n      ></v-divider>\n\n      <v-btn\n        text=\"Add Tab\"\n        variant=\"text\"\n        @click=\"length++\"\n      ></v-btn>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const length = ref(15)\n  const tab = ref(null)\n\n  watch(length, val => {\n    tab.value = val - 1\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 15,\n      tab: null,\n    }),\n\n    watch: {\n      length (val) {\n        this.tab = val - 1\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Dynamic\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      bg-color=\"red-lighten-2\"\n    >\n      <v-tab\n        v-for=\"n in length\"\n        :key=\"n\"\n        :text=\"`Item ${n}`\"\n        :value=\"n\"\n      ></v-tab>\n    </v-tabs>\n\n    <v-card-text class=\"text-center\">\n      <v-btn\n        :disabled=\"!length\"\n        text=\"Remove Tab\"\n        variant=\"text\"\n        @click=\"length--\"\n      ></v-btn>\n\n      <v-divider\n        class=\"mx-4\"\n        vertical\n      ></v-divider>\n\n      <v-btn\n        text=\"Add Tab\"\n        variant=\"text\"\n        @click=\"length++\"\n      ></v-btn>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const length = ref(15)\n  const tab = ref(null)\n\n  watch(length, val => {\n    tab.value = val - 1\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 15,\n      tab: null,\n    }),\n\n    watch: {\n      length (val) {\n        this.tab = val - 1\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Dynamic",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001437",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001438",
    "text": "Component: v-examples\nSection: Misc Mobile\nType: code_example\n\n## v-examples - Misc Mobile\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" width=\"350px\">\n    <v-toolbar color=\"surface\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Contacts</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"tabs\"\n          color=\"primary\"\n          grow\n        >\n          <v-tab\n            :value=\"1\"\n          >\n            <v-icon icon=\"mdi-phone\"></v-icon>\n          </v-tab>\n\n          <v-tab\n            :value=\"2\"\n          >\n            <v-icon icon=\"mdi-heart\"></v-icon>\n          </v-tab>\n\n          <v-tab\n            :value=\"3\"\n          >\n            <v-icon icon=\"mdi-account-box\"></v-icon>\n          </v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"tabs\">\n      <v-tabs-window-item\n        v-for=\"i in 3\"\n        :key=\"i\"\n        :value=\"i\"\n      >\n        <v-card>\n          <v-card-text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tabs = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tabs: null,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Mobile\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" width=\"350px\">\n    <v-toolbar color=\"surface\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Contacts</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"tabs\"\n          color=\"primary\"\n          grow\n        >\n          <v-tab\n            :value=\"1\"\n          >\n            <v-icon icon=\"mdi-phone\"></v-icon>\n          </v-tab>\n\n          <v-tab\n            :value=\"2\"\n          >\n            <v-icon icon=\"mdi-heart\"></v-icon>\n          </v-tab>\n\n          <v-tab\n            :value=\"3\"\n          >\n            <v-icon icon=\"mdi-account-box\"></v-icon>\n          </v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"tabs\">\n      <v-tabs-window-item\n        v-for=\"i in 3\"\n        :key=\"i\"\n        :value=\"i\"\n      >\n        <v-card>\n          <v-card-text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tabs = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tabs: null,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Mobile",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001438",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001439",
    "text": "Component: v-examples\nSection: Misc Overflow To Menu\nType: code_example\n\n## v-examples - Misc Overflow To Menu\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar\n      color=\"deep-purple-accent-4\"\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Page title</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"currentItem\"\n          fixed-tabs\n        >\n          <v-tab\n            v-for=\"item in items\"\n            :key=\"item\"\n            :text=\"item\"\n            :value=\"'tab-' + item\"\n          ></v-tab>\n\n          <v-menu v-if=\"more.length\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn\n                class=\"align-self-center me-4\"\n                height=\"100%\"\n                rounded=\"0\"\n                variant=\"plain\"\n                v-bind=\"props\"\n              >\n                more\n\n                <v-icon icon=\"mdi-menu-down\" end></v-icon>\n              </v-btn>\n            </template>\n\n            <v-list class=\"bg-grey-lighten-3\">\n              <v-list-item\n                v-for=\"item in more\"\n                :key=\"item\"\n                :title=\"item\"\n                @click=\"addItem(item)\"\n              ></v-list-item>\n            </v-list>\n          </v-menu>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"currentItem\">\n      <v-tabs-window-item\n        v-for=\"item in items.concat(more)\"\n        :key=\"item\"\n        :value=\"'tab-' + item\"\n      >\n        <v-card flat>\n          <v-card-text>\n            <h2>{{ item }}</h2>\n            {{ text }}\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { nextTick, ref } from 'vue'\n\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n\n  const currentItem = ref('tab-Web')\n  const items = ref([\n    'Web',\n    'Shopping',\n    'Videos',\n    'Images',\n  ])\n  const more = ref([\n    'News',\n    'Maps',\n    'Books',\n    'Flights',\n    'Apps',\n  ])\n\n  function addItem (item) {\n    const removed = items.value.splice(0, 1)\n    items.value.push(...more.value.splice(more.value.indexOf(item), 1))\n    more.value.push(...removed)\n    nextTick(() => { currentItem.value = 'tab-' + item })\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      currentItem: 'tab-Web',\n      items: [\n        'Web', 'Shopping', 'Videos', 'Images',\n      ],\n      more: [\n        'News', 'Maps', 'Books', 'Flights', 'Apps',\n      ],\n      text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    }),\n\n    methods: {\n      addItem (item) {\n        const removed = this.items.splice(0, 1)\n        this.items.push(\n          ...this.more.splice(this.more.indexOf(item), 1),\n        )\n        this.more.push(...removed)\n        this.$nextTick(() => { this.currentItem = 'tab-' + item })\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Overflow To Menu\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar\n      color=\"deep-purple-accent-4\"\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Page title</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"currentItem\"\n          fixed-tabs\n        >\n          <v-tab\n            v-for=\"item in items\"\n            :key=\"item\"\n            :text=\"item\"\n            :value=\"'tab-' + item\"\n          ></v-tab>\n\n          <v-menu v-if=\"more.length\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn\n                class=\"align-self-center me-4\"\n                height=\"100%\"\n                rounded=\"0\"\n                variant=\"plain\"\n                v-bind=\"props\"\n              >\n                more\n\n                <v-icon icon=\"mdi-menu-down\" end></v-icon>\n              </v-btn>\n            </template>\n\n            <v-list class=\"bg-grey-lighten-3\">\n              <v-list-item\n                v-for=\"item in more\"\n                :key=\"item\"\n                :title=\"item\"\n                @click=\"addItem(item)\"\n              ></v-list-item>\n            </v-list>\n          </v-menu>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"currentItem\">\n      <v-tabs-window-item\n        v-for=\"item in items.concat(more)\"\n        :key=\"item\"\n        :value=\"'tab-' + item\"\n      >\n        <v-card flat>\n          <v-card-text>\n            <h2>{{ item }}</h2>\n            {{ text }}\n          </v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { nextTick, ref } from 'vue'\n\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n\n  const currentItem = ref('tab-Web')\n  const items = ref([\n    'Web',\n    'Shopping',\n    'Videos',\n    'Images',\n  ])\n  const more = ref([\n    'News',\n    'Maps',\n    'Books',\n    'Flights',\n    'Apps',\n  ])\n\n  function addItem (item) {\n    const removed = items.value.splice(0, 1)\n    items.value.push(...more.value.splice(more.value.indexOf(item), 1))\n    more.value.push(...removed)\n    nextTick(() => { currentItem.value = 'tab-' + item })\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      currentItem: 'tab-Web',\n      items: [\n        'Web', 'Shopping', 'Videos', 'Images',\n      ],\n      more: [\n        'News', 'Maps', 'Books', 'Flights', 'Apps',\n      ],\n      text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    }),\n\n    methods: {\n      addItem (item) {\n        const removed = this.items.splice(0, 1)\n        this.items.push(\n          ...this.more.splice(this.more.indexOf(item), 1),\n        )\n        this.more.push(...removed)\n        this.$nextTick(() => { this.currentItem = 'tab-' + item })\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Overflow To Menu",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001439",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001440",
    "text": "Component: v-examples\nSection: Misc Pagination\nType: code_example\n\n## v-examples - Misc Pagination\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      bg-color=\"teal-darken-3\"\n      slider-color=\"teal-lighten-3\"\n      show-arrows\n    >\n      <v-tab\n        v-for=\"i in 30\"\n        :key=\"i\"\n        :text=\"'Item ' + i\"\n        :value=\"'tab-' + i\"\n      ></v-tab>\n    </v-tabs>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Pagination\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      bg-color=\"teal-darken-3\"\n      slider-color=\"teal-lighten-3\"\n      show-arrows\n    >\n      <v-tab\n        v-for=\"i in 30\"\n        :key=\"i\"\n        :text=\"'Item ' + i\"\n        :value=\"'tab-' + i\"\n      ></v-tab>\n    </v-tabs>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Pagination",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001440",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001441",
    "text": "Component: v-examples\nSection: Misc Tab Items\nType: code_example\n\n## v-examples - Misc Tab Items\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      bg-color=\"primary\"\n    >\n      <v-tab\n        v-for=\"item in items\"\n        :key=\"item.tab\"\n        :title=\"item.tab\"\n      ></v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"item in items\"\n        :key=\"item.tab\"\n      >\n        <v-card flat>\n          <v-card-text>{{ item.content }}</v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    { tab: 'One', content: 'Tab 1 Content' },\n    { tab: 'Two', content: 'Tab 2 Content' },\n    { tab: 'Three', content: 'Tab 3 Content' },\n    { tab: 'Four', content: 'Tab 4 Content' },\n    { tab: 'Five', content: 'Tab 5 Content' },\n    { tab: 'Six', content: 'Tab 6 Content' },\n    { tab: 'Seven', content: 'Tab 7 Content' },\n    { tab: 'Eight', content: 'Tab 8 Content' },\n    { tab: 'Nine', content: 'Tab 9 Content' },\n    { tab: 'Ten', content: 'Tab 10 Content' },\n  ]\n\n  const tab = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tab: null,\n        items: [\n          { tab: 'One', content: 'Tab 1 Content' },\n          { tab: 'Two', content: 'Tab 2 Content' },\n          { tab: 'Three', content: 'Tab 3 Content' },\n          { tab: 'Four', content: 'Tab 4 Content' },\n          { tab: 'Five', content: 'Tab 5 Content' },\n          { tab: 'Six', content: 'Tab 6 Content' },\n          { tab: 'Seven', content: 'Tab 7 Content' },\n          { tab: 'Eight', content: 'Tab 8 Content' },\n          { tab: 'Nine', content: 'Tab 9 Content' },\n          { tab: 'Ten', content: 'Tab 10 Content' },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Tab Items\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      bg-color=\"primary\"\n    >\n      <v-tab\n        v-for=\"item in items\"\n        :key=\"item.tab\"\n        :title=\"item.tab\"\n      ></v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"item in items\"\n        :key=\"item.tab\"\n      >\n        <v-card flat>\n          <v-card-text>{{ item.content }}</v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = [\n    { tab: 'One', content: 'Tab 1 Content' },\n    { tab: 'Two', content: 'Tab 2 Content' },\n    { tab: 'Three', content: 'Tab 3 Content' },\n    { tab: 'Four', content: 'Tab 4 Content' },\n    { tab: 'Five', content: 'Tab 5 Content' },\n    { tab: 'Six', content: 'Tab 6 Content' },\n    { tab: 'Seven', content: 'Tab 7 Content' },\n    { tab: 'Eight', content: 'Tab 8 Content' },\n    { tab: 'Nine', content: 'Tab 9 Content' },\n    { tab: 'Ten', content: 'Tab 10 Content' },\n  ]\n\n  const tab = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tab: null,\n        items: [\n          { tab: 'One', content: 'Tab 1 Content' },\n          { tab: 'Two', content: 'Tab 2 Content' },\n          { tab: 'Three', content: 'Tab 3 Content' },\n          { tab: 'Four', content: 'Tab 4 Content' },\n          { tab: 'Five', content: 'Tab 5 Content' },\n          { tab: 'Six', content: 'Tab 6 Content' },\n          { tab: 'Seven', content: 'Tab 7 Content' },\n          { tab: 'Eight', content: 'Tab 8 Content' },\n          { tab: 'Nine', content: 'Tab 9 Content' },\n          { tab: 'Ten', content: 'Tab 10 Content' },\n        ],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Tab Items",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001441",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001442",
    "text": "Component: v-examples\nSection: Prop Align Tabs Center\nType: code_example\n\n## v-examples - Prop Align Tabs Center\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      align-tabs=\"center\"\n      color=\"deep-purple-accent-4\"\n    >\n      <v-tab :value=\"1\">Landscape</v-tab>\n      <v-tab :value=\"2\">City</v-tab>\n      <v-tab :value=\"3\">Abstract</v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"n in 3\"\n        :key=\"n\"\n        :value=\"n\"\n      >\n        <v-container fluid>\n          <v-row>\n            <v-col\n              v-for=\"i in 6\"\n              :key=\"i\"\n              cols=\"12\"\n              md=\"4\"\n            >\n              <v-img\n                :lazy-src=\"`https://picsum.photos/10/6?image=${i * n * 5 + 10}`\"\n                :src=\"`https://picsum.photos/500/300?image=${i * n * 5 + 10}`\"\n                height=\"205\"\n                cover\n              ></v-img>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tab: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Align Tabs Center\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      align-tabs=\"center\"\n      color=\"deep-purple-accent-4\"\n    >\n      <v-tab :value=\"1\">Landscape</v-tab>\n      <v-tab :value=\"2\">City</v-tab>\n      <v-tab :value=\"3\">Abstract</v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"n in 3\"\n        :key=\"n\"\n        :value=\"n\"\n      >\n        <v-container fluid>\n          <v-row>\n            <v-col\n              v-for=\"i in 6\"\n              :key=\"i\"\n              cols=\"12\"\n              md=\"4\"\n            >\n              <v-img\n                :lazy-src=\"`https://picsum.photos/10/6?image=${i * n * 5 + 10}`\"\n                :src=\"`https://picsum.photos/500/300?image=${i * n * 5 + 10}`\"\n                height=\"205\"\n                cover\n              ></v-img>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tab: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Align Tabs Center",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001442",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001443",
    "text": "Component: v-examples\nSection: Prop Align Tabs End\nType: code_example\n\n## v-examples - Prop Align Tabs End\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      align-tabs=\"end\"\n      color=\"deep-purple-accent-4\"\n    >\n      <v-tab :value=\"1\">Landscape</v-tab>\n      <v-tab :value=\"2\">City</v-tab>\n      <v-tab :value=\"3\">Abstract</v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"n in 3\"\n        :key=\"n\"\n        :value=\"n\"\n      >\n        <v-container fluid>\n          <v-row>\n            <v-col\n              v-for=\"i in 6\"\n              :key=\"i\"\n              cols=\"12\"\n              md=\"4\"\n            >\n              <v-img\n                :lazy-src=\"`https://picsum.photos/10/6?image=${i * n * 5 + 10}`\"\n                :src=\"`https://picsum.photos/500/300?image=${i * n * 5 + 10}`\"\n                height=\"205\"\n                cover\n              ></v-img>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tab: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Align Tabs End\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      align-tabs=\"end\"\n      color=\"deep-purple-accent-4\"\n    >\n      <v-tab :value=\"1\">Landscape</v-tab>\n      <v-tab :value=\"2\">City</v-tab>\n      <v-tab :value=\"3\">Abstract</v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"n in 3\"\n        :key=\"n\"\n        :value=\"n\"\n      >\n        <v-container fluid>\n          <v-row>\n            <v-col\n              v-for=\"i in 6\"\n              :key=\"i\"\n              cols=\"12\"\n              md=\"4\"\n            >\n              <v-img\n                :lazy-src=\"`https://picsum.photos/10/6?image=${i * n * 5 + 10}`\"\n                :src=\"`https://picsum.photos/500/300?image=${i * n * 5 + 10}`\"\n                height=\"205\"\n                cover\n              ></v-img>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref(null)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tab: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Align Tabs End",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001443",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001444",
    "text": "Component: v-examples\nSection: Prop Align Tabs Title\nType: code_example\n\n## v-examples - Prop Align Tabs Title\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar color=\"primary\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Your Dashboard</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"tab\"\n          align-tabs=\"title\"\n        >\n          <v-tab\n            v-for=\"item in items\"\n            :key=\"item\"\n            :text=\"item\"\n            :value=\"item\"\n          ></v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"item in items\"\n        :key=\"item\"\n        :value=\"item\"\n      >\n        <v-card flat>\n          <v-card-text v-text=\"text\"></v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref(null)\n\n  const items = [\n    'web',\n    'shopping',\n    'videos',\n    'images',\n    'news',\n  ]\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tab: null,\n        items: [\n          'web', 'shopping', 'videos', 'images', 'news',\n        ],\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Align Tabs Title\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar color=\"primary\">\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>Your Dashboard</v-toolbar-title>\n\n      <v-btn icon=\"mdi-magnify\"></v-btn>\n\n      <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n\n      <template v-slot:extension>\n        <v-tabs\n          v-model=\"tab\"\n          align-tabs=\"title\"\n        >\n          <v-tab\n            v-for=\"item in items\"\n            :key=\"item\"\n            :text=\"item\"\n            :value=\"item\"\n          ></v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"item in items\"\n        :key=\"item\"\n        :value=\"item\"\n      >\n        <v-card flat>\n          <v-card-text v-text=\"text\"></v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref(null)\n\n  const items = [\n    'web',\n    'shopping',\n    'videos',\n    'images',\n    'news',\n  ]\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tab: null,\n        items: [\n          'web', 'shopping', 'videos', 'images', 'news',\n        ],\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Align Tabs Title",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001444",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001445",
    "text": "Component: v-examples\nSection: Prop Center Active\nType: code_example\n\n## v-examples - Prop Center Active\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      bg-color=\"deep-purple-darken-4\"\n      center-active\n    >\n      <v-tab>One</v-tab>\n      <v-tab>Two</v-tab>\n      <v-tab>Three</v-tab>\n      <v-tab>Four</v-tab>\n      <v-tab>Five</v-tab>\n      <v-tab>Six</v-tab>\n      <v-tab>Seven</v-tab>\n      <v-tab>Eight</v-tab>\n      <v-tab>Nine</v-tab>\n      <v-tab>Ten</v-tab>\n      <v-tab>Eleven</v-tab>\n      <v-tab>Twelve</v-tab>\n      <v-tab>Thirteen</v-tab>\n      <v-tab>Fourteen</v-tab>\n      <v-tab>Fifteen</v-tab>\n      <v-tab>Sixteen</v-tab>\n      <v-tab>Seventeen</v-tab>\n      <v-tab>Eighteen</v-tab>\n      <v-tab>Nineteen</v-tab>\n      <v-tab>Twenty</v-tab>\n    </v-tabs>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Center Active\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      bg-color=\"deep-purple-darken-4\"\n      center-active\n    >\n      <v-tab>One</v-tab>\n      <v-tab>Two</v-tab>\n      <v-tab>Three</v-tab>\n      <v-tab>Four</v-tab>\n      <v-tab>Five</v-tab>\n      <v-tab>Six</v-tab>\n      <v-tab>Seven</v-tab>\n      <v-tab>Eight</v-tab>\n      <v-tab>Nine</v-tab>\n      <v-tab>Ten</v-tab>\n      <v-tab>Eleven</v-tab>\n      <v-tab>Twelve</v-tab>\n      <v-tab>Thirteen</v-tab>\n      <v-tab>Fourteen</v-tab>\n      <v-tab>Fifteen</v-tab>\n      <v-tab>Sixteen</v-tab>\n      <v-tab>Seventeen</v-tab>\n      <v-tab>Eighteen</v-tab>\n      <v-tab>Nineteen</v-tab>\n      <v-tab>Twenty</v-tab>\n    </v-tabs>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Center Active",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001445",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001446",
    "text": "Component: v-examples\nSection: Prop Direction\nType: code_example\n\n## v-examples - Prop Direction\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar color=\"primary\" title=\"User Profile\">\n    </v-toolbar>\n\n    <div class=\"d-flex flex-row\">\n      <v-tabs\n        v-model=\"tab\"\n        color=\"primary\"\n        direction=\"vertical\"\n      >\n        <v-tab prepend-icon=\"mdi-account\" text=\"Option 1\" value=\"option-1\"></v-tab>\n        <v-tab prepend-icon=\"mdi-lock\" text=\"Option 2\" value=\"option-2\"></v-tab>\n        <v-tab prepend-icon=\"mdi-access-point\" text=\"Option 3\" value=\"option-3\"></v-tab>\n      </v-tabs>\n\n      <v-tabs-window v-model=\"tab\">\n        <v-tabs-window-item value=\"option-1\">\n          <v-card flat>\n            <v-card-text>\n              <p>\n                Sed aliquam ultrices mauris. Donec posuere vulputate arcu. Morbi ac felis. Etiam feugiat lorem non metus. Sed a libero.\n              </p>\n\n              <p>\n                Nam ipsum risus, rutrum vitae, vestibulum eu, molestie vel, lacus. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc. Aliquam lobortis. Aliquam lobortis. Suspendisse non nisl sit amet velit hendrerit rutrum.\n              </p>\n\n              <p class=\"mb-0\">\n                Phasellus dolor. Fusce neque. Fusce fermentum odio nec arcu. Pellentesque libero tortor, tincidunt et, tincidunt eget, semper nec, quam. Phasellus blandit leo ut odio.\n              </p>\n            </v-card-text>\n          </v-card>\n        </v-tabs-window-item>\n\n        <v-tabs-window-item value=\"option-2\">\n          <v-card flat>\n            <v-card-text>\n              <p>\n                Morbi nec metus. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id tortor. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Nunc sed turpis.\n              </p>\n\n              <p>\n                Suspendisse feugiat. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id tortor. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. In hac habitasse platea dictumst. Fusce ac felis sit amet ligula pharetra condimentum.\n              </p>\n\n              <p>\n                Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Nam commodo suscipit quam. In consectetuer turpis ut velit. Sed cursus turpis vitae tortor. Aliquam eu nunc.\n              </p>\n\n              <p>\n                Etiam ut purus mattis mauris sodales aliquam. Ut varius tincidunt libero. Aenean viverra rhoncus pede. Duis leo. Fusce fermentum odio nec arcu.\n              </p>\n\n              <p class=\"mb-0\">\n                Donec venenatis vulputate lorem. Aenean viverra rhoncus pede. In dui magna, posuere eget, vestibulum et, tempor auctor, justo. Fusce commodo aliquam arcu. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi.\n              </p>\n            </v-card-text>\n          </v-card>\n        </v-tabs-window-item>\n\n        <v-tabs-window-item value=\"option-3\">\n          <v-card flat>\n            <v-card-text>\n              <p>\n                Fusce a quam. Phasellus nec sem in justo pellentesque facilisis. Nam eget dui. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. In dui magna, posuere eget, vestibulum et, tempor auctor, justo.\n              </p>\n\n              <p class=\"mb-0\">\n                Cras sagittis. Phasellus nec sem in justo pellentesque facilisis. Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nam at tortor in tellus interdum sagittis.\n              </p>\n            </v-card-text>\n          </v-card>\n        </v-tabs-window-item>\n      </v-tabs-window>\n    </div>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref('option-1')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tab: 'option-1',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Direction\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar color=\"primary\" title=\"User Profile\">\n    </v-toolbar>\n\n    <div class=\"d-flex flex-row\">\n      <v-tabs\n        v-model=\"tab\"\n        color=\"primary\"\n        direction=\"vertical\"\n      >\n        <v-tab prepend-icon=\"mdi-account\" text=\"Option 1\" value=\"option-1\"></v-tab>\n        <v-tab prepend-icon=\"mdi-lock\" text=\"Option 2\" value=\"option-2\"></v-tab>\n        <v-tab prepend-icon=\"mdi-access-point\" text=\"Option 3\" value=\"option-3\"></v-tab>\n      </v-tabs>\n\n      <v-tabs-window v-model=\"tab\">\n        <v-tabs-window-item value=\"option-1\">\n          <v-card flat>\n            <v-card-text>\n              <p>\n                Sed aliquam ultrices mauris. Donec posuere vulputate arcu. Morbi ac felis. Etiam feugiat lorem non metus. Sed a libero.\n              </p>\n\n              <p>\n                Nam ipsum risus, rutrum vitae, vestibulum eu, molestie vel, lacus. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc. Aliquam lobortis. Aliquam lobortis. Suspendisse non nisl sit amet velit hendrerit rutrum.\n              </p>\n\n              <p class=\"mb-0\">\n                Phasellus dolor. Fusce neque. Fusce fermentum odio nec arcu. Pellentesque libero tortor, tincidunt et, tincidunt eget, semper nec, quam. Phasellus blandit leo ut odio.\n              </p>\n            </v-card-text>\n          </v-card>\n        </v-tabs-window-item>\n\n        <v-tabs-window-item value=\"option-2\">\n          <v-card flat>\n            <v-card-text>\n              <p>\n                Morbi nec metus. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id tortor. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Nunc sed turpis.\n              </p>\n\n              <p>\n                Suspendisse feugiat. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id tortor. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. In hac habitasse platea dictumst. Fusce ac felis sit amet ligula pharetra condimentum.\n              </p>\n\n              <p>\n                Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Nam commodo suscipit quam. In consectetuer turpis ut velit. Sed cursus turpis vitae tortor. Aliquam eu nunc.\n              </p>\n\n              <p>\n                Etiam ut purus mattis mauris sodales aliquam. Ut varius tincidunt libero. Aenean viverra rhoncus pede. Duis leo. Fusce fermentum odio nec arcu.\n              </p>\n\n              <p class=\"mb-0\">\n                Donec venenatis vulputate lorem. Aenean viverra rhoncus pede. In dui magna, posuere eget, vestibulum et, tempor auctor, justo. Fusce commodo aliquam arcu. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi.\n              </p>\n            </v-card-text>\n          </v-card>\n        </v-tabs-window-item>\n\n        <v-tabs-window-item value=\"option-3\">\n          <v-card flat>\n            <v-card-text>\n              <p>\n                Fusce a quam. Phasellus nec sem in justo pellentesque facilisis. Nam eget dui. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. In dui magna, posuere eget, vestibulum et, tempor auctor, justo.\n              </p>\n\n              <p class=\"mb-0\">\n                Cras sagittis. Phasellus nec sem in justo pellentesque facilisis. Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nam at tortor in tellus interdum sagittis.\n              </p>\n            </v-card-text>\n          </v-card>\n        </v-tabs-window-item>\n      </v-tabs-window>\n    </div>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref('option-1')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tab: 'option-1',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Direction",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001446",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001447",
    "text": "Component: v-examples\nSection: Prop Fixed Tabs\nType: code_example\n\n## v-examples - Prop Fixed Tabs\n\n```vue\n<template>\n  <v-tabs\n    bg-color=\"indigo-darken-2\"\n    fixed-tabs\n  >\n    <v-tab text=\"Option\"></v-tab>\n\n    <v-tab text=\"Another Option\"></v-tab>\n  </v-tabs>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Fixed Tabs\n\n```vue\n<template>\n  <v-tabs\n    bg-color=\"indigo-darken-2\"\n    fixed-tabs\n  >\n    <v-tab text=\"Option\"></v-tab>\n\n    <v-tab text=\"Another Option\"></v-tab>\n  </v-tabs>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Fixed Tabs",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001447",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001448",
    "text": "Component: v-examples\nSection: Prop Grow\nType: code_example\n\n## v-examples - Prop Grow\n\n```vue\n<template>\n  <v-card color=\"basil\">\n    <v-card-title class=\"text-center justify-center py-6\">\n      <h1 class=\"font-weight-bold text-h2 text-basil\">\n        BASiL\n      </h1>\n    </v-card-title>\n\n    <v-tabs\n      v-model=\"tab\"\n      bg-color=\"transparent\"\n      color=\"basil\"\n      grow\n    >\n      <v-tab\n        v-for=\"item in items\"\n        :key=\"item\"\n        :text=\"item\"\n        :value=\"item\"\n      ></v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"item in items\"\n        :key=\"item\"\n        :value=\"item\"\n      >\n        <v-card\n          color=\"basil\"\n          flat\n        >\n          <v-card-text>{{ text }}</v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref('Appetizers')\n\n  const items = [\n    'Appetizers',\n    'Entrees',\n    'Deserts',\n    'Cocktails',\n  ]\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tab: 'Appetizers',\n        items: [\n          'Appetizers', 'Entrees', 'Deserts', 'Cocktails',\n        ],\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n      }\n    },\n  }\n</script>\n\n<style>\n/* Helper classes */\n.bg-basil {\n  background-color: #FFFBE6 !important;\n}\n.text-basil {\n  color: #356859 !important;\n}\n</style>\n\n```",
    "display_content": "## v-examples - Prop Grow\n\n```vue\n<template>\n  <v-card color=\"basil\">\n    <v-card-title class=\"text-center justify-center py-6\">\n      <h1 class=\"font-weight-bold text-h2 text-basil\">\n        BASiL\n      </h1>\n    </v-card-title>\n\n    <v-tabs\n      v-model=\"tab\"\n      bg-color=\"transparent\"\n      color=\"basil\"\n      grow\n    >\n      <v-tab\n        v-for=\"item in items\"\n        :key=\"item\"\n        :text=\"item\"\n        :value=\"item\"\n      ></v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"item in items\"\n        :key=\"item\"\n        :value=\"item\"\n      >\n        <v-card\n          color=\"basil\"\n          flat\n        >\n          <v-card-text>{{ text }}</v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref('Appetizers')\n\n  const items = [\n    'Appetizers',\n    'Entrees',\n    'Deserts',\n    'Cocktails',\n  ]\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tab: 'Appetizers',\n        items: [\n          'Appetizers', 'Entrees', 'Deserts', 'Cocktails',\n        ],\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n      }\n    },\n  }\n</script>\n\n<style>\n/* Helper classes */\n.bg-basil {\n  background-color: #FFFBE6 !important;\n}\n.text-basil {\n  color: #356859 !important;\n}\n</style>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Grow",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001448",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001449",
    "text": "Component: v-examples\nSection: Prop Icons\nType: code_example\n\n## v-examples - Prop Icons\n\n```vue\n<template>\n  <v-sheet elevation=\"6\">\n    <v-tabs\n      bg-color=\"indigo\"\n      next-icon=\"mdi-arrow-right-bold-box-outline\"\n      prev-icon=\"mdi-arrow-left-bold-box-outline\"\n      show-arrows\n    >\n      <v-tab\n        v-for=\"i in 30\"\n        :key=\"i\"\n        :text=\"`Item ${i}`\"\n      ></v-tab>\n    </v-tabs>\n  </v-sheet>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Icons\n\n```vue\n<template>\n  <v-sheet elevation=\"6\">\n    <v-tabs\n      bg-color=\"indigo\"\n      next-icon=\"mdi-arrow-right-bold-box-outline\"\n      prev-icon=\"mdi-arrow-left-bold-box-outline\"\n      show-arrows\n    >\n      <v-tab\n        v-for=\"i in 30\"\n        :key=\"i\"\n        :text=\"`Item ${i}`\"\n      ></v-tab>\n    </v-tabs>\n  </v-sheet>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001449",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001450",
    "text": "Component: v-examples\nSection: Prop Stacked\nType: code_example\n\n## v-examples - Prop Stacked\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      align-tabs=\"center\"\n      bg-color=\"deep-purple-accent-4\"\n      stacked\n    >\n      <v-tab value=\"tab-1\">\n        <v-icon icon=\"mdi-phone\"></v-icon>\n\n        Recents\n      </v-tab>\n\n      <v-tab value=\"tab-2\">\n        <v-icon icon=\"mdi-heart\"></v-icon>\n\n        Favorites\n      </v-tab>\n\n      <v-tab value=\"tab-3\">\n        <v-icon icon=\"mdi-account-box\"></v-icon>\n\n        Nearby\n      </v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"i in 3\"\n        :key=\"i\"\n        :value=\"'tab-' + i\"\n      >\n        <v-card>\n          <v-card-text>{{ text }}</v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref(null)\n\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tab: null,\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Stacked\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      align-tabs=\"center\"\n      bg-color=\"deep-purple-accent-4\"\n      stacked\n    >\n      <v-tab value=\"tab-1\">\n        <v-icon icon=\"mdi-phone\"></v-icon>\n\n        Recents\n      </v-tab>\n\n      <v-tab value=\"tab-2\">\n        <v-icon icon=\"mdi-heart\"></v-icon>\n\n        Favorites\n      </v-tab>\n\n      <v-tab value=\"tab-3\">\n        <v-icon icon=\"mdi-account-box\"></v-icon>\n\n        Nearby\n      </v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item\n        v-for=\"i in 3\"\n        :key=\"i\"\n        :value=\"'tab-' + i\"\n      >\n        <v-card>\n          <v-card-text>{{ text }}</v-card-text>\n        </v-card>\n      </v-tabs-window-item>\n    </v-tabs-window>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tab = ref(null)\n\n  const text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        tab: null,\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Stacked",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001450",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001451",
    "text": "Component: v-examples\nSection: Slot Tabs\nType: code_example\n\n## v-examples - Slot Tabs\n\n```vue\n<template>\n  <v-sheet color=\"#0d1117\" elevation=\"3\" rounded=\"lg\">\n    <v-tabs\n      v-model=\"tab\"\n      :items=\"tabs\"\n      align-tabs=\"center\"\n      color=\"white\"\n      height=\"60\"\n      slider-color=\"#f78166\"\n    >\n      <template v-slot:tab=\"{ item }\">\n        <v-tab\n          :prepend-icon=\"item.icon\"\n          :text=\"item.text\"\n          :value=\"item.value\"\n          class=\"text-none\"\n        ></v-tab>\n      </template>\n\n      <template v-slot:item=\"{ item }\">\n        <v-tabs-window-item :value=\"item.value\" class=\"pa-4\">\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n        </v-tabs-window-item>\n      </template>\n    </v-tabs>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const tab = shallowRef('tab-1')\n  const tabs = [\n    {\n      icon: 'mdi-book-open-page-variant',\n      text: 'Readme',\n      value: 'tab-1',\n    },\n    {\n      icon: 'mdi-handshake-outline',\n      text: 'Code of Conduct',\n      value: 'tab-2',\n    },\n    {\n      icon: 'mdi-license',\n      text: 'MIT License',\n      value: 'tab-3',\n    },\n    {\n      icon: 'mdi-shield-lock-outline',\n      text: 'Security',\n      value: 'tab-4',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tab: 'tab-1',\n      tabs: [\n        {\n          icon: 'mdi-book-open-page-variant',\n          text: 'Readme',\n          value: 'tab-1',\n        },\n        {\n          icon: 'mdi-handshake-outline',\n          text: 'Code of Conduct',\n          value: 'tab-2',\n        },\n        {\n          icon: 'mdi-license',\n          text: 'MIT License',\n          value: 'tab-3',\n        },\n        {\n          icon: 'mdi-shield-lock-outline',\n          text: 'Security',\n          value: 'tab-4',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Tabs\n\n```vue\n<template>\n  <v-sheet color=\"#0d1117\" elevation=\"3\" rounded=\"lg\">\n    <v-tabs\n      v-model=\"tab\"\n      :items=\"tabs\"\n      align-tabs=\"center\"\n      color=\"white\"\n      height=\"60\"\n      slider-color=\"#f78166\"\n    >\n      <template v-slot:tab=\"{ item }\">\n        <v-tab\n          :prepend-icon=\"item.icon\"\n          :text=\"item.text\"\n          :value=\"item.value\"\n          class=\"text-none\"\n        ></v-tab>\n      </template>\n\n      <template v-slot:item=\"{ item }\">\n        <v-tabs-window-item :value=\"item.value\" class=\"pa-4\">\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, ratione debitis quis est labore voluptatibus! Eaque cupiditate minima, at placeat totam, magni doloremque veniam neque porro libero rerum unde voluptatem!\n        </v-tabs-window-item>\n      </template>\n    </v-tabs>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const tab = shallowRef('tab-1')\n  const tabs = [\n    {\n      icon: 'mdi-book-open-page-variant',\n      text: 'Readme',\n      value: 'tab-1',\n    },\n    {\n      icon: 'mdi-handshake-outline',\n      text: 'Code of Conduct',\n      value: 'tab-2',\n    },\n    {\n      icon: 'mdi-license',\n      text: 'MIT License',\n      value: 'tab-3',\n    },\n    {\n      icon: 'mdi-shield-lock-outline',\n      text: 'Security',\n      value: 'tab-4',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tab: 'tab-1',\n      tabs: [\n        {\n          icon: 'mdi-book-open-page-variant',\n          text: 'Readme',\n          value: 'tab-1',\n        },\n        {\n          icon: 'mdi-handshake-outline',\n          text: 'Code of Conduct',\n          value: 'tab-2',\n        },\n        {\n          icon: 'mdi-license',\n          text: 'MIT License',\n          value: 'tab-3',\n        },\n        {\n          icon: 'mdi-shield-lock-outline',\n          text: 'Security',\n          value: 'tab-4',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Tabs",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001451",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001452",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      bg-color=\"primary\"\n    >\n      <v-tab value=\"one\">Item One</v-tab>\n      <v-tab value=\"two\">Item Two</v-tab>\n      <v-tab value=\"three\">Item Three</v-tab>\n    </v-tabs>\n\n    <v-card-text>\n      <v-tabs-window v-model=\"tab\">\n        <v-tabs-window-item value=\"one\">\n          One\n        </v-tabs-window-item>\n\n        <v-tabs-window-item value=\"two\">\n          Two\n        </v-tabs-window-item>\n\n        <v-tabs-window-item value=\"three\">\n          Three\n        </v-tabs-window-item>\n      </v-tabs-window>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      tab: null,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-card>\n    <v-tabs\n      v-model=\"tab\"\n      bg-color=\"primary\"\n    >\n      <v-tab value=\"one\">Item One</v-tab>\n      <v-tab value=\"two\">Item Two</v-tab>\n      <v-tab value=\"three\">Item Three</v-tab>\n    </v-tabs>\n\n    <v-card-text>\n      <v-tabs-window v-model=\"tab\">\n        <v-tabs-window-item value=\"one\">\n          One\n        </v-tabs-window-item>\n\n        <v-tabs-window-item value=\"two\">\n          Two\n        </v-tabs-window-item>\n\n        <v-tabs-window-item value=\"three\">\n          Three\n        </v-tabs-window-item>\n      </v-tabs-window>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      tab: null,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001452",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001453",
    "text": "Component: v-text-fields\nType: component_overview\n\n# v-text-fields\n\nText field components are used for collecting user provided information.",
    "display_content": "# v-text-fields\n\nText field components are used for collecting user provided information.",
    "metadata": {
      "component": "v-text-fields",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001453",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001454",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nA simple text field with placeholder and/or label.",
    "display_content": "# v-usage\n\nA simple text field with placeholder and/or label.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001454",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001455",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-text-field](/api/v-text-field/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-text-field](/api/v-text-field/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001455",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001456",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe recommended placement of elements inside of `v-text-field` is:",
    "display_content": "# v-anatomy\n\nThe recommended placement of elements inside of `v-text-field` is:",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001456",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001457",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-text-field` component is a versatile `<input type=\"text\">` field which combines both the `v-input` and `v-field` components into a single offering. It is a commonly used element that provides the baseline for other form inputs; such as [v-select](/components/selects/), [v-autocomplete](/components/autocompletes/), [v-combobox](/components/combobox/). In this guide you learn the basic fundamentals of `v-text-field` and how its various properties interact with each other.\n\nAvailable sections: Props, Labeling, Placeholders, Hints & messages, Clearable, Validation & rules, Forms, Examples, Custom colors, Density, Disabled and readonly, Hide details, Hint, Icons, Prefixes and suffixes, Validation, Variant, Icon events, Slots, Icon slots, Label, Progress, Custom validation, Full width with counter, Password input, Login Form, Event Icons, Usage, Misc Custom Validation, Misc Full Width With Counter, Misc Guide, Misc Login Form, Misc Password, Prop Clearable, Prop Contained, Prop Counter, Prop Custom Colors, Prop Dense, Prop Disabled And Readonly, Prop Filled, Prop Hide Details, Prop Hint, Prop Icon, Prop Label, Prop Messages, Prop Outlined, Prop Placeholder, Prop Prefixes And Suffixes, Prop Rules, Prop Single Line, Prop Validation, Prop Variant, Slot Icons, Slot Label, Slot Progress",
    "display_content": "# v-guide\n\nThe `v-text-field` component is a versatile `<input type=\"text\">` field which combines both the `v-input` and `v-field` components into a single offering. It is a commonly used element that provides the baseline for other form inputs; such as [v-select](/components/selects/), [v-autocomplete](/components/autocompletes/), [v-combobox](/components/combobox/). In this guide you learn the basic fundamentals of `v-text-field` and how its various properties interact with each other.\n\nAvailable sections: Props, Labeling, Placeholders, Hints & messages, Clearable, Validation & rules, Forms, Examples, Custom colors, Density, Disabled and readonly, Hide details, Hint, Icons, Prefixes and suffixes, Validation, Variant, Icon events, Slots, Icon slots, Label, Progress, Custom validation, Full width with counter, Password input, Login Form, Event Icons, Usage, Misc Custom Validation, Misc Full Width With Counter, Misc Guide, Misc Login Form, Misc Password, Prop Clearable, Prop Contained, Prop Counter, Prop Custom Colors, Prop Dense, Prop Disabled And Readonly, Prop Filled, Prop Hide Details, Prop Hint, Prop Icon, Prop Label, Prop Messages, Prop Outlined, Prop Placeholder, Prop Prefixes And Suffixes, Prop Rules, Prop Single Line, Prop Validation, Prop Variant, Slot Icons, Slot Label, Slot Progress",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001457",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001458",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-text-field` component has an massive API with numerous options to modify the display, functionality, or style of your inputs. Many of the configurable options are also available through [slots](#slots).",
    "display_content": "## v-guide - Props\n\nThe `v-text-field` component has an massive API with numerous options to modify the display, functionality, or style of your inputs. Many of the configurable options are also available through [slots](#slots).",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001458",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001459",
    "text": "Component: v-guide\nSection: Labeling\nType: code_example\n\n## v-guide - Labeling\n\nThe **label** prop displays custom text for identifying an input's purpose. The following code snippet is an example of a basic `v-text-field` component:\n\n```html\n<v-text-field label=\"First name\"></v-text-field>\n```",
    "display_content": "## v-guide - Labeling\n\nThe **label** prop displays custom text for identifying an input's purpose. The following code snippet is an example of a basic `v-text-field` component:\n\n```html\n<v-text-field label=\"First name\"></v-text-field>\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Labeling",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001459",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001460",
    "text": "Component: v-guide\nSection: Placeholders\nType: code_example\n\n## v-guide - Placeholders\n\nSometimes a label alone doesn't convey enough information and you need to expose more. For those use-cases, use the **placeholder** property with or without the [label](#labeling) or [hint](#hint) properties.\n\nIn the following snippet, we improve the user experience of a `v-text-field` that is capturing an email address:\n\n```html\n<v-text-field\n  label=\"Email address\"\n  placeholder=\"johndoe@gmail.com\"\n  type=\"email\"\n></v-text-field>\n```",
    "display_content": "## v-guide - Placeholders\n\nSometimes a label alone doesn't convey enough information and you need to expose more. For those use-cases, use the **placeholder** property with or without the [label](#labeling) or [hint](#hint) properties.\n\nIn the following snippet, we improve the user experience of a `v-text-field` that is capturing an email address:\n\n```html\n<v-text-field\n  label=\"Email address\"\n  placeholder=\"johndoe@gmail.com\"\n  type=\"email\"\n></v-text-field>\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Placeholders",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001460",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001461",
    "text": "Component: v-guide\nSection: Hints & messages\nType: code_example\n\n## v-guide - Hints & messages\n\nThe **label** and **placeholder** props are useful for providing context to the input but are typically concise. For longer textual information, all Vuetify inputs contain a **details** section that is used to provide **hints**, regular **messages**, and **error-messages**. In the following example watch the custom hint message display when you focus the input:\n\n<ExamplesExample file=\"v-text-field/prop-messages\" open />\n\nIf you want to make the hint visible at all times, use the **persistent-hint** property. The following example demonstrates how to force a **hint** to show in the input's details:\n\n```html\n<v-text-field\n  hint=\"Enter your password to access this website\"\n  label=\"Password\"\n  persistent-hint\n  type=\"input\"\n></v-text-field>\n```",
    "display_content": "## v-guide - Hints & messages\n\nThe **label** and **placeholder** props are useful for providing context to the input but are typically concise. For longer textual information, all Vuetify inputs contain a **details** section that is used to provide **hints**, regular **messages**, and **error-messages**. In the following example watch the custom hint message display when you focus the input:\n\n<ExamplesExample file=\"v-text-field/prop-messages\" open />\n\nIf you want to make the hint visible at all times, use the **persistent-hint** property. The following example demonstrates how to force a **hint** to show in the input's details:\n\n```html\n<v-text-field\n  hint=\"Enter your password to access this website\"\n  label=\"Password\"\n  persistent-hint\n  type=\"input\"\n></v-text-field>\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Hints & messages",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001461",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001462",
    "text": "Component: v-guide\nSection: Validation & rules\nType: documentation\n\n## v-guide - Validation & rules\n\nWhen working with inputs you often need to validate the user's input in some manner; i.e. Email, Password. Use the **rules** property to invoke custom functions based upon the `v-text-field`'s state. It accepts an array of **functions** that return either `true` or a `string`. In the following example, enter a value into the field and then clear it:\n\n<ExamplesExample file=\"v-text-field/prop-rules\" open />",
    "display_content": "## v-guide - Validation & rules\n\nWhen working with inputs you often need to validate the user's input in some manner; i.e. Email, Password. Use the **rules** property to invoke custom functions based upon the `v-text-field`'s state. It accepts an array of **functions** that return either `true` or a `string`. In the following example, enter a value into the field and then clear it:\n\n<ExamplesExample file=\"v-text-field/prop-rules\" open />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Validation & rules",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001462",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001463",
    "text": "Component: v-guide\nSection: Forms\nType: documentation\n\n## v-guide - Forms\n\nGroup multiple `v-text-field` components and other functionality within a `v-form` component; for a more detailed look at forms, please visit the [v-form](/components/forms/) page. Forms are useful for validating more than 1 input and make it easy to interact with the state of many fields at once. The following example combines multiple `v-text-field` components to create a login form:\n\n<ExamplesExample file=\"v-text-field/misc-guide\" />",
    "display_content": "## v-guide - Forms\n\nGroup multiple `v-text-field` components and other functionality within a `v-form` component; for a more detailed look at forms, please visit the [v-form](/components/forms/) page. Forms are useful for validating more than 1 input and make it easy to interact with the state of many fields at once. The following example combines multiple `v-text-field` components to create a login form:\n\n<ExamplesExample file=\"v-text-field/misc-guide\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Forms",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001463",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001464",
    "text": "Component: v-guide\nSection: Examples\nType: code_example\n\n## v-guide - Examples\n\nThe following is a collection of `v-text-field` examples that demonstrate how different the properties work in an application.",
    "display_content": "## v-guide - Examples\n\nThe following is a collection of `v-text-field` examples that demonstrate how different the properties work in an application.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Examples",
      "content_type": "code_example",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001464",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001465",
    "text": "Component: v-guide\nSection: Custom colors\nType: documentation\n\n## v-guide - Custom colors\n\nThe **color** prop provides an easy way to change the color of textual content; label, prefix, suffix, etc. This color is applied as long as `v-text-field` is focused.\n\n<ExamplesExample file=\"v-text-field/prop-custom-colors\" />",
    "display_content": "## v-guide - Custom colors\n\nThe **color** prop provides an easy way to change the color of textual content; label, prefix, suffix, etc. This color is applied as long as `v-text-field` is focused.\n\n<ExamplesExample file=\"v-text-field/prop-custom-colors\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Custom colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001465",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001466",
    "text": "Component: v-guide\nSection: Density\nType: documentation\n\n## v-guide - Density\n\nThe **density** prop decreases the height of the text field based upon 1 of 3 levels of density; **default**, **comfortable**, and **compact**.\n\n<ExamplesExample file=\"v-text-field/prop-dense\" />",
    "display_content": "## v-guide - Density\n\nThe **density** prop decreases the height of the text field based upon 1 of 3 levels of density; **default**, **comfortable**, and **compact**.\n\n<ExamplesExample file=\"v-text-field/prop-dense\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Density",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001466",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001467",
    "text": "Component: v-guide\nSection: Disabled and readonly\nType: documentation\n\n## v-guide - Disabled and readonly\n\nThe state of a text field can be changed by providing the **disabled** or **readonly** props.\n\n<ExamplesExample file=\"v-text-field/prop-disabled-and-readonly\" />",
    "display_content": "## v-guide - Disabled and readonly\n\nThe state of a text field can be changed by providing the **disabled** or **readonly** props.\n\n<ExamplesExample file=\"v-text-field/prop-disabled-and-readonly\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Disabled and readonly",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001467",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001468",
    "text": "Component: v-guide\nSection: Hide details\nType: documentation\n\n## v-guide - Hide details\n\nWhen **hide-details** is set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.\n\n<ExamplesExample file=\"v-text-field/prop-hide-details\" />",
    "display_content": "## v-guide - Hide details\n\nWhen **hide-details** is set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.\n\n<ExamplesExample file=\"v-text-field/prop-hide-details\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Hide details",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001468",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001469",
    "text": "Component: v-guide\nSection: Hint\nType: documentation\n\n## v-guide - Hint\n\nThe **hint** property on text fields adds the provided string beneath the text field. Using **persistent-hint** keeps the hint visible when the text field is not focused.\n\n<ExamplesExample file=\"v-text-field/prop-hint\" />",
    "display_content": "## v-guide - Hint\n\nThe **hint** property on text fields adds the provided string beneath the text field. Using **persistent-hint** keeps the hint visible when the text field is not focused.\n\n<ExamplesExample file=\"v-text-field/prop-hint\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Hint",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001469",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001470",
    "text": "Component: v-guide\nSection: Icons\nType: documentation\n\n## v-guide - Icons\n\nYou can add icons to the text field with **prepend-icon**, **append-icon** and **append-inner-icon** props.\n\n<ExamplesExample file=\"v-text-field/prop-icon\" />",
    "display_content": "## v-guide - Icons\n\nYou can add icons to the text field with **prepend-icon**, **append-icon** and **append-inner-icon** props.\n\n<ExamplesExample file=\"v-text-field/prop-icon\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001470",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001471",
    "text": "Component: v-guide\nSection: Prefixes and suffixes\nType: documentation\n\n## v-guide - Prefixes and suffixes\n\nThe **prefix** and **suffix** properties allows you to prepend and append inline non-modifiable text next to the text field.\n\n<ExamplesExample file=\"v-text-field/prop-prefixes-and-suffixes\" />",
    "display_content": "## v-guide - Prefixes and suffixes\n\nThe **prefix** and **suffix** properties allows you to prepend and append inline non-modifiable text next to the text field.\n\n<ExamplesExample file=\"v-text-field/prop-prefixes-and-suffixes\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Prefixes and suffixes",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001471",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001472",
    "text": "Component: v-guide\nSection: Validation\nType: documentation\n\n## v-guide - Validation\n\nVuetify includes simple validation through the **rules** prop. The prop accepts a mixed array of types `function`, `boolean` and `string`. When the input value changes, each element in the array will be validated. Functions pass the current v-model as an argument and must return either `true` / `false` or a `string` containing an error message.\n\n<ExamplesExample file=\"v-text-field/prop-validation\" />",
    "display_content": "## v-guide - Validation\n\nVuetify includes simple validation through the **rules** prop. The prop accepts a mixed array of types `function`, `boolean` and `string`. When the input value changes, each element in the array will be validated. Functions pass the current v-model as an argument and must return either `true` / `false` or a `string` containing an error message.\n\n<ExamplesExample file=\"v-text-field/prop-validation\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Validation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001472",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001473",
    "text": "Component: v-guide\nSection: Variant\nType: documentation\n\n## v-guide - Variant\n\nThe **variant** prop provides an easy way to customize the style of your text field. The following values are valid options: **solo**, **filled**, **outlined**, **plain**, and **underlined**.\n\n<ExamplesExample file=\"v-text-field/prop-variant\" />",
    "display_content": "## v-guide - Variant\n\nThe **variant** prop provides an easy way to customize the style of your text field. The following values are valid options: **solo**, **filled**, **outlined**, **plain**, and **underlined**.\n\n<ExamplesExample file=\"v-text-field/prop-variant\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Variant",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001473",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001474",
    "text": "Component: v-guide\nSection: Icon events\nType: events_reference\n\n## v-guide - Icon events\n\n`click:prepend`, `click:append`, `click:append-inner`, and `click:clear` are emitted when you click on the respective icon. Note that these events will not be fired if the slot is used instead.\n\n<ExamplesExample file=\"v-text-field/event-icons\" />",
    "display_content": "## v-guide - Icon events\n\n`click:prepend`, `click:append`, `click:append-inner`, and `click:clear` are emitted when you click on the respective icon. Note that these events will not be fired if the slot is used instead.\n\n<ExamplesExample file=\"v-text-field/event-icons\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Icon events",
      "content_type": "events_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001474",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001475",
    "text": "Component: v-guide\nSection: Icon slots\nType: slots_reference\n\n## v-guide - Icon slots\n\nInstead of using `prepend`/`append`/`append-inner` icons you can use slots to extend input's functionality.\n\n<ExamplesExample file=\"v-text-field/slot-icons\" />",
    "display_content": "## v-guide - Icon slots\n\nInstead of using `prepend`/`append`/`append-inner` icons you can use slots to extend input's functionality.\n\n<ExamplesExample file=\"v-text-field/slot-icons\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Icon slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001475",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001476",
    "text": "Component: v-guide\nSection: Label\nType: documentation\n\n## v-guide - Label\n\nText field label can be defined in `label` slot - that will allow to use HTML content\n\n<ExamplesExample file=\"v-text-field/slot-label\" />",
    "display_content": "## v-guide - Label\n\nText field label can be defined in `label` slot - that will allow to use HTML content\n\n<ExamplesExample file=\"v-text-field/slot-label\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Label",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001476",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001477",
    "text": "Component: v-guide\nSection: Progress\nType: documentation\n\n## v-guide - Progress\n\nYou can display a progress bar instead of the bottom line. You can use the default indeterminate progress having same color as the text field or designate a custom one using the `progress` slot\n\n<ExamplesExample file=\"v-text-field/slot-progress\" />",
    "display_content": "## v-guide - Progress\n\nYou can display a progress bar instead of the bottom line. You can use the default indeterminate progress having same color as the text field or designate a custom one using the `progress` slot\n\n<ExamplesExample file=\"v-text-field/slot-progress\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Progress",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001477",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001478",
    "text": "Component: v-guide\nSection: Custom validation\nType: documentation\n\n## v-guide - Custom validation\n\nWhile the built in `v-form` or 3rd party plugin such as [vuelidate](https://github.com/monterail/vuelidate) or [vee-validation](https://github.com/logaretm/vee-validate) can help streamline your validation process, you can choose to simply control it yourself.\n\n<ExamplesExample file=\"v-text-field/misc-custom-validation\" />",
    "display_content": "## v-guide - Custom validation\n\nWhile the built in `v-form` or 3rd party plugin such as [vuelidate](https://github.com/monterail/vuelidate) or [vee-validation](https://github.com/logaretm/vee-validate) can help streamline your validation process, you can choose to simply control it yourself.\n\n<ExamplesExample file=\"v-text-field/misc-custom-validation\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Custom validation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001478",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001479",
    "text": "Component: v-guide\nSection: Full width with counter\nType: documentation\n\n## v-guide - Full width with counter\n\nFull width text fields allow you to create boundless inputs. In this example, we use a `v-divider` to separate the fields.\n\n<ExamplesExample file=\"v-text-field/misc-full-width-with-counter\" />",
    "display_content": "## v-guide - Full width with counter\n\nFull width text fields allow you to create boundless inputs. In this example, we use a `v-divider` to separate the fields.\n\n<ExamplesExample file=\"v-text-field/misc-full-width-with-counter\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Full width with counter",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001479",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001480",
    "text": "Component: v-guide\nSection: Password input\nType: documentation\n\n## v-guide - Password input\n\nUsing the HTML input **type** [password](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/password) can be used with an appended icon and callback to control the visibility.\n\n<ExamplesExample file=\"v-text-field/misc-password\" />",
    "display_content": "## v-guide - Password input\n\nUsing the HTML input **type** [password](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/password) can be used with an appended icon and callback to control the visibility.\n\n<ExamplesExample file=\"v-text-field/misc-password\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Password input",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001480",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001481",
    "text": "Component: v-guide\nSection: Login Form\nType: documentation\n\n## v-guide - Login Form\n\nIn this example we use a combination of prepend and append icon to create a custom login form.\n\n<ExamplesExample file=\"v-text-field/misc-login-form\" />",
    "display_content": "## v-guide - Login Form\n\nIn this example we use a combination of prepend and append icon to create a custom login form.\n\n<ExamplesExample file=\"v-text-field/misc-login-form\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Login Form",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001481",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001482",
    "text": "Component: v-guide\nSection: Event Icons\nType: code_example\n\n## v-guide - Event Icons\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-text-field\n            v-model=\"message\"\n            :append-icon=\"message ? 'mdi-send' : 'mdi-microphone'\"\n            :append-inner-icon=\"marker ? 'mdi-map-marker' : 'mdi-map-marker-off'\"\n            :prepend-icon=\"icon\"\n            clear-icon=\"mdi-close-circle\"\n            label=\"Message\"\n            type=\"text\"\n            variant=\"filled\"\n            clearable\n            @click:append=\"sendMessage\"\n            @click:append-inner=\"toggleMarker\"\n            @click:clear=\"clearMessage\"\n            @click:prepend=\"changeIcon\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const icons = [\n    'mdi-emoticon',\n    'mdi-emoticon-cool',\n    'mdi-emoticon-dead',\n    'mdi-emoticon-excited',\n    'mdi-emoticon-happy',\n    'mdi-emoticon-neutral',\n    'mdi-emoticon-sad',\n    'mdi-emoticon-tongue',\n  ]\n\n  const message = ref('Hey!')\n  const marker = ref(true)\n  const iconIndex = ref(0)\n\n  const icon = computed(() => {\n    return icons[iconIndex.value]\n  })\n  function toggleMarker () {\n    marker.value = !marker.value\n  }\n\n  function sendMessage () {\n    resetIcon()\n    clearMessage()\n  }\n  function clearMessage () {\n    message.value = ''\n  }\n  function resetIcon () {\n    iconIndex.value = 0\n  }\n  function changeIcon () {\n    iconIndex.value === icons.length - 1\n      ? iconIndex.value = 0\n      : iconIndex.value++\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      message: 'Hey!',\n      marker: true,\n      iconIndex: 0,\n      icons: [\n        'mdi-emoticon',\n        'mdi-emoticon-cool',\n        'mdi-emoticon-dead',\n        'mdi-emoticon-excited',\n        'mdi-emoticon-happy',\n        'mdi-emoticon-neutral',\n        'mdi-emoticon-sad',\n        'mdi-emoticon-tongue',\n      ],\n    }),\n\n    computed: {\n      icon () {\n        return this.icons[this.iconIndex]\n      },\n    },\n\n    methods: {\n      toggleMarker () {\n        this.marker = !this.marker\n      },\n      sendMessage () {\n        this.resetIcon()\n        this.clearMessage()\n      },\n      clearMessage () {\n        this.message = ''\n      },\n      resetIcon () {\n        this.iconIndex = 0\n      },\n      changeIcon () {\n        this.iconIndex === this.icons.length - 1\n          ? this.iconIndex = 0\n          : this.iconIndex++\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Event Icons\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-text-field\n            v-model=\"message\"\n            :append-icon=\"message ? 'mdi-send' : 'mdi-microphone'\"\n            :append-inner-icon=\"marker ? 'mdi-map-marker' : 'mdi-map-marker-off'\"\n            :prepend-icon=\"icon\"\n            clear-icon=\"mdi-close-circle\"\n            label=\"Message\"\n            type=\"text\"\n            variant=\"filled\"\n            clearable\n            @click:append=\"sendMessage\"\n            @click:append-inner=\"toggleMarker\"\n            @click:clear=\"clearMessage\"\n            @click:prepend=\"changeIcon\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const icons = [\n    'mdi-emoticon',\n    'mdi-emoticon-cool',\n    'mdi-emoticon-dead',\n    'mdi-emoticon-excited',\n    'mdi-emoticon-happy',\n    'mdi-emoticon-neutral',\n    'mdi-emoticon-sad',\n    'mdi-emoticon-tongue',\n  ]\n\n  const message = ref('Hey!')\n  const marker = ref(true)\n  const iconIndex = ref(0)\n\n  const icon = computed(() => {\n    return icons[iconIndex.value]\n  })\n  function toggleMarker () {\n    marker.value = !marker.value\n  }\n\n  function sendMessage () {\n    resetIcon()\n    clearMessage()\n  }\n  function clearMessage () {\n    message.value = ''\n  }\n  function resetIcon () {\n    iconIndex.value = 0\n  }\n  function changeIcon () {\n    iconIndex.value === icons.length - 1\n      ? iconIndex.value = 0\n      : iconIndex.value++\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      message: 'Hey!',\n      marker: true,\n      iconIndex: 0,\n      icons: [\n        'mdi-emoticon',\n        'mdi-emoticon-cool',\n        'mdi-emoticon-dead',\n        'mdi-emoticon-excited',\n        'mdi-emoticon-happy',\n        'mdi-emoticon-neutral',\n        'mdi-emoticon-sad',\n        'mdi-emoticon-tongue',\n      ],\n    }),\n\n    computed: {\n      icon () {\n        return this.icons[this.iconIndex]\n      },\n    },\n\n    methods: {\n      toggleMarker () {\n        this.marker = !this.marker\n      },\n      sendMessage () {\n        this.resetIcon()\n        this.clearMessage()\n      },\n      clearMessage () {\n        this.message = ''\n      },\n      resetIcon () {\n        this.iconIndex = 0\n      },\n      changeIcon () {\n        this.iconIndex === this.icons.length - 1\n          ? this.iconIndex = 0\n          : this.iconIndex++\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Event Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001482",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001483",
    "text": "Component: v-guide\nSection: Usage\nType: code_example\n\n## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-text-field v-bind=\"props\" v-model=\"field\"></v-text-field>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"label\" label=\"Label\"></v-text-field>\n\n      <v-checkbox v-model=\"prepend\" label=\"Prepend icon\"></v-checkbox>\n\n      <v-checkbox v-model=\"clearable\" label=\"Clearable\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-text-field'\n  const model = ref('default')\n  const clearable = ref(false)\n  const field = ref()\n  const label = ref('Label')\n  const prepend = ref(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clearable.value || undefined,\n      label: label.value,\n      'prepend-icon': prepend.value ? '$vuetify' : undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n\n  watch(clearable, () => {\n    if (!field.value) field.value = 'Hover to Clear me'\n  })\n</script>\n\n```",
    "display_content": "## v-guide - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-text-field v-bind=\"props\" v-model=\"field\"></v-text-field>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"label\" label=\"Label\"></v-text-field>\n\n      <v-checkbox v-model=\"prepend\" label=\"Prepend icon\"></v-checkbox>\n\n      <v-checkbox v-model=\"clearable\" label=\"Clearable\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-text-field'\n  const model = ref('default')\n  const clearable = ref(false)\n  const field = ref()\n  const label = ref('Label')\n  const prepend = ref(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clearable.value || undefined,\n      label: label.value,\n      'prepend-icon': prepend.value ? '$vuetify' : undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n\n  watch(clearable, () => {\n    if (!field.value) field.value = 'Hover to Clear me'\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001483",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001484",
    "text": "Component: v-guide\nSection: Misc Custom Validation\nType: code_example\n\n## v-guide - Misc Custom Validation\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-col\n      cols=\"12\"\n      lg=\"6\"\n      md=\"8\"\n      sm=\"10\"\n    >\n      <v-card ref=\"form\">\n        <v-card-text>\n          <v-text-field\n            ref=\"name\"\n            v-model=\"name\"\n            :error-messages=\"errorMessages\"\n            :rules=\"[() => !!name || 'This field is required']\"\n            label=\"Full Name\"\n            placeholder=\"John Doe\"\n            required\n          ></v-text-field>\n          <v-text-field\n            ref=\"address\"\n            v-model=\"address\"\n            :rules=\"[\n              () => !!address || 'This field is required',\n              () => !!address && address.length <= 25 || 'Address must be less than 25 characters',\n              addressCheck\n            ]\"\n            counter=\"25\"\n            label=\"Address Line\"\n            placeholder=\"Snowy Rock Pl\"\n            required\n          ></v-text-field>\n          <v-text-field\n            ref=\"city\"\n            v-model=\"city\"\n            :rules=\"[() => !!city || 'This field is required', addressCheck]\"\n            label=\"City\"\n            placeholder=\"El Paso\"\n            required\n          ></v-text-field>\n          <v-text-field\n            ref=\"state\"\n            v-model=\"state\"\n            :rules=\"[() => !!state || 'This field is required']\"\n            label=\"State/Province/Region\"\n            placeholder=\"TX\"\n            required\n          ></v-text-field>\n          <v-text-field\n            ref=\"zip\"\n            v-model=\"zip\"\n            :rules=\"[() => !!zip || 'This field is required']\"\n            label=\"ZIP / Postal Code\"\n            placeholder=\"79938\"\n            required\n          ></v-text-field>\n          <v-autocomplete\n            ref=\"country\"\n            v-model=\"country\"\n            :items=\"countries\"\n            :rules=\"[() => !!country || 'This field is required']\"\n            label=\"Country\"\n            placeholder=\"Select...\"\n            required\n          ></v-autocomplete>\n        </v-card-text>\n        <v-divider class=\"mt-12\"></v-divider>\n        <v-card-actions>\n          <v-btn variant=\"text\">\n            Cancel\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-slide-x-reverse-transition>\n            <v-tooltip\n              v-if=\"formHasErrors\"\n              location=\"left\"\n            >\n              <template v-slot:activator=\"{ props }\">\n                <v-btn\n                  icon\n                  v-bind=\"props\"\n                  @click=\"resetForm\"\n                >\n                  <v-icon>mdi-refresh</v-icon>\n                </v-btn>\n              </template>\n              <span>Refresh form</span>\n            </v-tooltip>\n          </v-slide-x-reverse-transition>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"submit\"\n          >\n            Submit\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      countries: ['Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Anguilla', 'Antigua &amp; Barbuda', 'Argentina', 'Armenia', 'Aruba', 'Australia', 'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin', 'Bermuda', 'Bhutan', 'Bolivia', 'Bosnia &amp; Herzegovina', 'Botswana', 'Brazil', 'British Virgin Islands', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi', 'Cambodia', 'Cameroon', 'Cape Verde', 'Cayman Islands', 'Chad', 'Chile', 'China', 'Colombia', 'Congo', 'Cook Islands', 'Costa Rica', 'Cote D Ivoire', 'Croatia', 'Cruise Ship', 'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt', 'El Salvador', 'Equatorial Guinea', 'Estonia', 'Ethiopia', 'Falkland Islands', 'Faroe Islands', 'Fiji', 'Finland', 'France', 'French Polynesia', 'French West Indies', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Gibraltar', 'Greece', 'Greenland', 'Grenada', 'Guam', 'Guatemala', 'Guernsey', 'Guinea', 'Guinea Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Isle of Man', 'Israel', 'Italy', 'Jamaica', 'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Kuwait', 'Kyrgyz Republic', 'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Macau', 'Macedonia', 'Madagascar', 'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Mauritania', 'Mauritius', 'Mexico', 'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Montserrat', 'Morocco', 'Mozambique', 'Namibia', 'Nepal', 'Netherlands', 'Netherlands Antilles', 'New Caledonia', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'Norway', 'Oman', 'Pakistan', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines', 'Poland', 'Portugal', 'Puerto Rico', 'Qatar', 'Reunion', 'Romania', 'Russia', 'Rwanda', 'Saint Pierre &amp; Miquelon', 'Samoa', 'San Marino', 'Satellite', 'Saudi Arabia', 'Senegal', 'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'South Africa', 'South Korea', 'Spain', 'Sri Lanka', 'St Kitts &amp; Nevis', 'St Lucia', 'St Vincent', 'St. Lucia', 'Sudan', 'Suriname', 'Swaziland', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', `Timor L'Este`, 'Togo', 'Tonga', 'Trinidad &amp; Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Turks &amp; Caicos', 'Uganda', 'Ukraine', 'United Arab Emirates', 'United Kingdom', 'United States', 'Uruguay', 'Uzbekistan', 'Venezuela', 'Vietnam', 'Virgin Islands (US)', 'Yemen', 'Zambia', 'Zimbabwe'],\n      errorMessages: '',\n      name: null,\n      address: null,\n      city: null,\n      state: null,\n      zip: null,\n      country: null,\n      formHasErrors: false,\n    }),\n\n    computed: {\n      form () {\n        return {\n          name: this.name,\n          address: this.address,\n          city: this.city,\n          state: this.state,\n          zip: this.zip,\n          country: this.country,\n        }\n      },\n    },\n\n    watch: {\n      name () {\n        this.errorMessages = ''\n      },\n    },\n\n    methods: {\n      addressCheck () {\n        this.errorMessages = this.address && !this.name\n          ? `Hey! I'm required`\n          : ''\n\n        return true\n      },\n      resetForm () {\n        this.errorMessages = []\n        this.formHasErrors = false\n\n        Object.keys(this.form).forEach(f => {\n          this.$refs[f].reset()\n        })\n      },\n      submit () {\n        this.formHasErrors = false\n\n        Object.keys(this.form).forEach(f => {\n          if (!this.form[f]) this.formHasErrors = true\n\n          this.$refs[f].validate(true)\n        })\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Custom Validation\n\n```vue\n<template>\n  <v-row justify=\"center\">\n    <v-col\n      cols=\"12\"\n      lg=\"6\"\n      md=\"8\"\n      sm=\"10\"\n    >\n      <v-card ref=\"form\">\n        <v-card-text>\n          <v-text-field\n            ref=\"name\"\n            v-model=\"name\"\n            :error-messages=\"errorMessages\"\n            :rules=\"[() => !!name || 'This field is required']\"\n            label=\"Full Name\"\n            placeholder=\"John Doe\"\n            required\n          ></v-text-field>\n          <v-text-field\n            ref=\"address\"\n            v-model=\"address\"\n            :rules=\"[\n              () => !!address || 'This field is required',\n              () => !!address && address.length <= 25 || 'Address must be less than 25 characters',\n              addressCheck\n            ]\"\n            counter=\"25\"\n            label=\"Address Line\"\n            placeholder=\"Snowy Rock Pl\"\n            required\n          ></v-text-field>\n          <v-text-field\n            ref=\"city\"\n            v-model=\"city\"\n            :rules=\"[() => !!city || 'This field is required', addressCheck]\"\n            label=\"City\"\n            placeholder=\"El Paso\"\n            required\n          ></v-text-field>\n          <v-text-field\n            ref=\"state\"\n            v-model=\"state\"\n            :rules=\"[() => !!state || 'This field is required']\"\n            label=\"State/Province/Region\"\n            placeholder=\"TX\"\n            required\n          ></v-text-field>\n          <v-text-field\n            ref=\"zip\"\n            v-model=\"zip\"\n            :rules=\"[() => !!zip || 'This field is required']\"\n            label=\"ZIP / Postal Code\"\n            placeholder=\"79938\"\n            required\n          ></v-text-field>\n          <v-autocomplete\n            ref=\"country\"\n            v-model=\"country\"\n            :items=\"countries\"\n            :rules=\"[() => !!country || 'This field is required']\"\n            label=\"Country\"\n            placeholder=\"Select...\"\n            required\n          ></v-autocomplete>\n        </v-card-text>\n        <v-divider class=\"mt-12\"></v-divider>\n        <v-card-actions>\n          <v-btn variant=\"text\">\n            Cancel\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-slide-x-reverse-transition>\n            <v-tooltip\n              v-if=\"formHasErrors\"\n              location=\"left\"\n            >\n              <template v-slot:activator=\"{ props }\">\n                <v-btn\n                  icon\n                  v-bind=\"props\"\n                  @click=\"resetForm\"\n                >\n                  <v-icon>mdi-refresh</v-icon>\n                </v-btn>\n              </template>\n              <span>Refresh form</span>\n            </v-tooltip>\n          </v-slide-x-reverse-transition>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"submit\"\n          >\n            Submit\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      countries: ['Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Anguilla', 'Antigua &amp; Barbuda', 'Argentina', 'Armenia', 'Aruba', 'Australia', 'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin', 'Bermuda', 'Bhutan', 'Bolivia', 'Bosnia &amp; Herzegovina', 'Botswana', 'Brazil', 'British Virgin Islands', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi', 'Cambodia', 'Cameroon', 'Cape Verde', 'Cayman Islands', 'Chad', 'Chile', 'China', 'Colombia', 'Congo', 'Cook Islands', 'Costa Rica', 'Cote D Ivoire', 'Croatia', 'Cruise Ship', 'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt', 'El Salvador', 'Equatorial Guinea', 'Estonia', 'Ethiopia', 'Falkland Islands', 'Faroe Islands', 'Fiji', 'Finland', 'France', 'French Polynesia', 'French West Indies', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Gibraltar', 'Greece', 'Greenland', 'Grenada', 'Guam', 'Guatemala', 'Guernsey', 'Guinea', 'Guinea Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Isle of Man', 'Israel', 'Italy', 'Jamaica', 'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Kuwait', 'Kyrgyz Republic', 'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Macau', 'Macedonia', 'Madagascar', 'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Mauritania', 'Mauritius', 'Mexico', 'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Montserrat', 'Morocco', 'Mozambique', 'Namibia', 'Nepal', 'Netherlands', 'Netherlands Antilles', 'New Caledonia', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'Norway', 'Oman', 'Pakistan', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines', 'Poland', 'Portugal', 'Puerto Rico', 'Qatar', 'Reunion', 'Romania', 'Russia', 'Rwanda', 'Saint Pierre &amp; Miquelon', 'Samoa', 'San Marino', 'Satellite', 'Saudi Arabia', 'Senegal', 'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'South Africa', 'South Korea', 'Spain', 'Sri Lanka', 'St Kitts &amp; Nevis', 'St Lucia', 'St Vincent', 'St. Lucia', 'Sudan', 'Suriname', 'Swaziland', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', `Timor L'Este`, 'Togo', 'Tonga', 'Trinidad &amp; Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Turks &amp; Caicos', 'Uganda', 'Ukraine', 'United Arab Emirates', 'United Kingdom', 'United States', 'Uruguay', 'Uzbekistan', 'Venezuela', 'Vietnam', 'Virgin Islands (US)', 'Yemen', 'Zambia', 'Zimbabwe'],\n      errorMessages: '',\n      name: null,\n      address: null,\n      city: null,\n      state: null,\n      zip: null,\n      country: null,\n      formHasErrors: false,\n    }),\n\n    computed: {\n      form () {\n        return {\n          name: this.name,\n          address: this.address,\n          city: this.city,\n          state: this.state,\n          zip: this.zip,\n          country: this.country,\n        }\n      },\n    },\n\n    watch: {\n      name () {\n        this.errorMessages = ''\n      },\n    },\n\n    methods: {\n      addressCheck () {\n        this.errorMessages = this.address && !this.name\n          ? `Hey! I'm required`\n          : ''\n\n        return true\n      },\n      resetForm () {\n        this.errorMessages = []\n        this.formHasErrors = false\n\n        Object.keys(this.form).forEach(f => {\n          this.$refs[f].reset()\n        })\n      },\n      submit () {\n        this.formHasErrors = false\n\n        Object.keys(this.form).forEach(f => {\n          if (!this.form[f]) this.formHasErrors = true\n\n          this.$refs[f].validate(true)\n        })\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Custom Validation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001484",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001485",
    "text": "Component: v-guide\nSection: Misc Full Width With Counter\nType: code_example\n\n## v-guide - Misc Full Width With Counter\n\n```vue\n<template>\n  <v-form>\n    <v-autocomplete\n      v-model=\"selected\"\n      :items=\"items\"\n      label=\"To\"\n      chips\n      hide-details\n      hide-no-data\n      hide-selected\n      multiple\n      single-line\n    ></v-autocomplete>\n\n    <v-divider></v-divider>\n\n    <v-text-field\n      v-model=\"subject\"\n      label=\"Subject\"\n      hide-details\n      single-line\n    ></v-text-field>\n\n    <v-divider></v-divider>\n\n    <v-textarea\n      v-model=\"title\"\n      label=\"Message\"\n      maxlength=\"120\"\n      counter\n      single-line\n    ></v-textarea>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ['Trevor Handsen', 'Alex Nelson']\n\n  const selected = ref(['Trevor Handsen'])\n  const subject = ref('Plans for the weekend')\n  const title = ref('Hi,\\nI just wanted to check in and see if you had any plans the upcoming weekend. We are thinking of heading up to Napa')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Trevor Handsen', 'Alex Nelson'],\n      selected: ['Trevor Handsen'],\n      subject: 'Plans for the weekend',\n      title: 'Hi,\\nI just wanted to check in and see if you had any plans the upcoming weekend. We are thinking of heading up to Napa',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Full Width With Counter\n\n```vue\n<template>\n  <v-form>\n    <v-autocomplete\n      v-model=\"selected\"\n      :items=\"items\"\n      label=\"To\"\n      chips\n      hide-details\n      hide-no-data\n      hide-selected\n      multiple\n      single-line\n    ></v-autocomplete>\n\n    <v-divider></v-divider>\n\n    <v-text-field\n      v-model=\"subject\"\n      label=\"Subject\"\n      hide-details\n      single-line\n    ></v-text-field>\n\n    <v-divider></v-divider>\n\n    <v-textarea\n      v-model=\"title\"\n      label=\"Message\"\n      maxlength=\"120\"\n      counter\n      single-line\n    ></v-textarea>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ['Trevor Handsen', 'Alex Nelson']\n\n  const selected = ref(['Trevor Handsen'])\n  const subject = ref('Plans for the weekend')\n  const title = ref('Hi,\\nI just wanted to check in and see if you had any plans the upcoming weekend. We are thinking of heading up to Napa')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: ['Trevor Handsen', 'Alex Nelson'],\n      selected: ['Trevor Handsen'],\n      subject: 'Plans for the weekend',\n      title: 'Hi,\\nI just wanted to check in and see if you had any plans the upcoming weekend. We are thinking of heading up to Napa',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Full Width With Counter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001485",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001486",
    "text": "Component: v-guide\nSection: Misc Guide\nType: code_example\n\n## v-guide - Misc Guide\n\n```vue\n<template>\n  <v-sheet class=\"bg-deep-purple pa-12\" rounded>\n    <v-card class=\"mx-auto px-6 py-8\" max-width=\"344\">\n      <v-form\n        v-model=\"form\"\n        @submit.prevent=\"onSubmit\"\n      >\n        <v-text-field\n          v-model=\"email\"\n          :readonly=\"loading\"\n          :rules=\"[required]\"\n          class=\"mb-2\"\n          label=\"Email\"\n          clearable\n        ></v-text-field>\n\n        <v-text-field\n          v-model=\"password\"\n          :readonly=\"loading\"\n          :rules=\"[required]\"\n          label=\"Password\"\n          placeholder=\"Enter your password\"\n          clearable\n        ></v-text-field>\n\n        <br>\n\n        <v-btn\n          :disabled=\"!form\"\n          :loading=\"loading\"\n          color=\"success\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"elevated\"\n          block\n        >\n          Sign In\n        </v-btn>\n      </v-form>\n    </v-card>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const form = ref(false)\n  const email = ref(null)\n  const password = ref(null)\n  const loading = ref(false)\n\n  function onSubmit () {\n    if (!form.value) return\n    loading.value = true\n    setTimeout(() => (loading.value = false), 2000)\n  }\n  function required (v) {\n    return !!v || 'Field is required'\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      form: false,\n      email: null,\n      password: null,\n      loading: false,\n    }),\n\n    methods: {\n      onSubmit () {\n        if (!this.form) return\n\n        this.loading = true\n\n        setTimeout(() => (this.loading = false), 2000)\n      },\n      required (v) {\n        return !!v || 'Field is required'\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Guide\n\n```vue\n<template>\n  <v-sheet class=\"bg-deep-purple pa-12\" rounded>\n    <v-card class=\"mx-auto px-6 py-8\" max-width=\"344\">\n      <v-form\n        v-model=\"form\"\n        @submit.prevent=\"onSubmit\"\n      >\n        <v-text-field\n          v-model=\"email\"\n          :readonly=\"loading\"\n          :rules=\"[required]\"\n          class=\"mb-2\"\n          label=\"Email\"\n          clearable\n        ></v-text-field>\n\n        <v-text-field\n          v-model=\"password\"\n          :readonly=\"loading\"\n          :rules=\"[required]\"\n          label=\"Password\"\n          placeholder=\"Enter your password\"\n          clearable\n        ></v-text-field>\n\n        <br>\n\n        <v-btn\n          :disabled=\"!form\"\n          :loading=\"loading\"\n          color=\"success\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"elevated\"\n          block\n        >\n          Sign In\n        </v-btn>\n      </v-form>\n    </v-card>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const form = ref(false)\n  const email = ref(null)\n  const password = ref(null)\n  const loading = ref(false)\n\n  function onSubmit () {\n    if (!form.value) return\n    loading.value = true\n    setTimeout(() => (loading.value = false), 2000)\n  }\n  function required (v) {\n    return !!v || 'Field is required'\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      form: false,\n      email: null,\n      password: null,\n      loading: false,\n    }),\n\n    methods: {\n      onSubmit () {\n        if (!this.form) return\n\n        this.loading = true\n\n        setTimeout(() => (this.loading = false), 2000)\n      },\n      required (v) {\n        return !!v || 'Field is required'\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Guide",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001486",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001487",
    "text": "Component: v-guide\nSection: Misc Login Form\nType: code_example\n\n## v-guide - Misc Login Form\n\n```vue\n<template>\n  <div>\n    <v-img\n      class=\"mx-auto my-6\"\n      max-width=\"228\"\n      src=\"https://cdn.vuetifyjs.com/docs/images/logos/vuetify-logo-v3-slim-text-light.svg\"\n    ></v-img>\n\n    <v-card\n      class=\"mx-auto pa-12 pb-8\"\n      elevation=\"8\"\n      max-width=\"448\"\n      rounded=\"lg\"\n    >\n      <div class=\"text-subtitle-1 text-medium-emphasis\">Account</div>\n\n      <v-text-field\n        density=\"compact\"\n        placeholder=\"Email address\"\n        prepend-inner-icon=\"mdi-email-outline\"\n        variant=\"outlined\"\n      ></v-text-field>\n\n      <div class=\"text-subtitle-1 text-medium-emphasis d-flex align-center justify-space-between\">\n        Password\n\n        <a\n          class=\"text-caption text-decoration-none text-blue\"\n          href=\"#\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Forgot login password?</a>\n      </div>\n\n      <v-text-field\n        :append-inner-icon=\"visible ? 'mdi-eye-off' : 'mdi-eye'\"\n        :type=\"visible ? 'text' : 'password'\"\n        density=\"compact\"\n        placeholder=\"Enter your password\"\n        prepend-inner-icon=\"mdi-lock-outline\"\n        variant=\"outlined\"\n        @click:append-inner=\"visible = !visible\"\n      ></v-text-field>\n\n      <v-card\n        class=\"mb-12\"\n        color=\"surface-variant\"\n        variant=\"tonal\"\n      >\n        <v-card-text class=\"text-medium-emphasis text-caption\">\n          Warning: After 3 consecutive failed login attempts, you account will be temporarily locked for three hours. If you must login now, you can also click \"Forgot login password?\" below to reset the login password.\n        </v-card-text>\n      </v-card>\n\n      <v-btn\n        class=\"mb-8\"\n        color=\"blue\"\n        size=\"large\"\n        variant=\"tonal\"\n        block\n      >\n        Log In\n      </v-btn>\n\n      <v-card-text class=\"text-center\">\n        <a\n          class=\"text-blue text-decoration-none\"\n          href=\"#\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Sign up now <v-icon icon=\"mdi-chevron-right\"></v-icon>\n        </a>\n      </v-card-text>\n    </v-card>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const visible = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      visible: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Login Form\n\n```vue\n<template>\n  <div>\n    <v-img\n      class=\"mx-auto my-6\"\n      max-width=\"228\"\n      src=\"https://cdn.vuetifyjs.com/docs/images/logos/vuetify-logo-v3-slim-text-light.svg\"\n    ></v-img>\n\n    <v-card\n      class=\"mx-auto pa-12 pb-8\"\n      elevation=\"8\"\n      max-width=\"448\"\n      rounded=\"lg\"\n    >\n      <div class=\"text-subtitle-1 text-medium-emphasis\">Account</div>\n\n      <v-text-field\n        density=\"compact\"\n        placeholder=\"Email address\"\n        prepend-inner-icon=\"mdi-email-outline\"\n        variant=\"outlined\"\n      ></v-text-field>\n\n      <div class=\"text-subtitle-1 text-medium-emphasis d-flex align-center justify-space-between\">\n        Password\n\n        <a\n          class=\"text-caption text-decoration-none text-blue\"\n          href=\"#\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Forgot login password?</a>\n      </div>\n\n      <v-text-field\n        :append-inner-icon=\"visible ? 'mdi-eye-off' : 'mdi-eye'\"\n        :type=\"visible ? 'text' : 'password'\"\n        density=\"compact\"\n        placeholder=\"Enter your password\"\n        prepend-inner-icon=\"mdi-lock-outline\"\n        variant=\"outlined\"\n        @click:append-inner=\"visible = !visible\"\n      ></v-text-field>\n\n      <v-card\n        class=\"mb-12\"\n        color=\"surface-variant\"\n        variant=\"tonal\"\n      >\n        <v-card-text class=\"text-medium-emphasis text-caption\">\n          Warning: After 3 consecutive failed login attempts, you account will be temporarily locked for three hours. If you must login now, you can also click \"Forgot login password?\" below to reset the login password.\n        </v-card-text>\n      </v-card>\n\n      <v-btn\n        class=\"mb-8\"\n        color=\"blue\"\n        size=\"large\"\n        variant=\"tonal\"\n        block\n      >\n        Log In\n      </v-btn>\n\n      <v-card-text class=\"text-center\">\n        <a\n          class=\"text-blue text-decoration-none\"\n          href=\"#\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Sign up now <v-icon icon=\"mdi-chevron-right\"></v-icon>\n        </a>\n      </v-card-text>\n    </v-card>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const visible = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      visible: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Login Form",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001487",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001488",
    "text": "Component: v-guide\nSection: Misc Password\nType: code_example\n\n## v-guide - Misc Password\n\n```vue\n<template>\n  <v-form>\n    <v-container fluid>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"password\"\n            :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n            :rules=\"[rules.required, rules.min]\"\n            :type=\"show1 ? 'text' : 'password'\"\n            hint=\"At least 8 characters\"\n            label=\"Normal with hint text\"\n            name=\"input-10-1\"\n            counter\n            @click:append=\"show1 = !show1\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            :append-icon=\"show2 ? 'mdi-eye' : 'mdi-eye-off'\"\n            :rules=\"[rules.required, rules.min]\"\n            :type=\"show2 ? 'text' : 'password'\"\n            class=\"input-group--focused\"\n            hint=\"At least 8 characters\"\n            label=\"Visible\"\n            name=\"input-10-2\"\n            @click:append=\"show2 = !show2\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = {\n    required: value => !!value || 'Required.',\n    min: v => v.length >= 8 || 'Min 8 characters',\n    emailMatch: () => (`The email and password you entered don't match`),\n  }\n\n  const show1 = ref(false)\n  const show2 = ref(true)\n  const password = ref('Password')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        show1: false,\n        show2: true,\n        password: 'Password',\n        rules: {\n          required: value => !!value || 'Required.',\n          min: v => v.length >= 8 || 'Min 8 characters',\n          emailMatch: () => (`The email and password you entered don't match`),\n        },\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Misc Password\n\n```vue\n<template>\n  <v-form>\n    <v-container fluid>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"password\"\n            :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n            :rules=\"[rules.required, rules.min]\"\n            :type=\"show1 ? 'text' : 'password'\"\n            hint=\"At least 8 characters\"\n            label=\"Normal with hint text\"\n            name=\"input-10-1\"\n            counter\n            @click:append=\"show1 = !show1\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            :append-icon=\"show2 ? 'mdi-eye' : 'mdi-eye-off'\"\n            :rules=\"[rules.required, rules.min]\"\n            :type=\"show2 ? 'text' : 'password'\"\n            class=\"input-group--focused\"\n            hint=\"At least 8 characters\"\n            label=\"Visible\"\n            name=\"input-10-2\"\n            @click:append=\"show2 = !show2\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = {\n    required: value => !!value || 'Required.',\n    min: v => v.length >= 8 || 'Min 8 characters',\n    emailMatch: () => (`The email and password you entered don't match`),\n  }\n\n  const show1 = ref(false)\n  const show2 = ref(true)\n  const password = ref('Password')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        show1: false,\n        show2: true,\n        password: 'Password',\n        rules: {\n          required: value => !!value || 'Required.',\n          min: v => v.length >= 8 || 'Min 8 characters',\n          emailMatch: () => (`The email and password you entered don't match`),\n        },\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Misc Password",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001488",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001489",
    "text": "Component: v-guide\nSection: Prop Clearable\nType: code_example\n\n## v-guide - Prop Clearable\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      v-model=\"model\"\n      hide-details=\"auto\"\n      label=\"Last name\"\n      clearable\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref('Leider')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: 'Leider',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Clearable\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      v-model=\"model\"\n      hide-details=\"auto\"\n      label=\"Last name\"\n      clearable\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const model = ref('Leider')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      model: 'Leider',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Clearable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001489",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001490",
    "text": "Component: v-guide\nSection: Prop Contained\nType: code_example\n\n## v-guide - Prop Contained\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"first\"\n            label=\"First Name\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"last\"\n            label=\"Last Name\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const first = ref('John')\n  const last = ref('Doe')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      first: 'John',\n      last: 'Doe',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Contained\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"first\"\n            label=\"First Name\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"last\"\n            label=\"Last Name\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const first = ref('John')\n  const last = ref('Doe')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      first: 'John',\n      last: 'Doe',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Contained",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001490",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001491",
    "text": "Component: v-guide\nSection: Prop Counter\nType: code_example\n\n## v-guide - Prop Counter\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"title\"\n            :rules=\"rules\"\n            counter=\"25\"\n            hint=\"This field uses counter prop\"\n            label=\"Regular\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"description\"\n            :rules=\"rules\"\n            hint=\"This field uses maxlength attribute\"\n            label=\"Limit exceeded\"\n            maxlength=\"25\"\n            counter\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"title\"\n            :counter-value=\"v => v.trim().split(' ').length\"\n            :rules=\"wordsRules\"\n            counter=\"5\"\n            hint=\"This field counts words instead of characters\"\n            label=\"Custom counter from prop\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"title\"\n            :rules=\"wordsRules\"\n            counter=\"5\"\n            hint=\"This field counts words instead of characters\"\n            label=\"Custom counter from slot\"\n          >\n            <template v-slot:counter=\"{ props }\">\n              <v-counter v-bind=\"props\" :value=\"title.trim().split(' ').length\"></v-counter>\n            </template>\n          </v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = [v => v.length <= 25 || 'Max 25 characters']\n  const wordsRules = [v => v.trim().split(' ').length <= 5 || 'Max 5 words']\n\n  const title = ref('Preliminary report')\n  const description = ref('California is a state in the western United States')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        title: 'Preliminary report',\n        description: 'California is a state in the western United States',\n        rules: [v => v.length <= 25 || 'Max 25 characters'],\n        wordsRules: [v => v.trim().split(' ').length <= 5 || 'Max 5 words'],\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Counter\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"title\"\n            :rules=\"rules\"\n            counter=\"25\"\n            hint=\"This field uses counter prop\"\n            label=\"Regular\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"description\"\n            :rules=\"rules\"\n            hint=\"This field uses maxlength attribute\"\n            label=\"Limit exceeded\"\n            maxlength=\"25\"\n            counter\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"title\"\n            :counter-value=\"v => v.trim().split(' ').length\"\n            :rules=\"wordsRules\"\n            counter=\"5\"\n            hint=\"This field counts words instead of characters\"\n            label=\"Custom counter from prop\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"title\"\n            :rules=\"wordsRules\"\n            counter=\"5\"\n            hint=\"This field counts words instead of characters\"\n            label=\"Custom counter from slot\"\n          >\n            <template v-slot:counter=\"{ props }\">\n              <v-counter v-bind=\"props\" :value=\"title.trim().split(' ').length\"></v-counter>\n            </template>\n          </v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = [v => v.length <= 25 || 'Max 25 characters']\n  const wordsRules = [v => v.trim().split(' ').length <= 5 || 'Max 5 words']\n\n  const title = ref('Preliminary report')\n  const description = ref('California is a state in the western United States')\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        title: 'Preliminary report',\n        description: 'California is a state in the western United States',\n        rules: [v => v.length <= 25 || 'Max 25 characters'],\n        wordsRules: [v => v.trim().split(' ').length <= 5 || 'Max 5 words'],\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Counter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001491",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001492",
    "text": "Component: v-guide\nSection: Prop Custom Colors\nType: code_example\n\n## v-guide - Prop Custom Colors\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    title=\"User Registration\"\n  >\n    <v-container>\n      <v-text-field\n        v-model=\"first\"\n        color=\"primary\"\n        label=\"First name\"\n        variant=\"underlined\"\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"last\"\n        color=\"primary\"\n        label=\"Last name\"\n        variant=\"underlined\"\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"email\"\n        color=\"primary\"\n        label=\"Email\"\n        variant=\"underlined\"\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"password\"\n        color=\"primary\"\n        label=\"Password\"\n        placeholder=\"Enter your password\"\n        variant=\"underlined\"\n      ></v-text-field>\n\n      <v-checkbox\n        v-model=\"terms\"\n        color=\"secondary\"\n        label=\"I agree to site terms and conditions\"\n      ></v-checkbox>\n    </v-container>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n\n      <v-btn color=\"success\">\n        Complete Registration\n\n        <v-icon icon=\"mdi-chevron-right\" end></v-icon>\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const first = ref(null)\n  const last = ref(null)\n  const email = ref(null)\n  const password = ref(null)\n  const terms = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      first: null,\n      last: null,\n      email: null,\n      password: null,\n      terms: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Custom Colors\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"344\"\n    title=\"User Registration\"\n  >\n    <v-container>\n      <v-text-field\n        v-model=\"first\"\n        color=\"primary\"\n        label=\"First name\"\n        variant=\"underlined\"\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"last\"\n        color=\"primary\"\n        label=\"Last name\"\n        variant=\"underlined\"\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"email\"\n        color=\"primary\"\n        label=\"Email\"\n        variant=\"underlined\"\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"password\"\n        color=\"primary\"\n        label=\"Password\"\n        placeholder=\"Enter your password\"\n        variant=\"underlined\"\n      ></v-text-field>\n\n      <v-checkbox\n        v-model=\"terms\"\n        color=\"secondary\"\n        label=\"I agree to site terms and conditions\"\n      ></v-checkbox>\n    </v-container>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-spacer></v-spacer>\n\n      <v-btn color=\"success\">\n        Complete Registration\n\n        <v-icon icon=\"mdi-chevron-right\" end></v-icon>\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const first = ref(null)\n  const last = ref(null)\n  const email = ref(null)\n  const password = ref(null)\n  const terms = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      first: null,\n      last: null,\n      email: null,\n      password: null,\n      terms: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Custom Colors",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001492",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001493",
    "text": "Component: v-guide\nSection: Prop Dense\nType: code_example\n\n## v-guide - Prop Dense\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"surface-light\"\n    max-width=\"400\"\n  >\n    <v-card-text>\n      <v-text-field\n        :loading=\"loading\"\n        append-inner-icon=\"mdi-magnify\"\n        density=\"compact\"\n        label=\"Search templates\"\n        variant=\"solo\"\n        hide-details\n        single-line\n        @click:append-inner=\"onClick\"\n      ></v-text-field>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const loaded = ref(false)\n  const loading = ref(false)\n\n  function onClick () {\n    loading.value = true\n    setTimeout(() => {\n      loading.value = false\n      loaded.value = true\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loaded: false,\n      loading: false,\n    }),\n\n    methods: {\n      onClick () {\n        this.loading = true\n\n        setTimeout(() => {\n          this.loading = false\n          this.loaded = true\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Dense\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    color=\"surface-light\"\n    max-width=\"400\"\n  >\n    <v-card-text>\n      <v-text-field\n        :loading=\"loading\"\n        append-inner-icon=\"mdi-magnify\"\n        density=\"compact\"\n        label=\"Search templates\"\n        variant=\"solo\"\n        hide-details\n        single-line\n        @click:append-inner=\"onClick\"\n      ></v-text-field>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const loaded = ref(false)\n  const loading = ref(false)\n\n  function onClick () {\n    loading.value = true\n    setTimeout(() => {\n      loading.value = false\n      loaded.value = true\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      loaded: false,\n      loading: false,\n    }),\n\n    methods: {\n      onClick () {\n        this.loading = true\n\n        setTimeout(() => {\n          this.loading = false\n          this.loaded = true\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Dense",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001493",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001494",
    "text": "Component: v-guide\nSection: Prop Disabled And Readonly\nType: code_example\n\n## v-guide - Prop Disabled And Readonly\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Regular\"\n            model-value=\"John Doe\"\n            disabled\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Regular\"\n            model-value=\"John Doe\"\n            readonly\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Solo\"\n            model-value=\"John Doe\"\n            variant=\"solo\"\n            disabled\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Solo\"\n            model-value=\"John Doe\"\n            variant=\"solo\"\n            readonly\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Outlined\"\n            model-value=\"John Doe\"\n            variant=\"outlined\"\n            disabled\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Outlined\"\n            model-value=\"John Doe\"\n            variant=\"outlined\"\n            readonly\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"underlined\"\n            model-value=\"John Doe\"\n            variant=\"underlined\"\n            disabled\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"underlined\"\n            model-value=\"John Doe\"\n            variant=\"underlined\"\n            readonly\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Disabled And Readonly\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Regular\"\n            model-value=\"John Doe\"\n            disabled\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Regular\"\n            model-value=\"John Doe\"\n            readonly\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Solo\"\n            model-value=\"John Doe\"\n            variant=\"solo\"\n            disabled\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Solo\"\n            model-value=\"John Doe\"\n            variant=\"solo\"\n            readonly\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Outlined\"\n            model-value=\"John Doe\"\n            variant=\"outlined\"\n            disabled\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Outlined\"\n            model-value=\"John Doe\"\n            variant=\"outlined\"\n            readonly\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"underlined\"\n            model-value=\"John Doe\"\n            variant=\"underlined\"\n            disabled\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"underlined\"\n            model-value=\"John Doe\"\n            variant=\"underlined\"\n            readonly\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Disabled And Readonly",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001494",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001495",
    "text": "Component: v-guide\nSection: Prop Filled\nType: code_example\n\n## v-guide - Prop Filled\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"first\"\n            label=\"First Name\"\n            variant=\"filled\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"last\"\n            label=\"Last Name\"\n            variant=\"filled\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const first = ref('John')\n  const last = ref('Doe')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      first: 'John',\n      last: 'Doe',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Filled\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"first\"\n            label=\"First Name\"\n            variant=\"filled\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"last\"\n            label=\"Last Name\"\n            variant=\"filled\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const first = ref('John')\n  const last = ref('Doe')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      first: 'John',\n      last: 'Doe',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Filled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001495",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001496",
    "text": "Component: v-guide\nSection: Prop Hide Details\nType: code_example\n\n## v-guide - Prop Hide Details\n\n```vue\n<template>\n  <div>\n    <v-text-field\n      :rules=\"rules\"\n      hide-details=\"auto\"\n      label=\"Main input\"\n    ></v-text-field>\n    <v-text-field label=\"Another input\"></v-text-field>\n  </div>\n</template>\n\n<script setup>\n  const rules = [\n    value => !!value || 'Required.',\n    value => (value && value.length >= 3) || 'Min 3 characters',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: [\n        value => !!value || 'Required.',\n        value => (value && value.length >= 3) || 'Min 3 characters',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Hide Details\n\n```vue\n<template>\n  <div>\n    <v-text-field\n      :rules=\"rules\"\n      hide-details=\"auto\"\n      label=\"Main input\"\n    ></v-text-field>\n    <v-text-field label=\"Another input\"></v-text-field>\n  </div>\n</template>\n\n<script setup>\n  const rules = [\n    value => !!value || 'Required.',\n    value => (value && value.length >= 3) || 'Min 3 characters',\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: [\n        value => !!value || 'Required.',\n        value => (value && value.length >= 3) || 'Min 3 characters',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Hide Details",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001496",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001497",
    "text": "Component: v-guide\nSection: Prop Hint\nType: code_example\n\n## v-guide - Prop Hint\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"For example, flowers or used cars\"\n            label=\"Your product or service\"\n            model-value=\"Grocery delivery\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"www.example.com/page\"\n            label=\"Your landing page\"\n            persistent-hint\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"For example, flowers or used cars\"\n            label=\"Your product or service\"\n            model-value=\"Grocery delivery\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"www.example.com/page\"\n            label=\"Your landing page\"\n            variant=\"solo\"\n            persistent-hint\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"For example, flowers or used cars\"\n            label=\"Your product or service\"\n            model-value=\"Grocery delivery\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"www.example.com/page\"\n            label=\"Your landing page\"\n            variant=\"outlined\"\n            persistent-hint\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Hint\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"For example, flowers or used cars\"\n            label=\"Your product or service\"\n            model-value=\"Grocery delivery\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"www.example.com/page\"\n            label=\"Your landing page\"\n            persistent-hint\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"For example, flowers or used cars\"\n            label=\"Your product or service\"\n            model-value=\"Grocery delivery\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"www.example.com/page\"\n            label=\"Your landing page\"\n            variant=\"solo\"\n            persistent-hint\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"For example, flowers or used cars\"\n            label=\"Your product or service\"\n            model-value=\"Grocery delivery\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            hint=\"www.example.com/page\"\n            label=\"Your landing page\"\n            variant=\"outlined\"\n            persistent-hint\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Hint",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001497",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001498",
    "text": "Component: v-guide\nSection: Prop Icon\nType: code_example\n\n## v-guide - Prop Icon\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Prepend\"\n            prepend-icon=\"mdi-map-marker\"\n          ></v-text-field>\n\n          <v-text-field\n            label=\"Prepend inner\"\n            prepend-inner-icon=\"mdi-map-marker\"\n          ></v-text-field>\n\n          <v-text-field\n            append-icon=\"mdi-map-marker\"\n            label=\"Append\"\n          ></v-text-field>\n\n          <v-text-field\n            append-inner-icon=\"mdi-map-marker\"\n            label=\"Append inner\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Prepend\"\n            prepend-icon=\"mdi-map-marker\"\n            variant=\"solo\"\n          ></v-text-field>\n\n          <v-text-field\n            label=\"Prepend inner\"\n            prepend-inner-icon=\"mdi-map-marker\"\n            variant=\"solo\"\n          ></v-text-field>\n\n          <v-text-field\n            append-icon=\"mdi-map-marker\"\n            label=\"Append\"\n            variant=\"solo\"\n          ></v-text-field>\n\n          <v-text-field\n            append-inner-icon=\"mdi-map-marker\"\n            label=\"Append inner\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Prepend\"\n            prepend-icon=\"mdi-map-marker\"\n            variant=\"outlined\"\n          ></v-text-field>\n\n          <v-text-field\n            label=\"Prepend inner\"\n            prepend-inner-icon=\"mdi-map-marker\"\n            variant=\"outlined\"\n          ></v-text-field>\n\n          <v-text-field\n            append-icon=\"mdi-map-marker\"\n            label=\"Append\"\n            variant=\"outlined\"\n          ></v-text-field>\n\n          <v-text-field\n            append-inner-icon=\"mdi-map-marker\"\n            label=\"Append inner\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Prepend\"\n            prepend-icon=\"mdi-map-marker\"\n            variant=\"underlined\"\n          ></v-text-field>\n\n          <v-text-field\n            label=\"Prepend inner\"\n            prepend-inner-icon=\"mdi-map-marker\"\n            variant=\"underlined\"\n          ></v-text-field>\n\n          <v-text-field\n            append-icon=\"mdi-map-marker\"\n            label=\"Append\"\n            variant=\"underlined\"\n          ></v-text-field>\n\n          <v-text-field\n            append-inner-icon=\"mdi-map-marker\"\n            label=\"Append inner\"\n            variant=\"underlined\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Icon\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Prepend\"\n            prepend-icon=\"mdi-map-marker\"\n          ></v-text-field>\n\n          <v-text-field\n            label=\"Prepend inner\"\n            prepend-inner-icon=\"mdi-map-marker\"\n          ></v-text-field>\n\n          <v-text-field\n            append-icon=\"mdi-map-marker\"\n            label=\"Append\"\n          ></v-text-field>\n\n          <v-text-field\n            append-inner-icon=\"mdi-map-marker\"\n            label=\"Append inner\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Prepend\"\n            prepend-icon=\"mdi-map-marker\"\n            variant=\"solo\"\n          ></v-text-field>\n\n          <v-text-field\n            label=\"Prepend inner\"\n            prepend-inner-icon=\"mdi-map-marker\"\n            variant=\"solo\"\n          ></v-text-field>\n\n          <v-text-field\n            append-icon=\"mdi-map-marker\"\n            label=\"Append\"\n            variant=\"solo\"\n          ></v-text-field>\n\n          <v-text-field\n            append-inner-icon=\"mdi-map-marker\"\n            label=\"Append inner\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Prepend\"\n            prepend-icon=\"mdi-map-marker\"\n            variant=\"outlined\"\n          ></v-text-field>\n\n          <v-text-field\n            label=\"Prepend inner\"\n            prepend-inner-icon=\"mdi-map-marker\"\n            variant=\"outlined\"\n          ></v-text-field>\n\n          <v-text-field\n            append-icon=\"mdi-map-marker\"\n            label=\"Append\"\n            variant=\"outlined\"\n          ></v-text-field>\n\n          <v-text-field\n            append-inner-icon=\"mdi-map-marker\"\n            label=\"Append inner\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Prepend\"\n            prepend-icon=\"mdi-map-marker\"\n            variant=\"underlined\"\n          ></v-text-field>\n\n          <v-text-field\n            label=\"Prepend inner\"\n            prepend-inner-icon=\"mdi-map-marker\"\n            variant=\"underlined\"\n          ></v-text-field>\n\n          <v-text-field\n            append-icon=\"mdi-map-marker\"\n            label=\"Append\"\n            variant=\"underlined\"\n          ></v-text-field>\n\n          <v-text-field\n            append-inner-icon=\"mdi-map-marker\"\n            label=\"Append inner\"\n            variant=\"underlined\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Icon",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001498",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001499",
    "text": "Component: v-guide\nSection: Prop Label\nType: code_example\n\n## v-guide - Prop Label\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      hide-details=\"auto\"\n      label=\"First name\"\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Label\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      hide-details=\"auto\"\n      label=\"First name\"\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Label",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001499",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001500",
    "text": "Component: v-guide\nSection: Prop Messages\nType: code_example\n\n## v-guide - Prop Messages\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      hint=\"Enter your password to access this website\"\n      label=\"Password\"\n      type=\"input\"\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Messages\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      hint=\"Enter your password to access this website\"\n      label=\"Password\"\n      type=\"input\"\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Messages",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001500",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001501",
    "text": "Component: v-guide\nSection: Prop Outlined\nType: code_example\n\n## v-guide - Prop Outlined\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"first\"\n            label=\"First Name\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"last\"\n            label=\"Last Name\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const first = ref('John')\n  const last = ref('Doe')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      first: 'John',\n      last: 'Doe',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Outlined\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"first\"\n            label=\"First Name\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"last\"\n            label=\"Last Name\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const first = ref('John')\n  const last = ref('Doe')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      first: 'John',\n      last: 'Doe',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Outlined",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001501",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001502",
    "text": "Component: v-guide\nSection: Prop Placeholder\nType: code_example\n\n## v-guide - Prop Placeholder\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      hide-details=\"auto\"\n      label=\"Email address\"\n      placeholder=\"johndoe@gmail.com\"\n      type=\"email\"\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Placeholder\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      hide-details=\"auto\"\n      label=\"Email address\"\n      placeholder=\"johndoe@gmail.com\"\n      type=\"email\"\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Placeholder",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001502",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001503",
    "text": "Component: v-guide\nSection: Prop Prefixes And Suffixes\nType: code_example\n\n## v-guide - Prop Prefixes And Suffixes\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row>\n      <v-col cols=\"4\">\n        <v-list-subheader>Prefix for dollar currency</v-list-subheader>\n      </v-col>\n\n      <v-col cols=\"8\">\n        <v-text-field\n          label=\"Amount\"\n          model-value=\"10.00\"\n          prefix=\"$\"\n        ></v-text-field>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"4\">\n        <v-list-subheader>Suffix for weight</v-list-subheader>\n      </v-col>\n\n      <v-col cols=\"8\">\n        <v-text-field\n          label=\"Weight\"\n          model-value=\"28.00\"\n          suffix=\"lbs\"\n        ></v-text-field>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"4\">\n        <v-list-subheader>Suffix for email domain</v-list-subheader>\n      </v-col>\n\n      <v-col cols=\"8\">\n        <v-text-field\n          label=\"Email address\"\n          model-value=\"example\"\n          suffix=\"@gmail.com\"\n        ></v-text-field>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"4\">\n        <v-list-subheader>Suffix for time zone</v-list-subheader>\n      </v-col>\n\n      <v-col cols=\"8\">\n        <v-text-field\n          label=\"Label Text\"\n          model-value=\"12:30:00\"\n          suffix=\"PST\"\n          type=\"time\"\n        ></v-text-field>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Prefixes And Suffixes\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row>\n      <v-col cols=\"4\">\n        <v-list-subheader>Prefix for dollar currency</v-list-subheader>\n      </v-col>\n\n      <v-col cols=\"8\">\n        <v-text-field\n          label=\"Amount\"\n          model-value=\"10.00\"\n          prefix=\"$\"\n        ></v-text-field>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"4\">\n        <v-list-subheader>Suffix for weight</v-list-subheader>\n      </v-col>\n\n      <v-col cols=\"8\">\n        <v-text-field\n          label=\"Weight\"\n          model-value=\"28.00\"\n          suffix=\"lbs\"\n        ></v-text-field>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"4\">\n        <v-list-subheader>Suffix for email domain</v-list-subheader>\n      </v-col>\n\n      <v-col cols=\"8\">\n        <v-text-field\n          label=\"Email address\"\n          model-value=\"example\"\n          suffix=\"@gmail.com\"\n        ></v-text-field>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"4\">\n        <v-list-subheader>Suffix for time zone</v-list-subheader>\n      </v-col>\n\n      <v-col cols=\"8\">\n        <v-text-field\n          label=\"Label Text\"\n          model-value=\"12:30:00\"\n          suffix=\"PST\"\n          type=\"time\"\n        ></v-text-field>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Prefixes And Suffixes",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001503",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001504",
    "text": "Component: v-guide\nSection: Prop Rules\nType: code_example\n\n## v-guide - Prop Rules\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      :rules=\"[rules.required]\"\n      label=\"Last name\"\n      clearable\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n<script setup>\n  const rules = {\n    required: value => !!value || 'Field is required',\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: {\n        required: value => !!value || 'Field is required',\n      },\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Rules\n\n```vue\n<template>\n  <v-responsive\n    class=\"mx-auto\"\n    max-width=\"344\"\n  >\n    <v-text-field\n      :rules=\"[rules.required]\"\n      label=\"Last name\"\n      clearable\n    ></v-text-field>\n  </v-responsive>\n</template>\n\n<script setup>\n  const rules = {\n    required: value => !!value || 'Field is required',\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: {\n        required: value => !!value || 'Field is required',\n      },\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Rules",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001504",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001505",
    "text": "Component: v-guide\nSection: Prop Single Line\nType: code_example\n\n## v-guide - Prop Single Line\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Regular\"\n            single-line\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Solo\"\n            variant=\"solo\"\n            single-line\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Filled\"\n            variant=\"filled\"\n            single-line\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Outlined\"\n            variant=\"outlined\"\n            single-line\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Single Line\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Regular\"\n            single-line\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Solo\"\n            variant=\"solo\"\n            single-line\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Filled\"\n            variant=\"filled\"\n            single-line\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Outlined\"\n            variant=\"outlined\"\n            single-line\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Single Line",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001505",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001506",
    "text": "Component: v-guide\nSection: Prop Validation\nType: code_example\n\n## v-guide - Prop Validation\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"title\"\n            :rules=\"[rules.required, rules.counter]\"\n            label=\"Title\"\n            maxlength=\"20\"\n            counter\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"email\"\n            :rules=\"[rules.required, rules.email]\"\n            label=\"E-mail\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const title = ref('Preliminary report')\n  const email = ref('')\n\n  const rules = {\n    required: value => !!value || 'Required.',\n    counter: value => value.length <= 20 || 'Max 20 characters',\n    email: value => {\n      const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      return pattern.test(value) || 'Invalid e-mail.'\n    },\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        title: 'Preliminary report',\n        email: '',\n        rules: {\n          required: value => !!value || 'Required.',\n          counter: value => value.length <= 20 || 'Max 20 characters',\n          email: value => {\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            return pattern.test(value) || 'Invalid e-mail.'\n          },\n        },\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Prop Validation\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"title\"\n            :rules=\"[rules.required, rules.counter]\"\n            label=\"Title\"\n            maxlength=\"20\"\n            counter\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <v-text-field\n            v-model=\"email\"\n            :rules=\"[rules.required, rules.email]\"\n            label=\"E-mail\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const title = ref('Preliminary report')\n  const email = ref('')\n\n  const rules = {\n    required: value => !!value || 'Required.',\n    counter: value => value.length <= 20 || 'Max 20 characters',\n    email: value => {\n      const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      return pattern.test(value) || 'Invalid e-mail.'\n    },\n  }\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        title: 'Preliminary report',\n        email: '',\n        rules: {\n          required: value => !!value || 'Required.',\n          counter: value => value.length <= 20 || 'Max 20 characters',\n          email: value => {\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            return pattern.test(value) || 'Invalid e-mail.'\n          },\n        },\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Validation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001506",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001507",
    "text": "Component: v-guide\nSection: Prop Variant\nType: code_example\n\n## v-guide - Prop Variant\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Regular\"\n            placeholder=\"Placeholder\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Solo\"\n            placeholder=\"Placeholder\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Filled\"\n            placeholder=\"Placeholder\"\n            variant=\"filled\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Outlined\"\n            placeholder=\"Placeholder\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Plain\"\n            placeholder=\"Placeholder\"\n            variant=\"plain\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Underlined\"\n            placeholder=\"Placeholder\"\n            variant=\"underlined\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "display_content": "## v-guide - Prop Variant\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Regular\"\n            placeholder=\"Placeholder\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Solo\"\n            placeholder=\"Placeholder\"\n            variant=\"solo\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Filled\"\n            placeholder=\"Placeholder\"\n            variant=\"filled\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Outlined\"\n            placeholder=\"Placeholder\"\n            variant=\"outlined\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Plain\"\n            placeholder=\"Placeholder\"\n            variant=\"plain\"\n          ></v-text-field>\n        </v-col>\n\n        <v-col\n          cols=\"12\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <v-text-field\n            label=\"Underlined\"\n            placeholder=\"Placeholder\"\n            variant=\"underlined\"\n          ></v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Prop Variant",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001507",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001508",
    "text": "Component: v-guide\nSection: Slot Icons\nType: code_example\n\n## v-guide - Slot Icons\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-text-field\n            v-model=\"message\"\n            label=\"Message\"\n            type=\"text\"\n            variant=\"outlined\"\n            clearable\n          >\n            <template v-slot:prepend>\n              <v-tooltip location=\"bottom\">\n                <template v-slot:activator=\"{ props }\">\n                  <v-icon v-bind=\"props\" icon=\"mdi-help-circle-outline\"></v-icon>\n                </template>\n\n                I'm a tooltip\n              </v-tooltip>\n            </template>\n\n            <template v-slot:append-inner>\n              <v-fade-transition leave-absolute>\n                <v-progress-circular\n                  v-if=\"loading\"\n                  color=\"info\"\n                  size=\"24\"\n                  indeterminate\n                ></v-progress-circular>\n\n                <img\n                  v-else\n                  alt=\"\"\n                  height=\"24\"\n                  src=\"https://cdn.vuetifyjs.com/images/logos/v-alt.svg\"\n                  width=\"24\"\n                >\n              </v-fade-transition>\n            </template>\n\n            <template v-slot:append>\n              <v-menu>\n                <template v-slot:activator=\"{ props }\">\n                  <v-btn v-bind=\"props\" class=\"mt-n2\">\n                    <v-icon icon=\"mdi-menu\" start></v-icon>\n\n                    Menu\n                  </v-btn>\n                </template>\n\n                <v-card>\n                  <v-card-text class=\"pa-6\">\n                    <v-btn\n                      color=\"primary\"\n                      size=\"large\"\n                      variant=\"text\"\n                      @click=\"clickMe\"\n                    >\n                      <v-icon icon=\"mdi-target\" start></v-icon>\n\n                      Click me\n                    </v-btn>\n                  </v-card-text>\n                </v-card>\n              </v-menu>\n            </template>\n          </v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const message = ref('Hey!')\n  const loading = ref(false)\n\n  function clickMe () {\n    loading.value = true\n    message.value = 'Wait for it...'\n    setTimeout(() => {\n      loading.value = false\n      message.value = `You've clicked me!`\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      message: 'Hey!',\n      loading: false,\n    }),\n\n    methods: {\n      clickMe () {\n        this.loading = true\n        this.message = 'Wait for it...'\n        setTimeout(() => {\n          this.loading = false\n          this.message = `You've clicked me!`\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Slot Icons\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-text-field\n            v-model=\"message\"\n            label=\"Message\"\n            type=\"text\"\n            variant=\"outlined\"\n            clearable\n          >\n            <template v-slot:prepend>\n              <v-tooltip location=\"bottom\">\n                <template v-slot:activator=\"{ props }\">\n                  <v-icon v-bind=\"props\" icon=\"mdi-help-circle-outline\"></v-icon>\n                </template>\n\n                I'm a tooltip\n              </v-tooltip>\n            </template>\n\n            <template v-slot:append-inner>\n              <v-fade-transition leave-absolute>\n                <v-progress-circular\n                  v-if=\"loading\"\n                  color=\"info\"\n                  size=\"24\"\n                  indeterminate\n                ></v-progress-circular>\n\n                <img\n                  v-else\n                  alt=\"\"\n                  height=\"24\"\n                  src=\"https://cdn.vuetifyjs.com/images/logos/v-alt.svg\"\n                  width=\"24\"\n                >\n              </v-fade-transition>\n            </template>\n\n            <template v-slot:append>\n              <v-menu>\n                <template v-slot:activator=\"{ props }\">\n                  <v-btn v-bind=\"props\" class=\"mt-n2\">\n                    <v-icon icon=\"mdi-menu\" start></v-icon>\n\n                    Menu\n                  </v-btn>\n                </template>\n\n                <v-card>\n                  <v-card-text class=\"pa-6\">\n                    <v-btn\n                      color=\"primary\"\n                      size=\"large\"\n                      variant=\"text\"\n                      @click=\"clickMe\"\n                    >\n                      <v-icon icon=\"mdi-target\" start></v-icon>\n\n                      Click me\n                    </v-btn>\n                  </v-card-text>\n                </v-card>\n              </v-menu>\n            </template>\n          </v-text-field>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-form>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const message = ref('Hey!')\n  const loading = ref(false)\n\n  function clickMe () {\n    loading.value = true\n    message.value = 'Wait for it...'\n    setTimeout(() => {\n      loading.value = false\n      message.value = `You've clicked me!`\n    }, 2000)\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      message: 'Hey!',\n      loading: false,\n    }),\n\n    methods: {\n      clickMe () {\n        this.loading = true\n        this.message = 'Wait for it...'\n        setTimeout(() => {\n          this.loading = false\n          this.message = `You've clicked me!`\n        }, 2000)\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Slot Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001508",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001509",
    "text": "Component: v-guide\nSection: Slot Label\nType: code_example\n\n## v-guide - Slot Label\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-text-field>\n        <template v-slot:label>\n          <span>\n            What about an <strong>icon</strong> here? <v-icon icon=\"mdi-file-find\"></v-icon>\n          </span>\n        </template>\n      </v-text-field>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "display_content": "## v-guide - Slot Label\n\n```vue\n<template>\n  <v-form>\n    <v-container>\n      <v-text-field>\n        <template v-slot:label>\n          <span>\n            What about an <strong>icon</strong> here? <v-icon icon=\"mdi-file-find\"></v-icon>\n          </span>\n        </template>\n      </v-text-field>\n    </v-container>\n  </v-form>\n</template>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Slot Label",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001509",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001510",
    "text": "Component: v-guide\nSection: Slot Progress\nType: code_example\n\n## v-guide - Slot Progress\n\n```vue\n<template>\n  <v-container fluid>\n    <v-checkbox-btn\n      v-model=\"custom\"\n      label=\"Loading\"\n    ></v-checkbox-btn>\n\n    <v-text-field\n      v-model=\"value\"\n      label=\"Type characters to change the loader color\"\n      placeholder=\"Start typing...\"\n      loading\n    >\n      <template v-slot:loader>\n        <v-progress-linear\n          :active=\"custom\"\n          :color=\"color\"\n          :model-value=\"progress\"\n          height=\"7\"\n          indeterminate\n        ></v-progress-linear>\n      </template>\n    </v-text-field>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const value = ref('')\n  const custom = ref(false)\n  const progress = computed(() => {\n    return Math.min(100, value.value.length * 10)\n  })\n  const color = computed(() => {\n    return ['error', 'warning', 'success'][Math.floor(progress.value / 40)]\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: '',\n      custom: false,\n    }),\n\n    computed: {\n      progress () {\n        return Math.min(100, this.value.length * 10)\n      },\n      color () {\n        return ['error', 'warning', 'success'][Math.floor(this.progress / 40)]\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-guide - Slot Progress\n\n```vue\n<template>\n  <v-container fluid>\n    <v-checkbox-btn\n      v-model=\"custom\"\n      label=\"Loading\"\n    ></v-checkbox-btn>\n\n    <v-text-field\n      v-model=\"value\"\n      label=\"Type characters to change the loader color\"\n      placeholder=\"Start typing...\"\n      loading\n    >\n      <template v-slot:loader>\n        <v-progress-linear\n          :active=\"custom\"\n          :color=\"color\"\n          :model-value=\"progress\"\n          height=\"7\"\n          indeterminate\n        ></v-progress-linear>\n      </template>\n    </v-text-field>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const value = ref('')\n  const custom = ref(false)\n  const progress = computed(() => {\n    return Math.min(100, value.value.length * 10)\n  })\n  const color = computed(() => {\n    return ['error', 'warning', 'success'][Math.floor(progress.value / 40)]\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: '',\n      custom: false,\n    }),\n\n    computed: {\n      progress () {\n        return Math.min(100, this.value.length * 10)\n      },\n      color () {\n        return ['error', 'warning', 'success'][Math.floor(this.progress / 40)]\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Slot Progress",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001510",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001511",
    "text": "Component: v-textareas\nType: component_overview\n\n# v-textareas\n\nTextarea components are used for collecting large amounts of textual data.",
    "display_content": "# v-textareas\n\nTextarea components are used for collecting large amounts of textual data.",
    "metadata": {
      "component": "v-textareas",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001511",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001512",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\n`v-textarea` in its simplest form is a multi-line text-field, useful for larger amounts of text.",
    "display_content": "# v-usage\n\n`v-textarea` in its simplest form is a multi-line text-field, useful for larger amounts of text.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001512",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001513",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-textarea](/api/v-textarea/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-textarea](/api/v-textarea/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001513",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001514",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nWhen using the `auto-grow` prop, textarea's will automatically increase in size when the contained text exceeds its size.\n\nAvailable sections: Auto grow, Background color, Browser autocomplete, Clearable, Counter, Icons, No resize, Rows, Signup form, Misc Signup Form, Prop Auto Grow, Prop Background Color, Prop Browser Autocomplete, Prop Clearable, Prop Counter, Prop Icons, Prop No Resize, Prop Rows, Usage",
    "display_content": "# v-examples\n\nWhen using the `auto-grow` prop, textarea's will automatically increase in size when the contained text exceeds its size.\n\nAvailable sections: Auto grow, Background color, Browser autocomplete, Clearable, Counter, Icons, No resize, Rows, Signup form, Misc Signup Form, Prop Auto Grow, Prop Background Color, Prop Browser Autocomplete, Prop Clearable, Prop Counter, Prop Icons, Prop No Resize, Prop Rows, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001514",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001515",
    "text": "Component: v-examples\nSection: Auto grow\nType: documentation\n\n## v-examples - Auto grow\n\nWhen using the `auto-grow` prop, textarea's will automatically increase in size when the contained text exceeds its size.\n\n<ExamplesExample file=\"v-textarea/prop-auto-grow\" />",
    "display_content": "## v-examples - Auto grow\n\nWhen using the `auto-grow` prop, textarea's will automatically increase in size when the contained text exceeds its size.\n\n<ExamplesExample file=\"v-textarea/prop-auto-grow\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Auto grow",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001515",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001516",
    "text": "Component: v-examples\nSection: Background color\nType: documentation\n\n## v-examples - Background color\n\nThe `bg-color` and `color` props give you more control over styling `v-textarea`'s.\n\n<ExamplesExample file=\"v-textarea/prop-background-color\" />",
    "display_content": "## v-examples - Background color\n\nThe `bg-color` and `color` props give you more control over styling `v-textarea`'s.\n\n<ExamplesExample file=\"v-textarea/prop-background-color\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Background color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001516",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001517",
    "text": "Component: v-examples\nSection: Browser autocomplete\nType: documentation\n\n## v-examples - Browser autocomplete\n\nThe `autocomplete` prop gives you the option to enable the browser to predict user input.\n\n<ExamplesExample file=\"v-textarea/prop-browser-autocomplete\" />",
    "display_content": "## v-examples - Browser autocomplete\n\nThe `autocomplete` prop gives you the option to enable the browser to predict user input.\n\n<ExamplesExample file=\"v-textarea/prop-browser-autocomplete\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Browser autocomplete",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001517",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001518",
    "text": "Component: v-examples\nSection: Clearable\nType: documentation\n\n## v-examples - Clearable\n\nYou can clear the text from a `v-textarea` by using the `clearable` prop, and customize the icon used with the `clearable-icon` prop.\n\n<ExamplesExample file=\"v-textarea/prop-clearable\" />",
    "display_content": "## v-examples - Clearable\n\nYou can clear the text from a `v-textarea` by using the `clearable` prop, and customize the icon used with the `clearable-icon` prop.\n\n<ExamplesExample file=\"v-textarea/prop-clearable\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Clearable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001518",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001519",
    "text": "Component: v-examples\nSection: Counter\nType: documentation\n\n## v-examples - Counter\n\nThe `counter` prop informs the user of a character limit for the `v-textarea`.\n\n<ExamplesExample file=\"v-textarea/prop-counter\" />",
    "display_content": "## v-examples - Counter\n\nThe `counter` prop informs the user of a character limit for the `v-textarea`.\n\n<ExamplesExample file=\"v-textarea/prop-counter\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Counter",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001519",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001520",
    "text": "Component: v-examples\nSection: Icons\nType: documentation\n\n## v-examples - Icons\n\nThe `append-icon` and `prepend-icon` props help add context to `v-textarea`.\n\n<ExamplesExample file=\"v-textarea/prop-icons\" />",
    "display_content": "## v-examples - Icons\n\nThe `append-icon` and `prepend-icon` props help add context to `v-textarea`.\n\n<ExamplesExample file=\"v-textarea/prop-icons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001520",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001521",
    "text": "Component: v-examples\nSection: No resize\nType: documentation\n\n## v-examples - No resize\n\n`v-textarea`'s have the option to remain the same size regardless of their content's size, using the `no-resize` prop.\n\n<ExamplesExample file=\"v-textarea/prop-no-resize\" />",
    "display_content": "## v-examples - No resize\n\n`v-textarea`'s have the option to remain the same size regardless of their content's size, using the `no-resize` prop.\n\n<ExamplesExample file=\"v-textarea/prop-no-resize\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "No resize",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001521",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001522",
    "text": "Component: v-examples\nSection: Rows\nType: documentation\n\n## v-examples - Rows\n\nThe `rows` prop allows you to define how many rows the textarea has, when combined with the `row-height` prop you can further customize your rows by defining their height.\n\n<ExamplesExample file=\"v-textarea/prop-rows\" />",
    "display_content": "## v-examples - Rows\n\nThe `rows` prop allows you to define how many rows the textarea has, when combined with the `row-height` prop you can further customize your rows by defining their height.\n\n<ExamplesExample file=\"v-textarea/prop-rows\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Rows",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001522",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001523",
    "text": "Component: v-examples\nSection: Signup form\nType: documentation\n\n## v-examples - Signup form\n\nUtilizing alternative input styles, you can create amazing interfaces that are easy to build and easy to use.\n\n<ExamplesExample file=\"v-textarea/misc-signup-form\" />",
    "display_content": "## v-examples - Signup form\n\nUtilizing alternative input styles, you can create amazing interfaces that are easy to build and easy to use.\n\n<ExamplesExample file=\"v-textarea/misc-signup-form\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Signup form",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001523",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001524",
    "text": "Component: v-examples\nSection: Misc Signup Form\nType: code_example\n\n## v-examples - Misc Signup Form\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    style=\"max-width: 500px;\"\n  >\n    <v-toolbar\n      color=\"deep-purple-accent-4\"\n      cards\n      dark\n      flat\n    >\n      <v-btn icon>\n        <v-icon>mdi-arrow-left</v-icon>\n      </v-btn>\n      <v-card-title class=\"text-h6 font-weight-regular\">\n        Sign up\n      </v-card-title>\n      <v-spacer></v-spacer>\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <v-form\n      ref=\"form\"\n      v-model=\"isValid\"\n      class=\"pa-4 pt-6\"\n    >\n      <v-text-field\n        v-model=\"password\"\n        :rules=\"[rules.password, rules.length(6)]\"\n        color=\"deep-purple\"\n        counter=\"6\"\n        label=\"Password\"\n        style=\"min-height: 96px\"\n        type=\"password\"\n        variant=\"filled\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"phone\"\n        color=\"deep-purple\"\n        label=\"Phone number\"\n        variant=\"filled\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"email\"\n        :rules=\"[rules.email]\"\n        color=\"deep-purple\"\n        label=\"Email address\"\n        type=\"email\"\n        variant=\"filled\"\n      ></v-text-field>\n      <v-textarea\n        v-model=\"bio\"\n        color=\"deep-purple\"\n        label=\"Bio\"\n        rows=\"1\"\n        variant=\"filled\"\n        auto-grow\n      ></v-textarea>\n      <v-checkbox\n        v-model=\"agreement\"\n        :rules=\"[rules.required]\"\n        color=\"deep-purple\"\n      >\n        <template v-slot:label>\n          I agree to the&nbsp;\n          <a\n            href=\"#\"\n            @click.stop.prevent=\"dialog = true\"\n          >Terms of Service</a>\n          &nbsp;and&nbsp;\n          <a\n            href=\"#\"\n            @click.stop.prevent=\"dialog = true\"\n          >Privacy Policy</a>*\n        </template>\n      </v-checkbox>\n    </v-form>\n    <v-divider></v-divider>\n    <v-card-actions>\n      <v-btn\n        variant=\"text\"\n        @click=\"form.reset()\"\n      >\n        Clear\n      </v-btn>\n      <v-spacer></v-spacer>\n      <v-btn\n        :disabled=\"!isValid\"\n        :loading=\"isLoading\"\n        color=\"deep-purple-accent-4\"\n      >\n        Submit\n      </v-btn>\n    </v-card-actions>\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"400\"\n      persistent\n    >\n      <v-card>\n        <v-card-title class=\"text-h5 bg-grey-lighten-3\">\n          Legal\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n        </v-card-text>\n        <v-divider></v-divider>\n        <v-card-actions>\n          <v-btn\n            variant=\"text\"\n            @click=\"agreement = false, dialog = false\"\n          >\n            No\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"deep-purple\"\n            variant=\"tonal\"\n            @click=\"agreement = true, dialog = false\"\n          >\n            Yes\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = {\n    email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\n    length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\n    password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) || 'Password must contain an upper case letter, a numeric character, and a special character',\n    required: v => !!v || 'This field is required',\n  }\n\n  const form = ref()\n\n  const agreement = ref(false)\n  const bio = ref('Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts')\n  const dialog = ref(false)\n  const email = ref()\n  const isValid = ref(false)\n  const isLoading = ref(false)\n  const password = ref()\n  const phone = ref()\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      agreement: false,\n      bio: 'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts',\n      dialog: false,\n      email: undefined,\n      isValid: false,\n      isLoading: false,\n      password: undefined,\n      phone: undefined,\n      rules: {\n        email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\n        length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\n        password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\n          'Password must contain an upper case letter, a numeric character, and a special character',\n        required: v => !!v || 'This field is required',\n      },\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Signup Form\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    style=\"max-width: 500px;\"\n  >\n    <v-toolbar\n      color=\"deep-purple-accent-4\"\n      cards\n      dark\n      flat\n    >\n      <v-btn icon>\n        <v-icon>mdi-arrow-left</v-icon>\n      </v-btn>\n      <v-card-title class=\"text-h6 font-weight-regular\">\n        Sign up\n      </v-card-title>\n      <v-spacer></v-spacer>\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <v-form\n      ref=\"form\"\n      v-model=\"isValid\"\n      class=\"pa-4 pt-6\"\n    >\n      <v-text-field\n        v-model=\"password\"\n        :rules=\"[rules.password, rules.length(6)]\"\n        color=\"deep-purple\"\n        counter=\"6\"\n        label=\"Password\"\n        style=\"min-height: 96px\"\n        type=\"password\"\n        variant=\"filled\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"phone\"\n        color=\"deep-purple\"\n        label=\"Phone number\"\n        variant=\"filled\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"email\"\n        :rules=\"[rules.email]\"\n        color=\"deep-purple\"\n        label=\"Email address\"\n        type=\"email\"\n        variant=\"filled\"\n      ></v-text-field>\n      <v-textarea\n        v-model=\"bio\"\n        color=\"deep-purple\"\n        label=\"Bio\"\n        rows=\"1\"\n        variant=\"filled\"\n        auto-grow\n      ></v-textarea>\n      <v-checkbox\n        v-model=\"agreement\"\n        :rules=\"[rules.required]\"\n        color=\"deep-purple\"\n      >\n        <template v-slot:label>\n          I agree to the&nbsp;\n          <a\n            href=\"#\"\n            @click.stop.prevent=\"dialog = true\"\n          >Terms of Service</a>\n          &nbsp;and&nbsp;\n          <a\n            href=\"#\"\n            @click.stop.prevent=\"dialog = true\"\n          >Privacy Policy</a>*\n        </template>\n      </v-checkbox>\n    </v-form>\n    <v-divider></v-divider>\n    <v-card-actions>\n      <v-btn\n        variant=\"text\"\n        @click=\"form.reset()\"\n      >\n        Clear\n      </v-btn>\n      <v-spacer></v-spacer>\n      <v-btn\n        :disabled=\"!isValid\"\n        :loading=\"isLoading\"\n        color=\"deep-purple-accent-4\"\n      >\n        Submit\n      </v-btn>\n    </v-card-actions>\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"400\"\n      persistent\n    >\n      <v-card>\n        <v-card-title class=\"text-h5 bg-grey-lighten-3\">\n          Legal\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n        </v-card-text>\n        <v-divider></v-divider>\n        <v-card-actions>\n          <v-btn\n            variant=\"text\"\n            @click=\"agreement = false, dialog = false\"\n          >\n            No\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"deep-purple\"\n            variant=\"tonal\"\n            @click=\"agreement = true, dialog = false\"\n          >\n            Yes\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = {\n    email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\n    length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\n    password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) || 'Password must contain an upper case letter, a numeric character, and a special character',\n    required: v => !!v || 'This field is required',\n  }\n\n  const form = ref()\n\n  const agreement = ref(false)\n  const bio = ref('Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts')\n  const dialog = ref(false)\n  const email = ref()\n  const isValid = ref(false)\n  const isLoading = ref(false)\n  const password = ref()\n  const phone = ref()\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      agreement: false,\n      bio: 'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts',\n      dialog: false,\n      email: undefined,\n      isValid: false,\n      isLoading: false,\n      password: undefined,\n      phone: undefined,\n      rules: {\n        email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\n        length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\n        password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\n          'Password must contain an upper case letter, a numeric character, and a special character',\n        required: v => !!v || 'This field is required',\n      },\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Signup Form",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001524",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001525",
    "text": "Component: v-examples\nSection: Prop Auto Grow\nType: code_example\n\n## v-examples - Prop Auto Grow\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      label=\"Label\"\n      model-value=\"The Woodman set to work at once, and so sharp was his axe that the tree was soon chopped nearly through.\"\n      name=\"input-7-1\"\n      variant=\"filled\"\n      auto-grow\n    ></v-textarea>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Auto Grow\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      label=\"Label\"\n      model-value=\"The Woodman set to work at once, and so sharp was his axe that the tree was soon chopped nearly through.\"\n      name=\"input-7-1\"\n      variant=\"filled\"\n      auto-grow\n    ></v-textarea>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Auto Grow",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001525",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001526",
    "text": "Component: v-examples\nSection: Prop Background Color\nType: code_example\n\n## v-examples - Prop Background Color\n\n```vue\n<template>\n  <v-container>\n    <v-textarea\n      bg-color=\"light-blue\"\n      color=\"black\"\n      label=\"Label\"\n    ></v-textarea>\n\n    <v-textarea\n      bg-color=\"grey-lighten-2\"\n      color=\"cyan\"\n      label=\"Label\"\n    ></v-textarea>\n\n    <v-textarea\n      bg-color=\"amber-lighten-4\"\n      color=\"orange orange-darken-4\"\n      label=\"Label\"\n    ></v-textarea>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Background Color\n\n```vue\n<template>\n  <v-container>\n    <v-textarea\n      bg-color=\"light-blue\"\n      color=\"black\"\n      label=\"Label\"\n    ></v-textarea>\n\n    <v-textarea\n      bg-color=\"grey-lighten-2\"\n      color=\"cyan\"\n      label=\"Label\"\n    ></v-textarea>\n\n    <v-textarea\n      bg-color=\"amber-lighten-4\"\n      color=\"orange orange-darken-4\"\n      label=\"Label\"\n    ></v-textarea>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Background Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001526",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001527",
    "text": "Component: v-examples\nSection: Prop Browser Autocomplete\nType: code_example\n\n## v-examples - Prop Browser Autocomplete\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      autocomplete=\"email\"\n      label=\"Email\"\n    ></v-textarea>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Browser Autocomplete\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      autocomplete=\"email\"\n      label=\"Email\"\n    ></v-textarea>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Browser Autocomplete",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001527",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001528",
    "text": "Component: v-examples\nSection: Prop Clearable\nType: code_example\n\n## v-examples - Prop Clearable\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      clear-icon=\"mdi-close-circle\"\n      label=\"Text\"\n      model-value=\"This is clearable text.\"\n      clearable\n    ></v-textarea>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Clearable\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      clear-icon=\"mdi-close-circle\"\n      label=\"Text\"\n      model-value=\"This is clearable text.\"\n      clearable\n    ></v-textarea>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Clearable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001528",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001529",
    "text": "Component: v-examples\nSection: Prop Counter\nType: code_example\n\n## v-examples - Prop Counter\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      :model-value=\"value\"\n      :rules=\"rules\"\n      label=\"Text\"\n      counter\n    ></v-textarea>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = [v => v.length <= 25 || 'Max 25 characters']\n\n  const value = ref('Hello!')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: [v => v.length <= 25 || 'Max 25 characters'],\n      value: 'Hello!',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Counter\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      :model-value=\"value\"\n      :rules=\"rules\"\n      label=\"Text\"\n      counter\n    ></v-textarea>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const rules = [v => v.length <= 25 || 'Max 25 characters']\n\n  const value = ref('Hello!')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      rules: [v => v.length <= 25 || 'Max 25 characters'],\n      value: 'Hello!',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Counter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001529",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001530",
    "text": "Component: v-examples\nSection: Prop Icons\nType: code_example\n\n## v-examples - Prop Icons\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          class=\"mx-2\"\n          label=\"prepend-icon\"\n          prepend-icon=\"mdi-comment\"\n          rows=\"1\"\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          append-icon=\"mdi-comment\"\n          class=\"mx-2\"\n          label=\"append-icon\"\n          rows=\"1\"\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          class=\"mx-2\"\n          label=\"prepend-inner-icon\"\n          prepend-inner-icon=\"mdi-comment\"\n          rows=\"1\"\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          append-inner-icon=\"mdi-comment\"\n          class=\"mx-2\"\n          label=\"append-inner-icon\"\n          rows=\"1\"\n        ></v-textarea>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Icons\n\n```vue\n<template>\n  <v-container>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          class=\"mx-2\"\n          label=\"prepend-icon\"\n          prepend-icon=\"mdi-comment\"\n          rows=\"1\"\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          append-icon=\"mdi-comment\"\n          class=\"mx-2\"\n          label=\"append-icon\"\n          rows=\"1\"\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          class=\"mx-2\"\n          label=\"prepend-inner-icon\"\n          prepend-inner-icon=\"mdi-comment\"\n          rows=\"1\"\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          append-inner-icon=\"mdi-comment\"\n          class=\"mx-2\"\n          label=\"append-inner-icon\"\n          rows=\"1\"\n        ></v-textarea>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001530",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001531",
    "text": "Component: v-examples\nSection: Prop No Resize\nType: code_example\n\n## v-examples - Prop No Resize\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      :model-value=\"value\"\n      label=\"Text\"\n      rows=\"1\"\n      no-resize\n    ></v-textarea>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop No Resize\n\n```vue\n<template>\n  <v-container fluid>\n    <v-textarea\n      :model-value=\"value\"\n      label=\"Text\"\n      rows=\"1\"\n      no-resize\n    ></v-textarea>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const value = ref('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.')\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      value: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop No Resize",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001531",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001532",
    "text": "Component: v-examples\nSection: Prop Rows\nType: code_example\n\n## v-examples - Prop Rows\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          label=\"One row\"\n          row-height=\"15\"\n          rows=\"1\"\n          variant=\"outlined\"\n          auto-grow\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          label=\"Two rows\"\n          row-height=\"20\"\n          rows=\"2\"\n          variant=\"filled\"\n          auto-grow\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          label=\"Three rows\"\n          row-height=\"25\"\n          rows=\"3\"\n          variant=\"outlined\"\n          auto-grow\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          label=\"Four rows\"\n          row-height=\"30\"\n          rows=\"4\"\n          variant=\"filled\"\n          auto-grow\n        ></v-textarea>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Rows\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          label=\"One row\"\n          row-height=\"15\"\n          rows=\"1\"\n          variant=\"outlined\"\n          auto-grow\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          label=\"Two rows\"\n          row-height=\"20\"\n          rows=\"2\"\n          variant=\"filled\"\n          auto-grow\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          label=\"Three rows\"\n          row-height=\"25\"\n          rows=\"3\"\n          variant=\"outlined\"\n          auto-grow\n        ></v-textarea>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n      >\n        <v-textarea\n          label=\"Four rows\"\n          row-height=\"30\"\n          rows=\"4\"\n          variant=\"filled\"\n          auto-grow\n        ></v-textarea>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rows",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001532",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001533",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-textarea v-bind=\"props\" v-model=\"field\" hide-details></v-textarea>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"label\" label=\"Label\"></v-text-field>\n\n      <v-checkbox v-model=\"prepend\" label=\"Prepend icon\"></v-checkbox>\n\n      <v-checkbox v-model=\"clearable\" label=\"Clearable\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-textarea'\n  const model = ref('default')\n  const clearable = ref(false)\n  const field = ref()\n  const label = ref('Label')\n  const prepend = ref(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clearable.value || undefined,\n      label: label.value,\n      'prepend-icon': prepend.value ? '$vuetify' : undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n\n  watch(clearable, () => {\n    if (!field.value) field.value = 'Hover to Clear me'\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-textarea v-bind=\"props\" v-model=\"field\" hide-details></v-textarea>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"label\" label=\"Label\"></v-text-field>\n\n      <v-checkbox v-model=\"prepend\" label=\"Prepend icon\"></v-checkbox>\n\n      <v-checkbox v-model=\"clearable\" label=\"Clearable\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-textarea'\n  const model = ref('default')\n  const clearable = ref(false)\n  const field = ref()\n  const label = ref('Label')\n  const prepend = ref(false)\n  const options = ['outlined', 'underlined', 'solo', 'solo-filled', 'solo-inverted']\n  const props = computed(() => {\n    return {\n      clearable: clearable.value || undefined,\n      label: label.value,\n      'prepend-icon': prepend.value ? '$vuetify' : undefined,\n      variant: model.value === 'default' ? undefined : model.value,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n\n  watch(clearable, () => {\n    if (!field.value) field.value = 'Hover to Clear me'\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001533",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001534",
    "text": "Component: v-theme-providers\nType: component_overview\n\n# v-theme-providers\n\nThe theme provider allows you to style a section of your application in a different theme from the default",
    "display_content": "# v-theme-providers\n\nThe theme provider allows you to style a section of your application in a different theme from the default",
    "metadata": {
      "component": "v-theme-providers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001534",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001535",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-theme-provider](/api/v-theme-provider/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-theme-provider](/api/v-theme-provider/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001535",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001536",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nBy default, `v-theme-provider` is a renderless component that allows you to change the applied theme for all of its children. When using the **with-background** prop, the `v-theme-provider` wraps its children in an element and applies the selected theme's background color to it.\n\nAvailable sections: Background, Prop With Background",
    "display_content": "# v-examples\n\nBy default, `v-theme-provider` is a renderless component that allows you to change the applied theme for all of its children. When using the **with-background** prop, the `v-theme-provider` wraps its children in an element and applies the selected theme's background color to it.\n\nAvailable sections: Background, Prop With Background",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001536",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001537",
    "text": "Component: v-examples\nSection: Background\nType: documentation\n\n## v-examples - Background\n\nBy default, `v-theme-provider` is a renderless component that allows you to change the applied theme for all of its children. When using the **with-background** prop, the `v-theme-provider` wraps its children in an element and applies the selected theme's background color to it.\n\n<ExamplesExample file=\"v-theme-provider/prop-with-background\" />",
    "display_content": "## v-examples - Background\n\nBy default, `v-theme-provider` is a renderless component that allows you to change the applied theme for all of its children. When using the **with-background** prop, the `v-theme-provider` wraps its children in an element and applies the selected theme's background color to it.\n\n<ExamplesExample file=\"v-theme-provider/prop-with-background\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Background",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001537",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001538",
    "text": "Component: v-examples\nSection: Prop With Background\nType: code_example\n\n## v-examples - Prop With Background\n\n```vue\n<template>\n  <v-theme-provider class=\"pa-10\" theme=\"dark\" with-background>\n    <v-card subtitle=\"Subtitle\" title=\"Title\"></v-card>\n  </v-theme-provider>\n</template>\n\n```",
    "display_content": "## v-examples - Prop With Background\n\n```vue\n<template>\n  <v-theme-provider class=\"pa-10\" theme=\"dark\" with-background>\n    <v-card subtitle=\"Subtitle\" title=\"Title\"></v-card>\n  </v-theme-provider>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop With Background",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001538",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001539",
    "text": "Component: v-time-pickers\nType: component_overview\n\n# v-time-pickers\n\nThe `v-time-picker` is stand-alone component that can be utilized in many existing Vuetify components. It offers the user a visual representation for selecting the time.",
    "display_content": "# v-time-pickers\n\nThe `v-time-picker` is stand-alone component that can be utilized in many existing Vuetify components. It offers the user a visual representation for selecting the time.",
    "metadata": {
      "component": "v-time-pickers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001539",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001540",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "display_content": "# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001540",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001541",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nTime pickers have the light theme enabled by default.",
    "display_content": "# v-usage\n\nTime pickers have the light theme enabled by default.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001541",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001542",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-time-picker](/api/v-time-picker/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-time-picker](/api/v-time-picker/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001542",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001543",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nYou can specify allowed times using arrays, objects, and functions. You can also specify time step/precision/interval - e.g. 10 minutes.\n\nAvailable sections: Allowed times, Colors, Disabled, Elevation, Format, No header, Range, Read-only, Scrollable, Use seconds, Dialog and menu, Misc Dialog And Menu, Prop Allowed Times, Prop Ampm In Title, Prop Color, Prop Disabled, Prop Elevation, Prop Format, Prop Hide Header, Prop Range, Prop Readonly, Prop Scrollable, Prop Use Seconds, Usage",
    "display_content": "# v-examples\n\nYou can specify allowed times using arrays, objects, and functions. You can also specify time step/precision/interval - e.g. 10 minutes.\n\nAvailable sections: Allowed times, Colors, Disabled, Elevation, Format, No header, Range, Read-only, Scrollable, Use seconds, Dialog and menu, Misc Dialog And Menu, Prop Allowed Times, Prop Ampm In Title, Prop Color, Prop Disabled, Prop Elevation, Prop Format, Prop Hide Header, Prop Range, Prop Readonly, Prop Scrollable, Prop Use Seconds, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001543",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001544",
    "text": "Component: v-examples\nSection: Allowed times\nType: documentation\n\n## v-examples - Allowed times\n\nYou can specify allowed times using arrays, objects, and functions. You can also specify time step/precision/interval - e.g. 10 minutes.\n\n<ExamplesExample file=\"v-time-picker/prop-allowed-times\" />",
    "display_content": "## v-examples - Allowed times\n\nYou can specify allowed times using arrays, objects, and functions. You can also specify time step/precision/interval - e.g. 10 minutes.\n\n<ExamplesExample file=\"v-time-picker/prop-allowed-times\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Allowed times",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001544",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001545",
    "text": "Component: v-examples\nSection: Colors\nType: documentation\n\n## v-examples - Colors\n\nTime picker colors can be set using the `color` and `header-color` props. If `header-color` prop is not provided  header will use the `color` prop value.\"\n\n<ExamplesExample file=\"v-time-picker/prop-color\" />",
    "display_content": "## v-examples - Colors\n\nTime picker colors can be set using the `color` and `header-color` props. If `header-color` prop is not provided  header will use the `color` prop value.\"\n\n<ExamplesExample file=\"v-time-picker/prop-color\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001545",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001546",
    "text": "Component: v-examples\nSection: Disabled\nType: documentation\n\n## v-examples - Disabled\n\nYou can't interact with disabled picker.\n\n<ExamplesExample file=\"v-time-picker/prop-disabled\" />",
    "display_content": "## v-examples - Disabled\n\nYou can't interact with disabled picker.\n\n<ExamplesExample file=\"v-time-picker/prop-disabled\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Disabled",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001546",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001547",
    "text": "Component: v-examples\nSection: Elevation\nType: documentation\n\n## v-examples - Elevation\n\nEmphasize the `v-time-picker` component by providing an **elevation** from 0 to 24. Elevation modifies the `box-shadow` css property.\n\n<ExamplesExample file=\"v-time-picker/prop-elevation\" />",
    "display_content": "## v-examples - Elevation\n\nEmphasize the `v-time-picker` component by providing an **elevation** from 0 to 24. Elevation modifies the `box-shadow` css property.\n\n<ExamplesExample file=\"v-time-picker/prop-elevation\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Elevation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001547",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001548",
    "text": "Component: v-examples\nSection: Format\nType: documentation\n\n## v-examples - Format\n\nA time picker can be switched to 24hr format. Note that the `format` prop defines only the way the picker is displayed, picker's value (model) is always in 24hr format.\n\n<ExamplesExample file=\"v-time-picker/prop-format\" />",
    "display_content": "## v-examples - Format\n\nA time picker can be switched to 24hr format. Note that the `format` prop defines only the way the picker is displayed, picker's value (model) is always in 24hr format.\n\n<ExamplesExample file=\"v-time-picker/prop-format\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Format",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001548",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001549",
    "text": "Component: v-examples\nSection: No header\nType: documentation\n\n## v-examples - No header\n\nYou can remove picker's header.\n\n<ExamplesExample file=\"v-time-picker/prop-hide-header\" />",
    "display_content": "## v-examples - No header\n\nYou can remove picker's header.\n\n<ExamplesExample file=\"v-time-picker/prop-hide-header\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "No header",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001549",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001550",
    "text": "Component: v-examples\nSection: Range\nType: documentation\n\n## v-examples - Range\n\nThis is an example of joining pickers together using `min` and `max` prop.\n\n<ExamplesExample file=\"v-time-picker/prop-range\" />",
    "display_content": "## v-examples - Range\n\nThis is an example of joining pickers together using `min` and `max` prop.\n\n<ExamplesExample file=\"v-time-picker/prop-range\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Range",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001550",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001551",
    "text": "Component: v-examples\nSection: Read-only\nType: documentation\n\n## v-examples - Read-only\n\nRead-only picker behaves same as disabled one, but looks like default one.\n\n<ExamplesExample file=\"v-time-picker/prop-readonly\" />",
    "display_content": "## v-examples - Read-only\n\nRead-only picker behaves same as disabled one, but looks like default one.\n\n<ExamplesExample file=\"v-time-picker/prop-readonly\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Read-only",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001551",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001552",
    "text": "Component: v-examples\nSection: Scrollable\nType: documentation\n\n## v-examples - Scrollable\n\nYou can edit time picker's value using mouse wheel.\n\n<ExamplesExample file=\"v-time-picker/prop-scrollable\" />",
    "display_content": "## v-examples - Scrollable\n\nYou can edit time picker's value using mouse wheel.\n\n<ExamplesExample file=\"v-time-picker/prop-scrollable\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Scrollable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001552",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001553",
    "text": "Component: v-examples\nSection: Use seconds\nType: documentation\n\n## v-examples - Use seconds\n\nTime picker can have seconds input.\n\n<ExamplesExample file=\"v-time-picker/prop-use-seconds\" />",
    "display_content": "## v-examples - Use seconds\n\nTime picker can have seconds input.\n\n<ExamplesExample file=\"v-time-picker/prop-use-seconds\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Use seconds",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001553",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001554",
    "text": "Component: v-examples\nSection: Dialog and menu\nType: documentation\n\n## v-examples - Dialog and menu\n\nDue to the flexibility of pickers, you can really dial in the experience exactly how you want it.\n\n<ExamplesExample file=\"v-time-picker/misc-dialog-and-menu\" />",
    "display_content": "## v-examples - Dialog and menu\n\nDue to the flexibility of pickers, you can really dial in the experience exactly how you want it.\n\n<ExamplesExample file=\"v-time-picker/misc-dialog-and-menu\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dialog and menu",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001554",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001555",
    "text": "Component: v-examples\nSection: Misc Dialog And Menu\nType: code_example\n\n## v-examples - Misc Dialog And Menu\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-col\n        cols=\"11\"\n        sm=\"5\"\n      >\n        <v-text-field\n          v-model=\"time\"\n          :active=\"menu2\"\n          :focus=\"menu2\"\n          label=\"Picker in menu\"\n          prepend-icon=\"mdi-clock-time-four-outline\"\n          readonly\n        >\n          <v-menu\n            v-model=\"menu2\"\n            :close-on-content-click=\"false\"\n            activator=\"parent\"\n            transition=\"scale-transition\"\n          >\n            <v-time-picker\n              v-if=\"menu2\"\n              v-model=\"time\"\n              full-width\n            ></v-time-picker>\n          </v-menu>\n        </v-text-field>\n      </v-col>\n\n      <v-col\n        cols=\"11\"\n        sm=\"5\"\n      >\n        <v-text-field\n          v-model=\"time\"\n          :active=\"modal2\"\n          :focused=\"modal2\"\n          label=\"Picker in dialog\"\n          prepend-icon=\"mdi-clock-time-four-outline\"\n          readonly\n        >\n          <v-dialog\n            v-model=\"modal2\"\n            activator=\"parent\"\n            width=\"auto\"\n          >\n            <v-time-picker\n              v-if=\"modal2\"\n              v-model=\"time\"\n            ></v-time-picker>\n          </v-dialog>\n        </v-text-field>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const time = ref(null)\n  const menu2 = ref(false)\n  const modal2 = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        time: null,\n        menu2: false,\n        modal2: false,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Dialog And Menu\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-col\n        cols=\"11\"\n        sm=\"5\"\n      >\n        <v-text-field\n          v-model=\"time\"\n          :active=\"menu2\"\n          :focus=\"menu2\"\n          label=\"Picker in menu\"\n          prepend-icon=\"mdi-clock-time-four-outline\"\n          readonly\n        >\n          <v-menu\n            v-model=\"menu2\"\n            :close-on-content-click=\"false\"\n            activator=\"parent\"\n            transition=\"scale-transition\"\n          >\n            <v-time-picker\n              v-if=\"menu2\"\n              v-model=\"time\"\n              full-width\n            ></v-time-picker>\n          </v-menu>\n        </v-text-field>\n      </v-col>\n\n      <v-col\n        cols=\"11\"\n        sm=\"5\"\n      >\n        <v-text-field\n          v-model=\"time\"\n          :active=\"modal2\"\n          :focused=\"modal2\"\n          label=\"Picker in dialog\"\n          prepend-icon=\"mdi-clock-time-four-outline\"\n          readonly\n        >\n          <v-dialog\n            v-model=\"modal2\"\n            activator=\"parent\"\n            width=\"auto\"\n          >\n            <v-time-picker\n              v-if=\"modal2\"\n              v-model=\"time\"\n            ></v-time-picker>\n          </v-dialog>\n        </v-text-field>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const time = ref(null)\n  const menu2 = ref(false)\n  const modal2 = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        time: null,\n        menu2: false,\n        modal2: false,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Dialog And Menu",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001555",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001556",
    "text": "Component: v-examples\nSection: Prop Allowed Times\nType: code_example\n\n## v-examples - Prop Allowed Times\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-time-picker\n        v-model=\"time\"\n        :allowed-hours=\"allowedHours\"\n        :allowed-minutes=\"allowedMinutes\"\n        format=\"24hr\"\n        max=\"22:15\"\n        min=\"9:30\"\n        scrollable\n      ></v-time-picker>\n\n      <v-time-picker\n        v-model=\"timeStep\"\n        :allowed-minutes=\"allowedStep\"\n        format=\"24hr\"\n      ></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const time = ref('11:15')\n  const timeStep = ref('10:10')\n\n  const allowedHours = v => v % 2\n  const allowedMinutes = v => v >= 10 && v <= 50\n  const allowedStep = m => m % 10 === 0\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        time: '11:15',\n        timeStep: '10:10',\n      }\n    },\n    methods: {\n      allowedHours: v => v % 2,\n      allowedMinutes: v => v >= 10 && v <= 50,\n      allowedStep: m => m % 10 === 0,\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Allowed Times\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-time-picker\n        v-model=\"time\"\n        :allowed-hours=\"allowedHours\"\n        :allowed-minutes=\"allowedMinutes\"\n        format=\"24hr\"\n        max=\"22:15\"\n        min=\"9:30\"\n        scrollable\n      ></v-time-picker>\n\n      <v-time-picker\n        v-model=\"timeStep\"\n        :allowed-minutes=\"allowedStep\"\n        format=\"24hr\"\n      ></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const time = ref('11:15')\n  const timeStep = ref('10:10')\n\n  const allowedHours = v => v % 2\n  const allowedMinutes = v => v >= 10 && v <= 50\n  const allowedStep = m => m % 10 === 0\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        time: '11:15',\n        timeStep: '10:10',\n      }\n    },\n    methods: {\n      allowedHours: v => v % 2,\n      allowedMinutes: v => v >= 10 && v <= 50,\n      allowedStep: m => m % 10 === 0,\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Allowed Times",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001556",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001557",
    "text": "Component: v-examples\nSection: Prop Ampm In Title\nType: code_example\n\n## v-examples - Prop Ampm In Title\n\n```vue\n<template>\n  <v-row\n\n    align=\"center\"\n    justify=\"space-around\"\n  >\n    <v-time-picker\n      v-model=\"picker\"\n      ampm-in-title\n    ></v-time-picker>\n    <v-time-picker\n      v-model=\"picker\"\n      :landscape=\"$vuetify.display.smAndUp\"\n      ampm-in-title\n    ></v-time-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: null,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Ampm In Title\n\n```vue\n<template>\n  <v-row\n\n    align=\"center\"\n    justify=\"space-around\"\n  >\n    <v-time-picker\n      v-model=\"picker\"\n      ampm-in-title\n    ></v-time-picker>\n    <v-time-picker\n      v-model=\"picker\"\n      :landscape=\"$vuetify.display.smAndUp\"\n      ampm-in-title\n    ></v-time-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: null,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Ampm In Title",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001557",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001558",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-time-picker\n        color=\"green-lighten-1\"\n      ></v-time-picker>\n\n      <v-time-picker\n        color=\"pink\"\n        header-color=\"primary\"\n      ></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"space-around\">\n      <v-time-picker\n        color=\"green-lighten-1\"\n      ></v-time-picker>\n\n      <v-time-picker\n        color=\"pink\"\n        header-color=\"primary\"\n      ></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001558",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001559",
    "text": "Component: v-examples\nSection: Prop Disabled\nType: code_example\n\n## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    justify=\"space-around\"\n  >\n    <v-time-picker\n      v-model=\"picker\"\n      disabled\n    ></v-time-picker>\n    <v-time-picker\n      v-model=\"picker\"\n      :landscape=\"$vuetify.display.smAndUp\"\n      disabled\n    ></v-time-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: null,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Disabled\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    justify=\"space-around\"\n  >\n    <v-time-picker\n      v-model=\"picker\"\n      disabled\n    ></v-time-picker>\n    <v-time-picker\n      v-model=\"picker\"\n      :landscape=\"$vuetify.display.smAndUp\"\n      disabled\n    ></v-time-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: null,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Disabled",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001559",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001560",
    "text": "Component: v-examples\nSection: Prop Elevation\nType: code_example\n\n## v-examples - Prop Elevation\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker\n        elevation=\"15\"\n      ></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Elevation\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker\n        elevation=\"15\"\n      ></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Elevation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001560",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001561",
    "text": "Component: v-examples\nSection: Prop Format\nType: code_example\n\n## v-examples - Prop Format\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker format=\"24hr\"></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Format\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker format=\"24hr\"></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Format",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001561",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001562",
    "text": "Component: v-examples\nSection: Prop Hide Header\nType: code_example\n\n## v-examples - Prop Hide Header\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker hide-header></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Hide Header\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker hide-header></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hide Header",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001562",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001563",
    "text": "Component: v-examples\nSection: Prop Range\nType: code_example\n\n## v-examples - Prop Range\n\n```vue\n<template>\n  <div>\n    <h1>Plan your event:</h1>\n    <v-row\n      align=\"center\"\n      justify=\"space-around\"\n    >\n      <v-col style=\"width: 350px; flex: 0 1 auto;\">\n        <h2>Start:</h2>\n        <v-time-picker\n          v-model=\"start\"\n          :max=\"end\"\n        ></v-time-picker>\n      </v-col>\n      <v-col style=\"width: 350px; flex: 0 1 auto;\">\n        <h2>End:</h2>\n        <v-time-picker\n          v-model=\"end\"\n          :min=\"start\"\n        ></v-time-picker>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const start = ref(null)\n  const end = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        start: null,\n        end: null,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Range\n\n```vue\n<template>\n  <div>\n    <h1>Plan your event:</h1>\n    <v-row\n      align=\"center\"\n      justify=\"space-around\"\n    >\n      <v-col style=\"width: 350px; flex: 0 1 auto;\">\n        <h2>Start:</h2>\n        <v-time-picker\n          v-model=\"start\"\n          :max=\"end\"\n        ></v-time-picker>\n      </v-col>\n      <v-col style=\"width: 350px; flex: 0 1 auto;\">\n        <h2>End:</h2>\n        <v-time-picker\n          v-model=\"end\"\n          :min=\"start\"\n        ></v-time-picker>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const start = ref(null)\n  const end = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        start: null,\n        end: null,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Range",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001563",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001564",
    "text": "Component: v-examples\nSection: Prop Readonly\nType: code_example\n\n## v-examples - Prop Readonly\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker readonly></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Readonly\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker readonly></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Readonly",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001564",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001565",
    "text": "Component: v-examples\nSection: Prop Scrollable\nType: code_example\n\n## v-examples - Prop Scrollable\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    justify=\"space-around\"\n  >\n    <v-time-picker\n      v-model=\"picker\"\n      scrollable\n    ></v-time-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: null,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Scrollable\n\n```vue\n<template>\n  <v-row\n    align=\"center\"\n    justify=\"space-around\"\n  >\n    <v-time-picker\n      v-model=\"picker\"\n      scrollable\n    ></v-time-picker>\n  </v-row>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const picker = ref(null)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        picker: null,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Scrollable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001565",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001566",
    "text": "Component: v-examples\nSection: Prop Use Seconds\nType: code_example\n\n## v-examples - Prop Use Seconds\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker use-seconds></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Use Seconds\n\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-time-picker use-seconds></v-time-picker>\n    </v-row>\n  </v-container>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Use Seconds",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001566",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001567",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-row justify=\"center\">\n      <v-time-picker v-bind=\"props\"></v-time-picker>\n    </v-row>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-time-picker'\n  const model = ref('default')\n  const options = []\n\n  const props = computed(() => {\n    return {\n      //\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <v-row justify=\"center\">\n      <v-time-picker v-bind=\"props\"></v-time-picker>\n    </v-row>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-time-picker'\n  const model = ref('default')\n  const options = []\n\n  const props = computed(() => {\n    return {\n      //\n    }\n  })\n\n  const slots = computed(() => {\n    return ''\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001567",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001568",
    "text": "Component: v-timelines\nType: component_overview\n\n# v-timelines\n\nThe `v-timeline` is useful for stylistically displaying chronological information.",
    "display_content": "# v-timelines\n\nThe `v-timeline` is useful for stylistically displaying chronological information.",
    "metadata": {
      "component": "v-timelines",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001568",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001569",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\n`v-timeline`s in their simplest form display a vertical timeline that should contain at least one `v-timeline-item`.",
    "display_content": "# v-usage\n\n`v-timeline`s in their simplest form display a vertical timeline that should contain at least one `v-timeline-item`.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001569",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001570",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-timeline](/api/v-timeline/) | Primary Component | | [v-timeline-item](/api/v-timeline-item/) | Sub-component used to display a single timeline item |\n\nAvailable sections: v-timeline-item",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-timeline](/api/v-timeline/) | Primary Component | | [v-timeline-item](/api/v-timeline-item/) | Sub-component used to display a single timeline item |\n\nAvailable sections: v-timeline-item",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001570",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001571",
    "text": "Component: v-api\nSection: v-timeline-item\nType: documentation\n\n## v-api - v-timeline-item\n\nv-timeline-item description -->",
    "display_content": "## v-api - v-timeline-item\n\nv-timeline-item description -->",
    "metadata": {
      "component": "v-api",
      "section_type": "subsection",
      "subsection": "v-timeline-item",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001571",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001572",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nSwitch between a horizontal and vertical timeline in real-time using the **direction** prop.\n\nAvailable sections: Direction, Side, Alignment, Dot color, Icon dots, Size, Truncated line, Line inset, Icon, Opposite, Timeline item default, Advanced, Misc Advanced, Prop Align, Prop Color, Prop Direction, Prop Icon Dots, Prop Line Inset, Prop Mirror, Prop Single Side, Prop Size, Prop Truncate Line, Slot Icon, Slot Opposite, Usage",
    "display_content": "# v-examples\n\nSwitch between a horizontal and vertical timeline in real-time using the **direction** prop.\n\nAvailable sections: Direction, Side, Alignment, Dot color, Icon dots, Size, Truncated line, Line inset, Icon, Opposite, Timeline item default, Advanced, Misc Advanced, Prop Align, Prop Color, Prop Direction, Prop Icon Dots, Prop Line Inset, Prop Mirror, Prop Single Side, Prop Size, Prop Truncate Line, Slot Icon, Slot Opposite, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001572",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001573",
    "text": "Component: v-examples\nSection: Direction\nType: documentation\n\n## v-examples - Direction\n\nSwitch between a horizontal and vertical timeline in real-time using the **direction** prop.\n\n<ExamplesExample file=\"v-timeline/prop-direction\" />",
    "display_content": "## v-examples - Direction\n\nSwitch between a horizontal and vertical timeline in real-time using the **direction** prop.\n\n<ExamplesExample file=\"v-timeline/prop-direction\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Direction",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001573",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001574",
    "text": "Component: v-examples\nSection: Side\nType: documentation\n\n## v-examples - Side\n\nUse the **side** property to force all items to one side of the timeline.\n\n<ExamplesExample file=\"v-timeline/prop-single-side\" />",
    "display_content": "## v-examples - Side\n\nUse the **side** property to force all items to one side of the timeline.\n\n<ExamplesExample file=\"v-timeline/prop-single-side\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Side",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001574",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001575",
    "text": "Component: v-examples\nSection: Alignment\nType: documentation\n\n## v-examples - Alignment\n\nBy default, `v-timeline-item` content is vertically aligned `center`. The **align** prop also supports `top` alignment.\n\n<ExamplesExample file=\"v-timeline/prop-align\" />",
    "display_content": "## v-examples - Alignment\n\nBy default, `v-timeline-item` content is vertically aligned `center`. The **align** prop also supports `top` alignment.\n\n<ExamplesExample file=\"v-timeline/prop-align\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Alignment",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001575",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001576",
    "text": "Component: v-examples\nSection: Dot color\nType: documentation\n\n## v-examples - Dot color\n\nColored dots create visual breakpoints that make your timelines easier for users to read.\n\n<ExamplesExample file=\"v-timeline/prop-color\" />",
    "display_content": "## v-examples - Dot color\n\nColored dots create visual breakpoints that make your timelines easier for users to read.\n\n<ExamplesExample file=\"v-timeline/prop-color\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dot color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001576",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001577",
    "text": "Component: v-examples\nSection: Icon dots\nType: documentation\n\n## v-examples - Icon dots\n\nUse icons within the `v-timeline-item` dot to provide additional context.\n\n<ExamplesExample file=\"v-timeline/prop-icon-dots\" />\n\n<!-- #### Mirror\n\nYou can mirror the placement of the timeline items by using the **mirror** prop.\n\n<ExamplesExample file=\"v-timeline/prop-mirror\" /> -->",
    "display_content": "## v-examples - Icon dots\n\nUse icons within the `v-timeline-item` dot to provide additional context.\n\n<ExamplesExample file=\"v-timeline/prop-icon-dots\" />\n\n<!-- #### Mirror\n\nYou can mirror the placement of the timeline items by using the **mirror** prop.\n\n<ExamplesExample file=\"v-timeline/prop-mirror\" /> -->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Icon dots",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001577",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001578",
    "text": "Component: v-examples\nSection: Size\nType: documentation\n\n## v-examples - Size\n\nThe **size** prop allows you to customize the size of each dot.\n\n<ExamplesExample file=\"v-timeline/prop-size\" />",
    "display_content": "## v-examples - Size\n\nThe **size** prop allows you to customize the size of each dot.\n\n<ExamplesExample file=\"v-timeline/prop-size\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Size",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001578",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001579",
    "text": "Component: v-examples\nSection: Truncated line\nType: documentation\n\n## v-examples - Truncated line\n\nTruncate the start, end or both ends of the timeline center line by using the **truncate-line** prop.\n\n<ExamplesExample file=\"v-timeline/prop-truncate-line\" />",
    "display_content": "## v-examples - Truncated line\n\nTruncate the start, end or both ends of the timeline center line by using the **truncate-line** prop.\n\n<ExamplesExample file=\"v-timeline/prop-truncate-line\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Truncated line",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001579",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001580",
    "text": "Component: v-examples\nSection: Line inset\nType: documentation\n\n## v-examples - Line inset\n\nModify the inset of dividing lines by specifying a custom amount using the **line-inset** prop.\n\n<ExamplesExample file=\"v-timeline/prop-line-inset\" />",
    "display_content": "## v-examples - Line inset\n\nModify the inset of dividing lines by specifying a custom amount using the **line-inset** prop.\n\n<ExamplesExample file=\"v-timeline/prop-line-inset\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Line inset",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001580",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001581",
    "text": "Component: v-examples\nSection: Icon\nType: documentation\n\n## v-examples - Icon\n\nInsert avatars into dots with use of the `icon` slot and `v-avatar`.\n\n<ExamplesExample file=\"v-timeline/slot-icon\" />",
    "display_content": "## v-examples - Icon\n\nInsert avatars into dots with use of the `icon` slot and `v-avatar`.\n\n<ExamplesExample file=\"v-timeline/slot-icon\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Icon",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001581",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001582",
    "text": "Component: v-examples\nSection: Opposite\nType: documentation\n\n## v-examples - Opposite\n\nThe **opposite** slot provides an additional layer of customization within your timelines.\n\n<ExamplesExample file=\"v-timeline/slot-opposite\" />\n\n<!--",
    "display_content": "## v-examples - Opposite\n\nThe **opposite** slot provides an additional layer of customization within your timelines.\n\n<ExamplesExample file=\"v-timeline/slot-opposite\" />\n\n<!--",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Opposite",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001582",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001583",
    "text": "Component: v-examples\nSection: Timeline item default\nType: documentation\n\n## v-examples - Timeline item default\n\nIf you place a `v-card` inside of a `v-timeline-item`, a caret will appear on the side of the card.\n\n<ExamplesExample file=\"v-timeline/slot-timeline-item-default\" />\n-->",
    "display_content": "## v-examples - Timeline item default\n\nIf you place a `v-card` inside of a `v-timeline-item`, a caret will appear on the side of the card.\n\n<ExamplesExample file=\"v-timeline/slot-timeline-item-default\" />\n-->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Timeline item default",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001583",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001584",
    "text": "Component: v-examples\nSection: Advanced\nType: documentation\n\n## v-examples - Advanced\n\n<ExamplesExample file=\"v-timeline/misc-advanced\" />",
    "display_content": "## v-examples - Advanced\n\n<ExamplesExample file=\"v-timeline/misc-advanced\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Advanced",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001584",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001585",
    "text": "Component: v-examples\nSection: Misc Advanced\nType: code_example\n\n## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-container style=\"max-width: 600px;\">\n    <v-timeline\n      density=\"compact\"\n      side=\"end\"\n    >\n      <v-timeline-item\n        class=\"mb-12\"\n        dot-color=\"orange\"\n        size=\"large\"\n        fill-dot\n      >\n        <template v-slot:icon>\n          <span>JL</span>\n        </template>\n        <v-text-field\n          v-model=\"input\"\n          density=\"compact\"\n          label=\"Leave a comment...\"\n          hide-details\n          @keydown.enter=\"comment\"\n        >\n          <template v-slot:append>\n            <v-btn\n              class=\"mx-0\"\n              variant=\"text\"\n              @click=\"comment\"\n            >\n              Post\n            </v-btn>\n          </template>\n        </v-text-field>\n      </v-timeline-item>\n\n      <v-slide-x-transition group>\n        <v-timeline-item\n          v-for=\"event in timeline\"\n          :key=\"event.id\"\n          class=\"mb-4\"\n          dot-color=\"pink\"\n          size=\"small\"\n        >\n          <div class=\"d-flex justify-space-between flex-grow-1\">\n            <div>{{ event.text }}</div>\n            <div class=\"flex-shrink-0\">{{ event.time }}</div>\n          </div>\n        </v-timeline-item>\n      </v-slide-x-transition>\n\n      <v-timeline-item\n        class=\"mb-6\"\n        hide-dot\n      >\n        <span>TODAY</span>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        dot-color=\"grey\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            This order was archived.\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:26 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        dot-color=\"primary\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            <v-chip\n              class=\"ms-0\"\n              color=\"purple\"\n              size=\"small\"\n              label\n            >\n              APP\n            </v-chip>\n            Digital Downloads fulfilled 1 item.\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:25 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        dot-color=\"grey\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            Order confirmation email was sent to John Leider (john@google.com).\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:25 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        hide-dot\n      >\n        <v-btn\n          variant=\"outlined\"\n        >\n          Resend Email\n        </v-btn>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        dot-color=\"grey\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            A $15.00 USD payment was processed on PayPal Express Checkout\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:25 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n\n      <v-timeline-item\n        dot-color=\"grey\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            John Leider placed this order on Online Store (checkout #1937432132572).\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:25 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n    </v-timeline>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const events = ref([])\n  const input = ref(null)\n  const nonce = ref(0)\n\n  const timeline = computed(() => {\n    return events.value.slice().reverse()\n  })\n\n  function comment () {\n    const time = (new Date()).toTimeString()\n    events.value.push({\n      id: nonce.value++,\n      text: input.value,\n      time: time.replace(/:\\d{2}\\sGMT-\\d{4}\\s\\((.*)\\)/, (match, contents, offset) => {\n        return ` ${contents.split(' ').map(v => v.charAt(0)).join('')}`\n      }),\n    })\n    input.value = null\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      events: [],\n      input: null,\n      nonce: 0,\n    }),\n\n    computed: {\n      timeline () {\n        return this.events.slice().reverse()\n      },\n    },\n\n    methods: {\n      comment () {\n        const time = (new Date()).toTimeString()\n        this.events.push({\n          id: this.nonce++,\n          text: this.input,\n          time: time.replace(/:\\d{2}\\sGMT-\\d{4}\\s\\((.*)\\)/, (match, contents, offset) => {\n            return ` ${contents.split(' ').map(v => v.charAt(0)).join('')}`\n          }),\n        })\n\n        this.input = null\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Advanced\n\n```vue\n<template>\n  <v-container style=\"max-width: 600px;\">\n    <v-timeline\n      density=\"compact\"\n      side=\"end\"\n    >\n      <v-timeline-item\n        class=\"mb-12\"\n        dot-color=\"orange\"\n        size=\"large\"\n        fill-dot\n      >\n        <template v-slot:icon>\n          <span>JL</span>\n        </template>\n        <v-text-field\n          v-model=\"input\"\n          density=\"compact\"\n          label=\"Leave a comment...\"\n          hide-details\n          @keydown.enter=\"comment\"\n        >\n          <template v-slot:append>\n            <v-btn\n              class=\"mx-0\"\n              variant=\"text\"\n              @click=\"comment\"\n            >\n              Post\n            </v-btn>\n          </template>\n        </v-text-field>\n      </v-timeline-item>\n\n      <v-slide-x-transition group>\n        <v-timeline-item\n          v-for=\"event in timeline\"\n          :key=\"event.id\"\n          class=\"mb-4\"\n          dot-color=\"pink\"\n          size=\"small\"\n        >\n          <div class=\"d-flex justify-space-between flex-grow-1\">\n            <div>{{ event.text }}</div>\n            <div class=\"flex-shrink-0\">{{ event.time }}</div>\n          </div>\n        </v-timeline-item>\n      </v-slide-x-transition>\n\n      <v-timeline-item\n        class=\"mb-6\"\n        hide-dot\n      >\n        <span>TODAY</span>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        dot-color=\"grey\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            This order was archived.\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:26 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        dot-color=\"primary\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            <v-chip\n              class=\"ms-0\"\n              color=\"purple\"\n              size=\"small\"\n              label\n            >\n              APP\n            </v-chip>\n            Digital Downloads fulfilled 1 item.\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:25 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        dot-color=\"grey\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            Order confirmation email was sent to John Leider (john@google.com).\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:25 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        hide-dot\n      >\n        <v-btn\n          variant=\"outlined\"\n        >\n          Resend Email\n        </v-btn>\n      </v-timeline-item>\n\n      <v-timeline-item\n        class=\"mb-4\"\n        dot-color=\"grey\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            A $15.00 USD payment was processed on PayPal Express Checkout\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:25 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n\n      <v-timeline-item\n        dot-color=\"grey\"\n        size=\"small\"\n      >\n        <div class=\"d-flex justify-space-between flex-grow-1\">\n          <div>\n            John Leider placed this order on Online Store (checkout #1937432132572).\n          </div>\n          <div class=\"flex-shrink-0\">\n            15:25 EDT\n          </div>\n        </div>\n      </v-timeline-item>\n    </v-timeline>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const events = ref([])\n  const input = ref(null)\n  const nonce = ref(0)\n\n  const timeline = computed(() => {\n    return events.value.slice().reverse()\n  })\n\n  function comment () {\n    const time = (new Date()).toTimeString()\n    events.value.push({\n      id: nonce.value++,\n      text: input.value,\n      time: time.replace(/:\\d{2}\\sGMT-\\d{4}\\s\\((.*)\\)/, (match, contents, offset) => {\n        return ` ${contents.split(' ').map(v => v.charAt(0)).join('')}`\n      }),\n    })\n    input.value = null\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      events: [],\n      input: null,\n      nonce: 0,\n    }),\n\n    computed: {\n      timeline () {\n        return this.events.slice().reverse()\n      },\n    },\n\n    methods: {\n      comment () {\n        const time = (new Date()).toTimeString()\n        this.events.push({\n          id: this.nonce++,\n          text: this.input,\n          time: time.replace(/:\\d{2}\\sGMT-\\d{4}\\s\\((.*)\\)/, (match, contents, offset) => {\n            return ` ${contents.split(' ').map(v => v.charAt(0)).join('')}`\n          }),\n        })\n\n        this.input = null\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Advanced",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001585",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001586",
    "text": "Component: v-examples\nSection: Prop Align\nType: code_example\n\n## v-examples - Prop Align\n\n```vue\n<template>\n  <v-timeline align=\"start\">\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Align\n\n```vue\n<template>\n  <v-timeline align=\"start\">\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Align",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001586",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001587",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <v-timeline align=\"start\" side=\"end\">\n    <v-timeline-item\n      dot-color=\"pink\"\n      size=\"small\"\n    >\n      <div class=\"d-flex\">\n        <strong class=\"me-4\">5pm</strong>\n        <div>\n          <strong>New Icon</strong>\n          <div class=\"text-caption\">\n            Mobile App\n          </div>\n        </div>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"teal-lighten-3\"\n      size=\"small\"\n    >\n      <div class=\"d-flex\">\n        <strong class=\"me-4\">3-4pm</strong>\n        <div>\n          <strong>Design Stand Up</strong>\n          <div class=\"text-caption mb-2\">\n            Hangouts\n          </div>\n        </div>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"pink\"\n      size=\"small\"\n    >\n      <div class=\"d-flex\">\n        <strong class=\"me-4\">12pm</strong>\n        <div>\n          <strong>Lunch break</strong>\n        </div>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"teal-lighten-3\"\n      size=\"small\"\n    >\n      <div class=\"d-flex\">\n        <strong class=\"me-4\">9-11am</strong>\n        <div>\n          <strong>Finish Home Screen</strong>\n          <div class=\"text-caption\">\n            Web App\n          </div>\n        </div>\n      </div>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <v-timeline align=\"start\" side=\"end\">\n    <v-timeline-item\n      dot-color=\"pink\"\n      size=\"small\"\n    >\n      <div class=\"d-flex\">\n        <strong class=\"me-4\">5pm</strong>\n        <div>\n          <strong>New Icon</strong>\n          <div class=\"text-caption\">\n            Mobile App\n          </div>\n        </div>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"teal-lighten-3\"\n      size=\"small\"\n    >\n      <div class=\"d-flex\">\n        <strong class=\"me-4\">3-4pm</strong>\n        <div>\n          <strong>Design Stand Up</strong>\n          <div class=\"text-caption mb-2\">\n            Hangouts\n          </div>\n        </div>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"pink\"\n      size=\"small\"\n    >\n      <div class=\"d-flex\">\n        <strong class=\"me-4\">12pm</strong>\n        <div>\n          <strong>Lunch break</strong>\n        </div>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"teal-lighten-3\"\n      size=\"small\"\n    >\n      <div class=\"d-flex\">\n        <strong class=\"me-4\">9-11am</strong>\n        <div>\n          <strong>Finish Home Screen</strong>\n          <div class=\"text-caption\">\n            Web App\n          </div>\n        </div>\n      </div>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001587",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001588",
    "text": "Component: v-examples\nSection: Prop Direction\nType: code_example\n\n## v-examples - Prop Direction\n\n```vue\n<template>\n  <v-timeline direction=\"horizontal\">\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Direction\n\n```vue\n<template>\n  <v-timeline direction=\"horizontal\">\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite content\n      </template>\n      <div>\n        <div class=\"text-h6\">Content title</div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </p>\n      </div>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Direction",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001588",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001589",
    "text": "Component: v-examples\nSection: Prop Icon Dots\nType: code_example\n\n## v-examples - Prop Icon Dots\n\n```vue\n<template>\n  <v-timeline align=\"start\">\n    <v-timeline-item\n      v-for=\"(item, i) in items\"\n      :key=\"i\"\n      :dot-color=\"item.color\"\n      :icon=\"item.icon\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title :class=\"['text-h6', `bg-${item.color}`]\">\n          Lorem Ipsum Dolor\n        </v-card-title>\n        <v-card-text class=\"bg-white text--primary\">\n          <p>Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.</p>\n          <v-btn\n            :color=\"item.color\"\n            variant=\"outlined\"\n          >\n            Button\n          </v-btn>\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n<script setup>\n  const items = [\n    {\n      color: 'red-lighten-2',\n      icon: 'mdi-star',\n    },\n    {\n      color: 'purple-lighten-2',\n      icon: 'mdi-book-variant',\n    },\n    {\n      color: 'green-lighten-1',\n      icon: 'mdi-airballoon',\n    },\n    {\n      color: 'indigo-lighten-2',\n      icon: 'mdi-layers-triple',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          color: 'red-lighten-2',\n          icon: 'mdi-star',\n        },\n        {\n          color: 'purple-lighten-2',\n          icon: 'mdi-book-variant',\n        },\n        {\n          color: 'green-lighten-1',\n          icon: 'mdi-airballoon',\n        },\n        {\n          color: 'indigo-lighten-2',\n          icon: 'mdi-layers-triple',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Icon Dots\n\n```vue\n<template>\n  <v-timeline align=\"start\">\n    <v-timeline-item\n      v-for=\"(item, i) in items\"\n      :key=\"i\"\n      :dot-color=\"item.color\"\n      :icon=\"item.icon\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title :class=\"['text-h6', `bg-${item.color}`]\">\n          Lorem Ipsum Dolor\n        </v-card-title>\n        <v-card-text class=\"bg-white text--primary\">\n          <p>Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.</p>\n          <v-btn\n            :color=\"item.color\"\n            variant=\"outlined\"\n          >\n            Button\n          </v-btn>\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n<script setup>\n  const items = [\n    {\n      color: 'red-lighten-2',\n      icon: 'mdi-star',\n    },\n    {\n      color: 'purple-lighten-2',\n      icon: 'mdi-book-variant',\n    },\n    {\n      color: 'green-lighten-1',\n      icon: 'mdi-airballoon',\n    },\n    {\n      color: 'indigo-lighten-2',\n      icon: 'mdi-layers-triple',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          color: 'red-lighten-2',\n          icon: 'mdi-star',\n        },\n        {\n          color: 'purple-lighten-2',\n          icon: 'mdi-book-variant',\n        },\n        {\n          color: 'green-lighten-1',\n          icon: 'mdi-airballoon',\n        },\n        {\n          color: 'indigo-lighten-2',\n          icon: 'mdi-layers-triple',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Icon Dots",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001589",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001590",
    "text": "Component: v-examples\nSection: Prop Line Inset\nType: code_example\n\n## v-examples - Prop Line Inset\n\n```vue\n<template>\n  <v-timeline direction=\"horizontal\" line-inset=\"12\">\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite\n      </template>\n      Content\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite\n      </template>\n      Content\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite\n      </template>\n      Content\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Line Inset\n\n```vue\n<template>\n  <v-timeline direction=\"horizontal\" line-inset=\"12\">\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite\n      </template>\n      Content\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite\n      </template>\n      Content\n    </v-timeline-item>\n\n    <v-timeline-item>\n      <template v-slot:opposite>\n        Opposite\n      </template>\n      Content\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Line Inset",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001590",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001591",
    "text": "Component: v-examples\nSection: Prop Mirror\nType: code_example\n\n## v-examples - Prop Mirror\n\n```vue\n<template>\n  <div>\n    <v-switch\n      v-model=\"mirror\"\n      label=\"Toggle mirror\"\n    ></v-switch>\n    <v-timeline\n      :mirror=\"mirror\"\n    >\n      <v-timeline-item\n        v-for=\"n in 2\"\n        :key=\"n\"\n      >\n        <template v-slot:opposite>\n          <span>Tus eu perfecto</span>\n        </template>\n        <v-card class=\"elevation-2\">\n          <v-card-title class=\"text-h5\">\n            Lorem ipsum\n          </v-card-title>\n          <v-card-text>\n            Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\n          </v-card-text>\n        </v-card>\n      </v-timeline-item>\n    </v-timeline>\n    <v-timeline\n      :mirror=\"mirror\"\n      single-side=\"before\"\n    >\n      <v-timeline-item\n        v-for=\"n in 2\"\n        :key=\"n\"\n      >\n        <template v-slot:opposite>\n          <span>Tus eu perfecto</span>\n        </template>\n        <v-card class=\"elevation-2\">\n          <v-card-title class=\"text-h5\">\n            Lorem ipsum\n          </v-card-title>\n          <v-card-text>\n            Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\n          </v-card-text>\n        </v-card>\n      </v-timeline-item>\n    </v-timeline>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const mirror = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      mirror: true,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Mirror\n\n```vue\n<template>\n  <div>\n    <v-switch\n      v-model=\"mirror\"\n      label=\"Toggle mirror\"\n    ></v-switch>\n    <v-timeline\n      :mirror=\"mirror\"\n    >\n      <v-timeline-item\n        v-for=\"n in 2\"\n        :key=\"n\"\n      >\n        <template v-slot:opposite>\n          <span>Tus eu perfecto</span>\n        </template>\n        <v-card class=\"elevation-2\">\n          <v-card-title class=\"text-h5\">\n            Lorem ipsum\n          </v-card-title>\n          <v-card-text>\n            Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\n          </v-card-text>\n        </v-card>\n      </v-timeline-item>\n    </v-timeline>\n    <v-timeline\n      :mirror=\"mirror\"\n      single-side=\"before\"\n    >\n      <v-timeline-item\n        v-for=\"n in 2\"\n        :key=\"n\"\n      >\n        <template v-slot:opposite>\n          <span>Tus eu perfecto</span>\n        </template>\n        <v-card class=\"elevation-2\">\n          <v-card-title class=\"text-h5\">\n            Lorem ipsum\n          </v-card-title>\n          <v-card-text>\n            Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\n          </v-card-text>\n        </v-card>\n      </v-timeline-item>\n    </v-timeline>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const mirror = ref(true)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      mirror: true,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Mirror",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001591",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001592",
    "text": "Component: v-examples\nSection: Prop Single Side\nType: code_example\n\n## v-examples - Prop Single Side\n\n```vue\n<template>\n  <v-timeline side=\"end\">\n    <v-timeline-item\n      v-for=\"item in items\"\n      :key=\"item.id\"\n      :dot-color=\"item.color\"\n      size=\"small\"\n    >\n      <v-alert\n        :color=\"item.color\"\n        :icon=\"item.icon\"\n        :value=\"true\"\n      >\n        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\n      </v-alert>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n<script setup>\n  const items = [\n    {\n      id: 1,\n      color: 'info',\n      icon: 'mdi-information',\n    },\n    {\n      id: 2,\n      color: 'error',\n      icon: 'mdi-alert-circle',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          color: 'info',\n          icon: 'mdi-information',\n        },\n        {\n          id: 2,\n          color: 'error',\n          icon: 'mdi-alert-circle',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Single Side\n\n```vue\n<template>\n  <v-timeline side=\"end\">\n    <v-timeline-item\n      v-for=\"item in items\"\n      :key=\"item.id\"\n      :dot-color=\"item.color\"\n      size=\"small\"\n    >\n      <v-alert\n        :color=\"item.color\"\n        :icon=\"item.icon\"\n        :value=\"true\"\n      >\n        Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\n      </v-alert>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n<script setup>\n  const items = [\n    {\n      id: 1,\n      color: 'info',\n      icon: 'mdi-information',\n    },\n    {\n      id: 2,\n      color: 'error',\n      icon: 'mdi-alert-circle',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          color: 'info',\n          icon: 'mdi-information',\n        },\n        {\n          id: 2,\n          color: 'error',\n          icon: 'mdi-alert-circle',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Single Side",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001592",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001593",
    "text": "Component: v-examples\nSection: Prop Size\nType: code_example\n\n## v-examples - Prop Size\n\n```vue\n<template>\n  <v-timeline>\n    <v-timeline-item\n      dot-color=\"purple-lighten-2\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-purple-lighten-2\">\n          <v-icon\n            class=\"me-4\"\n            icon=\"mdi-magnify\"\n            size=\"large\"\n          ></v-icon>\n          <h2 class=\"font-weight-light\">\n            Title 1\n          </h2>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"amber-lighten-1\"\n      size=\"x-small\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-amber-lighten-1 justify-end\">\n          <h2 class=\"me-4 font-weight-light\">\n            Title 2\n          </h2>\n          <v-icon\n            icon=\"mdi-home-outline\"\n            size=\"large\"\n          ></v-icon>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"cyan-lighten-1\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-cyan-lighten-1\">\n          <v-icon\n            class=\"me-4\"\n            icon=\"mdi-email-outline\"\n            size=\"large\"\n          ></v-icon>\n          <h2 class=\"font-weight-light\">\n            Title 3\n          </h2>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"red-lighten-1\"\n      size=\"x-small\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-red-lighten-1 justify-end\">\n          <h2 class=\"me-4 font-weight-light\">\n            Title 4\n          </h2>\n          <v-icon\n            icon=\"mdi-account-multiple-outline\"\n            size=\"large\"\n          ></v-icon>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"green-lighten-1\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-green-lighten-1\">\n          <v-icon\n            class=\"me-4\"\n            icon=\"mdi-phone-in-talk\"\n            size=\"large\"\n          ></v-icon>\n          <h2 class=\"font-weight-light\">\n            Title 5\n          </h2>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Size\n\n```vue\n<template>\n  <v-timeline>\n    <v-timeline-item\n      dot-color=\"purple-lighten-2\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-purple-lighten-2\">\n          <v-icon\n            class=\"me-4\"\n            icon=\"mdi-magnify\"\n            size=\"large\"\n          ></v-icon>\n          <h2 class=\"font-weight-light\">\n            Title 1\n          </h2>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"amber-lighten-1\"\n      size=\"x-small\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-amber-lighten-1 justify-end\">\n          <h2 class=\"me-4 font-weight-light\">\n            Title 2\n          </h2>\n          <v-icon\n            icon=\"mdi-home-outline\"\n            size=\"large\"\n          ></v-icon>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"cyan-lighten-1\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-cyan-lighten-1\">\n          <v-icon\n            class=\"me-4\"\n            icon=\"mdi-email-outline\"\n            size=\"large\"\n          ></v-icon>\n          <h2 class=\"font-weight-light\">\n            Title 3\n          </h2>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"red-lighten-1\"\n      size=\"x-small\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-red-lighten-1 justify-end\">\n          <h2 class=\"me-4 font-weight-light\">\n            Title 4\n          </h2>\n          <v-icon\n            icon=\"mdi-account-multiple-outline\"\n            size=\"large\"\n          ></v-icon>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n\n    <v-timeline-item\n      dot-color=\"green-lighten-1\"\n      fill-dot\n    >\n      <v-card>\n        <v-card-title class=\"bg-green-lighten-1\">\n          <v-icon\n            class=\"me-4\"\n            icon=\"mdi-phone-in-talk\"\n            size=\"large\"\n          ></v-icon>\n          <h2 class=\"font-weight-light\">\n            Title 5\n          </h2>\n        </v-card-title>\n        <v-card-text>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit.\n        </v-card-text>\n      </v-card>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Size",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001593",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001594",
    "text": "Component: v-examples\nSection: Prop Truncate Line\nType: code_example\n\n## v-examples - Prop Truncate Line\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-timeline truncate-line=\"start\">\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n    </v-timeline>\n\n    <v-timeline truncate-line=\"end\">\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n    </v-timeline>\n\n    <v-timeline truncate-line=\"both\">\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n    </v-timeline>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Truncate Line\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-timeline truncate-line=\"start\">\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n    </v-timeline>\n\n    <v-timeline truncate-line=\"end\">\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n    </v-timeline>\n\n    <v-timeline truncate-line=\"both\">\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n\n      <v-timeline-item>\n        <template v-slot:opposite>\n          Opposite\n        </template>\n        Content\n      </v-timeline-item>\n    </v-timeline>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Truncate Line",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001594",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001595",
    "text": "Component: v-examples\nSection: Slot Icon\nType: code_example\n\n## v-examples - Slot Icon\n\n```vue\n<template>\n  <v-timeline>\n    <v-timeline-item size=\"large\">\n      <template v-slot:icon>\n        <v-avatar image=\"https://i.pravatar.cc/64\"></v-avatar>\n      </template>\n      <template v-slot:opposite>\n        <span>Tus eu perfecto</span>\n      </template>\n      <v-card class=\"elevation-2\">\n        <v-card-title class=\"text-h5\">\n          Lorem ipsum\n        </v-card-title>\n        <v-card-text>Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.</v-card-text>\n      </v-card>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Icon\n\n```vue\n<template>\n  <v-timeline>\n    <v-timeline-item size=\"large\">\n      <template v-slot:icon>\n        <v-avatar image=\"https://i.pravatar.cc/64\"></v-avatar>\n      </template>\n      <template v-slot:opposite>\n        <span>Tus eu perfecto</span>\n      </template>\n      <v-card class=\"elevation-2\">\n        <v-card-title class=\"text-h5\">\n          Lorem ipsum\n        </v-card-title>\n        <v-card-text>Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.</v-card-text>\n      </v-card>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Icon",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001595",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001596",
    "text": "Component: v-examples\nSection: Slot Opposite\nType: code_example\n\n## v-examples - Slot Opposite\n\n```vue\n<template>\n  <v-timeline align=\"start\">\n    <v-timeline-item\n      v-for=\"(year, i) in years\"\n      :key=\"i\"\n      :dot-color=\"year.color\"\n      size=\"small\"\n    >\n      <template v-slot:opposite>\n        <div\n          :class=\"`pt-1 headline font-weight-bold text-${year.color}`\"\n          v-text=\"year.year\"\n        ></div>\n      </template>\n      <div>\n        <h2 :class=\"`mt-n1 headline font-weight-light mb-4 text-${year.color}`\">\n          Lorem ipsum\n        </h2>\n        <div>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\n        </div>\n      </div>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n<script setup>\n  const years = [\n    {\n      color: 'cyan',\n      year: '1960',\n    },\n    {\n      color: 'green',\n      year: '1970',\n    },\n    {\n      color: 'pink',\n      year: '1980',\n    },\n    {\n      color: 'amber',\n      year: '1990',\n    },\n    {\n      color: 'orange',\n      year: '2000',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      years: [\n        {\n          color: 'cyan',\n          year: '1960',\n        },\n        {\n          color: 'green',\n          year: '1970',\n        },\n        {\n          color: 'pink',\n          year: '1980',\n        },\n        {\n          color: 'amber',\n          year: '1990',\n        },\n        {\n          color: 'orange',\n          year: '2000',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Opposite\n\n```vue\n<template>\n  <v-timeline align=\"start\">\n    <v-timeline-item\n      v-for=\"(year, i) in years\"\n      :key=\"i\"\n      :dot-color=\"year.color\"\n      size=\"small\"\n    >\n      <template v-slot:opposite>\n        <div\n          :class=\"`pt-1 headline font-weight-bold text-${year.color}`\"\n          v-text=\"year.year\"\n        ></div>\n      </template>\n      <div>\n        <h2 :class=\"`mt-n1 headline font-weight-light mb-4 text-${year.color}`\">\n          Lorem ipsum\n        </h2>\n        <div>\n          Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.\n        </div>\n      </div>\n    </v-timeline-item>\n  </v-timeline>\n</template>\n\n<script setup>\n  const years = [\n    {\n      color: 'cyan',\n      year: '1960',\n    },\n    {\n      color: 'green',\n      year: '1970',\n    },\n    {\n      color: 'pink',\n      year: '1980',\n    },\n    {\n      color: 'amber',\n      year: '1990',\n    },\n    {\n      color: 'orange',\n      year: '2000',\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      years: [\n        {\n          color: 'cyan',\n          year: '1960',\n        },\n        {\n          color: 'green',\n          year: '1970',\n        },\n        {\n          color: 'pink',\n          year: '1980',\n        },\n        {\n          color: 'amber',\n          year: '1990',\n        },\n        {\n          color: 'orange',\n          year: '2000',\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Opposite",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001596",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001597",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-timeline>\n    <v-timeline-item>timeline item</v-timeline-item>\n    <v-timeline-item>\n      timeline item\n    </v-timeline-item>\n    <v-timeline-item>timeline item</v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-timeline>\n    <v-timeline-item>timeline item</v-timeline-item>\n    <v-timeline-item>\n      timeline item\n    </v-timeline-item>\n    <v-timeline-item>timeline item</v-timeline-item>\n  </v-timeline>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001597",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001598",
    "text": "Component: v-toolbars\nType: component_overview\n\n# v-toolbars\n\nThe `v-toolbar` component is pivotal to any graphical user interface (GUI), as it generally is the primary source of site navigation.",
    "display_content": "# v-toolbars\n\nThe `v-toolbar` component is pivotal to any graphical user interface (GUI), as it generally is the primary source of site navigation.",
    "metadata": {
      "component": "v-toolbars",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001598",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001599",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-toolbar](/api/v-toolbar/) | Primary Component | | [v-toolbar-items](/api/v-toolbar-items/) | Sub-component used to modify the styling of [v-btn](/components/buttons) | | [v-toolbar-title](/api/v-toolbar-title/) | Sub-component used to display the title of the toolbar | | [v-btn](/api/v-btn/) | Sub-component commonly used in `v-toolbar` |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-toolbar](/api/v-toolbar/) | Primary Component | | [v-toolbar-items](/api/v-toolbar-items/) | Sub-component used to modify the styling of [v-btn](/components/buttons) | | [v-toolbar-title](/api/v-toolbar-title/) | Sub-component used to display the title of the toolbar | | [v-btn](/api/v-btn/) | Sub-component commonly used in `v-toolbar` |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001599",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001600",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\n::: warning",
    "display_content": "# v-caveats\n\n::: warning",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001600",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001601",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nA toolbar is a flexible container that can be used in a number of ways. By default, the toolbar is 64px high on desktop and 56px high on mobile. There are a number of helper components available to use with the toolbar. The `v-toolbar-title` is used for displaying a title and `v-toolbar-items` allow [v-btn](/components/buttons) to extend full height.\n\nAvailable sections: Props, Dense toolbars, Collapse, Background, Extended, Extension height, Slots, Extension",
    "display_content": "# v-guide\n\nA toolbar is a flexible container that can be used in a number of ways. By default, the toolbar is 64px high on desktop and 56px high on mobile. There are a number of helper components available to use with the toolbar. The `v-toolbar-title` is used for displaying a title and `v-toolbar-items` allow [v-btn](/components/buttons) to extend full height.\n\nAvailable sections: Props, Dense toolbars, Collapse, Background, Extended, Extension height, Slots, Extension",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001601",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001602",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe toolbar has a number of props that can be used to modify its appearance and behavior.",
    "display_content": "## v-guide - Props\n\nThe toolbar has a number of props that can be used to modify its appearance and behavior.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001602",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001603",
    "text": "Component: v-guide\nSection: Dense toolbars\nType: documentation\n\n## v-guide - Dense toolbars\n\nDense toolbars reduce their height to _48px_.\n\n<ExamplesExample file=\"v-toolbar/prop-dense\" />",
    "display_content": "## v-guide - Dense toolbars\n\nDense toolbars reduce their height to _48px_.\n\n<ExamplesExample file=\"v-toolbar/prop-dense\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Dense toolbars",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001603",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001604",
    "text": "Component: v-guide\nSection: Collapse\nType: documentation\n\n## v-guide - Collapse\n\nToolbars can be collapsed to save screen space.\n\n<ExamplesExample file=\"v-toolbar/prop-collapse\" />",
    "display_content": "## v-guide - Collapse\n\nToolbars can be collapsed to save screen space.\n\n<ExamplesExample file=\"v-toolbar/prop-collapse\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Collapse",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001604",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001605",
    "text": "Component: v-guide\nSection: Background\nType: documentation\n\n## v-guide - Background\n\nToolbars can display a background as opposed to a solid color using the **src** prop. This can be modified further by using the **img** slot and providing your own [v-img](/components/images) component. Backgrounds can be faded using a [v-app-bar](/components/app-bars#prominent-w-scroll-shrink-and-image)\n\n<ExamplesExample file=\"v-toolbar/prop-background\" />",
    "display_content": "## v-guide - Background\n\nToolbars can display a background as opposed to a solid color using the **src** prop. This can be modified further by using the **img** slot and providing your own [v-img](/components/images) component. Backgrounds can be faded using a [v-app-bar](/components/app-bars#prominent-w-scroll-shrink-and-image)\n\n<ExamplesExample file=\"v-toolbar/prop-background\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Background",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001605",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001606",
    "text": "Component: v-guide\nSection: Extended\nType: documentation\n\n## v-guide - Extended\n\nToolbars can be extended without using the `extension` slot.\n\n<ExamplesExample file=\"v-toolbar/prop-extended\" />",
    "display_content": "## v-guide - Extended\n\nToolbars can be extended without using the `extension` slot.\n\n<ExamplesExample file=\"v-toolbar/prop-extended\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Extended",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001606",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001607",
    "text": "Component: v-guide\nSection: Extension height\nType: documentation\n\n## v-guide - Extension height\n\nThe extension's height can be customized.\n\n<ExamplesExample file=\"v-toolbar/prop-extension-height\" />",
    "display_content": "## v-guide - Extension height\n\nThe extension's height can be customized.\n\n<ExamplesExample file=\"v-toolbar/prop-extension-height\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Extension height",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001607",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001608",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe toolbar has a number of slots that can be used to customize its content.",
    "display_content": "## v-guide - Slots\n\nThe toolbar has a number of slots that can be used to customize its content.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001608",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001609",
    "text": "Component: v-guide\nSection: Extension\nType: documentation\n\n## v-guide - Extension\n\nThe `extension` slot can be used to add additional content to the toolbar.\n\n<ExamplesExample file=\"v-toolbar/slot-extension\" />",
    "display_content": "## v-guide - Extension\n\nThe `extension` slot can be used to add additional content to the toolbar.\n\n<ExamplesExample file=\"v-toolbar/slot-extension\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Extension",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001609",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001610",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-toolbar` component.\n\nAvailable sections: Contextual action bar, Flexible and card toolbar, Floating with search, Misc Contextual Action Bar, Misc Flexible And Card, Prop Background, Prop Collapse, Prop Dense, Prop Extended, Prop Extension Height, Prop Floating With Search, Slot Extension, Usage",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-toolbar` component.\n\nAvailable sections: Contextual action bar, Flexible and card toolbar, Floating with search, Misc Contextual Action Bar, Misc Flexible And Card, Prop Background, Prop Collapse, Prop Dense, Prop Extended, Prop Extension Height, Prop Floating With Search, Slot Extension, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001610",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001611",
    "text": "Component: v-examples\nSection: Contextual action bar\nType: documentation\n\n## v-examples - Contextual action bar\n\nIt is possible to update the appearance of a toolbar in response to changes in app state. In this example, the color and content of the toolbar changes in response to user selections in the `v-select`.\n\n<ExamplesExample file=\"v-toolbar/misc-contextual-action-bar\" />",
    "display_content": "## v-examples - Contextual action bar\n\nIt is possible to update the appearance of a toolbar in response to changes in app state. In this example, the color and content of the toolbar changes in response to user selections in the `v-select`.\n\n<ExamplesExample file=\"v-toolbar/misc-contextual-action-bar\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Contextual action bar",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001611",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001612",
    "text": "Component: v-examples\nSection: Flexible and card toolbar\nType: documentation\n\n## v-examples - Flexible and card toolbar\n\nIn this example we offset our card onto the extended content area of a toolbar using the **extended** prop.\n\n<ExamplesExample file=\"v-toolbar/misc-flexible-and-card\" />",
    "display_content": "## v-examples - Flexible and card toolbar\n\nIn this example we offset our card onto the extended content area of a toolbar using the **extended** prop.\n\n<ExamplesExample file=\"v-toolbar/misc-flexible-and-card\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Flexible and card toolbar",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001612",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001613",
    "text": "Component: v-examples\nSection: Floating with search\nType: documentation\n\n## v-examples - Floating with search\n\nA floating toolbar is turned into an inline element that only takes up as much space as needed. This is particularly useful when placing toolbars over content.\n\n<ExamplesExample file=\"v-toolbar/prop-floating-with-search\" />",
    "display_content": "## v-examples - Floating with search\n\nA floating toolbar is turned into an inline element that only takes up as much space as needed. This is particularly useful when placing toolbars over content.\n\n<ExamplesExample file=\"v-toolbar/prop-floating-with-search\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Floating with search",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001613",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001614",
    "text": "Component: v-examples\nSection: Misc Contextual Action Bar\nType: code_example\n\n## v-examples - Misc Contextual Action Bar\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"500\">\n    <v-toolbar :color=\"selection.length ? 'surface-variant' : 'deep-purple accent-4'\">\n      <template v-slot:prepend>\n        <v-fade-transition hide-on-leave>\n          <v-btn\n            :key=\"selection.length > 0\"\n            :icon=\"selection.length ? 'mdi-close' : 'mdi-menu'\"\n            @click=\"onClick\"\n          ></v-btn>\n        </v-fade-transition>\n      </template>\n\n      <v-toolbar-title :text=\"selection.length ? `${selection.length} selected` : 'Photos'\"></v-toolbar-title>\n\n      <template v-slot:append>\n        <v-fade-transition hide-on-leave>\n          <v-btn\n            v-if=\"selection.length\"\n            key=\"export\"\n            icon=\"mdi-export-variant\"\n          ></v-btn>\n        </v-fade-transition>\n\n        <v-fade-transition hide-on-leave>\n          <v-btn\n            v-if=\"selection.length\"\n            key=\"delete\"\n            icon=\"mdi-delete\"\n          ></v-btn>\n        </v-fade-transition>\n\n        <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n      </template>\n    </v-toolbar>\n\n    <v-card-text>\n      <v-select\n        v-model=\"selection\"\n        :items=\"items\"\n        hint=\"Make a selection\"\n        label=\"Select an option\"\n        clearable\n        multiple\n        open-on-clear\n        persistent-hint\n      ></v-select>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n\n  const selection = shallowRef([])\n\n  function onClick () {\n    if (!selection.value.length) return\n\n    selection.value = []\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      selection: [],\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n    }),\n\n    methods: {\n      onClick () {\n        if (!this.selection.length) return\n\n        this.selection = []\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Contextual Action Bar\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"500\">\n    <v-toolbar :color=\"selection.length ? 'surface-variant' : 'deep-purple accent-4'\">\n      <template v-slot:prepend>\n        <v-fade-transition hide-on-leave>\n          <v-btn\n            :key=\"selection.length > 0\"\n            :icon=\"selection.length ? 'mdi-close' : 'mdi-menu'\"\n            @click=\"onClick\"\n          ></v-btn>\n        </v-fade-transition>\n      </template>\n\n      <v-toolbar-title :text=\"selection.length ? `${selection.length} selected` : 'Photos'\"></v-toolbar-title>\n\n      <template v-slot:append>\n        <v-fade-transition hide-on-leave>\n          <v-btn\n            v-if=\"selection.length\"\n            key=\"export\"\n            icon=\"mdi-export-variant\"\n          ></v-btn>\n        </v-fade-transition>\n\n        <v-fade-transition hide-on-leave>\n          <v-btn\n            v-if=\"selection.length\"\n            key=\"delete\"\n            icon=\"mdi-delete\"\n          ></v-btn>\n        </v-fade-transition>\n\n        <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n      </template>\n    </v-toolbar>\n\n    <v-card-text>\n      <v-select\n        v-model=\"selection\"\n        :items=\"items\"\n        hint=\"Make a selection\"\n        label=\"Select an option\"\n        clearable\n        multiple\n        open-on-clear\n        persistent-hint\n      ></v-select>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = ['Foo', 'Bar', 'Fizz', 'Buzz']\n\n  const selection = shallowRef([])\n\n  function onClick () {\n    if (!selection.value.length) return\n\n    selection.value = []\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      selection: [],\n      items: ['Foo', 'Bar', 'Fizz', 'Buzz'],\n    }),\n\n    methods: {\n      onClick () {\n        if (!this.selection.length) return\n\n        this.selection = []\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Contextual Action Bar",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001614",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001615",
    "text": "Component: v-examples\nSection: Misc Flexible And Card\nType: code_example\n\n## v-examples - Misc Flexible And Card\n\n```vue\n<template>\n  <v-card rounded=\"lg\" border flat>\n    <v-toolbar\n      color=\"primary\"\n      extended\n      flat\n    >\n      <template v-slot:prepend>\n        <v-btn icon=\"mdi-menu\"></v-btn>\n      </template>\n    </v-toolbar>\n\n    <v-card\n      class=\"mx-auto mt-n16 mb-4\"\n      elevation=\"4\"\n      height=\"200\"\n      max-width=\"600\"\n    >\n      <v-toolbar>\n        <v-toolbar-title text=\"Title\"></v-toolbar-title>\n\n        <template v-slot:append>\n          <div class=\"d-flex ga-1\">\n            <v-btn icon=\"mdi-magnify\">\n            </v-btn>\n\n            <v-btn icon=\"mdi-apps\">\n            </v-btn>\n\n            <v-btn icon=\"mdi-dots-vertical\">\n            </v-btn>\n          </div>\n        </template>\n      </v-toolbar>\n\n      <v-divider></v-divider>\n    </v-card>\n\n    <v-footer class=\"justify-center text-caption\" color=\"surface-variant\">\n      {{ new Date().getFullYear() }} — <strong>Vuetify, LLC</strong>\n    </v-footer>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Misc Flexible And Card\n\n```vue\n<template>\n  <v-card rounded=\"lg\" border flat>\n    <v-toolbar\n      color=\"primary\"\n      extended\n      flat\n    >\n      <template v-slot:prepend>\n        <v-btn icon=\"mdi-menu\"></v-btn>\n      </template>\n    </v-toolbar>\n\n    <v-card\n      class=\"mx-auto mt-n16 mb-4\"\n      elevation=\"4\"\n      height=\"200\"\n      max-width=\"600\"\n    >\n      <v-toolbar>\n        <v-toolbar-title text=\"Title\"></v-toolbar-title>\n\n        <template v-slot:append>\n          <div class=\"d-flex ga-1\">\n            <v-btn icon=\"mdi-magnify\">\n            </v-btn>\n\n            <v-btn icon=\"mdi-apps\">\n            </v-btn>\n\n            <v-btn icon=\"mdi-dots-vertical\">\n            </v-btn>\n          </div>\n        </template>\n      </v-toolbar>\n\n      <v-divider></v-divider>\n    </v-card>\n\n    <v-footer class=\"justify-center text-caption\" color=\"surface-variant\">\n      {{ new Date().getFullYear() }} — <strong>Vuetify, LLC</strong>\n    </v-footer>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Flexible And Card",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001615",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001616",
    "text": "Component: v-examples\nSection: Prop Background\nType: code_example\n\n## v-examples - Prop Background\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar class=\"text-white\" image=\"https://cdn.vuetifyjs.com/images/backgrounds/vbanner.jpg\">\n      <v-btn icon=\"mdi-menu\"></v-btn>\n\n      <v-toolbar-title text=\"Toolbar\"></v-toolbar-title>\n\n      <v-btn icon=\"mdi-export\"></v-btn>\n    </v-toolbar>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Background\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar class=\"text-white\" image=\"https://cdn.vuetifyjs.com/images/backgrounds/vbanner.jpg\">\n      <v-btn icon=\"mdi-menu\"></v-btn>\n\n      <v-toolbar-title text=\"Toolbar\"></v-toolbar-title>\n\n      <v-btn icon=\"mdi-export\"></v-btn>\n    </v-toolbar>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Background",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001616",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001617",
    "text": "Component: v-examples\nSection: Prop Collapse\nType: code_example\n\n## v-examples - Prop Collapse\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar :collapse=\"collapse\" title=\"Toolbar\">\n      <template v-slot:append>\n        <div class=\"d-flex ga-1\">\n          <v-btn icon=\"mdi-magnify\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </div>\n      </template>\n    </v-toolbar>\n\n    <v-card-text class=\"text-center pa-8\">\n      <v-btn\n        color=\"surface-variant\"\n        text=\"Toggle\"\n        @click=\"collapse = !collapse\"\n      ></v-btn>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const collapse = shallowRef(true)\n</script>\n\n```",
    "display_content": "## v-examples - Prop Collapse\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar :collapse=\"collapse\" title=\"Toolbar\">\n      <template v-slot:append>\n        <div class=\"d-flex ga-1\">\n          <v-btn icon=\"mdi-magnify\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </div>\n      </template>\n    </v-toolbar>\n\n    <v-card-text class=\"text-center pa-8\">\n      <v-btn\n        color=\"surface-variant\"\n        text=\"Toggle\"\n        @click=\"collapse = !collapse\"\n      ></v-btn>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const collapse = shallowRef(true)\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Collapse",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001617",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001618",
    "text": "Component: v-examples\nSection: Prop Dense\nType: code_example\n\n## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar density=\"compact\" title=\"Toolbar\"></v-toolbar>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar density=\"compact\" title=\"Toolbar\"></v-toolbar>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Dense",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001618",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001619",
    "text": "Component: v-examples\nSection: Prop Extended\nType: code_example\n\n## v-examples - Prop Extended\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar extended>\n      <v-toolbar-title text=\"Toolbar\"></v-toolbar-title>\n\n      <template v-slot:append>\n        <v-btn icon=\"mdi-magnify\"></v-btn>\n\n        <v-btn icon=\"mdi-heart\"></v-btn>\n\n        <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n      </template>\n    </v-toolbar>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Extended\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar extended>\n      <v-toolbar-title text=\"Toolbar\"></v-toolbar-title>\n\n      <template v-slot:append>\n        <v-btn icon=\"mdi-magnify\"></v-btn>\n\n        <v-btn icon=\"mdi-heart\"></v-btn>\n\n        <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n      </template>\n    </v-toolbar>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Extended",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001619",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001620",
    "text": "Component: v-examples\nSection: Prop Extension Height\nType: code_example\n\n## v-examples - Prop Extension Height\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar extension-height=\"100\" title=\"Toolbar\" extended>\n\n      <template v-slot:append>\n        <v-btn icon=\"mdi-magnify\"></v-btn>\n        <v-btn icon=\"mdi-heart\"></v-btn>\n        <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n      </template>\n    </v-toolbar>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Extension Height\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar extension-height=\"100\" title=\"Toolbar\" extended>\n\n      <template v-slot:append>\n        <v-btn icon=\"mdi-magnify\"></v-btn>\n        <v-btn icon=\"mdi-heart\"></v-btn>\n        <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n      </template>\n    </v-toolbar>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Extension Height",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001620",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001621",
    "text": "Component: v-examples\nSection: Prop Floating With Search\nType: code_example\n\n## v-examples - Prop Floating With Search\n\n```vue\n<template>\n  <v-card\n    height=\"300\"\n    image=\"https://cdn.vuetifyjs.com/images/toolbar/map.jpg\"\n    border\n    flat\n  >\n    <template v-slot:text>\n      <v-toolbar rounded=\"lg\" border floating>\n        <div class=\"px-4\">\n          <v-text-field\n            density=\"compact\"\n            placeholder=\"Search\"\n            prepend-inner-icon=\"mdi-magnify\"\n            variant=\"solo\"\n            width=\"200\"\n            flat\n            hide-details\n            single-line\n          ></v-text-field>\n        </div>\n\n        <template v-slot:append>\n          <v-btn\n            color=\"medium-emphasis\"\n            density=\"comfortable\"\n            icon=\"mdi-crosshairs-gps\"\n          ></v-btn>\n\n          <v-btn\n            class=\"ms-1\"\n            color=\"medium-emphasis\"\n            density=\"comfortable\"\n            icon=\"mdi-dots-vertical\"\n          ></v-btn>\n        </template>\n      </v-toolbar>\n    </template>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Floating With Search\n\n```vue\n<template>\n  <v-card\n    height=\"300\"\n    image=\"https://cdn.vuetifyjs.com/images/toolbar/map.jpg\"\n    border\n    flat\n  >\n    <template v-slot:text>\n      <v-toolbar rounded=\"lg\" border floating>\n        <div class=\"px-4\">\n          <v-text-field\n            density=\"compact\"\n            placeholder=\"Search\"\n            prepend-inner-icon=\"mdi-magnify\"\n            variant=\"solo\"\n            width=\"200\"\n            flat\n            hide-details\n            single-line\n          ></v-text-field>\n        </div>\n\n        <template v-slot:append>\n          <v-btn\n            color=\"medium-emphasis\"\n            density=\"comfortable\"\n            icon=\"mdi-crosshairs-gps\"\n          ></v-btn>\n\n          <v-btn\n            class=\"ms-1\"\n            color=\"medium-emphasis\"\n            density=\"comfortable\"\n            icon=\"mdi-dots-vertical\"\n          ></v-btn>\n        </template>\n      </v-toolbar>\n    </template>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Floating With Search",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001621",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001622",
    "text": "Component: v-examples\nSection: Slot Extension\nType: code_example\n\n## v-examples - Slot Extension\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar extended>\n      <v-toolbar-title text=\"Toolbar\"></v-toolbar-title>\n\n      <template v-slot:extension>\n        <v-tabs>\n          <v-tab text=\"Tab 1\"></v-tab>\n          <v-tab text=\"Tab 2\"></v-tab>\n          <v-tab text=\"Tab 3\"></v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n  </v-card>\n</template>\n\n```",
    "display_content": "## v-examples - Slot Extension\n\n```vue\n<template>\n  <v-card height=\"200\">\n    <v-toolbar extended>\n      <v-toolbar-title text=\"Toolbar\"></v-toolbar-title>\n\n      <template v-slot:extension>\n        <v-tabs>\n          <v-tab text=\"Tab 1\"></v-tab>\n          <v-tab text=\"Tab 2\"></v-tab>\n          <v-tab text=\"Tab 3\"></v-tab>\n        </v-tabs>\n      </template>\n    </v-toolbar>\n  </v-card>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Extension",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001622",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001623",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-toolbar v-bind=\"props\">\n        <template v-slot:append>\n          <v-btn icon=\"mdi-menu\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-toolbar>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select v-model=\"density\" :items=\"['default', 'comfortable', 'compact']\" label=\"Density\"></v-select>\n\n      <v-text-field v-model=\"title\" label=\"Title\" clearable></v-text-field>\n\n      <v-checkbox v-model=\"collapse\" label=\"Collapsed\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-toolbar'\n  const model = ref('default')\n  const collapse = ref()\n  const density = ref('default')\n  const title = ref('Toolbar')\n  const options = ['elevated', 'bordered']\n  const props = computed(() => {\n    return {\n      border: model.value === 'bordered' ? true : undefined,\n      collapse: collapse.value || undefined,\n      density: density.value === 'default' ? undefined : density.value,\n      elevation: model.value === 'elevated' ? 8 : undefined,\n      title: title.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div>\n      <v-toolbar v-bind=\"props\">\n        <template v-slot:append>\n          <v-btn icon=\"mdi-menu\"></v-btn>\n\n          <v-btn icon=\"mdi-dots-vertical\"></v-btn>\n        </template>\n      </v-toolbar>\n    </div>\n\n    <template v-slot:configuration>\n      <v-select v-model=\"density\" :items=\"['default', 'comfortable', 'compact']\" label=\"Density\"></v-select>\n\n      <v-text-field v-model=\"title\" label=\"Title\" clearable></v-text-field>\n\n      <v-checkbox v-model=\"collapse\" label=\"Collapsed\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-toolbar'\n  const model = ref('default')\n  const collapse = ref()\n  const density = ref('default')\n  const title = ref('Toolbar')\n  const options = ['elevated', 'bordered']\n  const props = computed(() => {\n    return {\n      border: model.value === 'bordered' ? true : undefined,\n      collapse: collapse.value || undefined,\n      density: density.value === 'default' ? undefined : density.value,\n      elevation: model.value === 'elevated' ? 8 : undefined,\n      title: title.value || undefined,\n    }\n  })\n\n  const slots = computed(() => {\n    return ``\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001623",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001624",
    "text": "Component: v-tooltips\nType: component_overview\n\n# v-tooltips\n\nThe `v-tooltip` component is useful for conveying information when a user hovers over an element. You can also programmatically control the display of tooltips through a `v-model`. When activated, tooltips display a text label identifying an element, such as a description of its function.",
    "display_content": "# v-tooltips\n\nThe `v-tooltip` component is useful for conveying information when a user hovers over an element. You can also programmatically control the display of tooltips through a `v-model`. When activated, tooltips display a text label identifying an element, such as a description of its function.",
    "metadata": {
      "component": "v-tooltips",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001624",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001625",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nTooltips can wrap any element.",
    "display_content": "# v-usage\n\nTooltips can wrap any element.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001625",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001626",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-tooltip](/api/v-tooltip/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-tooltip](/api/v-tooltip/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001626",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001627",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe **interactive** prop prevents the tooltip from closing during mouse interactions. For example, if the tooltip contains text that users might want to click or copy.\n\nAvailable sections: Interactive, Location, Color, Open on Click, Visibility, Tooltip at cursor, Misc At Cursor, Prop Color, Prop Interactive, Prop Location, Prop Open On Click, Prop Visibility, Usage",
    "display_content": "# v-examples\n\nThe **interactive** prop prevents the tooltip from closing during mouse interactions. For example, if the tooltip contains text that users might want to click or copy.\n\nAvailable sections: Interactive, Location, Color, Open on Click, Visibility, Tooltip at cursor, Misc At Cursor, Prop Color, Prop Interactive, Prop Location, Prop Open On Click, Prop Visibility, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001627",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001628",
    "text": "Component: v-examples\nSection: Interactive\nType: documentation\n\n## v-examples - Interactive\n\nThe **interactive** prop prevents the tooltip from closing during mouse interactions. For example, if the tooltip contains text that users might want to click or copy.\n\n<ExamplesExample file=\"v-tooltip/prop-interactive\" />",
    "display_content": "## v-examples - Interactive\n\nThe **interactive** prop prevents the tooltip from closing during mouse interactions. For example, if the tooltip contains text that users might want to click or copy.\n\n<ExamplesExample file=\"v-tooltip/prop-interactive\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Interactive",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001628",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001629",
    "text": "Component: v-examples\nSection: Location\nType: documentation\n\n## v-examples - Location\n\nUse the **location** prop to specify on which side of the element the tooltip should show. Read more about **location** [here](/components/overlays/#location).\n\n<ExamplesExample file=\"v-tooltip/prop-location\" />\n\n<!-- TODO: not supported",
    "display_content": "## v-examples - Location\n\nUse the **location** prop to specify on which side of the element the tooltip should show. Read more about **location** [here](/components/overlays/#location).\n\n<ExamplesExample file=\"v-tooltip/prop-location\" />\n\n<!-- TODO: not supported",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Location",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001629",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001630",
    "text": "Component: v-examples\nSection: Color\nType: documentation\n\n## v-examples - Color\n\nTooltip color can be set with the `color` prop.\n\n<ExamplesExample file=\"v-tooltip/prop-color\" />\n-->",
    "display_content": "## v-examples - Color\n\nTooltip color can be set with the `color` prop.\n\n<ExamplesExample file=\"v-tooltip/prop-color\" />\n-->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001630",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001631",
    "text": "Component: v-examples\nSection: Open on Click\nType: documentation\n\n## v-examples - Open on Click\n\nThe **open-on-click** prop allows tooltip to open when the activator is clicked. Useful for touch devices or when manual triggering is preferred.\n\n<ExamplesExample file=\"v-tooltip/prop-open-on-click\"/>",
    "display_content": "## v-examples - Open on Click\n\nThe **open-on-click** prop allows tooltip to open when the activator is clicked. Useful for touch devices or when manual triggering is preferred.\n\n<ExamplesExample file=\"v-tooltip/prop-open-on-click\"/>",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Open on Click",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001631",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001632",
    "text": "Component: v-examples\nSection: Visibility\nType: documentation\n\n## v-examples - Visibility\n\nTooltip visibility can be programmatically changed using `v-model`.\n\n<ExamplesExample file=\"v-tooltip/prop-visibility\" />",
    "display_content": "## v-examples - Visibility\n\nTooltip visibility can be programmatically changed using `v-model`.\n\n<ExamplesExample file=\"v-tooltip/prop-visibility\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Visibility",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001632",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001633",
    "text": "Component: v-examples\nSection: Tooltip at cursor\nType: documentation\n\n## v-examples - Tooltip at cursor\n\nTooltip can appear where the cursor is by setting the **target** prop to `cursor`. This is currently only available with **open-on-click**.\n\n<ExamplesExample file=\"v-tooltip/misc-at-cursor\" />",
    "display_content": "## v-examples - Tooltip at cursor\n\nTooltip can appear where the cursor is by setting the **target** prop to `cursor`. This is currently only available with **open-on-click**.\n\n<ExamplesExample file=\"v-tooltip/misc-at-cursor\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Tooltip at cursor",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001633",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001634",
    "text": "Component: v-examples\nSection: Misc At Cursor\nType: code_example\n\n## v-examples - Misc At Cursor\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\" @mouseout=\"tooltipVisible = false\">\n    <v-tooltip v-model=\"tooltipVisible\" :open-on-hover=\"false\" target=\"cursor\" open-on-click>\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-card\n          v-bind=\"activatorProps\"\n          height=\"300\"\n          image=\"https://picsum.photos/600/300\"\n          width=\"600\"\n        ></v-card>\n      </template>\n      <span>I will appear at cursor</span>\n    </v-tooltip>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tooltipVisible = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tooltipVisible: false,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc At Cursor\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\" @mouseout=\"tooltipVisible = false\">\n    <v-tooltip v-model=\"tooltipVisible\" :open-on-hover=\"false\" target=\"cursor\" open-on-click>\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-card\n          v-bind=\"activatorProps\"\n          height=\"300\"\n          image=\"https://picsum.photos/600/300\"\n          width=\"600\"\n        ></v-card>\n      </template>\n      <span>I will appear at cursor</span>\n    </v-tooltip>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const tooltipVisible = ref(false)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      tooltipVisible: false,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc At Cursor",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001634",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001635",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <div class=\"text-center d-flex align-center justify-space-around\">\n    <v-tooltip color=\"primary\" location=\"bottom\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          primary\n        </v-btn>\n      </template>\n      <span>Primary tooltip</span>\n    </v-tooltip>\n\n    <v-tooltip color=\"success\" location=\"bottom\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"success\"\n          v-bind=\"props\"\n        >\n          success\n        </v-btn>\n      </template>\n      <span>Success tooltip</span>\n    </v-tooltip>\n\n    <v-tooltip color=\"warning\" location=\"bottom\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"warning\"\n          v-bind=\"props\"\n        >\n          warning\n        </v-btn>\n      </template>\n      <span>Warning tooltip</span>\n    </v-tooltip>\n\n    <v-tooltip color=\"error\" location=\"bottom\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"error\"\n          v-bind=\"props\"\n        >\n          error\n        </v-btn>\n      </template>\n      <span>Error tooltip</span>\n    </v-tooltip>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <div class=\"text-center d-flex align-center justify-space-around\">\n    <v-tooltip color=\"primary\" location=\"bottom\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"primary\"\n          v-bind=\"props\"\n        >\n          primary\n        </v-btn>\n      </template>\n      <span>Primary tooltip</span>\n    </v-tooltip>\n\n    <v-tooltip color=\"success\" location=\"bottom\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"success\"\n          v-bind=\"props\"\n        >\n          success\n        </v-btn>\n      </template>\n      <span>Success tooltip</span>\n    </v-tooltip>\n\n    <v-tooltip color=\"warning\" location=\"bottom\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"warning\"\n          v-bind=\"props\"\n        >\n          warning\n        </v-btn>\n      </template>\n      <span>Warning tooltip</span>\n    </v-tooltip>\n\n    <v-tooltip color=\"error\" location=\"bottom\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"error\"\n          v-bind=\"props\"\n        >\n          error\n        </v-btn>\n      </template>\n      <span>Error tooltip</span>\n    </v-tooltip>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001635",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001636",
    "text": "Component: v-examples\nSection: Prop Interactive\nType: code_example\n\n## v-examples - Prop Interactive\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-tooltip interactive>\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-icon-btn icon=\"mdi-information-outline\" v-bind=\"activatorProps\"></v-icon-btn>\n      </template>\n      <div>\n        <a class=\"text-primary font-weight-medium\" href=\"/blog/announcing-vuetify-3.8/#vtooltip-interactive\">\n          Learn more\n        </a>\n        about interactive tooltip.\n      </div>\n    </v-tooltip>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Interactive\n\n```vue\n<template>\n  <div class=\"d-flex justify-center\">\n    <v-tooltip interactive>\n      <template v-slot:activator=\"{ props: activatorProps }\">\n        <v-icon-btn icon=\"mdi-information-outline\" v-bind=\"activatorProps\"></v-icon-btn>\n      </template>\n      <div>\n        <a class=\"text-primary font-weight-medium\" href=\"/blog/announcing-vuetify-3.8/#vtooltip-interactive\">\n          Learn more\n        </a>\n        about interactive tooltip.\n      </div>\n    </v-tooltip>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Interactive",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001636",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001637",
    "text": "Component: v-examples\nSection: Prop Location\nType: code_example\n\n## v-examples - Prop Location\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-btn>\n      Start\n      <v-tooltip\n        activator=\"parent\"\n        location=\"start\"\n      >Tooltip</v-tooltip>\n    </v-btn>\n\n    <v-btn>\n      End\n      <v-tooltip\n        activator=\"parent\"\n        location=\"end\"\n      >Tooltip</v-tooltip>\n    </v-btn>\n\n    <v-btn>\n      Top\n      <v-tooltip\n        activator=\"parent\"\n        location=\"top\"\n      >Tooltip</v-tooltip>\n    </v-btn>\n\n    <v-btn>\n      Bottom\n      <v-tooltip\n        activator=\"parent\"\n        location=\"bottom\"\n      >Tooltip</v-tooltip>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Location\n\n```vue\n<template>\n  <div class=\"d-flex justify-space-around\">\n    <v-btn>\n      Start\n      <v-tooltip\n        activator=\"parent\"\n        location=\"start\"\n      >Tooltip</v-tooltip>\n    </v-btn>\n\n    <v-btn>\n      End\n      <v-tooltip\n        activator=\"parent\"\n        location=\"end\"\n      >Tooltip</v-tooltip>\n    </v-btn>\n\n    <v-btn>\n      Top\n      <v-tooltip\n        activator=\"parent\"\n        location=\"top\"\n      >Tooltip</v-tooltip>\n    </v-btn>\n\n    <v-btn>\n      Bottom\n      <v-tooltip\n        activator=\"parent\"\n        location=\"bottom\"\n      >Tooltip</v-tooltip>\n    </v-btn>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Location",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001637",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001638",
    "text": "Component: v-examples\nSection: Prop Open On Click\nType: code_example\n\n## v-examples - Prop Open On Click\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-tooltip :open-on-hover=\"false\" open-on-click>\n      <template v-slot:activator=\"{ props }\">\n        <v-btn v-bind=\"props\">Click me</v-btn>\n      </template>\n      <span>Open on click tooltip</span>\n    </v-tooltip>\n  </div>\n</template>\n\n```",
    "display_content": "## v-examples - Prop Open On Click\n\n```vue\n<template>\n  <div class=\"text-center\">\n    <v-tooltip :open-on-hover=\"false\" open-on-click>\n      <template v-slot:activator=\"{ props }\">\n        <v-btn v-bind=\"props\">Click me</v-btn>\n      </template>\n      <span>Open on click tooltip</span>\n    </v-tooltip>\n  </div>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Open On Click",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001638",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001639",
    "text": "Component: v-examples\nSection: Prop Visibility\nType: code_example\n\n## v-examples - Prop Visibility\n\n```vue\n<template>\n  <v-container\n    class=\"text-center\"\n    fluid\n  >\n    <v-row\n      class=\"flex\"\n      justify=\"space-between\"\n    >\n      <v-col cols=\"12\">\n        <v-btn @click=\"show = !show\">\n          toggle\n        </v-btn>\n      </v-col>\n\n      <v-col\n        class=\"mt-12\"\n        cols=\"12\"\n      >\n        <v-tooltip\n          v-model=\"show\"\n          location=\"top\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn\n              icon\n              v-bind=\"props\"\n            >\n              <v-icon color=\"grey-lighten-1\">\n                mdi-cart\n              </v-icon>\n            </v-btn>\n          </template>\n          <span>Programmatic tooltip</span>\n        </v-tooltip>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const show = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        show: false,\n      }\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Visibility\n\n```vue\n<template>\n  <v-container\n    class=\"text-center\"\n    fluid\n  >\n    <v-row\n      class=\"flex\"\n      justify=\"space-between\"\n    >\n      <v-col cols=\"12\">\n        <v-btn @click=\"show = !show\">\n          toggle\n        </v-btn>\n      </v-col>\n\n      <v-col\n        class=\"mt-12\"\n        cols=\"12\"\n      >\n        <v-tooltip\n          v-model=\"show\"\n          location=\"top\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn\n              icon\n              v-bind=\"props\"\n            >\n              <v-icon color=\"grey-lighten-1\">\n                mdi-cart\n              </v-icon>\n            </v-btn>\n          </template>\n          <span>Programmatic tooltip</span>\n        </v-tooltip>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const show = ref(false)\n</script>\n\n<script>\n  export default {\n    data () {\n      return {\n        show: false,\n      }\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Visibility",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001639",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001640",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-tooltip v-bind=\"props\">\n        <template v-slot:activator=\"{ props: activatorProps }\">\n          <v-btn v-bind=\"activatorProps\">Hover Over Me</v-btn>\n        </template>\n\n        {{ text }}\n      </v-tooltip>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"text\" label=\"Text\"></v-text-field>\n\n      <v-checkbox v-model=\"active\" label=\"Always show\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-tooltip'\n  const model = ref('default')\n  const text = ref('Tooltip')\n  const active = ref()\n  const options = []\n  const props = computed(() => {\n    const props = {\n      text: text.value || undefined,\n    }\n\n    if (active.value) {\n      props['model-value'] = true\n      props['onUpdate:model-value'] = true\n    }\n\n    return props\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:activator=\"{ props }\">\n    <v-btn v-bind=\"props\">Hover Over Me</v-btn>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <ExamplesUsageExample\n    v-model=\"model\"\n    :code=\"code\"\n    :name=\"name\"\n    :options=\"options\"\n  >\n    <div class=\"text-center\">\n      <v-tooltip v-bind=\"props\">\n        <template v-slot:activator=\"{ props: activatorProps }\">\n          <v-btn v-bind=\"activatorProps\">Hover Over Me</v-btn>\n        </template>\n\n        {{ text }}\n      </v-tooltip>\n    </div>\n\n    <template v-slot:configuration>\n      <v-text-field v-model=\"text\" label=\"Text\"></v-text-field>\n\n      <v-checkbox v-model=\"active\" label=\"Always show\"></v-checkbox>\n    </template>\n  </ExamplesUsageExample>\n</template>\n\n<script setup>\n  const name = 'v-tooltip'\n  const model = ref('default')\n  const text = ref('Tooltip')\n  const active = ref()\n  const options = []\n  const props = computed(() => {\n    const props = {\n      text: text.value || undefined,\n    }\n\n    if (active.value) {\n      props['model-value'] = true\n      props['onUpdate:model-value'] = true\n    }\n\n    return props\n  })\n\n  const slots = computed(() => {\n    return `\n  <template v-slot:activator=\"{ props }\">\n    <v-btn v-bind=\"props\">Hover Over Me</v-btn>\n  </template>\n`\n  })\n\n  const code = computed(() => {\n    return `<${name}${propsToString(props.value)}>${slots.value}</${name}>`\n  })\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001640",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001641",
    "text": "Component: v-treeview\nType: component_overview\n\n# v-treeview\n\nThe `v-treeview` component is useful for displaying large amounts of nested data.",
    "display_content": "# v-treeview\n\nThe `v-treeview` component is useful for displaying large amounts of nested data.",
    "metadata": {
      "component": "v-treeview",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001641",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001642",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "display_content": "# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001642",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001643",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nA basic example of the treeview component.",
    "display_content": "# v-usage\n\nA basic example of the treeview component.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001643",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001644",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-treeview](/api/v-treeview/) | Primary Component | | [v-treeview-item](/api/v-treeview-item/) | Sub-component used to display a single treeview node | | [v-treeview-children](/api/v-treeview-children/) | Sub-component used to display a single treeview node's children | | [v-treeview-group](/api/v-treeview-group/) | Sub-component used to display a single treeview node's children |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-treeview](/api/v-treeview/) | Primary Component | | [v-treeview-item](/api/v-treeview-item/) | Sub-component used to display a single treeview node | | [v-treeview-children](/api/v-treeview-children/) | Sub-component used to display a single treeview node's children | | [v-treeview-group](/api/v-treeview-group/) | Sub-component used to display a single treeview node's children |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001644",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001645",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-treeview` component is useful for displaying large amounts of nested data. It is a tree structure that can be expanded and collapsed, allowing users to navigate through the hierarchy of items.\n\nAvailable sections: Props, Activatable, Color, Dense mode, Item props, Open all, Fluid, Selected color, Selection type, Load children, Slots, Prepend, Title",
    "display_content": "# v-guide\n\nThe `v-treeview` component is useful for displaying large amounts of nested data. It is a tree structure that can be expanded and collapsed, allowing users to navigate through the hierarchy of items.\n\nAvailable sections: Props, Activatable, Color, Dense mode, Item props, Open all, Fluid, Selected color, Selection type, Load children, Slots, Prepend, Title",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001645",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001646",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-treeview` component has several props that allow you to customize its appearance and behavior.",
    "display_content": "## v-guide - Props\n\nThe `v-treeview` component has several props that allow you to customize its appearance and behavior.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001646",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001647",
    "text": "Component: v-guide\nSection: Activatable\nType: documentation\n\n## v-guide - Activatable\n\nTreeview nodes can be activated by clicking on them.\n\n<ExamplesExample file=\"v-treeview/prop-activatable\" />",
    "display_content": "## v-guide - Activatable\n\nTreeview nodes can be activated by clicking on them.\n\n<ExamplesExample file=\"v-treeview/prop-activatable\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Activatable",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001647",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001648",
    "text": "Component: v-guide\nSection: Color\nType: documentation\n\n## v-guide - Color\n\nYou can control the text and background color of the active treeview node.\n\n<ExamplesExample file=\"v-treeview/prop-color\" />",
    "display_content": "## v-guide - Color\n\nYou can control the text and background color of the active treeview node.\n\n<ExamplesExample file=\"v-treeview/prop-color\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001648",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001649",
    "text": "Component: v-guide\nSection: Dense mode\nType: documentation\n\n## v-guide - Dense mode\n\nDense mode provides more compact layout with decreased heights of the items.\n\n<ExamplesExample file=\"v-treeview/prop-dense\" />\n\n<!-- #### Hoverable\n\nTreeview nodes can have a hover effect.\n\n<ExamplesExample file=\"v-treeview/prop-hoverable\" /> -->",
    "display_content": "## v-guide - Dense mode\n\nDense mode provides more compact layout with decreased heights of the items.\n\n<ExamplesExample file=\"v-treeview/prop-dense\" />\n\n<!-- #### Hoverable\n\nTreeview nodes can have a hover effect.\n\n<ExamplesExample file=\"v-treeview/prop-hoverable\" /> -->",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Dense mode",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001649",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001650",
    "text": "Component: v-guide\nSection: Item props\nType: api_reference\n\n## v-guide - Item props\n\nIf **item-props** is set to `true` then the whole item will be spread. In the following example, the disabled prop defined in each item will disable the item accordingly.\n\n<ExamplesExample file=\"v-treeview/prop-item-props\" />",
    "display_content": "## v-guide - Item props\n\nIf **item-props** is set to `true` then the whole item will be spread. In the following example, the disabled prop defined in each item will disable the item accordingly.\n\n<ExamplesExample file=\"v-treeview/prop-item-props\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Item props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001650",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001651",
    "text": "Component: v-guide\nSection: Open all\nType: documentation\n\n## v-guide - Open all\n\nTreeview nodes can be pre-opened on page load.\n\n<ExamplesExample file=\"v-treeview/prop-open-all\" />\n\n<!-- #### Rounded\n\nYou can make treeview nodes rounded.\n\n<ExamplesExample file=\"v-treeview/prop-rounded\" /> -->",
    "display_content": "## v-guide - Open all\n\nTreeview nodes can be pre-opened on page load.\n\n<ExamplesExample file=\"v-treeview/prop-open-all\" />\n\n<!-- #### Rounded\n\nYou can make treeview nodes rounded.\n\n<ExamplesExample file=\"v-treeview/prop-rounded\" /> -->",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Open all",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001651",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001652",
    "text": "Component: v-guide\nSection: Fluid\nType: documentation\n\n## v-guide - Fluid\n\nThe **fluid** prop removes the extra indentation used to line up children. This is useful when you want to reduce the horizontal space used by the treeview.\n\n<ExamplesExample file=\"v-treeview/prop-fluid\" />",
    "display_content": "## v-guide - Fluid\n\nThe **fluid** prop removes the extra indentation used to line up children. This is useful when you want to reduce the horizontal space used by the treeview.\n\n<ExamplesExample file=\"v-treeview/prop-fluid\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Fluid",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001652",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001653",
    "text": "Component: v-guide\nSection: Selected color\nType: documentation\n\n## v-guide - Selected color\n\nYou can control the color of the selected node checkbox.\n\n<ExamplesExample file=\"v-treeview/prop-selected-color\" />",
    "display_content": "## v-guide - Selected color\n\nYou can control the color of the selected node checkbox.\n\n<ExamplesExample file=\"v-treeview/prop-selected-color\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Selected color",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001653",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001654",
    "text": "Component: v-guide\nSection: Selection type\nType: documentation\n\n## v-guide - Selection type\n\nTreeview now supports two different selection types. The default type is **'leaf'**, which will only include leaf nodes in the v-model array, but will render parent nodes as either partially or fully selected. The alternative mode is **'independent'**, which allows one to select parent nodes, but each node is independent of its parent and children.\n\n<ExamplesExample file=\"v-treeview/prop-selection-type\" />",
    "display_content": "## v-guide - Selection type\n\nTreeview now supports two different selection types. The default type is **'leaf'**, which will only include leaf nodes in the v-model array, but will render parent nodes as either partially or fully selected. The alternative mode is **'independent'**, which allows one to select parent nodes, but each node is independent of its parent and children.\n\n<ExamplesExample file=\"v-treeview/prop-selection-type\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Selection type",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001654",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001655",
    "text": "Component: v-guide\nSection: Load children\nType: documentation\n\n## v-guide - Load children\n\nYou can dynamically load child data by supplying a _Promise_ callback to the **load-children** prop. This callback will be executed the first time a user tries to expand an item that has a children property that is an empty array.\n\n<ExamplesExample file=\"v-treeview/prop-load-children\" />",
    "display_content": "## v-guide - Load children\n\nYou can dynamically load child data by supplying a _Promise_ callback to the **load-children** prop. This callback will be executed the first time a user tries to expand an item that has a children property that is an empty array.\n\n<ExamplesExample file=\"v-treeview/prop-load-children\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Load children",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001655",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001656",
    "text": "Component: v-guide\nSection: Slots\nType: slots_reference\n\n## v-guide - Slots\n\nThe `v-treeview` component has several slots that allow you to customize the appearance and behavior of its items.",
    "display_content": "## v-guide - Slots\n\nThe `v-treeview` component has several slots that allow you to customize the appearance and behavior of its items.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001656",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001657",
    "text": "Component: v-guide\nSection: Prepend\nType: documentation\n\n## v-guide - Prepend\n\nUsing the the **prepend** slot we are able to create an intuitive file explorer.\n\n<ExamplesExample file=\"v-treeview/slot-append-and-label\" />",
    "display_content": "## v-guide - Prepend\n\nUsing the the **prepend** slot we are able to create an intuitive file explorer.\n\n<ExamplesExample file=\"v-treeview/slot-append-and-label\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Prepend",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001657",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001658",
    "text": "Component: v-guide\nSection: Title\nType: documentation\n\n## v-guide - Title\n\nIn this example we use a custom **title** slot to apply a line-through the treeview item's text when selected.\n\n<ExamplesExample file=\"v-treeview/slot-title\" />",
    "display_content": "## v-guide - Title\n\nIn this example we use a custom **title** slot to apply a line-through the treeview item's text when selected.\n\n<ExamplesExample file=\"v-treeview/slot-title\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Title",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001658",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001659",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-treeview` component.\n\nAvailable sections: Search and filter, Selectable icons, Misc Search And Filter, Misc Selectable Icons, Playground, Usage, Prop Activatable, Prop Color, Prop Dense, Prop Fluid, Prop Hoverable, Prop Item Props, Prop Load Children, Prop Open All, Prop Rounded, Prop Selected Color, Prop Selection Type, Slot Append And Label, Slot Title",
    "display_content": "# v-examples\n\nThe following are a collection of examples that demonstrate more advanced and real world use of the `v-treeview` component.\n\nAvailable sections: Search and filter, Selectable icons, Misc Search And Filter, Misc Selectable Icons, Playground, Usage, Prop Activatable, Prop Color, Prop Dense, Prop Fluid, Prop Hoverable, Prop Item Props, Prop Load Children, Prop Open All, Prop Rounded, Prop Selected Color, Prop Selection Type, Slot Append And Label, Slot Title",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001659",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001660",
    "text": "Component: v-examples\nSection: Search and filter\nType: documentation\n\n## v-examples - Search and filter\n\nEasily filter your treeview by using the **search** prop. You can easily apply your custom filtering function if you need case-sensitive or fuzzy filtering by setting the **custom-filter** prop. This works similar to the [v-autocomplete](/components/autocompletes) component.\n\n<ExamplesExample file=\"v-treeview/misc-search-and-filter\" />",
    "display_content": "## v-examples - Search and filter\n\nEasily filter your treeview by using the **search** prop. You can easily apply your custom filtering function if you need case-sensitive or fuzzy filtering by setting the **custom-filter** prop. This works similar to the [v-autocomplete](/components/autocompletes) component.\n\n<ExamplesExample file=\"v-treeview/misc-search-and-filter\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Search and filter",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001660",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001661",
    "text": "Component: v-examples\nSection: Selectable icons\nType: documentation\n\n## v-examples - Selectable icons\n\nCustomize the **on**, **off** and **indeterminate** icons for your selectable tree. Combine with other advanced functionality like API loaded items.\n\n<ExamplesExample file=\"v-treeview/misc-selectable-icons\" />",
    "display_content": "## v-examples - Selectable icons\n\nCustomize the **on**, **off** and **indeterminate** icons for your selectable tree. Combine with other advanced functionality like API loaded items.\n\n<ExamplesExample file=\"v-treeview/misc-selectable-icons\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Selectable icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001661",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001662",
    "text": "Component: v-examples\nSection: Misc Search And Filter\nType: code_example\n\n## v-examples - Misc Search And Filter\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"500\">\n    <v-sheet class=\"pa-4\" color=\"surface-variant\">\n      <v-text-field\n        v-model=\"search\"\n        clear-icon=\"mdi-close-circle-outline\"\n        label=\"Search Company Directory\"\n        variant=\"solo\"\n        clearable\n        flat\n        hide-details\n      ></v-text-field>\n\n      <v-checkbox-btn\n        v-model=\"caseSensitive\"\n        label=\"Case sensitive search\"\n      ></v-checkbox-btn>\n    </v-sheet>\n\n    <v-treeview\n      v-model:opened=\"open\"\n      :custom-filter=\"filter\"\n      :items=\"items\"\n      :search=\"search\"\n      item-value=\"id\"\n      open-on-click\n    >\n      <template v-slot:prepend=\"{ item }\">\n        <v-icon\n          v-if=\"item.children\"\n          :icon=\"`mdi-${item.id === 1 ? 'home-variant' : 'folder-network'}`\"\n        ></v-icon>\n      </template>\n    </v-treeview>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = [\n    {\n      id: 1,\n      title: 'Vuetify Human Resources',\n      children: [\n        {\n          id: 2,\n          title: 'Core team',\n          children: [\n            {\n              id: 201,\n              title: 'John',\n            },\n            {\n              id: 202,\n              title: 'Kael',\n            },\n            {\n              id: 203,\n              title: 'Nekosaur',\n            },\n            {\n              id: 204,\n              title: 'Jacek',\n            },\n            {\n              id: 205,\n              title: 'Andrew',\n            },\n          ],\n        },\n        {\n          id: 3,\n          title: 'Administrators',\n          children: [\n            {\n              id: 301,\n              title: 'Blaine',\n            },\n            {\n              id: 302,\n              title: 'Yuchao',\n            },\n          ],\n        },\n        {\n          id: 4,\n          title: 'Contributors',\n          children: [\n            {\n              id: 401,\n              title: 'Phlow',\n            },\n            {\n              id: 402,\n              title: 'Brandon',\n            },\n            {\n              id: 403,\n              title: 'Sean',\n            },\n          ],\n        },\n      ],\n    },\n  ]\n\n  const open = shallowRef([1, 2])\n  const search = shallowRef(null)\n  const caseSensitive = shallowRef(false)\n\n  function filter (value, search, item) {\n    return caseSensitive.value ? value.indexOf(search) > -1 : value.toLowerCase().indexOf(search.toLowerCase()) > -1\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Vuetify Human Resources',\n          children: [\n            {\n              id: 2,\n              title: 'Core team',\n              children: [\n                { id: 201, title: 'John' },\n                { id: 202, title: 'Kael' },\n                { id: 203, title: 'Nekosaur' },\n                { id: 204, title: 'Jacek' },\n                { id: 205, title: 'Andrew' },\n              ],\n            },\n            {\n              id: 3,\n              title: 'Administrators',\n              children: [\n                { id: 301, title: 'Blaine' },\n                { id: 302, title: 'Yuchao' },\n              ],\n            },\n            {\n              id: 4,\n              title: 'Contributors',\n              children: [\n                { id: 401, title: 'Phlow' },\n                { id: 402, title: 'Brandon' },\n                { id: 403, title: 'Sean' },\n              ],\n            },\n          ],\n        },\n      ],\n      open: [1, 2],\n      search: null,\n      caseSensitive: false,\n    }),\n\n    methods: {\n      filter (value, search, item) {\n        return this.caseSensitive ? value.indexOf(search) > -1 : value.toLowerCase().indexOf(search.toLowerCase()) > -1\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Search And Filter\n\n```vue\n<template>\n  <v-card class=\"mx-auto\" max-width=\"500\">\n    <v-sheet class=\"pa-4\" color=\"surface-variant\">\n      <v-text-field\n        v-model=\"search\"\n        clear-icon=\"mdi-close-circle-outline\"\n        label=\"Search Company Directory\"\n        variant=\"solo\"\n        clearable\n        flat\n        hide-details\n      ></v-text-field>\n\n      <v-checkbox-btn\n        v-model=\"caseSensitive\"\n        label=\"Case sensitive search\"\n      ></v-checkbox-btn>\n    </v-sheet>\n\n    <v-treeview\n      v-model:opened=\"open\"\n      :custom-filter=\"filter\"\n      :items=\"items\"\n      :search=\"search\"\n      item-value=\"id\"\n      open-on-click\n    >\n      <template v-slot:prepend=\"{ item }\">\n        <v-icon\n          v-if=\"item.children\"\n          :icon=\"`mdi-${item.id === 1 ? 'home-variant' : 'folder-network'}`\"\n        ></v-icon>\n      </template>\n    </v-treeview>\n  </v-card>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = [\n    {\n      id: 1,\n      title: 'Vuetify Human Resources',\n      children: [\n        {\n          id: 2,\n          title: 'Core team',\n          children: [\n            {\n              id: 201,\n              title: 'John',\n            },\n            {\n              id: 202,\n              title: 'Kael',\n            },\n            {\n              id: 203,\n              title: 'Nekosaur',\n            },\n            {\n              id: 204,\n              title: 'Jacek',\n            },\n            {\n              id: 205,\n              title: 'Andrew',\n            },\n          ],\n        },\n        {\n          id: 3,\n          title: 'Administrators',\n          children: [\n            {\n              id: 301,\n              title: 'Blaine',\n            },\n            {\n              id: 302,\n              title: 'Yuchao',\n            },\n          ],\n        },\n        {\n          id: 4,\n          title: 'Contributors',\n          children: [\n            {\n              id: 401,\n              title: 'Phlow',\n            },\n            {\n              id: 402,\n              title: 'Brandon',\n            },\n            {\n              id: 403,\n              title: 'Sean',\n            },\n          ],\n        },\n      ],\n    },\n  ]\n\n  const open = shallowRef([1, 2])\n  const search = shallowRef(null)\n  const caseSensitive = shallowRef(false)\n\n  function filter (value, search, item) {\n    return caseSensitive.value ? value.indexOf(search) > -1 : value.toLowerCase().indexOf(search.toLowerCase()) > -1\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Vuetify Human Resources',\n          children: [\n            {\n              id: 2,\n              title: 'Core team',\n              children: [\n                { id: 201, title: 'John' },\n                { id: 202, title: 'Kael' },\n                { id: 203, title: 'Nekosaur' },\n                { id: 204, title: 'Jacek' },\n                { id: 205, title: 'Andrew' },\n              ],\n            },\n            {\n              id: 3,\n              title: 'Administrators',\n              children: [\n                { id: 301, title: 'Blaine' },\n                { id: 302, title: 'Yuchao' },\n              ],\n            },\n            {\n              id: 4,\n              title: 'Contributors',\n              children: [\n                { id: 401, title: 'Phlow' },\n                { id: 402, title: 'Brandon' },\n                { id: 403, title: 'Sean' },\n              ],\n            },\n          ],\n        },\n      ],\n      open: [1, 2],\n      search: null,\n      caseSensitive: false,\n    }),\n\n    methods: {\n      filter (value, search, item) {\n        return this.caseSensitive ? value.indexOf(search) > -1 : value.toLowerCase().indexOf(search.toLowerCase()) > -1\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Search And Filter",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001662",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001663",
    "text": "Component: v-examples\nSection: Misc Selectable Icons\nType: code_example\n\n## v-examples - Misc Selectable Icons\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar\n      color=\"surface-light\"\n      density=\"compact\"\n      title=\"Local hotspots\"\n      flat\n    ></v-toolbar>\n\n    <v-row dense>\n      <v-col class=\"d-flex align-center\" cols=\"12\" sm=\"6\">\n        <v-treeview\n          v-model:selected=\"tree\"\n          :items=\"items\"\n          :load-children=\"load\"\n          class=\"flex-1-0\"\n          false-icon=\"mdi-bookmark-outline\"\n          indeterminate-icon=\"mdi-bookmark-minus\"\n          item-title=\"name\"\n          item-value=\"id\"\n          select-strategy=\"classic\"\n          true-icon=\"mdi-bookmark\"\n          return-object\n          selectable\n        ></v-treeview>\n      </v-col>\n\n      <v-divider :vertical=\"$vuetify.display.mdAndUp\" class=\"my-md-3\"></v-divider>\n\n      <v-col cols=\"12\" sm=\"6\">\n        <v-card-text>\n          <div\n            v-if=\"tree.length === 0\"\n            class=\"text-h6 font-weight-light text-grey pa-4 text-center\"\n          >\n            Select your favorite breweries\n          </div>\n\n          <div class=\"d-flex flex-wrap ga-1\">\n            <v-scroll-x-transition group hide-on-leave>\n              <v-chip\n                v-for=\"selection in tree\"\n                :key=\"selection.id\"\n                :prepend-icon=\"getIcon()\"\n                :text=\"selection.name\"\n                color=\"grey\"\n                size=\"small\"\n                border\n                closable\n                label\n                @click:close=\"onClickClose(selection)\"\n              ></v-chip>\n            </v-scroll-x-transition>\n          </div>\n        </v-card-text>\n      </v-col>\n    </v-row>\n\n    <v-divider></v-divider>\n\n    <template v-slot:actions>\n      <v-btn\n        text=\"Reset\"\n        @click=\"tree = []\"\n      ></v-btn>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        append-icon=\"mdi-content-save\"\n        color=\"surface-light\"\n        text=\"Save\"\n        variant=\"flat\"\n        border\n      ></v-btn>\n    </template>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const icons = [\n    'mdi-beer',\n    'mdi-glass-mug',\n    'mdi-liquor',\n    'mdi-glass-mug-variant',\n  ]\n\n  const breweries = ref([])\n  const tree = ref([])\n  const types = ref([])\n  const items = ref([{\n    id: 1,\n    name: 'All Breweries',\n    children: [],\n  }])\n\n  watch(breweries, val => {\n    types.value = val.reduce((acc, cur) => {\n      const type = cur.brewery_type\n      if (!acc.includes(type)) acc.push(type)\n      return acc\n    }, []).sort()\n\n    const children = types.value.map(type => ({\n      id: type,\n      name: getName(type),\n      children: getChildren(type),\n    }))\n    const rootObj = items.value[0]\n    rootObj.children = children\n    items.value = [rootObj]\n  })\n\n  function load () {\n    if (breweries.value.length) return\n\n    return fetch('https://api.openbrewerydb.org/breweries').then(res => res.json()).then(data => (breweries.value = data)).catch(err => console.log(err))\n  }\n\n  function getChildren (type) {\n    const _breweries = []\n    for (const brewery of breweries.value) {\n      if (brewery.brewery_type !== type) continue\n      _breweries.push({\n        ...brewery,\n        name: getName(brewery.name),\n      })\n    }\n    return _breweries.sort((a, b) => {\n      return a.name > b.name ? 1 : -1\n    })\n  }\n\n  function getIcon () {\n    return icons[Math.floor(Math.random() * icons.length)]\n  }\n\n  function getName (name) {\n    return `${name.charAt(0).toUpperCase()}${name.slice(1)}`\n  }\n\n  function onClickClose (selection) {\n    tree.value = tree.value.filter(item => item.id !== selection.id)\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Selectable Icons\n\n```vue\n<template>\n  <v-card>\n    <v-toolbar\n      color=\"surface-light\"\n      density=\"compact\"\n      title=\"Local hotspots\"\n      flat\n    ></v-toolbar>\n\n    <v-row dense>\n      <v-col class=\"d-flex align-center\" cols=\"12\" sm=\"6\">\n        <v-treeview\n          v-model:selected=\"tree\"\n          :items=\"items\"\n          :load-children=\"load\"\n          class=\"flex-1-0\"\n          false-icon=\"mdi-bookmark-outline\"\n          indeterminate-icon=\"mdi-bookmark-minus\"\n          item-title=\"name\"\n          item-value=\"id\"\n          select-strategy=\"classic\"\n          true-icon=\"mdi-bookmark\"\n          return-object\n          selectable\n        ></v-treeview>\n      </v-col>\n\n      <v-divider :vertical=\"$vuetify.display.mdAndUp\" class=\"my-md-3\"></v-divider>\n\n      <v-col cols=\"12\" sm=\"6\">\n        <v-card-text>\n          <div\n            v-if=\"tree.length === 0\"\n            class=\"text-h6 font-weight-light text-grey pa-4 text-center\"\n          >\n            Select your favorite breweries\n          </div>\n\n          <div class=\"d-flex flex-wrap ga-1\">\n            <v-scroll-x-transition group hide-on-leave>\n              <v-chip\n                v-for=\"selection in tree\"\n                :key=\"selection.id\"\n                :prepend-icon=\"getIcon()\"\n                :text=\"selection.name\"\n                color=\"grey\"\n                size=\"small\"\n                border\n                closable\n                label\n                @click:close=\"onClickClose(selection)\"\n              ></v-chip>\n            </v-scroll-x-transition>\n          </div>\n        </v-card-text>\n      </v-col>\n    </v-row>\n\n    <v-divider></v-divider>\n\n    <template v-slot:actions>\n      <v-btn\n        text=\"Reset\"\n        @click=\"tree = []\"\n      ></v-btn>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        append-icon=\"mdi-content-save\"\n        color=\"surface-light\"\n        text=\"Save\"\n        variant=\"flat\"\n        border\n      ></v-btn>\n    </template>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref, watch } from 'vue'\n\n  const icons = [\n    'mdi-beer',\n    'mdi-glass-mug',\n    'mdi-liquor',\n    'mdi-glass-mug-variant',\n  ]\n\n  const breweries = ref([])\n  const tree = ref([])\n  const types = ref([])\n  const items = ref([{\n    id: 1,\n    name: 'All Breweries',\n    children: [],\n  }])\n\n  watch(breweries, val => {\n    types.value = val.reduce((acc, cur) => {\n      const type = cur.brewery_type\n      if (!acc.includes(type)) acc.push(type)\n      return acc\n    }, []).sort()\n\n    const children = types.value.map(type => ({\n      id: type,\n      name: getName(type),\n      children: getChildren(type),\n    }))\n    const rootObj = items.value[0]\n    rootObj.children = children\n    items.value = [rootObj]\n  })\n\n  function load () {\n    if (breweries.value.length) return\n\n    return fetch('https://api.openbrewerydb.org/breweries').then(res => res.json()).then(data => (breweries.value = data)).catch(err => console.log(err))\n  }\n\n  function getChildren (type) {\n    const _breweries = []\n    for (const brewery of breweries.value) {\n      if (brewery.brewery_type !== type) continue\n      _breweries.push({\n        ...brewery,\n        name: getName(brewery.name),\n      })\n    }\n    return _breweries.sort((a, b) => {\n      return a.name > b.name ? 1 : -1\n    })\n  }\n\n  function getIcon () {\n    return icons[Math.floor(Math.random() * icons.length)]\n  }\n\n  function getName (name) {\n    return `${name.charAt(0).toUpperCase()}${name.slice(1)}`\n  }\n\n  function onClickClose (selection) {\n    tree.value = tree.value.filter(item => item.id !== selection.id)\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Selectable Icons",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001663",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001664",
    "text": "Component: v-examples\nSection: Playground\nType: code_example\n\n## v-examples - Playground\n\n```vue\n<template>\n  <div>\n    <v-row justify=\"space-around\">\n      <v-switch\n        v-model=\"dense\"\n        label=\"Dense\"\n      ></v-switch>\n      <v-switch\n        v-model=\"selectable\"\n        label=\"Selectable\"\n      ></v-switch>\n      <v-switch\n        v-model=\"activatable\"\n        label=\"Activatable\"\n      ></v-switch>\n      <v-switch\n        v-model=\"hoverable\"\n        label=\"Hoverable\"\n      ></v-switch>\n      <v-switch\n        v-model=\"shaped\"\n        label=\"Shaped\"\n      ></v-switch>\n      <v-switch\n        v-model=\"rounded\"\n        label=\"Rounded\"\n      ></v-switch>\n      <v-switch\n        v-model=\"openOnClick\"\n        label=\"Open on any item click\"\n      ></v-switch>\n      <v-col cols=\"12\">\n        <v-select\n          v-model=\"selectedColor\"\n          :disabled=\"!selectable\"\n          :items=\"selectedColors\"\n          label=\"Selected checkbox color\"\n        ></v-select>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-select\n          v-model=\"color\"\n          :disabled=\"!activatable\"\n          :items=\"selectedColors\"\n          label=\"Active node color\"\n        ></v-select>\n      </v-col>\n    </v-row>\n\n    <v-treeview\n      :activatable=\"activatable\"\n      :color=\"color\"\n      :dense=\"dense\"\n      :hoverable=\"hoverable\"\n      :items=\"items\"\n      :open-on-click=\"openOnClick\"\n      :rounded=\"rounded\"\n      :selectable=\"selectable\"\n      :selected-color=\"selectedColor\"\n      :shaped=\"shaped\"\n    ></v-treeview>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      name: 'Applications :',\n      children: [\n        { id: 2, name: 'Calendar : app' },\n        { id: 3, name: 'Chrome : app' },\n        { id: 4, name: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      name: 'Documents :',\n      children: [\n        {\n          id: 6,\n          name: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              name: 'src :',\n              children: [\n                { id: 8, name: 'index : ts' },\n                { id: 9, name: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          name: 'material2 :',\n          children: [\n            {\n              id: 11,\n              name: 'src :',\n              children: [\n                { id: 12, name: 'v-btn : ts' },\n                { id: 13, name: 'v-card : ts' },\n                { id: 14, name: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      name: 'Downloads :',\n      children: [\n        { id: 16, name: 'October : pdf' },\n        { id: 17, name: 'November : pdf' },\n        { id: 18, name: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      name: 'Videos :',\n      children: [\n        {\n          id: 20,\n          name: 'Tutorials :',\n          children: [\n            { id: 21, name: 'Basic layouts : mp4' },\n            { id: 22, name: 'Advanced techniques : mp4' },\n            { id: 23, name: 'All about app : dir' },\n          ],\n        },\n        { id: 24, name: 'Intro : mov' },\n        { id: 25, name: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n  const dense = ref(false)\n  const selectable = ref(false)\n  const activatable = ref(false)\n  const hoverable = ref(false)\n  const openOnClick = ref(false)\n  const shaped = ref(false)\n  const rounded = ref(false)\n  const color = ref('primary')\n  const selectedColor = ref('accent')\n  const selectedColors = ref([\n    'accent',\n    'teal',\n    'red',\n    'success',\n    'warning lighten-2',\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          name: 'Applications :',\n          children: [\n            { id: 2, name: 'Calendar : app' },\n            { id: 3, name: 'Chrome : app' },\n            { id: 4, name: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          name: 'Documents :',\n          children: [\n            {\n              id: 6,\n              name: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  name: 'src :',\n                  children: [\n                    { id: 8, name: 'index : ts' },\n                    { id: 9, name: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              name: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  name: 'src :',\n                  children: [\n                    { id: 12, name: 'v-btn : ts' },\n                    { id: 13, name: 'v-card : ts' },\n                    { id: 14, name: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          name: 'Downloads :',\n          children: [\n            { id: 16, name: 'October : pdf' },\n            { id: 17, name: 'November : pdf' },\n            { id: 18, name: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          name: 'Videos :',\n          children: [\n            {\n              id: 20,\n              name: 'Tutorials :',\n              children: [\n                { id: 21, name: 'Basic layouts : mp4' },\n                { id: 22, name: 'Advanced techniques : mp4' },\n                { id: 23, name: 'All about app : dir' },\n              ],\n            },\n            { id: 24, name: 'Intro : mov' },\n            { id: 25, name: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n      dense: false,\n      selectable: false,\n      activatable: false,\n      hoverable: false,\n      openOnClick: false,\n      shaped: false,\n      rounded: false,\n      color: 'primary',\n      selectedColor: 'accent',\n      selectedColors: [\n        'accent',\n        'teal',\n        'red',\n        'success',\n        'warning lighten-2',\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Playground\n\n```vue\n<template>\n  <div>\n    <v-row justify=\"space-around\">\n      <v-switch\n        v-model=\"dense\"\n        label=\"Dense\"\n      ></v-switch>\n      <v-switch\n        v-model=\"selectable\"\n        label=\"Selectable\"\n      ></v-switch>\n      <v-switch\n        v-model=\"activatable\"\n        label=\"Activatable\"\n      ></v-switch>\n      <v-switch\n        v-model=\"hoverable\"\n        label=\"Hoverable\"\n      ></v-switch>\n      <v-switch\n        v-model=\"shaped\"\n        label=\"Shaped\"\n      ></v-switch>\n      <v-switch\n        v-model=\"rounded\"\n        label=\"Rounded\"\n      ></v-switch>\n      <v-switch\n        v-model=\"openOnClick\"\n        label=\"Open on any item click\"\n      ></v-switch>\n      <v-col cols=\"12\">\n        <v-select\n          v-model=\"selectedColor\"\n          :disabled=\"!selectable\"\n          :items=\"selectedColors\"\n          label=\"Selected checkbox color\"\n        ></v-select>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-select\n          v-model=\"color\"\n          :disabled=\"!activatable\"\n          :items=\"selectedColors\"\n          label=\"Active node color\"\n        ></v-select>\n      </v-col>\n    </v-row>\n\n    <v-treeview\n      :activatable=\"activatable\"\n      :color=\"color\"\n      :dense=\"dense\"\n      :hoverable=\"hoverable\"\n      :items=\"items\"\n      :open-on-click=\"openOnClick\"\n      :rounded=\"rounded\"\n      :selectable=\"selectable\"\n      :selected-color=\"selectedColor\"\n      :shaped=\"shaped\"\n    ></v-treeview>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      name: 'Applications :',\n      children: [\n        { id: 2, name: 'Calendar : app' },\n        { id: 3, name: 'Chrome : app' },\n        { id: 4, name: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      name: 'Documents :',\n      children: [\n        {\n          id: 6,\n          name: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              name: 'src :',\n              children: [\n                { id: 8, name: 'index : ts' },\n                { id: 9, name: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          name: 'material2 :',\n          children: [\n            {\n              id: 11,\n              name: 'src :',\n              children: [\n                { id: 12, name: 'v-btn : ts' },\n                { id: 13, name: 'v-card : ts' },\n                { id: 14, name: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      name: 'Downloads :',\n      children: [\n        { id: 16, name: 'October : pdf' },\n        { id: 17, name: 'November : pdf' },\n        { id: 18, name: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      name: 'Videos :',\n      children: [\n        {\n          id: 20,\n          name: 'Tutorials :',\n          children: [\n            { id: 21, name: 'Basic layouts : mp4' },\n            { id: 22, name: 'Advanced techniques : mp4' },\n            { id: 23, name: 'All about app : dir' },\n          ],\n        },\n        { id: 24, name: 'Intro : mov' },\n        { id: 25, name: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n  const dense = ref(false)\n  const selectable = ref(false)\n  const activatable = ref(false)\n  const hoverable = ref(false)\n  const openOnClick = ref(false)\n  const shaped = ref(false)\n  const rounded = ref(false)\n  const color = ref('primary')\n  const selectedColor = ref('accent')\n  const selectedColors = ref([\n    'accent',\n    'teal',\n    'red',\n    'success',\n    'warning lighten-2',\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          name: 'Applications :',\n          children: [\n            { id: 2, name: 'Calendar : app' },\n            { id: 3, name: 'Chrome : app' },\n            { id: 4, name: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          name: 'Documents :',\n          children: [\n            {\n              id: 6,\n              name: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  name: 'src :',\n                  children: [\n                    { id: 8, name: 'index : ts' },\n                    { id: 9, name: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              name: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  name: 'src :',\n                  children: [\n                    { id: 12, name: 'v-btn : ts' },\n                    { id: 13, name: 'v-card : ts' },\n                    { id: 14, name: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          name: 'Downloads :',\n          children: [\n            { id: 16, name: 'October : pdf' },\n            { id: 17, name: 'November : pdf' },\n            { id: 18, name: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          name: 'Videos :',\n          children: [\n            {\n              id: 20,\n              name: 'Tutorials :',\n              children: [\n                { id: 21, name: 'Basic layouts : mp4' },\n                { id: 22, name: 'Advanced techniques : mp4' },\n                { id: 23, name: 'All about app : dir' },\n              ],\n            },\n            { id: 24, name: 'Intro : mov' },\n            { id: 25, name: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n      dense: false,\n      selectable: false,\n      activatable: false,\n      hoverable: false,\n      openOnClick: false,\n      shaped: false,\n      rounded: false,\n      color: 'primary',\n      selectedColor: 'accent',\n      selectedColors: [\n        'accent',\n        'teal',\n        'red',\n        'success',\n        'warning lighten-2',\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Playground",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001664",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001665",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-treeview :items=\"items\"></v-treeview>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-treeview :items=\"items\"></v-treeview>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001665",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001666",
    "text": "Component: v-examples\nSection: Prop Activatable\nType: code_example\n\n## v-examples - Prop Activatable\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    item-value=\"id\"\n    activatable\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Activatable\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    item-value=\"id\"\n    activatable\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Activatable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001666",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001667",
    "text": "Component: v-examples\nSection: Prop Color\nType: code_example\n\n## v-examples - Prop Color\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    color=\"warning\"\n    item-value=\"id\"\n    activatable\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Color\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    color=\"warning\"\n    item-value=\"id\"\n    activatable\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001667",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001668",
    "text": "Component: v-examples\nSection: Prop Dense\nType: code_example\n\n## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    density=\"compact\"\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Dense\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    density=\"compact\"\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Dense",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001668",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001669",
    "text": "Component: v-examples\nSection: Prop Fluid\nType: code_example\n\n## v-examples - Prop Fluid\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    fluid\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Fluid\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    fluid\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Fluid",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001669",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001670",
    "text": "Component: v-examples\nSection: Prop Hoverable\nType: code_example\n\n## v-examples - Prop Hoverable\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    hoverable\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      name: 'Applications :',\n      children: [\n        { id: 2, name: 'Calendar : app' },\n        { id: 3, name: 'Chrome : app' },\n        { id: 4, name: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      name: 'Documents :',\n      children: [\n        {\n          id: 6,\n          name: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              name: 'src :',\n              children: [\n                { id: 8, name: 'index : ts' },\n                { id: 9, name: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          name: 'material2 :',\n          children: [\n            {\n              id: 11,\n              name: 'src :',\n              children: [\n                { id: 12, name: 'v-btn : ts' },\n                { id: 13, name: 'v-card : ts' },\n                { id: 14, name: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      name: 'Downloads :',\n      children: [\n        { id: 16, name: 'October : pdf' },\n        { id: 17, name: 'November : pdf' },\n        { id: 18, name: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      name: 'Videos :',\n      children: [\n        {\n          id: 20,\n          name: 'Tutorials :',\n          children: [\n            { id: 21, name: 'Basic layouts : mp4' },\n            { id: 22, name: 'Advanced techniques : mp4' },\n            { id: 23, name: 'All about app : dir' },\n          ],\n        },\n        { id: 24, name: 'Intro : mov' },\n        { id: 25, name: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          name: 'Applications :',\n          children: [\n            { id: 2, name: 'Calendar : app' },\n            { id: 3, name: 'Chrome : app' },\n            { id: 4, name: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          name: 'Documents :',\n          children: [\n            {\n              id: 6,\n              name: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  name: 'src :',\n                  children: [\n                    { id: 8, name: 'index : ts' },\n                    { id: 9, name: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              name: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  name: 'src :',\n                  children: [\n                    { id: 12, name: 'v-btn : ts' },\n                    { id: 13, name: 'v-card : ts' },\n                    { id: 14, name: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          name: 'Downloads :',\n          children: [\n            { id: 16, name: 'October : pdf' },\n            { id: 17, name: 'November : pdf' },\n            { id: 18, name: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          name: 'Videos :',\n          children: [\n            {\n              id: 20,\n              name: 'Tutorials :',\n              children: [\n                { id: 21, name: 'Basic layouts : mp4' },\n                { id: 22, name: 'Advanced techniques : mp4' },\n                { id: 23, name: 'All about app : dir' },\n              ],\n            },\n            { id: 24, name: 'Intro : mov' },\n            { id: 25, name: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Hoverable\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    hoverable\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      name: 'Applications :',\n      children: [\n        { id: 2, name: 'Calendar : app' },\n        { id: 3, name: 'Chrome : app' },\n        { id: 4, name: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      name: 'Documents :',\n      children: [\n        {\n          id: 6,\n          name: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              name: 'src :',\n              children: [\n                { id: 8, name: 'index : ts' },\n                { id: 9, name: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          name: 'material2 :',\n          children: [\n            {\n              id: 11,\n              name: 'src :',\n              children: [\n                { id: 12, name: 'v-btn : ts' },\n                { id: 13, name: 'v-card : ts' },\n                { id: 14, name: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      name: 'Downloads :',\n      children: [\n        { id: 16, name: 'October : pdf' },\n        { id: 17, name: 'November : pdf' },\n        { id: 18, name: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      name: 'Videos :',\n      children: [\n        {\n          id: 20,\n          name: 'Tutorials :',\n          children: [\n            { id: 21, name: 'Basic layouts : mp4' },\n            { id: 22, name: 'Advanced techniques : mp4' },\n            { id: 23, name: 'All about app : dir' },\n          ],\n        },\n        { id: 24, name: 'Intro : mov' },\n        { id: 25, name: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          name: 'Applications :',\n          children: [\n            { id: 2, name: 'Calendar : app' },\n            { id: 3, name: 'Chrome : app' },\n            { id: 4, name: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          name: 'Documents :',\n          children: [\n            {\n              id: 6,\n              name: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  name: 'src :',\n                  children: [\n                    { id: 8, name: 'index : ts' },\n                    { id: 9, name: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              name: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  name: 'src :',\n                  children: [\n                    { id: 12, name: 'v-btn : ts' },\n                    { id: 13, name: 'v-card : ts' },\n                    { id: 14, name: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          name: 'Downloads :',\n          children: [\n            { id: 16, name: 'October : pdf' },\n            { id: 17, name: 'November : pdf' },\n            { id: 18, name: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          name: 'Videos :',\n          children: [\n            {\n              id: 20,\n              name: 'Tutorials :',\n              children: [\n                { id: 21, name: 'Basic layouts : mp4' },\n                { id: 22, name: 'Advanced techniques : mp4' },\n                { id: 23, name: 'All about app : dir' },\n              ],\n            },\n            { id: 24, name: 'Intro : mov' },\n            { id: 25, name: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Hoverable",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001670",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001671",
    "text": "Component: v-examples\nSection: Prop Item Props\nType: code_example\n\n## v-examples - Prop Item Props\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    item-props\n    selectable\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      disabled: true,\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              disabled: true,\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf', disabled: true },\n        { id: 17, title: 'November : pdf', disabled: true },\n        { id: 18, title: 'Tutorial : html', disabled: true },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n```",
    "display_content": "## v-examples - Prop Item Props\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    item-props\n    selectable\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      disabled: true,\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              disabled: true,\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf', disabled: true },\n        { id: 17, title: 'November : pdf', disabled: true },\n        { id: 18, title: 'Tutorial : html', disabled: true },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Item Props",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001671",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001672",
    "text": "Component: v-examples\nSection: Prop Load Children\nType: code_example\n\n## v-examples - Prop Load Children\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row justify=\"space-between\" dense>\n      <v-col cols=\"12\" md=\"5\">\n        <v-treeview\n          v-model:activated=\"active\"\n          v-model:opened=\"open\"\n          :items=\"items\"\n          :load-children=\"fetchUsers\"\n          density=\"compact\"\n          item-title=\"name\"\n          item-value=\"id\"\n          activatable\n          border\n          fluid\n          open-on-click\n          rounded\n        >\n          <template v-slot:prepend=\"{ item }\">\n            <v-icon v-if=\"!item.children\" icon=\"mdi-account\"></v-icon>\n          </template>\n        </v-treeview>\n      </v-col>\n\n      <v-col class=\"d-flex text-center\" cols=\"12\" md=\"7\">\n        <v-card\n          class=\"text-h6 justify-center align-center flex-1-1 d-flex\"\n          color=\"surface-light\"\n          height=\"100%\"\n          flat\n          rounded\n        >\n          <template v-slot:text>\n            <div v-if=\"!selected\" class=\"text-subtitle-1\">Select a User</div>\n\n            <template v-else>\n              <v-avatar :image=\"`https://avataaars.io/${avatar}`\" class=\"mb-2\" size=\"88\"></v-avatar>\n\n              <h3 class=\"text-h5\">{{ selected.name }}</h3>\n\n              <div class=\"text-medium-emphasis\">{{ selected.email }}</div>\n\n              <div class=\"text-medium-emphasis font-weight-bold\">{{ selected.username }}</div>\n\n              <v-divider class=\"my-4\"></v-divider>\n\n              <v-text-field\n                :model-value=\"selected.company.name\"\n                class=\"mx-auto mb-2\"\n                density=\"compact\"\n                max-width=\"250\"\n                prefix=\"Company:\"\n                variant=\"solo\"\n                flat\n                hide-details\n                readonly\n              ></v-text-field>\n\n              <v-text-field\n                :model-value=\"selected.website\"\n                class=\"mx-auto mb-2\"\n                density=\"compact\"\n                max-width=\"250\"\n                prefix=\"Website:\"\n                variant=\"solo\"\n                flat\n                hide-details\n                readonly\n              ></v-text-field>\n\n              <v-text-field\n                :model-value=\"selected.phone\"\n                class=\"mx-auto\"\n                density=\"compact\"\n                max-width=\"250\"\n                prefix=\"Phone:\"\n                variant=\"solo\"\n                flat\n                hide-details\n                readonly\n              ></v-text-field>\n            </template>\n          </template>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref, watch } from 'vue'\n\n  const avatars = [\n    '?accessoriesType=Blank&avatarStyle=Circle&clotheColor=PastelGreen&clotheType=ShirtScoopNeck&eyeType=Wink&eyebrowType=UnibrowNatural&facialHairColor=Black&facialHairType=MoustacheMagnum&hairColor=Platinum&mouthType=Concerned&skinColor=Tanned&topType=Turban',\n    '?accessoriesType=Sunglasses&avatarStyle=Circle&clotheColor=Gray02&clotheType=ShirtScoopNeck&eyeType=EyeRoll&eyebrowType=RaisedExcited&facialHairColor=Red&facialHairType=BeardMagestic&hairColor=Red&hatColor=White&mouthType=Twinkle&skinColor=DarkBrown&topType=LongHairBun',\n    '?accessoriesType=Prescription02&avatarStyle=Circle&clotheColor=Black&clotheType=ShirtVNeck&eyeType=Surprised&eyebrowType=Angry&facialHairColor=Blonde&facialHairType=Blank&hairColor=Blonde&hatColor=PastelOrange&mouthType=Smile&skinColor=Black&topType=LongHairNotTooLong',\n    '?accessoriesType=Round&avatarStyle=Circle&clotheColor=PastelOrange&clotheType=Overall&eyeType=Close&eyebrowType=AngryNatural&facialHairColor=Blonde&facialHairType=Blank&graphicType=Pizza&hairColor=Black&hatColor=PastelBlue&mouthType=Serious&skinColor=Light&topType=LongHairBigHair',\n    '?accessoriesType=Kurt&avatarStyle=Circle&clotheColor=Gray01&clotheType=BlazerShirt&eyeType=Surprised&eyebrowType=Default&facialHairColor=Red&facialHairType=Blank&graphicType=Selena&hairColor=Red&hatColor=Blue02&mouthType=Twinkle&skinColor=Pale&topType=LongHairCurly',\n  ]\n\n  const pause = ms => new Promise(resolve => setTimeout(resolve, ms))\n\n  const active = ref([])\n  const avatar = ref(null)\n  const open = ref([])\n  const users = ref([])\n\n  const items = computed(() => [\n    {\n      name: 'Users',\n      children: users.value,\n      id: 'users',\n    },\n  ])\n\n  const selected = computed(() => {\n    if (!active.value.length) return undefined\n\n    const id = active.value[0]\n\n    return users.value.find(user => user.id === id)\n  })\n\n  watch(selected, () => {\n    randomAvatar()\n  })\n\n  async function fetchUsers (item) {\n    await pause(1500)\n\n    return fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(json => (item.children.push(...json)))\n      .catch(err => console.warn(err))\n  }\n\n  function randomAvatar () {\n    avatar.value = avatars[Math.floor(Math.random() * avatars.length)]\n  }\n</script>\n\n<script>\n  const avatars = [\n    '?accessoriesType=Blank&avatarStyle=Circle&clotheColor=PastelGreen&clotheType=ShirtScoopNeck&eyeType=Wink&eyebrowType=UnibrowNatural&facialHairColor=Black&facialHairType=MoustacheMagnum&hairColor=Platinum&mouthType=Concerned&skinColor=Tanned&topType=Turban',\n    '?accessoriesType=Sunglasses&avatarStyle=Circle&clotheColor=Gray02&clotheType=ShirtScoopNeck&eyeType=EyeRoll&eyebrowType=RaisedExcited&facialHairColor=Red&facialHairType=BeardMagestic&hairColor=Red&hatColor=White&mouthType=Twinkle&skinColor=DarkBrown&topType=LongHairBun',\n    '?accessoriesType=Prescription02&avatarStyle=Circle&clotheColor=Black&clotheType=ShirtVNeck&eyeType=Surprised&eyebrowType=Angry&facialHairColor=Blonde&facialHairType=Blank&hairColor=Blonde&hatColor=PastelOrange&mouthType=Smile&skinColor=Black&topType=LongHairNotTooLong',\n    '?accessoriesType=Round&avatarStyle=Circle&clotheColor=PastelOrange&clotheType=Overall&eyeType=Close&eyebrowType=AngryNatural&facialHairColor=Blonde&facialHairType=Blank&graphicType=Pizza&hairColor=Black&hatColor=PastelBlue&mouthType=Serious&skinColor=Light&topType=LongHairBigHair',\n    '?accessoriesType=Kurt&avatarStyle=Circle&clotheColor=Gray01&clotheType=BlazerShirt&eyeType=Surprised&eyebrowType=Default&facialHairColor=Red&facialHairType=Blank&graphicType=Selena&hairColor=Red&hatColor=Blue02&mouthType=Twinkle&skinColor=Pale&topType=LongHairCurly',\n  ]\n\n  const pause = ms => new Promise(resolve => setTimeout(resolve, ms))\n\n  export default {\n    data: () => ({\n      active: [],\n      avatar: null,\n      open: [],\n      users: [],\n    }),\n\n    computed: {\n      items () {\n        return [\n          {\n            name: 'Users',\n            children: this.users,\n          },\n        ]\n      },\n      selected () {\n        if (!this.active.length) return undefined\n\n        const id = this.active[0]\n\n        return this.users.find(user => user.id === id)\n      },\n    },\n\n    watch: {\n      selected: 'randomAvatar',\n    },\n\n    methods: {\n      async fetchUsers (item) {\n        // Remove in 6 months and say\n        // you've made optimizations! :)\n        await pause(1500)\n\n        return fetch('https://jsonplaceholder.typicode.com/users')\n          .then(res => res.json())\n          .then(json => (item.children.push(...json)))\n          .catch(err => console.warn(err))\n      },\n      randomAvatar () {\n        this.avatar = avatars[Math.floor(Math.random() * avatars.length)]\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Load Children\n\n```vue\n<template>\n  <v-container fluid>\n    <v-row justify=\"space-between\" dense>\n      <v-col cols=\"12\" md=\"5\">\n        <v-treeview\n          v-model:activated=\"active\"\n          v-model:opened=\"open\"\n          :items=\"items\"\n          :load-children=\"fetchUsers\"\n          density=\"compact\"\n          item-title=\"name\"\n          item-value=\"id\"\n          activatable\n          border\n          fluid\n          open-on-click\n          rounded\n        >\n          <template v-slot:prepend=\"{ item }\">\n            <v-icon v-if=\"!item.children\" icon=\"mdi-account\"></v-icon>\n          </template>\n        </v-treeview>\n      </v-col>\n\n      <v-col class=\"d-flex text-center\" cols=\"12\" md=\"7\">\n        <v-card\n          class=\"text-h6 justify-center align-center flex-1-1 d-flex\"\n          color=\"surface-light\"\n          height=\"100%\"\n          flat\n          rounded\n        >\n          <template v-slot:text>\n            <div v-if=\"!selected\" class=\"text-subtitle-1\">Select a User</div>\n\n            <template v-else>\n              <v-avatar :image=\"`https://avataaars.io/${avatar}`\" class=\"mb-2\" size=\"88\"></v-avatar>\n\n              <h3 class=\"text-h5\">{{ selected.name }}</h3>\n\n              <div class=\"text-medium-emphasis\">{{ selected.email }}</div>\n\n              <div class=\"text-medium-emphasis font-weight-bold\">{{ selected.username }}</div>\n\n              <v-divider class=\"my-4\"></v-divider>\n\n              <v-text-field\n                :model-value=\"selected.company.name\"\n                class=\"mx-auto mb-2\"\n                density=\"compact\"\n                max-width=\"250\"\n                prefix=\"Company:\"\n                variant=\"solo\"\n                flat\n                hide-details\n                readonly\n              ></v-text-field>\n\n              <v-text-field\n                :model-value=\"selected.website\"\n                class=\"mx-auto mb-2\"\n                density=\"compact\"\n                max-width=\"250\"\n                prefix=\"Website:\"\n                variant=\"solo\"\n                flat\n                hide-details\n                readonly\n              ></v-text-field>\n\n              <v-text-field\n                :model-value=\"selected.phone\"\n                class=\"mx-auto\"\n                density=\"compact\"\n                max-width=\"250\"\n                prefix=\"Phone:\"\n                variant=\"solo\"\n                flat\n                hide-details\n                readonly\n              ></v-text-field>\n            </template>\n          </template>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script setup>\n  import { computed, ref, watch } from 'vue'\n\n  const avatars = [\n    '?accessoriesType=Blank&avatarStyle=Circle&clotheColor=PastelGreen&clotheType=ShirtScoopNeck&eyeType=Wink&eyebrowType=UnibrowNatural&facialHairColor=Black&facialHairType=MoustacheMagnum&hairColor=Platinum&mouthType=Concerned&skinColor=Tanned&topType=Turban',\n    '?accessoriesType=Sunglasses&avatarStyle=Circle&clotheColor=Gray02&clotheType=ShirtScoopNeck&eyeType=EyeRoll&eyebrowType=RaisedExcited&facialHairColor=Red&facialHairType=BeardMagestic&hairColor=Red&hatColor=White&mouthType=Twinkle&skinColor=DarkBrown&topType=LongHairBun',\n    '?accessoriesType=Prescription02&avatarStyle=Circle&clotheColor=Black&clotheType=ShirtVNeck&eyeType=Surprised&eyebrowType=Angry&facialHairColor=Blonde&facialHairType=Blank&hairColor=Blonde&hatColor=PastelOrange&mouthType=Smile&skinColor=Black&topType=LongHairNotTooLong',\n    '?accessoriesType=Round&avatarStyle=Circle&clotheColor=PastelOrange&clotheType=Overall&eyeType=Close&eyebrowType=AngryNatural&facialHairColor=Blonde&facialHairType=Blank&graphicType=Pizza&hairColor=Black&hatColor=PastelBlue&mouthType=Serious&skinColor=Light&topType=LongHairBigHair',\n    '?accessoriesType=Kurt&avatarStyle=Circle&clotheColor=Gray01&clotheType=BlazerShirt&eyeType=Surprised&eyebrowType=Default&facialHairColor=Red&facialHairType=Blank&graphicType=Selena&hairColor=Red&hatColor=Blue02&mouthType=Twinkle&skinColor=Pale&topType=LongHairCurly',\n  ]\n\n  const pause = ms => new Promise(resolve => setTimeout(resolve, ms))\n\n  const active = ref([])\n  const avatar = ref(null)\n  const open = ref([])\n  const users = ref([])\n\n  const items = computed(() => [\n    {\n      name: 'Users',\n      children: users.value,\n      id: 'users',\n    },\n  ])\n\n  const selected = computed(() => {\n    if (!active.value.length) return undefined\n\n    const id = active.value[0]\n\n    return users.value.find(user => user.id === id)\n  })\n\n  watch(selected, () => {\n    randomAvatar()\n  })\n\n  async function fetchUsers (item) {\n    await pause(1500)\n\n    return fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(json => (item.children.push(...json)))\n      .catch(err => console.warn(err))\n  }\n\n  function randomAvatar () {\n    avatar.value = avatars[Math.floor(Math.random() * avatars.length)]\n  }\n</script>\n\n<script>\n  const avatars = [\n    '?accessoriesType=Blank&avatarStyle=Circle&clotheColor=PastelGreen&clotheType=ShirtScoopNeck&eyeType=Wink&eyebrowType=UnibrowNatural&facialHairColor=Black&facialHairType=MoustacheMagnum&hairColor=Platinum&mouthType=Concerned&skinColor=Tanned&topType=Turban',\n    '?accessoriesType=Sunglasses&avatarStyle=Circle&clotheColor=Gray02&clotheType=ShirtScoopNeck&eyeType=EyeRoll&eyebrowType=RaisedExcited&facialHairColor=Red&facialHairType=BeardMagestic&hairColor=Red&hatColor=White&mouthType=Twinkle&skinColor=DarkBrown&topType=LongHairBun',\n    '?accessoriesType=Prescription02&avatarStyle=Circle&clotheColor=Black&clotheType=ShirtVNeck&eyeType=Surprised&eyebrowType=Angry&facialHairColor=Blonde&facialHairType=Blank&hairColor=Blonde&hatColor=PastelOrange&mouthType=Smile&skinColor=Black&topType=LongHairNotTooLong',\n    '?accessoriesType=Round&avatarStyle=Circle&clotheColor=PastelOrange&clotheType=Overall&eyeType=Close&eyebrowType=AngryNatural&facialHairColor=Blonde&facialHairType=Blank&graphicType=Pizza&hairColor=Black&hatColor=PastelBlue&mouthType=Serious&skinColor=Light&topType=LongHairBigHair',\n    '?accessoriesType=Kurt&avatarStyle=Circle&clotheColor=Gray01&clotheType=BlazerShirt&eyeType=Surprised&eyebrowType=Default&facialHairColor=Red&facialHairType=Blank&graphicType=Selena&hairColor=Red&hatColor=Blue02&mouthType=Twinkle&skinColor=Pale&topType=LongHairCurly',\n  ]\n\n  const pause = ms => new Promise(resolve => setTimeout(resolve, ms))\n\n  export default {\n    data: () => ({\n      active: [],\n      avatar: null,\n      open: [],\n      users: [],\n    }),\n\n    computed: {\n      items () {\n        return [\n          {\n            name: 'Users',\n            children: this.users,\n          },\n        ]\n      },\n      selected () {\n        if (!this.active.length) return undefined\n\n        const id = this.active[0]\n\n        return this.users.find(user => user.id === id)\n      },\n    },\n\n    watch: {\n      selected: 'randomAvatar',\n    },\n\n    methods: {\n      async fetchUsers (item) {\n        // Remove in 6 months and say\n        // you've made optimizations! :)\n        await pause(1500)\n\n        return fetch('https://jsonplaceholder.typicode.com/users')\n          .then(res => res.json())\n          .then(json => (item.children.push(...json)))\n          .catch(err => console.warn(err))\n      },\n      randomAvatar () {\n        this.avatar = avatars[Math.floor(Math.random() * avatars.length)]\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Load Children",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001672",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001673",
    "text": "Component: v-examples\nSection: Prop Open All\nType: code_example\n\n## v-examples - Prop Open All\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    item-value=\"id\"\n    open-all\n  ></v-treeview>\n</template>\n\n<script setup>\n  const items = [\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Open All\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    item-value=\"id\"\n    open-all\n  ></v-treeview>\n</template>\n\n<script setup>\n  const items = [\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Open All",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001673",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001674",
    "text": "Component: v-examples\nSection: Prop Rounded\nType: code_example\n\n## v-examples - Prop Rounded\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    activatable\n    rounded\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Rounded\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    activatable\n    rounded\n  ></v-treeview>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const items = ref([\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Rounded",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001674",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001675",
    "text": "Component: v-examples\nSection: Prop Selected Color\nType: code_example\n\n## v-examples - Prop Selected Color\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    selected-color=\"red\"\n    selectable\n  ></v-treeview>\n</template>\n\n<script setup>\n  const items = [\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Selected Color\n\n```vue\n<template>\n  <v-treeview\n    :items=\"items\"\n    selected-color=\"red\"\n    selectable\n  ></v-treeview>\n</template>\n\n<script setup>\n  const items = [\n    {\n      id: 1,\n      title: 'Applications :',\n      children: [\n        { id: 2, title: 'Calendar : app' },\n        { id: 3, title: 'Chrome : app' },\n        { id: 4, title: 'Webstorm : app' },\n      ],\n    },\n    {\n      id: 5,\n      title: 'Documents :',\n      children: [\n        {\n          id: 6,\n          title: 'vuetify :',\n          children: [\n            {\n              id: 7,\n              title: 'src :',\n              children: [\n                { id: 8, title: 'index : ts' },\n                { id: 9, title: 'bootstrap : ts' },\n              ],\n            },\n          ],\n        },\n        {\n          id: 10,\n          title: 'material2 :',\n          children: [\n            {\n              id: 11,\n              title: 'src :',\n              children: [\n                { id: 12, title: 'v-btn : ts' },\n                { id: 13, title: 'v-card : ts' },\n                { id: 14, title: 'v-window : ts' },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 15,\n      title: 'Downloads :',\n      children: [\n        { id: 16, title: 'October : pdf' },\n        { id: 17, title: 'November : pdf' },\n        { id: 18, title: 'Tutorial : html' },\n      ],\n    },\n    {\n      id: 19,\n      title: 'Videos :',\n      children: [\n        {\n          id: 20,\n          title: 'Tutorials :',\n          children: [\n            { id: 21, title: 'Basic layouts : mp4' },\n            { id: 22, title: 'Advanced techniques : mp4' },\n            { id: 23, title: 'All about app : dir' },\n          ],\n        },\n        { id: 24, title: 'Intro : mov' },\n        { id: 25, title: 'Conference introduction : avi' },\n      ],\n    },\n  ]\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: [\n        {\n          id: 1,\n          title: 'Applications :',\n          children: [\n            { id: 2, title: 'Calendar : app' },\n            { id: 3, title: 'Chrome : app' },\n            { id: 4, title: 'Webstorm : app' },\n          ],\n        },\n        {\n          id: 5,\n          title: 'Documents :',\n          children: [\n            {\n              id: 6,\n              title: 'vuetify :',\n              children: [\n                {\n                  id: 7,\n                  title: 'src :',\n                  children: [\n                    { id: 8, title: 'index : ts' },\n                    { id: 9, title: 'bootstrap : ts' },\n                  ],\n                },\n              ],\n            },\n            {\n              id: 10,\n              title: 'material2 :',\n              children: [\n                {\n                  id: 11,\n                  title: 'src :',\n                  children: [\n                    { id: 12, title: 'v-btn : ts' },\n                    { id: 13, title: 'v-card : ts' },\n                    { id: 14, title: 'v-window : ts' },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          id: 15,\n          title: 'Downloads :',\n          children: [\n            { id: 16, title: 'October : pdf' },\n            { id: 17, title: 'November : pdf' },\n            { id: 18, title: 'Tutorial : html' },\n          ],\n        },\n        {\n          id: 19,\n          title: 'Videos :',\n          children: [\n            {\n              id: 20,\n              title: 'Tutorials :',\n              children: [\n                { id: 21, title: 'Basic layouts : mp4' },\n                { id: 22, title: 'Advanced techniques : mp4' },\n                { id: 23, title: 'All about app : dir' },\n              ],\n            },\n            { id: 24, title: 'Intro : mov' },\n            { id: 25, title: 'Conference introduction : avi' },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Selected Color",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001675",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001676",
    "text": "Component: v-examples\nSection: Prop Selection Type\nType: code_example\n\n## v-examples - Prop Selection Type\n\n```vue\n<template>\n  <v-sheet border rounded>\n    <v-container fluid>\n      <v-select\n        v-model=\"strategy\"\n        :items=\"['leaf', 'single-leaf', 'independent', 'single-independent', 'classic']\"\n        label=\"Selection type\"\n      ></v-select>\n\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-treeview\n            v-model:selected=\"selected\"\n            :items=\"items\"\n            :select-strategy=\"strategy\"\n            item-value=\"id\"\n            return-object\n            selectable\n          ></v-treeview>\n        </v-col>\n\n        <v-divider vertical></v-divider>\n\n        <v-col class=\"pa-6\" cols=\"12\" md=\"6\">\n          <template v-if=\"!selected.length\">No nodes selected.</template>\n\n          <template v-else>\n            <div v-for=\"node in selected\" :key=\"node.id\">\n              {{ node.title }}\n            </div>\n          </template>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref, shallowRef } from 'vue'\n\n  const strategy = shallowRef('leaf')\n  const selected = shallowRef([])\n  const items = ref([\n    {\n      id: 1,\n      title: 'Root',\n      children: [\n        { id: 2, title: 'Child #1' },\n        { id: 3, title: 'Child #2' },\n        {\n          id: 4,\n          title: 'Child #3',\n          children: [\n            { id: 5, title: 'Grandchild #1' },\n            { id: 6, title: 'Grandchild #2' },\n          ],\n        },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      strategy: 'leaf',\n      selected: [],\n      items: [\n        {\n          id: 1,\n          title: 'Root',\n          children: [\n            { id: 2, title: 'Child #1' },\n            { id: 3, title: 'Child #2' },\n            {\n              id: 4,\n              title: 'Child #3',\n              children: [\n                { id: 5, title: 'Grandchild #1' },\n                { id: 6, title: 'Grandchild #2' },\n              ],\n            },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Selection Type\n\n```vue\n<template>\n  <v-sheet border rounded>\n    <v-container fluid>\n      <v-select\n        v-model=\"strategy\"\n        :items=\"['leaf', 'single-leaf', 'independent', 'single-independent', 'classic']\"\n        label=\"Selection type\"\n      ></v-select>\n\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-treeview\n            v-model:selected=\"selected\"\n            :items=\"items\"\n            :select-strategy=\"strategy\"\n            item-value=\"id\"\n            return-object\n            selectable\n          ></v-treeview>\n        </v-col>\n\n        <v-divider vertical></v-divider>\n\n        <v-col class=\"pa-6\" cols=\"12\" md=\"6\">\n          <template v-if=\"!selected.length\">No nodes selected.</template>\n\n          <template v-else>\n            <div v-for=\"node in selected\" :key=\"node.id\">\n              {{ node.title }}\n            </div>\n          </template>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-sheet>\n</template>\n\n<script setup>\n  import { ref, shallowRef } from 'vue'\n\n  const strategy = shallowRef('leaf')\n  const selected = shallowRef([])\n  const items = ref([\n    {\n      id: 1,\n      title: 'Root',\n      children: [\n        { id: 2, title: 'Child #1' },\n        { id: 3, title: 'Child #2' },\n        {\n          id: 4,\n          title: 'Child #3',\n          children: [\n            { id: 5, title: 'Grandchild #1' },\n            { id: 6, title: 'Grandchild #2' },\n          ],\n        },\n      ],\n    },\n  ])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      strategy: 'leaf',\n      selected: [],\n      items: [\n        {\n          id: 1,\n          title: 'Root',\n          children: [\n            { id: 2, title: 'Child #1' },\n            { id: 3, title: 'Child #2' },\n            {\n              id: 4,\n              title: 'Child #3',\n              children: [\n                { id: 5, title: 'Grandchild #1' },\n                { id: 6, title: 'Grandchild #2' },\n              ],\n            },\n          ],\n        },\n      ],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Selection Type",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001676",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001677",
    "text": "Component: v-examples\nSection: Slot Append And Label\nType: code_example\n\n## v-examples - Slot Append And Label\n\n```vue\n<template>\n  <v-treeview\n    v-model:opened=\"open\"\n    :items=\"items\"\n    density=\"compact\"\n    item-value=\"title\"\n    activatable\n    open-on-click\n  >\n    <template v-slot:prepend=\"{ item, isOpen }\">\n      <v-icon v-if=\"!item.file\" :icon=\"isOpen ? 'mdi-folder-open' : 'mdi-folder'\"></v-icon>\n\n      <v-icon v-else :icon=\"files[item.file]\"></v-icon>\n    </template>\n  </v-treeview>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const open = shallowRef(['public'])\n  const files = shallowRef({\n    html: 'mdi-language-html5',\n    js: 'mdi-nodejs',\n    json: 'mdi-code-json',\n    md: 'mdi-language-markdown',\n    pdf: 'mdi-file-pdf-box',\n    png: 'mdi-file-image',\n    txt: 'mdi-file-document-outline',\n    xls: 'mdi-file-excel',\n  })\n\n  const items = [\n    {\n      title: '.git',\n    },\n    {\n      title: 'node_modules',\n    },\n    {\n      title: 'public',\n      children: [\n        {\n          title: 'static',\n          children: [{\n            title: 'logo.png',\n            file: 'png',\n          }],\n        },\n        {\n          title: 'favicon.ico',\n          file: 'png',\n        },\n        {\n          title: 'index.html',\n          file: 'html',\n        },\n      ],\n    },\n    {\n      title: '.gitignore',\n      file: 'txt',\n    },\n    {\n      title: 'babel.config.js',\n      file: 'js',\n    },\n    {\n      title: 'package.json',\n      file: 'json',\n    },\n    {\n      title: 'README.md',\n      file: 'md',\n    },\n    {\n      title: 'vue.config.js',\n      file: 'js',\n    },\n    {\n      title: 'yarn.lock',\n      file: 'txt',\n    },\n  ]\n</script>\n\n```",
    "display_content": "## v-examples - Slot Append And Label\n\n```vue\n<template>\n  <v-treeview\n    v-model:opened=\"open\"\n    :items=\"items\"\n    density=\"compact\"\n    item-value=\"title\"\n    activatable\n    open-on-click\n  >\n    <template v-slot:prepend=\"{ item, isOpen }\">\n      <v-icon v-if=\"!item.file\" :icon=\"isOpen ? 'mdi-folder-open' : 'mdi-folder'\"></v-icon>\n\n      <v-icon v-else :icon=\"files[item.file]\"></v-icon>\n    </template>\n  </v-treeview>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const open = shallowRef(['public'])\n  const files = shallowRef({\n    html: 'mdi-language-html5',\n    js: 'mdi-nodejs',\n    json: 'mdi-code-json',\n    md: 'mdi-language-markdown',\n    pdf: 'mdi-file-pdf-box',\n    png: 'mdi-file-image',\n    txt: 'mdi-file-document-outline',\n    xls: 'mdi-file-excel',\n  })\n\n  const items = [\n    {\n      title: '.git',\n    },\n    {\n      title: 'node_modules',\n    },\n    {\n      title: 'public',\n      children: [\n        {\n          title: 'static',\n          children: [{\n            title: 'logo.png',\n            file: 'png',\n          }],\n        },\n        {\n          title: 'favicon.ico',\n          file: 'png',\n        },\n        {\n          title: 'index.html',\n          file: 'html',\n        },\n      ],\n    },\n    {\n      title: '.gitignore',\n      file: 'txt',\n    },\n    {\n      title: 'babel.config.js',\n      file: 'js',\n    },\n    {\n      title: 'package.json',\n      file: 'json',\n    },\n    {\n      title: 'README.md',\n      file: 'md',\n    },\n    {\n      title: 'vue.config.js',\n      file: 'js',\n    },\n    {\n      title: 'yarn.lock',\n      file: 'txt',\n    },\n  ]\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Append And Label",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001677",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001678",
    "text": "Component: v-examples\nSection: Slot Title\nType: code_example\n\n## v-examples - Slot Title\n\n```vue\n<template>\n  <v-treeview\n    v-model=\"model\"\n    :items=\"items\"\n    :lines=\"false\"\n    collapse-icon=\"mdi-chevron-down\"\n    density=\"compact\"\n    expand-icon=\"mdi-chevron-right\"\n    select-strategy=\"leaf\"\n    fluid\n    selectable\n  >\n    <template v-slot:title=\"{ item }\">\n      <span :class=\"['text-caption', model.includes(item.value) && 'text-decoration-line-through']\">\n        {{ item.title }}\n      </span>\n    </template>\n  </v-treeview>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = Array.from({ length: 10 }, (_, i) => ({\n    value: `${i}`,\n    title: `Example item ${i + 1}`,\n    children: Array.from({ length: 25 }, (_, j) => ({\n      value: `${i}-${j}`,\n      title: `Example child item ${j}`,\n    })),\n  }))\n\n  const model = shallowRef([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: Array.from({ length: 10 }, (_, i) => ({\n        value: `${i}`,\n        title: `Example item ${i + 1}`,\n        children: Array.from({ length: 25 }, (_, j) => ({\n          value: `${i}-${j}`,\n          title: `Example child item ${j}`,\n        })),\n      })),\n      model: [],\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Slot Title\n\n```vue\n<template>\n  <v-treeview\n    v-model=\"model\"\n    :items=\"items\"\n    :lines=\"false\"\n    collapse-icon=\"mdi-chevron-down\"\n    density=\"compact\"\n    expand-icon=\"mdi-chevron-right\"\n    select-strategy=\"leaf\"\n    fluid\n    selectable\n  >\n    <template v-slot:title=\"{ item }\">\n      <span :class=\"['text-caption', model.includes(item.value) && 'text-decoration-line-through']\">\n        {{ item.title }}\n      </span>\n    </template>\n  </v-treeview>\n</template>\n\n<script setup>\n  import { shallowRef } from 'vue'\n\n  const items = Array.from({ length: 10 }, (_, i) => ({\n    value: `${i}`,\n    title: `Example item ${i + 1}`,\n    children: Array.from({ length: 25 }, (_, j) => ({\n      value: `${i}-${j}`,\n      title: `Example child item ${j}`,\n    })),\n  }))\n\n  const model = shallowRef([])\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      items: Array.from({ length: 10 }, (_, i) => ({\n        value: `${i}`,\n        title: `Example item ${i + 1}`,\n        children: Array.from({ length: 25 }, (_, j) => ({\n          value: `${i}-${j}`,\n          title: `Example child item ${j}`,\n        })),\n      })),\n      model: [],\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slot Title",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001678",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001679",
    "text": "Component: v-vertical-steppers\nType: component_overview\n\n# v-vertical-steppers\n\nThe `v-stepper-vertical` component can be used as a navigation element that guides users through a sequence of steps.",
    "display_content": "# v-vertical-steppers\n\nThe `v-stepper-vertical` component can be used as a navigation element that guides users through a sequence of steps.",
    "metadata": {
      "component": "v-vertical-steppers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001679",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001680",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "display_content": "# v-installation\n\nLabs components require manual import and registration with the Vuetify instance.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001680",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001681",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nVertical steppers allow users to complete a series of actions in step order.",
    "display_content": "# v-usage\n\nVertical steppers allow users to complete a series of actions in step order.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001681",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001682",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-stepper-vertical](/api/v-stepper-vertical/) | Primary Component |\n\nAvailable sections: Guide, Slots, Actions",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-stepper-vertical](/api/v-stepper-vertical/) | Primary Component |\n\nAvailable sections: Guide, Slots, Actions",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001682",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001683",
    "text": "Component: v-api\nSection: Guide\nType: documentation\n\n## v-api - Guide\n\nThe `v-stepper-vertical` is the vertical variant of the [v-stepper](/components/steppers/) component. It also extends functionality of [v-expansion-panels](/components/expansion-panels/).",
    "display_content": "## v-api - Guide\n\nThe `v-stepper-vertical` is the vertical variant of the [v-stepper](/components/steppers/) component. It also extends functionality of [v-expansion-panels](/components/expansion-panels/).",
    "metadata": {
      "component": "v-api",
      "section_type": "subsection",
      "subsection": "Guide",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001683",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001684",
    "text": "Component: v-api\nSection: Slots\nType: slots_reference\n\n## v-api - Slots\n\nThe `v-stepper-vertical` component has several slots for customization.",
    "display_content": "## v-api - Slots\n\nThe `v-stepper-vertical` component has several slots for customization.",
    "metadata": {
      "component": "v-api",
      "section_type": "subsection",
      "subsection": "Slots",
      "content_type": "slots_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001684",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001685",
    "text": "Component: v-api\nSection: Actions\nType: documentation\n\n## v-api - Actions\n\nCustomize the flow of your stepper by hooking into the available **prev** and **next** slots.\n\n<ExamplesExample file=\"v-stepper-vertical/slot-actions\" />",
    "display_content": "## v-api - Actions\n\nCustomize the flow of your stepper by hooking into the available **prev** and **next** slots.\n\n<ExamplesExample file=\"v-stepper-vertical/slot-actions\" />",
    "metadata": {
      "component": "v-api",
      "section_type": "subsection",
      "subsection": "Actions",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001685",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001686",
    "text": "Component: v-virtual-scrollers\nType: component_overview\n\n# v-virtual-scrollers\n\nThe `v-virtual-scroll` component displays a virtual, _infinite_ list. It supports dynamic height and scrolling vertically and is a good alternative to pagination.",
    "display_content": "# v-virtual-scrollers\n\nThe `v-virtual-scroll` component displays a virtual, _infinite_ list. It supports dynamic height and scrolling vertically and is a good alternative to pagination.",
    "metadata": {
      "component": "v-virtual-scrollers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001686",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001687",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe virtual scroller displays just enough records to fill the viewport and uses the existing component, rehydrating it with new data.",
    "display_content": "# v-usage\n\nThe virtual scroller displays just enough records to fill the viewport and uses the existing component, rehydrating it with new data.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001687",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001688",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-virtual-scroll](/api/v-virtual-scroll/) | Primary Component |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-virtual-scroll](/api/v-virtual-scroll/) | Primary Component |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001688",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001689",
    "text": "Component: v-anatomy\nType: component_overview\n\n# v-anatomy\n\nThe `v-virtual-scroll` component contains only a default slot with no styling options. It is typically used with large collections of [v-list-item](/components/lists/)s.",
    "display_content": "# v-anatomy\n\nThe `v-virtual-scroll` component contains only a default slot with no styling options. It is typically used with large collections of [v-list-item](/components/lists/)s.",
    "metadata": {
      "component": "v-anatomy",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001689",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001690",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `v-virtual-scroll` allows you to display thousands of records on a single page without the performance hit of actually showing all of them at once. `v-virtual-scroll` is devoid of styling and pairs well with components such as [v-card](/components/cards/) to provide a better visual experience.\n\nAvailable sections: Props, Height, Item Height, Examples, User Directory",
    "display_content": "# v-guide\n\nThe `v-virtual-scroll` allows you to display thousands of records on a single page without the performance hit of actually showing all of them at once. `v-virtual-scroll` is devoid of styling and pairs well with components such as [v-card](/components/cards/) to provide a better visual experience.\n\nAvailable sections: Props, Height, Item Height, Examples, User Directory",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001690",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001691",
    "text": "Component: v-guide\nSection: Props\nType: api_reference\n\n## v-guide - Props\n\nThe `v-virtual-scroll` component has a small API mainly used to configure the root and item height.",
    "display_content": "## v-guide - Props\n\nThe `v-virtual-scroll` component has a small API mainly used to configure the root and item height.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Props",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001691",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001692",
    "text": "Component: v-guide\nSection: Height\nType: documentation\n\n## v-guide - Height\n\nThe `v-virtual-scroll` component does not have any initial height set on itself.\n\nThe following code snippet uses the **height** prop:\n\n<ExamplesExample file=\"v-virtual-scroll/prop-height\" />\n\nAnother way of making sure that the component has height is to place it inside an element with `display: flex`.\n\n<ExamplesExample file=\"v-virtual-scroll/prop-height-parent\" />",
    "display_content": "## v-guide - Height\n\nThe `v-virtual-scroll` component does not have any initial height set on itself.\n\nThe following code snippet uses the **height** prop:\n\n<ExamplesExample file=\"v-virtual-scroll/prop-height\" />\n\nAnother way of making sure that the component has height is to place it inside an element with `display: flex`.\n\n<ExamplesExample file=\"v-virtual-scroll/prop-height-parent\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Height",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001692",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001693",
    "text": "Component: v-guide\nSection: Item Height\nType: documentation\n\n## v-guide - Item Height\n\nFor lists where the item height is static and uniform for all items, it's recommended that you define a specific **item-height**. This value is used for `v-virtual-scroll`'s calculations.\n\n<ExamplesExample file=\"v-virtual-scroll/prop-item-height\" />\n\nIf your items are not of a uniform size, omit the **item-height** prop to have `v-virtual-scroll` dynamically calculate each item.\n\n<ExamplesExample file=\"v-virtual-scroll/prop-dynamic-item-height\" />",
    "display_content": "## v-guide - Item Height\n\nFor lists where the item height is static and uniform for all items, it's recommended that you define a specific **item-height**. This value is used for `v-virtual-scroll`'s calculations.\n\n<ExamplesExample file=\"v-virtual-scroll/prop-item-height\" />\n\nIf your items are not of a uniform size, omit the **item-height** prop to have `v-virtual-scroll` dynamically calculate each item.\n\n<ExamplesExample file=\"v-virtual-scroll/prop-dynamic-item-height\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Item Height",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001693",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001694",
    "text": "Component: v-guide\nSection: Examples\nType: code_example\n\n## v-guide - Examples\n\nThe following is a collection of `v-virtual-scroll` examples that demonstrate how different the properties work in an application.",
    "display_content": "## v-guide - Examples\n\nThe following is a collection of `v-virtual-scroll` examples that demonstrate how different the properties work in an application.",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Examples",
      "content_type": "code_example",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001694",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001695",
    "text": "Component: v-guide\nSection: User Directory\nType: documentation\n\n## v-guide - User Directory\n\nThe v-virtual-scroll component can render an large amount of items by rendering only what it needs to fill the scroller’s viewport.\n\n<ExamplesExample file=\"v-virtual-scroll/misc-user-directory\" />",
    "display_content": "## v-guide - User Directory\n\nThe v-virtual-scroll component can render an large amount of items by rendering only what it needs to fill the scroller’s viewport.\n\n<ExamplesExample file=\"v-virtual-scroll/misc-user-directory\" />",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "User Directory",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001695",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001696",
    "text": "Component: v-windows\nType: component_overview\n\n# v-windows\n\nThe `v-window` component provides the baseline functionality for transitioning content from one pane to another. Other components such as `v-tabs`, `v-carousel` and `v-stepper` utilize this component at their core.",
    "display_content": "# v-windows\n\nThe `v-window` component provides the baseline functionality for transitioning content from one pane to another. Other components such as `v-tabs`, `v-carousel` and `v-stepper` utilize this component at their core.",
    "metadata": {
      "component": "v-windows",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001696",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001697",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nDesigned to easily cycle through content, `v-window` provides a simple interface to create custom implementations.",
    "display_content": "# v-usage\n\nDesigned to easily cycle through content, `v-window` provides a simple interface to create custom implementations.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001697",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001698",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [v-window](/api/v-window/) | Primary Component | | [v-window-item](/api/v-window-item/) | Sub-component used to display a single window item |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [v-window](/api/v-window/) | Primary Component | | [v-window-item](/api/v-window-item/) | Sub-component used to display a single window item |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001698",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001699",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nBy default no arrows are displayed. You can change this by adding the **show-arrows** prop. If you set the prop value to `\"hover\"`, they will only show when you mouse over the window.\n\nAvailable sections: Show arrows, Reverse, Direction, Customized arrows, Account creation, Onboarding, Misc Account Creation, Misc Onboarding, Prop Direction, Prop Reverse, Prop Show Arrows, Slots Next Prev, Usage",
    "display_content": "# v-examples\n\nBy default no arrows are displayed. You can change this by adding the **show-arrows** prop. If you set the prop value to `\"hover\"`, they will only show when you mouse over the window.\n\nAvailable sections: Show arrows, Reverse, Direction, Customized arrows, Account creation, Onboarding, Misc Account Creation, Misc Onboarding, Prop Direction, Prop Reverse, Prop Show Arrows, Slots Next Prev, Usage",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001699",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001700",
    "text": "Component: v-examples\nSection: Show arrows\nType: documentation\n\n## v-examples - Show arrows\n\nBy default no arrows are displayed. You can change this by adding the **show-arrows** prop. If you set the prop value to `\"hover\"`, they will only show when you mouse over the window.\n\n<ExamplesExample file=\"v-window/prop-show-arrows\" />",
    "display_content": "## v-examples - Show arrows\n\nBy default no arrows are displayed. You can change this by adding the **show-arrows** prop. If you set the prop value to `\"hover\"`, they will only show when you mouse over the window.\n\n<ExamplesExample file=\"v-window/prop-show-arrows\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Show arrows",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001700",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001701",
    "text": "Component: v-examples\nSection: Reverse\nType: documentation\n\n## v-examples - Reverse\n\nThe **reverse** prop will reverse the transitions\n\n<ExamplesExample file=\"v-window/prop-reverse\" />",
    "display_content": "## v-examples - Reverse\n\nThe **reverse** prop will reverse the transitions\n\n<ExamplesExample file=\"v-window/prop-reverse\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Reverse",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001701",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001702",
    "text": "Component: v-examples\nSection: Direction\nType: documentation\n\n## v-examples - Direction\n\nYou can change the transition to vertical using the **direction** prop\n\n<ExamplesExample file=\"v-window/prop-direction\" />",
    "display_content": "## v-examples - Direction\n\nYou can change the transition to vertical using the **direction** prop\n\n<ExamplesExample file=\"v-window/prop-direction\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Direction",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001702",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001703",
    "text": "Component: v-examples\nSection: Customized arrows\nType: documentation\n\n## v-examples - Customized arrows\n\nArrows can be customized by using **prev** and **next** slots.\n\n<ExamplesExample file=\"v-window/slots-next-prev\" />",
    "display_content": "## v-examples - Customized arrows\n\nArrows can be customized by using **prev** and **next** slots.\n\n<ExamplesExample file=\"v-window/slots-next-prev\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Customized arrows",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001703",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001704",
    "text": "Component: v-examples\nSection: Account creation\nType: documentation\n\n## v-examples - Account creation\n\nCreate rich forms with smooth animations. `v-window` automatically tracks the current selection index to change the transition direction.\n\n<ExamplesExample file=\"v-window/misc-account-creation\" />",
    "display_content": "## v-examples - Account creation\n\nCreate rich forms with smooth animations. `v-window` automatically tracks the current selection index to change the transition direction.\n\n<ExamplesExample file=\"v-window/misc-account-creation\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Account creation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001704",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001705",
    "text": "Component: v-examples\nSection: Onboarding\nType: documentation\n\n## v-examples - Onboarding\n\n`v-window` makes it easy to create custom components such as a differently styled stepper.\n\n<ExamplesExample file=\"v-window/misc-onboarding\" />",
    "display_content": "## v-examples - Onboarding\n\n`v-window` makes it easy to create custom components such as a differently styled stepper.\n\n<ExamplesExample file=\"v-window/misc-onboarding\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Onboarding",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001705",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001706",
    "text": "Component: v-examples\nSection: Misc Account Creation\nType: code_example\n\n## v-examples - Misc Account Creation\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-card-title class=\"text-h6 font-weight-regular justify-space-between\">\n      <span>{{ currentTitle }}</span>\n      <v-avatar\n        color=\"primary\"\n        size=\"24\"\n        v-text=\"step\"\n      ></v-avatar>\n    </v-card-title>\n\n    <v-window v-model=\"step\">\n      <v-window-item :value=\"1\">\n        <v-card-text>\n          <v-text-field\n            label=\"Email\"\n            placeholder=\"john@google.com\"\n          ></v-text-field>\n          <span class=\"text-caption text-grey-darken-1\">\n            This is the email you will use to login to your Vuetify account\n          </span>\n        </v-card-text>\n      </v-window-item>\n\n      <v-window-item :value=\"2\">\n        <v-card-text>\n          <v-text-field\n            label=\"Password\"\n            type=\"password\"\n          ></v-text-field>\n          <v-text-field\n            label=\"Confirm Password\"\n            type=\"password\"\n          ></v-text-field>\n          <span class=\"text-caption text-grey-darken-1\">\n            Please enter a password for your account\n          </span>\n        </v-card-text>\n      </v-window-item>\n\n      <v-window-item :value=\"3\">\n        <div class=\"pa-4 text-center\">\n          <v-img\n            class=\"mb-4\"\n            height=\"128\"\n            src=\"https://cdn.vuetifyjs.com/images/logos/v.svg\"\n          ></v-img>\n          <h3 class=\"text-h6 font-weight-light mb-2\">\n            Welcome to Vuetify\n          </h3>\n          <span class=\"text-caption text-grey\">Thanks for signing up!</span>\n        </div>\n      </v-window-item>\n    </v-window>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-btn\n        v-if=\"step > 1\"\n        variant=\"text\"\n        @click=\"step--\"\n      >\n        Back\n      </v-btn>\n      <v-spacer></v-spacer>\n      <v-btn\n        v-if=\"step < 3\"\n        color=\"primary\"\n        variant=\"flat\"\n        @click=\"step++\"\n      >\n        Next\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const step = ref(1)\n\n  const currentTitle = computed(() => {\n    switch (step.value) {\n      case 1: return 'Sign-up'\n      case 2: return 'Create a password'\n      default: return 'Account created'\n    }\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      step: 1,\n    }),\n\n    computed: {\n      currentTitle () {\n        switch (this.step) {\n          case 1: return 'Sign-up'\n          case 2: return 'Create a password'\n          default: return 'Account created'\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Account Creation\n\n```vue\n<template>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n  >\n    <v-card-title class=\"text-h6 font-weight-regular justify-space-between\">\n      <span>{{ currentTitle }}</span>\n      <v-avatar\n        color=\"primary\"\n        size=\"24\"\n        v-text=\"step\"\n      ></v-avatar>\n    </v-card-title>\n\n    <v-window v-model=\"step\">\n      <v-window-item :value=\"1\">\n        <v-card-text>\n          <v-text-field\n            label=\"Email\"\n            placeholder=\"john@google.com\"\n          ></v-text-field>\n          <span class=\"text-caption text-grey-darken-1\">\n            This is the email you will use to login to your Vuetify account\n          </span>\n        </v-card-text>\n      </v-window-item>\n\n      <v-window-item :value=\"2\">\n        <v-card-text>\n          <v-text-field\n            label=\"Password\"\n            type=\"password\"\n          ></v-text-field>\n          <v-text-field\n            label=\"Confirm Password\"\n            type=\"password\"\n          ></v-text-field>\n          <span class=\"text-caption text-grey-darken-1\">\n            Please enter a password for your account\n          </span>\n        </v-card-text>\n      </v-window-item>\n\n      <v-window-item :value=\"3\">\n        <div class=\"pa-4 text-center\">\n          <v-img\n            class=\"mb-4\"\n            height=\"128\"\n            src=\"https://cdn.vuetifyjs.com/images/logos/v.svg\"\n          ></v-img>\n          <h3 class=\"text-h6 font-weight-light mb-2\">\n            Welcome to Vuetify\n          </h3>\n          <span class=\"text-caption text-grey\">Thanks for signing up!</span>\n        </div>\n      </v-window-item>\n    </v-window>\n\n    <v-divider></v-divider>\n\n    <v-card-actions>\n      <v-btn\n        v-if=\"step > 1\"\n        variant=\"text\"\n        @click=\"step--\"\n      >\n        Back\n      </v-btn>\n      <v-spacer></v-spacer>\n      <v-btn\n        v-if=\"step < 3\"\n        color=\"primary\"\n        variant=\"flat\"\n        @click=\"step++\"\n      >\n        Next\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { computed, ref } from 'vue'\n\n  const step = ref(1)\n\n  const currentTitle = computed(() => {\n    switch (step.value) {\n      case 1: return 'Sign-up'\n      case 2: return 'Create a password'\n      default: return 'Account created'\n    }\n  })\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      step: 1,\n    }),\n\n    computed: {\n      currentTitle () {\n        switch (this.step) {\n          case 1: return 'Sign-up'\n          case 2: return 'Create a password'\n          default: return 'Account created'\n        }\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Account Creation",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001706",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001707",
    "text": "Component: v-examples\nSection: Misc Onboarding\nType: code_example\n\n## v-examples - Misc Onboarding\n\n```vue\n<template>\n  <v-card\n    rounded=\"0\"\n    theme=\"dark\"\n    flat\n  >\n    <v-window v-model=\"onboarding\">\n      <v-window-item\n        v-for=\"n in length\"\n        :key=\"`card-${n}`\"\n        :value=\"n\"\n      >\n        <v-card\n          class=\"d-flex justify-center align-center\"\n          height=\"200\"\n        >\n          <span class=\"text-h2\">\n            Card {{ n }}\n          </span>\n        </v-card>\n      </v-window-item>\n    </v-window>\n\n    <v-card-actions class=\"justify-space-between\">\n      <v-btn\n        icon=\"mdi-chevron-left\"\n        variant=\"plain\"\n        @click=\"prev\"\n      ></v-btn>\n      <v-item-group\n        v-model=\"onboarding\"\n        class=\"text-center\"\n        mandatory\n      >\n        <v-item\n          v-for=\"n in length\"\n          :key=\"`btn-${n}`\"\n          v-slot=\"{ isSelected, toggle }\"\n          :value=\"n\"\n        >\n          <v-btn\n            :variant=\"isSelected ? 'outlined' : 'text'\"\n            icon=\"mdi-record\"\n            @click=\"toggle\"\n          ></v-btn>\n        </v-item>\n      </v-item-group>\n      <v-btn\n        icon=\"mdi-chevron-right\"\n        variant=\"plain\"\n        @click=\"next\"\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const length = ref(3)\n  const onboarding = ref(1)\n\n  function next () {\n    onboarding.value = onboarding.value + 1 > length.value ? 1 : onboarding.value + 1\n  }\n  function prev () {\n    onboarding.value = onboarding.value - 1 <= 0 ? length.value : onboarding.value - 1\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      onboarding: 1,\n    }),\n\n    methods: {\n      next () {\n        this.onboarding = this.onboarding + 1 > this.length\n          ? 1\n          : this.onboarding + 1\n      },\n      prev () {\n        this.onboarding = this.onboarding - 1 <= 0\n          ? this.length\n          : this.onboarding - 1\n      },\n    },\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Misc Onboarding\n\n```vue\n<template>\n  <v-card\n    rounded=\"0\"\n    theme=\"dark\"\n    flat\n  >\n    <v-window v-model=\"onboarding\">\n      <v-window-item\n        v-for=\"n in length\"\n        :key=\"`card-${n}`\"\n        :value=\"n\"\n      >\n        <v-card\n          class=\"d-flex justify-center align-center\"\n          height=\"200\"\n        >\n          <span class=\"text-h2\">\n            Card {{ n }}\n          </span>\n        </v-card>\n      </v-window-item>\n    </v-window>\n\n    <v-card-actions class=\"justify-space-between\">\n      <v-btn\n        icon=\"mdi-chevron-left\"\n        variant=\"plain\"\n        @click=\"prev\"\n      ></v-btn>\n      <v-item-group\n        v-model=\"onboarding\"\n        class=\"text-center\"\n        mandatory\n      >\n        <v-item\n          v-for=\"n in length\"\n          :key=\"`btn-${n}`\"\n          v-slot=\"{ isSelected, toggle }\"\n          :value=\"n\"\n        >\n          <v-btn\n            :variant=\"isSelected ? 'outlined' : 'text'\"\n            icon=\"mdi-record\"\n            @click=\"toggle\"\n          ></v-btn>\n        </v-item>\n      </v-item-group>\n      <v-btn\n        icon=\"mdi-chevron-right\"\n        variant=\"plain\"\n        @click=\"next\"\n      ></v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const length = ref(3)\n  const onboarding = ref(1)\n\n  function next () {\n    onboarding.value = onboarding.value + 1 > length.value ? 1 : onboarding.value + 1\n  }\n  function prev () {\n    onboarding.value = onboarding.value - 1 <= 0 ? length.value : onboarding.value - 1\n  }\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      onboarding: 1,\n    }),\n\n    methods: {\n      next () {\n        this.onboarding = this.onboarding + 1 > this.length\n          ? 1\n          : this.onboarding + 1\n      },\n      prev () {\n        this.onboarding = this.onboarding - 1 <= 0\n          ? this.length\n          : this.onboarding - 1\n      },\n    },\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Misc Onboarding",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001707",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001708",
    "text": "Component: v-examples\nSection: Prop Direction\nType: code_example\n\n## v-examples - Prop Direction\n\n```vue\n<template>\n  <v-window\n    v-model=\"onboarding\"\n    direction=\"vertical\"\n    show-arrows\n  >\n    <v-window-item\n      v-for=\"n in length\"\n      :key=\"`card-${n}`\"\n    >\n      <v-card\n        class=\"d-flex align-center justify-center ma-2\"\n        elevation=\"2\"\n        height=\"200\"\n      >\n        <h1\n          class=\"text-h2\"\n        >\n          Slide {{ n }}\n        </h1>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const length = ref(3)\n  const onboarding = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      onboarding: 0,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Direction\n\n```vue\n<template>\n  <v-window\n    v-model=\"onboarding\"\n    direction=\"vertical\"\n    show-arrows\n  >\n    <v-window-item\n      v-for=\"n in length\"\n      :key=\"`card-${n}`\"\n    >\n      <v-card\n        class=\"d-flex align-center justify-center ma-2\"\n        elevation=\"2\"\n        height=\"200\"\n      >\n        <h1\n          class=\"text-h2\"\n        >\n          Slide {{ n }}\n        </h1>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const length = ref(3)\n  const onboarding = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      onboarding: 0,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Direction",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001708",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001709",
    "text": "Component: v-examples\nSection: Prop Reverse\nType: code_example\n\n## v-examples - Prop Reverse\n\n```vue\n<template>\n  <v-window\n    v-model=\"onboarding\"\n    reverse\n    show-arrows\n  >\n    <v-window-item\n      v-for=\"n in length\"\n      :key=\"`card-${n}`\"\n    >\n      <v-card\n        class=\"d-flex align-center justify-center ma-2\"\n        elevation=\"2\"\n        height=\"200\"\n      >\n        <h1\n          class=\"text-h2\"\n        >\n          Slide {{ n }}\n        </h1>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const length = ref(3)\n  const onboarding = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      onboarding: 0,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Reverse\n\n```vue\n<template>\n  <v-window\n    v-model=\"onboarding\"\n    reverse\n    show-arrows\n  >\n    <v-window-item\n      v-for=\"n in length\"\n      :key=\"`card-${n}`\"\n    >\n      <v-card\n        class=\"d-flex align-center justify-center ma-2\"\n        elevation=\"2\"\n        height=\"200\"\n      >\n        <h1\n          class=\"text-h2\"\n        >\n          Slide {{ n }}\n        </h1>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const length = ref(3)\n  const onboarding = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      onboarding: 0,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Reverse",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001709",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001710",
    "text": "Component: v-examples\nSection: Prop Show Arrows\nType: code_example\n\n## v-examples - Prop Show Arrows\n\n```vue\n<template>\n  <v-window\n    v-model=\"onboarding\"\n    show-arrows=\"hover\"\n  >\n    <v-window-item\n      v-for=\"n in length\"\n      :key=\"`card-${n}`\"\n    >\n      <v-card\n        class=\"d-flex align-center justify-center ma-2\"\n        elevation=\"2\"\n        height=\"200\"\n      >\n        <h1\n          class=\"text-h2\"\n        >\n          Slide {{ n }}\n        </h1>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const length = ref(3)\n  const onboarding = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      onboarding: 0,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Prop Show Arrows\n\n```vue\n<template>\n  <v-window\n    v-model=\"onboarding\"\n    show-arrows=\"hover\"\n  >\n    <v-window-item\n      v-for=\"n in length\"\n      :key=\"`card-${n}`\"\n    >\n      <v-card\n        class=\"d-flex align-center justify-center ma-2\"\n        elevation=\"2\"\n        height=\"200\"\n      >\n        <h1\n          class=\"text-h2\"\n        >\n          Slide {{ n }}\n        </h1>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  const length = ref(3)\n  const onboarding = ref(0)\n</script>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      onboarding: 0,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Prop Show Arrows",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001710",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001711",
    "text": "Component: v-examples\nSection: Slots Next Prev\nType: code_example\n\n## v-examples - Slots Next Prev\n\n```vue\n<template>\n  <v-window show-arrows>\n    <template v-slot:prev=\"{ props }\">\n      <v-btn\n        color=\"success\"\n        @click=\"props.onClick\"\n      >\n        Previous slide\n      </v-btn>\n    </template>\n    <template v-slot:next=\"{ props }\">\n      <v-btn\n        color=\"info\"\n        @click=\"props.onClick\"\n      >\n        Next slide\n      </v-btn>\n    </template>\n    <v-window-item\n      v-for=\"n in 3\"\n      :key=\"`card-${n}`\"\n    >\n      <v-card\n        class=\"d-flex align-center justify-center ma-2\"\n        elevation=\"2\"\n        height=\"200\"\n      >\n        <h1\n          class=\"text-h2\"\n        >\n          Slide {{ n }}\n        </h1>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n```",
    "display_content": "## v-examples - Slots Next Prev\n\n```vue\n<template>\n  <v-window show-arrows>\n    <template v-slot:prev=\"{ props }\">\n      <v-btn\n        color=\"success\"\n        @click=\"props.onClick\"\n      >\n        Previous slide\n      </v-btn>\n    </template>\n    <template v-slot:next=\"{ props }\">\n      <v-btn\n        color=\"info\"\n        @click=\"props.onClick\"\n      >\n        Next slide\n      </v-btn>\n    </template>\n    <v-window-item\n      v-for=\"n in 3\"\n      :key=\"`card-${n}`\"\n    >\n      <v-card\n        class=\"d-flex align-center justify-center ma-2\"\n        elevation=\"2\"\n        height=\"200\"\n      >\n        <h1\n          class=\"text-h2\"\n        >\n          Slide {{ n }}\n        </h1>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Slots Next Prev",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001711",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001712",
    "text": "Component: v-examples\nSection: Usage\nType: code_example\n\n## v-examples - Usage\n\n```vue\n<template>\n  <v-window\n    v-model=\"window\"\n    show-arrows\n  >\n    <v-window-item\n      v-for=\"n in length\"\n      :key=\"n\"\n    >\n      <v-card class=\"d-flex justify-center align-center\" height=\"200px\">\n        <span class=\"text-h2\">Card {{ n }}</span>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      window: 0,\n    }),\n  }\n</script>\n\n```",
    "display_content": "## v-examples - Usage\n\n```vue\n<template>\n  <v-window\n    v-model=\"window\"\n    show-arrows\n  >\n    <v-window-item\n      v-for=\"n in length\"\n      :key=\"n\"\n    >\n      <v-card class=\"d-flex justify-center align-center\" height=\"200px\">\n        <span class=\"text-h2\">Card {{ n }}</span>\n      </v-card>\n    </v-window-item>\n  </v-window>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      length: 3,\n      window: 0,\n    }),\n  }\n</script>\n\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Usage",
      "content_type": "code_example",
      "language": "vue",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001712",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001713",
    "text": "Component: v-border-radius\nType: component_overview\n\n# v-border-radius\n\nUse border utilities to quickly style the border-radius of any element.",
    "display_content": "# v-border-radius\n\nUse border utilities to quickly style the border-radius of any element.",
    "metadata": {
      "component": "v-border-radius",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001713",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001714",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `border-radius` utilities allow you to quickly style the border-radius of any element.\n\nAvailable sections: Rounded corners, Pill and circle, Rounding by side, Rounding by corner, No rounding, Components",
    "display_content": "# v-usage\n\nThe `border-radius` utilities allow you to quickly style the border-radius of any element.\n\nAvailable sections: Rounded corners, Pill and circle, Rounding by side, Rounding by corner, No rounding, Components",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001714",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001715",
    "text": "Component: v-usage\nSection: Rounded corners\nType: documentation\n\n## v-usage - Rounded corners\n\nUse the **rounded**, **rounded-0**, **rounded-sm**, **rounded-lg**, and **rounded-xl** classes to set the border-radius of an element.\n\n<ExamplesExample file=\"border-radius/misc-rounded-corners\" />",
    "display_content": "## v-usage - Rounded corners\n\nUse the **rounded**, **rounded-0**, **rounded-sm**, **rounded-lg**, and **rounded-xl** classes to set the border-radius of an element.\n\n<ExamplesExample file=\"border-radius/misc-rounded-corners\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Rounded corners",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001715",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001716",
    "text": "Component: v-usage\nSection: Pill and circle\nType: documentation\n\n## v-usage - Pill and circle\n\nUse the **rounded-pill** and **rounded-circle** classes to create pill and circle shapes.\n\n<ExamplesExample file=\"border-radius/misc-pill-and-circle\" />",
    "display_content": "## v-usage - Pill and circle\n\nUse the **rounded-pill** and **rounded-circle** classes to create pill and circle shapes.\n\n<ExamplesExample file=\"border-radius/misc-pill-and-circle\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Pill and circle",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001716",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001717",
    "text": "Component: v-usage\nSection: Rounding by side\nType: documentation\n\n## v-usage - Rounding by side\n\nUse the **rounded-t-\\***, **rounded-b-\\***, **rounded-s-\\***, and **rounded-e-\\*** classes to set the border-radius of an element on a specific side.\n\n<ExamplesExample file=\"border-radius/misc-rounding-by-side\" />",
    "display_content": "## v-usage - Rounding by side\n\nUse the **rounded-t-\\***, **rounded-b-\\***, **rounded-s-\\***, and **rounded-e-\\*** classes to set the border-radius of an element on a specific side.\n\n<ExamplesExample file=\"border-radius/misc-rounding-by-side\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Rounding by side",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001717",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001718",
    "text": "Component: v-usage\nSection: Rounding by corner\nType: documentation\n\n## v-usage - Rounding by corner\n\nUse the **rounded-te-\\***, **rounded-ts-\\***, **rounded-be-\\***, and **rounded-bs-\\*** classes to set the border-radius of an element on a specific corner.\n\n<ExamplesExample file=\"border-radius/misc-rounding-by-corner\" />",
    "display_content": "## v-usage - Rounding by corner\n\nUse the **rounded-te-\\***, **rounded-ts-\\***, **rounded-be-\\***, and **rounded-bs-\\*** classes to set the border-radius of an element on a specific corner.\n\n<ExamplesExample file=\"border-radius/misc-rounding-by-corner\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Rounding by corner",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001718",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001719",
    "text": "Component: v-usage\nSection: No rounding\nType: documentation\n\n## v-usage - No rounding\n\nUse the **rounded-0** class to remove the border-radius from an element.\n\n<ExamplesExample file=\"border-radius/misc-removing-border-radius\" />",
    "display_content": "## v-usage - No rounding\n\nUse the **rounded-0** class to remove the border-radius from an element.\n\n<ExamplesExample file=\"border-radius/misc-removing-border-radius\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "No rounding",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001719",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001720",
    "text": "Component: v-usage\nSection: Components\nType: documentation\n\n## v-usage - Components\n\n::: info\n\nWhen using the **rounded** property on components, omit the `rounded-` prefix. For example, use `rounded=\"sm\"` instead of `rounded-sm`.\n\n:::\n\nSetting the **rounded** property applies a component specific border-radius class, such as `v-sheet--rounded`. This is to ensure that basic rounded usage persists even if the utility classes are disabled.\n\n<ExamplesExample file=\"border-radius/misc-components\" />",
    "display_content": "## v-usage - Components\n\n::: info\n\nWhen using the **rounded** property on components, omit the `rounded-` prefix. For example, use `rounded=\"sm\"` instead of `rounded-sm`.\n\n:::\n\nSetting the **rounded** property applies a component specific border-radius class, such as `v-sheet--rounded`. This is to ensure that basic rounded usage persists even if the utility classes are disabled.\n\n<ExamplesExample file=\"border-radius/misc-components\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Components",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001720",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001721",
    "text": "Component: v-sass-variables\nType: component_overview\n\n# v-sass-variables\n\nYou can also use the following SASS variables to customize the border color and width:",
    "display_content": "# v-sass-variables\n\nYou can also use the following SASS variables to customize the border color and width:",
    "metadata": {
      "component": "v-sass-variables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001721",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001722",
    "text": "Component: v-borders\nType: component_overview\n\n# v-borders\n\nUtilities for controlling the border of elements in your application.",
    "display_content": "# v-borders\n\nUtilities for controlling the border of elements in your application.",
    "metadata": {
      "component": "v-borders",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001722",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001723",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `border` utilities allow you to quickly style the border of any element.\n\nAvailable sections: All sides, Individual sides, Border styles, Theme colors, Components",
    "display_content": "# v-usage\n\nThe `border` utilities allow you to quickly style the border of any element.\n\nAvailable sections: All sides, Individual sides, Border styles, Theme colors, Components",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001723",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001724",
    "text": "Component: v-usage\nSection: All sides\nType: documentation\n\n## v-usage - All sides\n\nUse the **border**, **border-0**, **border-sm**, **border-md**, **border-lg**, and **border-xl** classes to set the border width of an element.\n\n<ExamplesExample file=\"border/all\" />",
    "display_content": "## v-usage - All sides\n\nUse the **border**, **border-0**, **border-sm**, **border-md**, **border-lg**, and **border-xl** classes to set the border width of an element.\n\n<ExamplesExample file=\"border/all\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "All sides",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001724",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001725",
    "text": "Component: v-usage\nSection: Individual sides\nType: documentation\n\n## v-usage - Individual sides\n\nUse the **border-\\***, **border-\\*-0**, **border-\\*-sm**, **border-\\*-md**, **border-\\*-lg**, and **border-\\*-xl** classes to set the border width of an element on a specific side.\n\n<ExamplesExample file=\"border/sides\" />",
    "display_content": "## v-usage - Individual sides\n\nUse the **border-\\***, **border-\\*-0**, **border-\\*-sm**, **border-\\*-md**, **border-\\*-lg**, and **border-\\*-xl** classes to set the border width of an element on a specific side.\n\n<ExamplesExample file=\"border/sides\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Individual sides",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001725",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001726",
    "text": "Component: v-usage\nSection: Border styles\nType: documentation\n\n## v-usage - Border styles\n\nUse the **border-dashed**, **border-dotted**, **border-double**, and **border-solid** classes to set the border style of an element.\n\n<ExamplesExample file=\"border/styles\" />",
    "display_content": "## v-usage - Border styles\n\nUse the **border-dashed**, **border-dotted**, **border-double**, and **border-solid** classes to set the border style of an element.\n\n<ExamplesExample file=\"border/styles\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Border styles",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001726",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001727",
    "text": "Component: v-usage\nSection: Theme colors\nType: documentation\n\n## v-usage - Theme colors\n\nComponents that support the **border** property can take advantage of all border utility classes. This includes colors generated by your theme.\n\n<ExamplesExample file=\"border/colors\" />\n\n| Class | Properties |\n| - | - |\n| **border-primary** | --v-border-color: var(--v-theme-primary); |\n| **border-secondary** | --v-border-color: var(--v-theme-secondary); |\n| **border-accent** | --v-border-color: var(--v-theme-accent); |\n| **border-error** | --v-border-color: var(--v-theme-error); |\n| **border-info** | --v-border-color: var(--v-theme-info); |\n| **border-success** | --v-border-color: var(--v-theme-success); |\n| **border-warning** | --v-border-color: var(--v-theme-warning); |\n| **border-surface** | --v-border-color: var(--v-theme-surface); |\n| **border-background** | --v-border-color: var(--v-theme-background); |\n| **border-surface-light** | --v-border-color: var(--v-theme-surface-light); |\n| **border-surface-variant** | --v-border-color: var(--v-theme-surface-variant); |\n| **border-surface-bright** | --v-border-color: var(--v-theme-surface-bright); |\n| **border-current** | --v-border-color: currentColor; { style=\"max-height: 420px;\" fixed-header } |",
    "display_content": "## v-usage - Theme colors\n\nComponents that support the **border** property can take advantage of all border utility classes. This includes colors generated by your theme.\n\n<ExamplesExample file=\"border/colors\" />\n\n| Class | Properties |\n| - | - |\n| **border-primary** | --v-border-color: var(--v-theme-primary); |\n| **border-secondary** | --v-border-color: var(--v-theme-secondary); |\n| **border-accent** | --v-border-color: var(--v-theme-accent); |\n| **border-error** | --v-border-color: var(--v-theme-error); |\n| **border-info** | --v-border-color: var(--v-theme-info); |\n| **border-success** | --v-border-color: var(--v-theme-success); |\n| **border-warning** | --v-border-color: var(--v-theme-warning); |\n| **border-surface** | --v-border-color: var(--v-theme-surface); |\n| **border-background** | --v-border-color: var(--v-theme-background); |\n| **border-surface-light** | --v-border-color: var(--v-theme-surface-light); |\n| **border-surface-variant** | --v-border-color: var(--v-theme-surface-variant); |\n| **border-surface-bright** | --v-border-color: var(--v-theme-surface-bright); |\n| **border-current** | --v-border-color: currentColor; { style=\"max-height: 420px;\" fixed-header } |",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Theme colors",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001727",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001728",
    "text": "Component: v-usage\nSection: Components\nType: documentation\n\n## v-usage - Components\n\n::: info\n\nWhen using the **border** property on components, omit the `border-` prefix. For example, use `border=\"sm\"` instead of `border=\"border-sm\"`.\n\n:::\n\nSetting the **border** property to true applies a component specific border class, such as `v-card--border`. This is to ensure that basic border usage persists even if the utility classes are disabled.\n\n<ExamplesExample file=\"border/card\" />",
    "display_content": "## v-usage - Components\n\n::: info\n\nWhen using the **border** property on components, omit the `border-` prefix. For example, use `border=\"sm\"` instead of `border=\"border-sm\"`.\n\n:::\n\nSetting the **border** property to true applies a component specific border class, such as `v-card--border`. This is to ensure that basic border usage persists even if the utility classes are disabled.\n\n<ExamplesExample file=\"border/card\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Components",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001728",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001729",
    "text": "Component: v-sass-variables\nType: component_overview\n\n# v-sass-variables\n\nYou can also use the following SASS variables to customize the border color and width:",
    "display_content": "# v-sass-variables\n\nYou can also use the following SASS variables to customize the border color and width:",
    "metadata": {
      "component": "v-sass-variables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001729",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001730",
    "text": "Component: v-colors\nType: component_overview\n\n# v-colors\n\nOut of the box you get access to all colors in the [Material Design specification](https://material.io/design/color/the-color-system.html) through **sass** and **javascript**. These values can be used within your style sheets, your component files and on actual components via the **color** prop.",
    "display_content": "# v-colors\n\nOut of the box you get access to all colors in the [Material Design specification](https://material.io/design/color/the-color-system.html) through **sass** and **javascript**. These values can be used within your style sheets, your component files and on actual components via the **color** prop.",
    "metadata": {
      "component": "v-colors",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001730",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001731",
    "text": "Component: v-classes\nType: component_overview\n\n# v-classes\n\nEach color from the specification gets converted to a **background** and **text** variant for styling within your application through a class, e.g. `<div class=\"bg-red\">` or `<span class=\"text-red\">`. These class colors are defined [here](https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/styles/settings/_colors.scss).",
    "display_content": "# v-classes\n\nEach color from the specification gets converted to a **background** and **text** variant for styling within your application through a class, e.g. `<div class=\"bg-red\">` or `<span class=\"text-red\">`. These class colors are defined [here](https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/styles/settings/_colors.scss).",
    "metadata": {
      "component": "v-classes",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001731",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001732",
    "text": "Component: v-javascript-color-pack\nType: component_overview\n\n# v-javascript-color-pack\n\nVuetify has an optional javascript color pack that you can import and use within your application. This can also be used to help define your application's theme.",
    "display_content": "# v-javascript-color-pack\n\nVuetify has an optional javascript color pack that you can import and use within your application. This can also be used to help define your application's theme.",
    "metadata": {
      "component": "v-javascript-color-pack",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001732",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001733",
    "text": "Component: v-sass-color-pack\nType: component_overview\n\n# v-sass-color-pack\n\nWhile convenient, the color pack increases the CSS export size by ~30kb. Some projects may only require the classes that are created at runtime from the Vuetify **theme** system. To disable the color pack feature, follow [sass variables](/features/sass-variables) and set `$color-pack: false`{.text-no-wrap}.",
    "display_content": "# v-sass-color-pack\n\nWhile convenient, the color pack increases the CSS export size by ~30kb. Some projects may only require the classes that are created at runtime from the Vuetify **theme** system. To disable the color pack feature, follow [sass variables](/features/sass-variables) and set `$color-pack: false`{.text-no-wrap}.",
    "metadata": {
      "component": "v-sass-color-pack",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001733",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001734",
    "text": "Component: v-material-colors\nType: component_overview\n\n# v-material-colors\n\nBelow is a list of the Material design color palette grouped by primary color",
    "display_content": "# v-material-colors\n\nBelow is a list of the Material design color palette grouped by primary color",
    "metadata": {
      "component": "v-material-colors",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001734",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001735",
    "text": "Component: v-content\nType: component_overview\n\n# v-content\n\nVuetify has custom styling for multiple standard elements.",
    "display_content": "# v-content\n\nVuetify has custom styling for multiple standard elements.",
    "metadata": {
      "component": "v-content",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001735",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001736",
    "text": "Component: v-block-quote\nType: component_overview\n\n# v-block-quote\n\n> Lorem ipsum dolor sit amet, consectetur adipisicing elit. Harum maiores modi quidem veniam, expedita quis laboriosam, ullam facere adipisci, iusto, voluptate sapiente corrupti asperiores rem nemo numquam fuga ab at. {.blockquote}",
    "display_content": "# v-block-quote\n\n> Lorem ipsum dolor sit amet, consectetur adipisicing elit. Harum maiores modi quidem veniam, expedita quis laboriosam, ullam facere adipisci, iusto, voluptate sapiente corrupti asperiores rem nemo numquam fuga ab at. {.blockquote}",
    "metadata": {
      "component": "v-block-quote",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001736",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001737",
    "text": "Component: v-paragraphs\nType: component_overview\n\n# v-paragraphs\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Harum maiores modi quidem veniam, expedita quis laboriosam, ullam facere adipisci, iusto, voluptate sapiente corrupti asperiores rem nemo numquam fuga ab at.",
    "display_content": "# v-paragraphs\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Harum maiores modi quidem veniam, expedita quis laboriosam, ullam facere adipisci, iusto, voluptate sapiente corrupti asperiores rem nemo numquam fuga ab at.",
    "metadata": {
      "component": "v-paragraphs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001737",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001738",
    "text": "Component: v-code\nType: component_overview\n\n# v-code\n\nExample of an inline `<code>` element.",
    "display_content": "# v-code\n\nExample of an inline `<code>` element.",
    "metadata": {
      "component": "v-code",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001738",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001739",
    "text": "Component: v-css-reset\nType: component_overview\n\n# v-css-reset\n\nOpinionated base styles for Vuetify projects.",
    "display_content": "# v-css-reset\n\nOpinionated base styles for Vuetify projects.",
    "metadata": {
      "component": "v-css-reset",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001739",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001740",
    "text": "Component: v-bootstrapping\nType: component_overview\n\n# v-bootstrapping\n\nress is a modern CSS reset that applies a solid base for stylesheets. It is built on top of [normalize.css](https://github.com/necolas/normalize.css) and adds new features such as specifying `font-family: monospace` for `<code>` elements, removing all `outlines` from elements when hovering, and much much more. Additional information can be found on the [ress GitHub repository](https://github.com/filipelinhares/ress).",
    "display_content": "# v-bootstrapping\n\nress is a modern CSS reset that applies a solid base for stylesheets. It is built on top of [normalize.css](https://github.com/necolas/normalize.css) and adds new features such as specifying `font-family: monospace` for `<code>` elements, removing all `outlines` from elements when hovering, and much much more. Additional information can be found on the [ress GitHub repository](https://github.com/filipelinhares/ress).",
    "metadata": {
      "component": "v-bootstrapping",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001740",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001741",
    "text": "Component: v-reset-features\nType: component_overview\n\n# v-reset-features\n\nBelow is a list of additional *features* that ress provides over the default **normalize.css** functionality",
    "display_content": "# v-reset-features\n\nBelow is a list of additional *features* that ress provides over the default **normalize.css** functionality",
    "metadata": {
      "component": "v-reset-features",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001741",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001742",
    "text": "Component: v-cursor\nType: component_overview\n\n# v-cursor\n\nUtilities for controlling the cursor styling when hovering over elements.",
    "display_content": "# v-cursor\n\nUtilities for controlling the cursor styling when hovering over elements.",
    "metadata": {
      "component": "v-cursor",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001742",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001743",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nApply custom cursor styling to a component or element.",
    "display_content": "# v-usage\n\nApply custom cursor styling to a component or element.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001743",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001744",
    "text": "Component: v-sass-variables\nType: component_overview\n\n# v-sass-variables\n\nYou can also use the following SASS variables to customize the border color and width:",
    "display_content": "# v-sass-variables\n\nYou can also use the following SASS variables to customize the border color and width:",
    "metadata": {
      "component": "v-sass-variables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001744",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001745",
    "text": "Component: v-display\nType: component_overview\n\n# v-display\n\nDisplay helpers control content visibility and display type based on the viewport.",
    "display_content": "# v-display\n\nDisplay helpers control content visibility and display type based on the viewport.",
    "metadata": {
      "component": "v-display",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001745",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001746",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nSpecify the element's `display` property. These classes can be applied to all breakpoints from `xs` to `xxl`. When using a base class,`.d-{value}`, it is inferred to be `.d-xs-{value}`.",
    "display_content": "# v-usage\n\nSpecify the element's `display` property. These classes can be applied to all breakpoints from `xs` to `xxl`. When using a base class,`.d-{value}`, it is inferred to be `.d-xs-{value}`.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001746",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001747",
    "text": "Component: v-visibility\nType: component_overview\n\n# v-visibility\n\nConditionally display an element based upon the current **viewport**. Breakpoint utility classes always apply from the bottom up. That means if you have `.d-none`, it will apply to all breakpoints. However, `.d-md-none` will apply to only `md` and up.\n\nAvailable sections: Caveats",
    "display_content": "# v-visibility\n\nConditionally display an element based upon the current **viewport**. Breakpoint utility classes always apply from the bottom up. That means if you have `.d-none`, it will apply to all breakpoints. However, `.d-md-none` will apply to only `md` and up.\n\nAvailable sections: Caveats",
    "metadata": {
      "component": "v-visibility",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001747",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001748",
    "text": "Component: v-visibility\nSection: Caveats\nType: documentation\n\n## v-visibility - Caveats\n\n::: info\nIt is important to note that using any of the display classes above will result in any display style previously added being overwritten. This is because of the classes using `!important` in their display styling.\n:::",
    "display_content": "## v-visibility - Caveats\n\n::: info\nIt is important to note that using any of the display classes above will result in any display style previously added being overwritten. This is because of the classes using `!important` in their display styling.\n:::",
    "metadata": {
      "component": "v-visibility",
      "section_type": "subsection",
      "subsection": "Caveats",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001748",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001749",
    "text": "Component: v-display-in-print\nType: component_overview\n\n# v-display-in-print\n\nYou can also change the display property when printing. Print utility classes can also be combined with none print display utilities.",
    "display_content": "# v-display-in-print\n\nYou can also change the display property when printing. Print utility classes can also be combined with none print display utilities.",
    "metadata": {
      "component": "v-display-in-print",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001749",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001750",
    "text": "Component: v-accessibility\nType: component_overview\n\n# v-accessibility\n\nUse the `d-sr` utility classes to conditionally hide content on all devices _except_ screen readers.\n\nAvailable sections: Screen readers",
    "display_content": "# v-accessibility\n\nUse the `d-sr` utility classes to conditionally hide content on all devices _except_ screen readers.\n\nAvailable sections: Screen readers",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001750",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001751",
    "text": "Component: v-accessibility\nSection: Screen readers\nType: documentation\n\n## v-accessibility - Screen readers\n\nUse the `d-sr` utility classes to conditionally hide content on all devices _except_ screen readers.\n\n- `d-sr-only` visually hides elements but will still announce to **screen readers**.\n- `d-sr-only-focusable` visually hides an element until it is focused. This is useful when implementing _skip links_.",
    "display_content": "## v-accessibility - Screen readers\n\nUse the `d-sr` utility classes to conditionally hide content on all devices _except_ screen readers.\n\n- `d-sr-only` visually hides elements but will still announce to **screen readers**.\n- `d-sr-only-focusable` visually hides an element until it is focused. This is useful when implementing _skip links_.",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "subsection",
      "subsection": "Screen readers",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001751",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001752",
    "text": "Component: v-elevation\nType: component_overview\n\n# v-elevation\n\nThe elevation helpers control the relative depth between surfaces along the **z-axis**.",
    "display_content": "# v-elevation\n\nThe elevation helpers control the relative depth between surfaces along the **z-axis**.",
    "metadata": {
      "component": "v-elevation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001752",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001753",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `elevation` helper classes allow you to assign a custom **z-depth** to any element.",
    "display_content": "# v-usage\n\nThe `elevation` helper classes allow you to assign a custom **z-depth** to any element.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001753",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001754",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nNumerous components utilize the **elevatable** mixin and are given an **elevation** prop. For components that are not supported, you can dynamically change the class\n\nAvailable sections: Dynamic elevation",
    "display_content": "# v-examples\n\nNumerous components utilize the **elevatable** mixin and are given an **elevation** prop. For components that are not supported, you can dynamically change the class\n\nAvailable sections: Dynamic elevation",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001754",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001755",
    "text": "Component: v-examples\nSection: Dynamic elevation\nType: documentation\n\n## v-examples - Dynamic elevation\n\nNumerous components utilize the **elevatable** mixin and are given an **elevation** prop. For components that are not supported, you can dynamically change the class\n\n<ExamplesExample file=\"elevation/prop-dynamic\" />",
    "display_content": "## v-examples - Dynamic elevation\n\nNumerous components utilize the **elevatable** mixin and are given an **elevation** prop. For components that are not supported, you can dynamically change the class\n\n<ExamplesExample file=\"elevation/prop-dynamic\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Dynamic elevation",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001755",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001756",
    "text": "Component: v-flex\nType: component_overview\n\n# v-flex\n\nControl the layout of flex containers with alignment, justification and more with responsive flexbox utilities.",
    "display_content": "# v-flex\n\nControl the layout of flex containers with alignment, justification and more with responsive flexbox utilities.",
    "metadata": {
      "component": "v-flex",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001756",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001757",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nUsing `display` utilities you can turn any element into a flexbox container transforming **direct children elements** into flex items. Using additional flex property utilities, you can customize their interaction even further.\n\nAvailable sections: Caveats",
    "display_content": "# v-usage\n\nUsing `display` utilities you can turn any element into a flexbox container transforming **direct children elements** into flex items. Using additional flex property utilities, you can customize their interaction even further.\n\nAvailable sections: Caveats",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001757",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001758",
    "text": "Component: v-usage\nSection: Caveats\nType: documentation\n\n## v-usage - Caveats\n\n::: info\nIt is important to note that using any of the display classes above will result in any display style previously added being overwritten. This is because of the classes using `!important` in their display styling.\n:::",
    "display_content": "## v-usage - Caveats\n\n::: info\nIt is important to note that using any of the display classes above will result in any display style previously added being overwritten. This is because of the classes using `!important` in their display styling.\n:::",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Caveats",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001758",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001759",
    "text": "Component: v-flex-shorthand\nType: component_overview\n\n# v-flex-shorthand\n\nThe flex utility classes can be used to modify the **flex** css property. This makes it easy to position flex items within a flex container.",
    "display_content": "# v-flex-shorthand\n\nThe flex utility classes can be used to modify the **flex** css property. This makes it easy to position flex items within a flex container.",
    "metadata": {
      "component": "v-flex-shorthand",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001759",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001760",
    "text": "Component: v-flex-direction\nType: component_overview\n\n# v-flex-direction\n\nBy default, `d-flex` applies `flex-direction: row` and can generally be omitted. However, there may be situations where you need to explicitly define it.",
    "display_content": "# v-flex-direction\n\nBy default, `d-flex` applies `flex-direction: row` and can generally be omitted. However, there may be situations where you need to explicitly define it.",
    "metadata": {
      "component": "v-flex-direction",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001760",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001761",
    "text": "Component: v-flex-justify\nType: component_overview\n\n# v-flex-justify\n\nThe `justify-content` flex setting can be changed using the flex justify classes. This by default will modify the flexbox items on the **x-axis** but is reversed when using `flex-direction: column`, modifying the **y-axis**. Choose from `start` (browser default), `end`, `center`, `space-between`, `space-around`, or `space-evenly`.",
    "display_content": "# v-flex-justify\n\nThe `justify-content` flex setting can be changed using the flex justify classes. This by default will modify the flexbox items on the **x-axis** but is reversed when using `flex-direction: column`, modifying the **y-axis**. Choose from `start` (browser default), `end`, `center`, `space-between`, `space-around`, or `space-evenly`.",
    "metadata": {
      "component": "v-flex-justify",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001761",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001762",
    "text": "Component: v-flex-align\nType: component_overview\n\n# v-flex-align\n\nThe `align-items` flex setting can be changed using the flex align classes. This by default will modify the flexbox items on the **y-axis** but is reversed when using `flex-direction: column`, modifying the **x-axis**. Choose from `start`, `end`, `center`, `baseline`, or `stretch` (browser default).",
    "display_content": "# v-flex-align\n\nThe `align-items` flex setting can be changed using the flex align classes. This by default will modify the flexbox items on the **y-axis** but is reversed when using `flex-direction: column`, modifying the **x-axis**. Choose from `start`, `end`, `center`, `baseline`, or `stretch` (browser default).",
    "metadata": {
      "component": "v-flex-align",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001762",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001763",
    "text": "Component: v-flex-align-self\nType: component_overview\n\n# v-flex-align-self\n\nThe `align-self` flex setting can be changed using the flex align-self classes. This by default will modify individual flexbox items across the **y-axis** but is reversed when using `flex-direction: column`, modifying the **x-axis**. Choose from `start`, `end`, `center`, `baseline`, `stretch`, or `auto` (browser default, applies align-items property from flex container).",
    "display_content": "# v-flex-align-self\n\nThe `align-self` flex setting can be changed using the flex align-self classes. This by default will modify individual flexbox items across the **y-axis** but is reversed when using `flex-direction: column`, modifying the **x-axis**. Choose from `start`, `end`, `center`, `baseline`, `stretch`, or `auto` (browser default, applies align-items property from flex container).",
    "metadata": {
      "component": "v-flex-align-self",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001763",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001764",
    "text": "Component: v-auto-margins\nType: component_overview\n\n# v-auto-margins\n\nUsing the margin helper classes in a flexbox container, you can control the positioning of flex items on the **x-axis** or **y-axis** when using `flex-row` or `flex-column` respectively.\n\nAvailable sections: Using align-items",
    "display_content": "# v-auto-margins\n\nUsing the margin helper classes in a flexbox container, you can control the positioning of flex items on the **x-axis** or **y-axis** when using `flex-row` or `flex-column` respectively.\n\nAvailable sections: Using align-items",
    "metadata": {
      "component": "v-auto-margins",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001764",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001765",
    "text": "Component: v-auto-margins\nSection: Using align-items\nType: documentation\n\n## v-auto-margins - Using align-items\n\nMixing `flex-direction: column` and `align-items`, you can utilize `.mt-auto` and `.mb-auto` helper classes to adjust flex item positioning.\n\n<ExamplesExample file=\"flex/margins-align-items\" />",
    "display_content": "## v-auto-margins - Using align-items\n\nMixing `flex-direction: column` and `align-items`, you can utilize `.mt-auto` and `.mb-auto` helper classes to adjust flex item positioning.\n\n<ExamplesExample file=\"flex/margins-align-items\" />",
    "metadata": {
      "component": "v-auto-margins",
      "section_type": "subsection",
      "subsection": "Using align-items",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001765",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001766",
    "text": "Component: v-flex-wrap\nType: component_overview\n\n# v-flex-wrap\n\nBy default `.d-flex` does not provide any wrapping (behaves similarly to `flex-wrap: nowrap`). This can be modified by applying flex-wrap helper classes in the format `flex-{condition}` where condition can be `nowrap`, `wrap`, or `wrap-reverse`.",
    "display_content": "# v-flex-wrap\n\nBy default `.d-flex` does not provide any wrapping (behaves similarly to `flex-wrap: nowrap`). This can be modified by applying flex-wrap helper classes in the format `flex-{condition}` where condition can be `nowrap`, `wrap`, or `wrap-reverse`.",
    "metadata": {
      "component": "v-flex-wrap",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001766",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001767",
    "text": "Component: v-flex-order\nType: component_overview\n\n# v-flex-order\n\nYou can change the visual order of flex items with the `order` utilities.",
    "display_content": "# v-flex-order\n\nYou can change the visual order of flex items with the `order` utilities.",
    "metadata": {
      "component": "v-flex-order",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001767",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001768",
    "text": "Component: v-flex-align-content\nType: component_overview\n\n# v-flex-align-content\n\nThe `align-content` flex setting can be changed using the flex align-content classes. This by default will modify the wrapped flexbox content across the **y-axis** but is reversed when using `flex-direction: column`, modifying the **x-axis**. Choose from `start`, `end`, `center`, `space-between`, `space-around`, `space-evenly` or `stretch` (browser default).",
    "display_content": "# v-flex-align-content\n\nThe `align-content` flex setting can be changed using the flex align-content classes. This by default will modify the wrapped flexbox content across the **y-axis** but is reversed when using `flex-direction: column`, modifying the **x-axis**. Choose from `start`, `end`, `center`, `space-between`, `space-around`, `space-evenly` or `stretch` (browser default).",
    "metadata": {
      "component": "v-flex-align-content",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001768",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001769",
    "text": "Component: v-flex-grow-and-shrink\nType: component_overview\n\n# v-flex-grow-and-shrink\n\nVuetify has helper classes for applying grow and shrink manually. These can be applied by adding the helper class in the format `flex-{condition}-{value}`, where condition can be either `grow` or `shrink` and value can be either `0` or `1`. The condition `grow` will permit an element to grow to fill available space, whereas `shrink` will permit an element to shrink down to only the space needs for its contents. However, this will only happen if the element must shrink to fit their container such as a container resize or being effected by a `flex-grow-1`. The value `0` will prevent the condition from occurring whereas `1` will permit the condition. The following classes are available:",
    "display_content": "# v-flex-grow-and-shrink\n\nVuetify has helper classes for applying grow and shrink manually. These can be applied by adding the helper class in the format `flex-{condition}-{value}`, where condition can be either `grow` or `shrink` and value can be either `0` or `1`. The condition `grow` will permit an element to grow to fill available space, whereas `shrink` will permit an element to shrink down to only the space needs for its contents. However, this will only happen if the element must shrink to fit their container such as a container resize or being effected by a `flex-grow-1`. The value `0` will prevent the condition from occurring whereas `1` will permit the condition. The following classes are available:",
    "metadata": {
      "component": "v-flex-grow-and-shrink",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001769",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001770",
    "text": "Component: v-float\nType: component_overview\n\n# v-float\n\nApplies a custom float across any breakpoint with responsive float utilities.",
    "display_content": "# v-float\n\nApplies a custom float across any breakpoint with responsive float utilities.",
    "metadata": {
      "component": "v-float",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001770",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001771",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nFloat utility classes apply floating based upon the current viewport size using the [CSS float property](https://developer.mozilla.org/en-US/docs/Web/CSS/float).",
    "display_content": "# v-usage\n\nFloat utility classes apply floating based upon the current viewport size using the [CSS float property](https://developer.mozilla.org/en-US/docs/Web/CSS/float).",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001771",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001772",
    "text": "Component: v-classes\nType: component_overview\n\n# v-classes\n\nEasily toggle a float with a class:",
    "display_content": "# v-classes\n\nEasily toggle a float with a class:",
    "metadata": {
      "component": "v-classes",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001772",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001773",
    "text": "Component: v-responsive\nType: component_overview\n\n# v-responsive\n\nFloats can also be applied on a per breakpoint (viewport) basis.",
    "display_content": "# v-responsive\n\nFloats can also be applied on a per breakpoint (viewport) basis.",
    "metadata": {
      "component": "v-responsive",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001773",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001774",
    "text": "Component: v-opacity\nType: component_overview\n\n# v-opacity\n\nUtilities for controlling the opacity of elements in your application.",
    "display_content": "# v-opacity\n\nUtilities for controlling the opacity of elements in your application.",
    "metadata": {
      "component": "v-opacity",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001774",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001775",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `opacity` utilities allow you to quickly change the opacity of any element.\n\nAvailable sections: Hover",
    "display_content": "# v-usage\n\nThe `opacity` utilities allow you to quickly change the opacity of any element.\n\nAvailable sections: Hover",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001775",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001776",
    "text": "Component: v-usage\nSection: Hover\nType: documentation\n\n## v-usage - Hover\n\nUsing the [v-hover](/components/hover/) component, conditionally apply an opacity class when the element is hovered over.\n\n<ExamplesExample file=\"opacity/misc-hover\" />",
    "display_content": "## v-usage - Hover\n\nUsing the [v-hover](/components/hover/) component, conditionally apply an opacity class when the element is hovered over.\n\n<ExamplesExample file=\"opacity/misc-hover\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Hover",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001776",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001777",
    "text": "Component: v-sass-variables\nType: component_overview\n\n# v-sass-variables\n\nYou can also use the following SASS variables to customize the opacity color and width:",
    "display_content": "# v-sass-variables\n\nYou can also use the following SASS variables to customize the opacity color and width:",
    "metadata": {
      "component": "v-sass-variables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001777",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001778",
    "text": "Component: v-overflow\nType: component_overview\n\n# v-overflow\n\nConfigure how content overflows when it becomes out of container bounds.",
    "display_content": "# v-overflow\n\nConfigure how content overflows when it becomes out of container bounds.",
    "metadata": {
      "component": "v-overflow",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001778",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001779",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nSpecify the elements `overflow`, `overflow-x`, or `overflow-y` property. These classes can be applied using the following format: `{overflow}-{value}`. Where **overflow** refers to the type: `overflow`, `overflow-x` or `overflow-y` and **value** can be one of: `auto`, `hidden`, or `visible`\n\nAvailable sections: Overflow property, Overflow X property",
    "display_content": "# v-usage\n\nSpecify the elements `overflow`, `overflow-x`, or `overflow-y` property. These classes can be applied using the following format: `{overflow}-{value}`. Where **overflow** refers to the type: `overflow`, `overflow-x` or `overflow-y` and **value** can be one of: `auto`, `hidden`, or `visible`\n\nAvailable sections: Overflow property, Overflow X property",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001779",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001780",
    "text": "Component: v-usage\nSection: Overflow property\nType: api_reference\n\n## v-usage - Overflow property\n\n`overflow-auto` is used to add scrollbars to an element when its content overflows the bounds. while `overflow-hidden` is used to clip any content that overflows the bounds. `overflow-visible` will prevent content from being clipped even when it overflows the bounds.\n\n<ExamplesExample file=\"overflow/overflow\" />",
    "display_content": "## v-usage - Overflow property\n\n`overflow-auto` is used to add scrollbars to an element when its content overflows the bounds. while `overflow-hidden` is used to clip any content that overflows the bounds. `overflow-visible` will prevent content from being clipped even when it overflows the bounds.\n\n<ExamplesExample file=\"overflow/overflow\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Overflow property",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001780",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001781",
    "text": "Component: v-usage\nSection: Overflow X property\nType: api_reference\n\n## v-usage - Overflow X property\n\n**overflow-x** can be used to specify horizontal overflows to an element if needed.\n\n<ExamplesExample file=\"overflow/overflow-x\" />",
    "display_content": "## v-usage - Overflow X property\n\n**overflow-x** can be used to specify horizontal overflows to an element if needed.\n\n<ExamplesExample file=\"overflow/overflow-x\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Overflow X property",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001781",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001782",
    "text": "Component: v-position\nType: component_overview\n\n# v-position\n\nUtilities for controlling the positioning of elements in your application.",
    "display_content": "# v-position\n\nUtilities for controlling the positioning of elements in your application.",
    "metadata": {
      "component": "v-position",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001782",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001783",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe `position` utilities allow you to quickly style the positioning of any element. These classes can be used to apply the `position` and `top`, `right`, `bottom`, and `left` properties to an element.\n\nAvailable sections: Static, Relative, Absolute, Fixed, Sticky",
    "display_content": "# v-usage\n\nThe `position` utilities allow you to quickly style the positioning of any element. These classes can be used to apply the `position` and `top`, `right`, `bottom`, and `left` properties to an element.\n\nAvailable sections: Static, Relative, Absolute, Fixed, Sticky",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001783",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001784",
    "text": "Component: v-usage\nSection: Static\nType: documentation\n\n## v-usage - Static\n\nThe default position value for all elements is `static`. This means that the element is positioned according to the normal flow of the document. The `top`, `right`, `bottom`, `left` properties have no effect on a statically positioned element.\n\n<ExamplesExample file=\"position/static\" />",
    "display_content": "## v-usage - Static\n\nThe default position value for all elements is `static`. This means that the element is positioned according to the normal flow of the document. The `top`, `right`, `bottom`, `left` properties have no effect on a statically positioned element.\n\n<ExamplesExample file=\"position/static\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Static",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001784",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001785",
    "text": "Component: v-usage\nSection: Relative\nType: documentation\n\n## v-usage - Relative\n\nThe `position-relative` class allows you to position an element relative to its normal position in the document. This means that the `top`, `right`, `bottom`, and `left` properties can be used to move the element from its normal position.\n\n<ExamplesExample file=\"position/relative\" />",
    "display_content": "## v-usage - Relative\n\nThe `position-relative` class allows you to position an element relative to its normal position in the document. This means that the `top`, `right`, `bottom`, and `left` properties can be used to move the element from its normal position.\n\n<ExamplesExample file=\"position/relative\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Relative",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001785",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001786",
    "text": "Component: v-usage\nSection: Absolute\nType: documentation\n\n## v-usage - Absolute\n\nThe `position-absolute` class allows you to position an element relative to its closest positioned ancestor. If no positioned ancestor is found, the element is positioned relative to the document body.\n\n<ExamplesExample file=\"position/absolute\" />",
    "display_content": "## v-usage - Absolute\n\nThe `position-absolute` class allows you to position an element relative to its closest positioned ancestor. If no positioned ancestor is found, the element is positioned relative to the document body.\n\n<ExamplesExample file=\"position/absolute\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Absolute",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001786",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001787",
    "text": "Component: v-usage\nSection: Fixed\nType: documentation\n\n## v-usage - Fixed\n\nThe `position-fixed` class allows you to position an element relative to the viewport. This means that the element will stay in the same position even when the page is scrolled.\n\n<ExamplesExample file=\"position/fixed\" />",
    "display_content": "## v-usage - Fixed\n\nThe `position-fixed` class allows you to position an element relative to the viewport. This means that the element will stay in the same position even when the page is scrolled.\n\n<ExamplesExample file=\"position/fixed\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Fixed",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001787",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001788",
    "text": "Component: v-usage\nSection: Sticky\nType: documentation\n\n## v-usage - Sticky\n\nThe `position-sticky` class allows you to position an element based on the user's scroll position. The element is treated as `relative` until it crosses a specified threshold, at which point it is treated as `fixed`.\n\n<ExamplesExample file=\"position/sticky\" />",
    "display_content": "## v-usage - Sticky\n\nThe `position-sticky` class allows you to position an element based on the user's scroll position. The element is treated as `relative` until it crosses a specified threshold, at which point it is treated as `fixed`.\n\n<ExamplesExample file=\"position/sticky\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Sticky",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001788",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001789",
    "text": "Component: v-sass-variables\nType: component_overview\n\n# v-sass-variables\n\nDisable position class generation by setting $position, $top, $right, $bottom, and $left to **false**.",
    "display_content": "# v-sass-variables\n\nDisable position class generation by setting $position, $top, $right, $bottom, and $left to **false**.",
    "metadata": {
      "component": "v-sass-variables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001789",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001790",
    "text": "Component: v-sizing\nType: component_overview\n\n# v-sizing\n\nSizing utility classes are used to modify the dimensions of an element.",
    "display_content": "# v-sizing\n\nSizing utility classes are used to modify the dimensions of an element.",
    "metadata": {
      "component": "v-sizing",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001790",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001791",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe sizing utility classes allow you to quickly style the dimensions of any element. These classes can be used to apply the `height` and `width` properties to an element.\n\nAvailable sections: Height, Width",
    "display_content": "# v-usage\n\nThe sizing utility classes allow you to quickly style the dimensions of any element. These classes can be used to apply the `height` and `width` properties to an element.\n\nAvailable sections: Height, Width",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001791",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001792",
    "text": "Component: v-usage\nSection: Height\nType: documentation\n\n## v-usage - Height\n\nSpecify the `height` property of **block level elements** with a utility class. The following classes are applied using the format `.{prefix}-{size}` ; where _prefix_ is **h** and _size_ is the value.\n\n<ExamplesExample file=\"sizing/height\" />",
    "display_content": "## v-usage - Height\n\nSpecify the `height` property of **block level elements** with a utility class. The following classes are applied using the format `.{prefix}-{size}` ; where _prefix_ is **h** and _size_ is the value.\n\n<ExamplesExample file=\"sizing/height\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Height",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001792",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001793",
    "text": "Component: v-usage\nSection: Width\nType: documentation\n\n## v-usage - Width\n\nSpecify the `width` property of **block level elements** with a utility class. The following classes are applied using the format `.{prefix}-{size}` ; where _prefix_ is **w** and _size_ is the value.\n\n| Class        | Description     |\n\n<ExamplesExample file=\"sizing/width\" />",
    "display_content": "## v-usage - Width\n\nSpecify the `width` property of **block level elements** with a utility class. The following classes are applied using the format `.{prefix}-{size}` ; where _prefix_ is **w** and _size_ is the value.\n\n| Class        | Description     |\n\n<ExamplesExample file=\"sizing/width\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Width",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001793",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001794",
    "text": "Component: v-sass-variables\nType: component_overview\n\n# v-sass-variables\n\nYou can also use the following SASS variables to customize the generated height and width classes:",
    "display_content": "# v-sass-variables\n\nYou can also use the following SASS variables to customize the generated height and width classes:",
    "metadata": {
      "component": "v-sass-variables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001794",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001795",
    "text": "Component: v-spacing\nType: component_overview\n\n# v-spacing\n\nUpdate your layout without creating new classes. Spacing helpers are useful for modifying the padding and margin of an element.",
    "display_content": "# v-spacing\n\nUpdate your layout without creating new classes. Spacing helpers are useful for modifying the padding and margin of an element.",
    "metadata": {
      "component": "v-spacing",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001795",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001796",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe helper classes apply **margin**, **padding**, or **gap** to an element ranging from _0 to 16_. Each size increment was designed to align with common Material Design spacings. These classes can be applied using the following format `{property}{direction}-{size}`.",
    "display_content": "# v-usage\n\nThe helper classes apply **margin**, **padding**, or **gap** to an element ranging from _0 to 16_. Each size increment was designed to align with common Material Design spacings. These classes can be applied using the following format `{property}{direction}-{size}`.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001796",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001797",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nVuetify comes with a 12 point grid system built using Flexbox. Spacing is used to create specific layouts within an application's content. It consists of 5 media breakpoints used to target specific screen sizes or orientations: **xs**, **sm**, **md**, **lg** and **xl**. The default resolutions are defined below in the _Viewport Breakpoints_ table and can be modified by customizing the [breakpoint service config](/features/display-and-platform/).\n\nAvailable sections: Breakpoints, Horizontal, Gap, Negative margin",
    "display_content": "# v-examples\n\nVuetify comes with a 12 point grid system built using Flexbox. Spacing is used to create specific layouts within an application's content. It consists of 5 media breakpoints used to target specific screen sizes or orientations: **xs**, **sm**, **md**, **lg** and **xl**. The default resolutions are defined below in the _Viewport Breakpoints_ table and can be modified by customizing the [breakpoint service config](/features/display-and-platform/).\n\nAvailable sections: Breakpoints, Horizontal, Gap, Negative margin",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001797",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001798",
    "text": "Component: v-examples\nSection: Breakpoints\nType: documentation\n\n## v-examples - Breakpoints\n\nVuetify comes with a 12 point grid system built using Flexbox. Spacing is used to create specific layouts within an application's content. It consists of 5 media breakpoints used to target specific screen sizes or orientations: **xs**, **sm**, **md**, **lg** and **xl**. The default resolutions are defined below in the _Viewport Breakpoints_ table and can be modified by customizing the [breakpoint service config](/features/display-and-platform/).\n\n<FeaturesBreakpointsTable />\n\nThe helper classes apply **margin** or **padding** at a given breakpoint. These classes can be applied using the following format: `{property}{direction}-{breakpoint}-{size}`. This does not apply to **xs** as it is inferred; e.g. `ma-xs-2` equals `ma-2`.\n\n<ExamplesExample file=\"spacing/breakpoints\" />",
    "display_content": "## v-examples - Breakpoints\n\nVuetify comes with a 12 point grid system built using Flexbox. Spacing is used to create specific layouts within an application's content. It consists of 5 media breakpoints used to target specific screen sizes or orientations: **xs**, **sm**, **md**, **lg** and **xl**. The default resolutions are defined below in the _Viewport Breakpoints_ table and can be modified by customizing the [breakpoint service config](/features/display-and-platform/).\n\n<FeaturesBreakpointsTable />\n\nThe helper classes apply **margin** or **padding** at a given breakpoint. These classes can be applied using the following format: `{property}{direction}-{breakpoint}-{size}`. This does not apply to **xs** as it is inferred; e.g. `ma-xs-2` equals `ma-2`.\n\n<ExamplesExample file=\"spacing/breakpoints\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Breakpoints",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001798",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001799",
    "text": "Component: v-examples\nSection: Horizontal\nType: documentation\n\n## v-examples - Horizontal\n\nMargin helper classes let you easily center content horizontally.\n\n<ExamplesExample file=\"spacing/horizontal\" />",
    "display_content": "## v-examples - Horizontal\n\nMargin helper classes let you easily center content horizontally.\n\n<ExamplesExample file=\"spacing/horizontal\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Horizontal",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001799",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001800",
    "text": "Component: v-examples\nSection: Gap\nType: documentation\n\n## v-examples - Gap\n\nUse the gap helper classes to easily apply a gap between content.\n\n<ExamplesExample file=\"spacing/gap\" />",
    "display_content": "## v-examples - Gap\n\nUse the gap helper classes to easily apply a gap between content.\n\n<ExamplesExample file=\"spacing/gap\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Gap",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001800",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001801",
    "text": "Component: v-examples\nSection: Negative margin\nType: documentation\n\n## v-examples - Negative margin\n\nMargin can also be applied negatively at the same **1 to 16** intervals.\n\n<ExamplesExample file=\"spacing/negative-margin\" />",
    "display_content": "## v-examples - Negative margin\n\nMargin can also be applied negatively at the same **1 to 16** intervals.\n\n<ExamplesExample file=\"spacing/negative-margin\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Negative margin",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001801",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001802",
    "text": "Component: v-text-and-typography\nType: component_overview\n\n# v-text-and-typography\n\nControl text size, alignment, wrapping, overflow, transforms and more. By default, Vuetify uses the Material Design specification [Roboto Font](https://fonts.google.com/specimen/Roboto).",
    "display_content": "# v-text-and-typography\n\nControl text size, alignment, wrapping, overflow, transforms and more. By default, Vuetify uses the Material Design specification [Roboto Font](https://fonts.google.com/specimen/Roboto).",
    "metadata": {
      "component": "v-text-and-typography",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001802",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001803",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nControl the size and style of text using the Typography helper classes. These values are based upon the [Material Design type specification](https://material.io/design/typography/the-type-system.html).\n\nAvailable sections: Breakpoints, Font emphasis",
    "display_content": "# v-usage\n\nControl the size and style of text using the Typography helper classes. These values are based upon the [Material Design type specification](https://material.io/design/typography/the-type-system.html).\n\nAvailable sections: Breakpoints, Font emphasis",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001803",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001804",
    "text": "Component: v-usage\nSection: Breakpoints\nType: documentation\n\n## v-usage - Breakpoints\n\nAll of the typography classes support the responsive breakpoints seen in other parts of the framework. The base class `.text-{value}` corresponds to the `xsAndUp` breakpoint, while the classes `.text-{breakpoint}-{value}` can be used for the rest of the breakpoints (`sm`, `md`, `lg` and `xl`).\n\nThe following example shows a slightly contrived example of how one can use the different classes to effect:\n\n<ExamplesExample file=\"text-and-typography/typography-breakpoints\" />",
    "display_content": "## v-usage - Breakpoints\n\nAll of the typography classes support the responsive breakpoints seen in other parts of the framework. The base class `.text-{value}` corresponds to the `xsAndUp` breakpoint, while the classes `.text-{breakpoint}-{value}` can be used for the rest of the breakpoints (`sm`, `md`, `lg` and `xl`).\n\nThe following example shows a slightly contrived example of how one can use the different classes to effect:\n\n<ExamplesExample file=\"text-and-typography/typography-breakpoints\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Breakpoints",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001804",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001805",
    "text": "Component: v-usage\nSection: Font emphasis\nType: documentation\n\n## v-usage - Font emphasis\n\nMaterial design, by default, supports **100, 300, 400, 500, 700, 900** font weights and italicized text.\n\n<ExamplesExample file=\"text-and-typography/font-emphasis\" />",
    "display_content": "## v-usage - Font emphasis\n\nMaterial design, by default, supports **100, 300, 400, 500, 700, 900** font weights and italicized text.\n\n<ExamplesExample file=\"text-and-typography/font-emphasis\" />",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Font emphasis",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001805",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001806",
    "text": "Component: v-text\nType: component_overview\n\n# v-text\n\nAlignment helper classes allow you to easily re-align text.\n\nAvailable sections: Alignment, Decoration, Opacity, Transform, Wrapping and overflow",
    "display_content": "# v-text\n\nAlignment helper classes allow you to easily re-align text.\n\nAvailable sections: Alignment, Decoration, Opacity, Transform, Wrapping and overflow",
    "metadata": {
      "component": "v-text",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001806",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001807",
    "text": "Component: v-text\nSection: Alignment\nType: documentation\n\n## v-text - Alignment\n\nAlignment helper classes allow you to easily re-align text.\n\n<ExamplesExample file=\"text-and-typography/text-alignment\" />\n\nThe alignment classes also support responsive breakpoints.\n\n<ExamplesExample file=\"text-and-typography/text-alignment-responsive\" />",
    "display_content": "## v-text - Alignment\n\nAlignment helper classes allow you to easily re-align text.\n\n<ExamplesExample file=\"text-and-typography/text-alignment\" />\n\nThe alignment classes also support responsive breakpoints.\n\n<ExamplesExample file=\"text-and-typography/text-alignment-responsive\" />",
    "metadata": {
      "component": "v-text",
      "section_type": "subsection",
      "subsection": "Alignment",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001807",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001808",
    "text": "Component: v-text\nSection: Decoration\nType: documentation\n\n## v-text - Decoration\n\nRemove text decoration with the `.text-decoration-none` class or add an *overline, underline or line-through* by using `.text-decoration-overline`, `.text-decoration-underline`, and `.text-decoration-line-through`.\n\n<ExamplesExample file=\"text-and-typography/text-decoration\" />",
    "display_content": "## v-text - Decoration\n\nRemove text decoration with the `.text-decoration-none` class or add an *overline, underline or line-through* by using `.text-decoration-overline`, `.text-decoration-underline`, and `.text-decoration-line-through`.\n\n<ExamplesExample file=\"text-and-typography/text-decoration\" />",
    "metadata": {
      "component": "v-text",
      "section_type": "subsection",
      "subsection": "Decoration",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001808",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001809",
    "text": "Component: v-text\nSection: Opacity\nType: documentation\n\n## v-text - Opacity\n\nOpacity helper classes allow you to easily adjust the emphasis of text. `text-high-emphasis` has the same opacity as default text. `text-medium-emphasis` is used for hints and helper text. De-emphasize text with `text-disabled`.\n\n<ExamplesExample file=\"text-and-typography/text-opacity\" />",
    "display_content": "## v-text - Opacity\n\nOpacity helper classes allow you to easily adjust the emphasis of text. `text-high-emphasis` has the same opacity as default text. `text-medium-emphasis` is used for hints and helper text. De-emphasize text with `text-disabled`.\n\n<ExamplesExample file=\"text-and-typography/text-opacity\" />",
    "metadata": {
      "component": "v-text",
      "section_type": "subsection",
      "subsection": "Opacity",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001809",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001810",
    "text": "Component: v-text\nSection: Transform\nType: documentation\n\n## v-text - Transform\n\nText can be transformed with text capitalization classes.\n\n<ExamplesExample file=\"text-and-typography/text-transform\" />\n\nText breaking and the removal of `text-transform` is also possible. In the first example, the `text-transform: uppercase` custom class is overwritten and allows the text casing to remain. In the second example, we break up a longer word to fit the available space.\n\n<ExamplesExample file=\"text-and-typography/text-break\" />",
    "display_content": "## v-text - Transform\n\nText can be transformed with text capitalization classes.\n\n<ExamplesExample file=\"text-and-typography/text-transform\" />\n\nText breaking and the removal of `text-transform` is also possible. In the first example, the `text-transform: uppercase` custom class is overwritten and allows the text casing to remain. In the second example, we break up a longer word to fit the available space.\n\n<ExamplesExample file=\"text-and-typography/text-break\" />",
    "metadata": {
      "component": "v-text",
      "section_type": "subsection",
      "subsection": "Transform",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001810",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001811",
    "text": "Component: v-text\nSection: Wrapping and overflow\nType: documentation\n\n## v-text - Wrapping and overflow\n\nYou can prevent wrapping text with the `.text-no-wrap` utility class.\n\n<ExamplesExample file=\"text-and-typography/text-no-wrap\" />\n\nLonger content can be truncated with a text ellipsis using the `.text-truncate` utility class.\n\n::: info\n  **Requires** `display: inline-block` **or** `display: block`.\n:::\n\n<ExamplesExample file=\"text-and-typography/text-truncate\" />",
    "display_content": "## v-text - Wrapping and overflow\n\nYou can prevent wrapping text with the `.text-no-wrap` utility class.\n\n<ExamplesExample file=\"text-and-typography/text-no-wrap\" />\n\nLonger content can be truncated with a text ellipsis using the `.text-truncate` utility class.\n\n::: info\n  **Requires** `display: inline-block` **or** `display: block`.\n:::\n\n<ExamplesExample file=\"text-and-typography/text-truncate\" />",
    "metadata": {
      "component": "v-text",
      "section_type": "subsection",
      "subsection": "Wrapping and overflow",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001811",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001812",
    "text": "Component: v-rtl-alignment\nType: component_overview\n\n# v-rtl-alignment\n\nWhen using [RTL](/features/bidirectionality), you may want to keep the alignment regardless of current text direction. This can be achieved by setting the direction to either `left` or `right`.",
    "display_content": "# v-rtl-alignment\n\nWhen using [RTL](/features/bidirectionality), you may want to keep the alignment regardless of current text direction. This can be achieved by setting the direction to either `left` or `right`.",
    "metadata": {
      "component": "v-rtl-alignment",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001812",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001813",
    "text": "Component: v-transitions\nType: component_overview\n\n# v-transitions\n\nSmooth animations help make a UI feel great. Using Vue's transition system and re-usable functional components, you can easily control the motion of your application. Most components can have their transition altered through the **transition** prop.",
    "display_content": "# v-transitions\n\nSmooth animations help make a UI feel great. Using Vue's transition system and re-usable functional components, you can easily control the motion of your application. Most components can have their transition altered through the **transition** prop.",
    "metadata": {
      "component": "v-transitions",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001813",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001814",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Name | Description | | - | - | | [v-expand-transition](/api/v-expand-transition/) | The expand transition is used in Expansion Panels and List Groups. There is also a horizontal version available with `v-expand-x-transition`. | | [v-fab-transition](/api/v-fab-transition/) | An example of the fab transition can be found in the `v-speed-dial` component. | | [v-fade-transition](/api/v-fade-transition/) | An example of the fade transition can be found on the Carousel component. |",
    "display_content": "# v-api\n\n| Name | Description | | - | - | | [v-expand-transition](/api/v-expand-transition/) | The expand transition is used in Expansion Panels and List Groups. There is also a horizontal version available with `v-expand-x-transition`. | | [v-fab-transition](/api/v-fab-transition/) | An example of the fab transition can be found in the `v-speed-dial` component. | | [v-fade-transition](/api/v-fade-transition/) | An example of the fade transition can be found on the Carousel component. |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001814",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001815",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nProgrammatically control the transition origin with a simple prop.\n\nAvailable sections: Custom Origin, Expand x, Fab, Fade, Scale, Scroll x, Scroll y, Slide x, Slide y, Todo list",
    "display_content": "# v-examples\n\nProgrammatically control the transition origin with a simple prop.\n\nAvailable sections: Custom Origin, Expand x, Fab, Fade, Scale, Scroll x, Scroll y, Slide x, Slide y, Todo list",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001815",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001816",
    "text": "Component: v-examples\nSection: Custom Origin\nType: documentation\n\n## v-examples - Custom Origin\n\nProgrammatically control the transition origin with a simple prop.\n\n<ExamplesExample file=\"transitions/prop-custom-origin\" />\n-->",
    "display_content": "## v-examples - Custom Origin\n\nProgrammatically control the transition origin with a simple prop.\n\n<ExamplesExample file=\"transitions/prop-custom-origin\" />\n-->",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Custom Origin",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001816",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001817",
    "text": "Component: v-examples\nSection: Expand x\nType: documentation\n\n## v-examples - Expand x\n\nThe expand transition is used in Expansion Panels and List Groups. There is also a horizontal version available with `v-expand-x-transition`.\n\n<ExamplesExample file=\"transitions/misc-expand-x\" />",
    "display_content": "## v-examples - Expand x\n\nThe expand transition is used in Expansion Panels and List Groups. There is also a horizontal version available with `v-expand-x-transition`.\n\n<ExamplesExample file=\"transitions/misc-expand-x\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Expand x",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001817",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001818",
    "text": "Component: v-examples\nSection: Fab\nType: documentation\n\n## v-examples - Fab\n\nAn example of the fab transition can be found in the `v-speed-dial` component.\n\n<ExamplesExample file=\"transitions/misc-fab\" />",
    "display_content": "## v-examples - Fab\n\nAn example of the fab transition can be found in the `v-speed-dial` component.\n\n<ExamplesExample file=\"transitions/misc-fab\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Fab",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001818",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001819",
    "text": "Component: v-examples\nSection: Fade\nType: documentation\n\n## v-examples - Fade\n\nAn example of the fade transition can be found on the Carousel component.\n\n<ExamplesExample file=\"transitions/misc-fade\" />",
    "display_content": "## v-examples - Fade\n\nAn example of the fade transition can be found on the Carousel component.\n\n<ExamplesExample file=\"transitions/misc-fade\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Fade",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001819",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001820",
    "text": "Component: v-examples\nSection: Scale\nType: documentation\n\n## v-examples - Scale\n\nMany of Vuetify's components contain a **transition** prop which allows you to specify your own.\n\n<ExamplesExample file=\"transitions/misc-scale\" />",
    "display_content": "## v-examples - Scale\n\nMany of Vuetify's components contain a **transition** prop which allows you to specify your own.\n\n<ExamplesExample file=\"transitions/misc-scale\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Scale",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001820",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001821",
    "text": "Component: v-examples\nSection: Scroll x\nType: documentation\n\n## v-examples - Scroll x\n\nScroll X transitions continue along the horizontal axis.\n\n<ExamplesExample file=\"transitions/misc-scroll-x\" />",
    "display_content": "## v-examples - Scroll x\n\nScroll X transitions continue along the horizontal axis.\n\n<ExamplesExample file=\"transitions/misc-scroll-x\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Scroll x",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001821",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001822",
    "text": "Component: v-examples\nSection: Scroll y\nType: documentation\n\n## v-examples - Scroll y\n\nScroll Y transitions continue along the vertical axis.\n\n<ExamplesExample file=\"transitions/misc-scroll-y\" />",
    "display_content": "## v-examples - Scroll y\n\nScroll Y transitions continue along the vertical axis.\n\n<ExamplesExample file=\"transitions/misc-scroll-y\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Scroll y",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001822",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001823",
    "text": "Component: v-examples\nSection: Slide x\nType: documentation\n\n## v-examples - Slide x\n\nSlide x transitions move along the horizontal axis.\n\n<ExamplesExample file=\"transitions/misc-slide-x\" />",
    "display_content": "## v-examples - Slide x\n\nSlide x transitions move along the horizontal axis.\n\n<ExamplesExample file=\"transitions/misc-slide-x\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Slide x",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001823",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001824",
    "text": "Component: v-examples\nSection: Slide y\nType: documentation\n\n## v-examples - Slide y\n\nAnimations use the application's `$primary-transition`.\n\n<ExamplesExample file=\"transitions/misc-slide-y\" />",
    "display_content": "## v-examples - Slide y\n\nAnimations use the application's `$primary-transition`.\n\n<ExamplesExample file=\"transitions/misc-slide-y\" />",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Slide y",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001824",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001825",
    "text": "Component: v-examples\nSection: Todo list\nType: documentation\n\n## v-examples - Todo list\n\nUsing multiple custom transitions, it is easy to bring a simple todo list to life!\n\n<ExamplesExample file=\"transitions/misc-todo\" />\n\n<!--",
    "display_content": "## v-examples - Todo list\n\nUsing multiple custom transitions, it is easy to bring a simple todo list to life!\n\n<ExamplesExample file=\"transitions/misc-todo\" />\n\n<!--",
    "metadata": {
      "component": "v-examples",
      "section_type": "subsection",
      "subsection": "Todo list",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001825",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001826",
    "text": "Component: v-create-your-own\nType: component_overview\n\n# v-create-your-own\n\nYou can use Vuetify's transition helper function to easily create your own custom transitions. This function will return an object that you can import into Vue. Using Vue's [functional component](https://vuejs.org/v2/guide/render-function.html#Functional-Components) option will make sure your transition is as efficient as possible. Simply import the function:",
    "display_content": "# v-create-your-own\n\nYou can use Vuetify's transition helper function to easily create your own custom transitions. This function will return an object that you can import into Vue. Using Vue's [functional component](https://vuejs.org/v2/guide/render-function.html#Functional-Components) option will make sure your transition is as efficient as possible. Simply import the function:",
    "metadata": {
      "component": "v-create-your-own",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001826",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001827",
    "text": "Component: v-accessibility\nType: component_overview\n\n# v-accessibility\n\nWeb accessibility **(a11y for short)**, is the inclusive practice of ensuring there are no barriers that prevent the interaction with, or access to, websites on the World Wide Web by people with disabilities. Vuetify components are built to provide keyboard interactions for all mouse-based actions and utilize HTML5 semantic elements where applicable.",
    "display_content": "# v-accessibility\n\nWeb accessibility **(a11y for short)**, is the inclusive practice of ensuring there are no barriers that prevent the interaction with, or access to, websites on the World Wide Web by people with disabilities. Vuetify components are built to provide keyboard interactions for all mouse-based actions and utilize HTML5 semantic elements where applicable.",
    "metadata": {
      "component": "v-accessibility",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001827",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001828",
    "text": "Component: v-activator-slots\nType: component_overview\n\n# v-activator-slots\n\nVuetify uses activator slots for many components such as `v-menu`, `v-dialog` and more. In some instances these activator elements should have specific a11y attributes that associate them with their corresponding content. In order to achieve this, we pass down the necessary a11y options through the slots scope.",
    "display_content": "# v-activator-slots\n\nVuetify uses activator slots for many components such as `v-menu`, `v-dialog` and more. In some instances these activator elements should have specific a11y attributes that associate them with their corresponding content. In order to achieve this, we pass down the necessary a11y options through the slots scope.",
    "metadata": {
      "component": "v-activator-slots",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001828",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001829",
    "text": "Component: v-focus-management-and-keyboard-interactions\nType: component_overview\n\n# v-focus-management-and-keyboard-interactions\n\nBeyond attributes, components such as `v-menu` also support interaction by pressing <kbd>↑</kbd> and <kbd>↓</kbd> for navigating between options.\n\nAvailable sections: v-menu",
    "display_content": "# v-focus-management-and-keyboard-interactions\n\nBeyond attributes, components such as `v-menu` also support interaction by pressing <kbd>↑</kbd> and <kbd>↓</kbd> for navigating between options.\n\nAvailable sections: v-menu",
    "metadata": {
      "component": "v-focus-management-and-keyboard-interactions",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001829",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001830",
    "text": "Component: v-focus-management-and-keyboard-interactions\nSection: v-menu\nType: documentation\n\n## v-focus-management-and-keyboard-interactions - v-menu\n\nWhen inside of a `v-menu`, `v-list-item` will be automatically configured to have a role of **menuitem**. Navigate to the [Menu](/components/menus) for more information on the components features.\n\n<ExamplesExample file=\"accessibility/menu\" inline />",
    "display_content": "## v-focus-management-and-keyboard-interactions - v-menu\n\nWhen inside of a `v-menu`, `v-list-item` will be automatically configured to have a role of **menuitem**. Navigate to the [Menu](/components/menus) for more information on the components features.\n\n<ExamplesExample file=\"accessibility/menu\" inline />",
    "metadata": {
      "component": "v-focus-management-and-keyboard-interactions",
      "section_type": "subsection",
      "subsection": "v-menu",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001830",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001831",
    "text": "Component: v-additional-resources\nType: component_overview\n\n# v-additional-resources\n\nWhile Vuetify attempts to make a11y as easy as possible in your application, there are times where additional information is needed. Below you can find a list of helpful resources.",
    "display_content": "# v-additional-resources\n\nWhile Vuetify attempts to make a11y as easy as possible in your application, there are times where additional information is needed. Below you can find a list of helpful resources.",
    "metadata": {
      "component": "v-additional-resources",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001831",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001832",
    "text": "Component: v-aliasing\nType: component_overview\n\n# v-aliasing\n\nCreate virtual components that extend built-in Vuetify components using custom aliases.",
    "display_content": "# v-aliasing\n\nCreate virtual components that extend built-in Vuetify components using custom aliases.",
    "metadata": {
      "component": "v-aliasing",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001832",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001833",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nAliasing allows you to use built-in Vuetify components as a baseline for your custom implementations. To get started, import the component that you want to extend. Provide it as the value of a unique key that is used for the virtual component's name:",
    "display_content": "# v-usage\n\nAliasing allows you to use built-in Vuetify components as a baseline for your custom implementations. To get started, import the component that you want to extend. Provide it as the value of a unique key that is used for the virtual component's name:",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001833",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001834",
    "text": "Component: v-virtual-component-defaults\nType: component_overview\n\n# v-virtual-component-defaults\n\nVirtual components have access to the Vuetify [Global configuration](/features/global-configuration/). Default settings for aliases are defined the same as built-in components with no extra steps required by you. In the following example, **MyButton** uses [v-btn props](/api/v-btn/#props) to change it's default **variant**:",
    "display_content": "# v-virtual-component-defaults\n\nVirtual components have access to the Vuetify [Global configuration](/features/global-configuration/). Default settings for aliases are defined the same as built-in components with no extra steps required by you. In the following example, **MyButton** uses [v-btn props](/api/v-btn/#props) to change it's default **variant**:",
    "metadata": {
      "component": "v-virtual-component-defaults",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001834",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001835",
    "text": "Component: v-nested-defaults\nType: component_overview\n\n# v-nested-defaults\n\nProp defaults accept component key references to apply style changes based upon component hierarchy. In the following example, [v-btn](/components/buttons/) and **MyButton** swap colors when nested within a [v-card](/components/cards/) component.",
    "display_content": "# v-nested-defaults\n\nProp defaults accept component key references to apply style changes based upon component hierarchy. In the following example, [v-btn](/components/buttons/) and **MyButton** swap colors when nested within a [v-card](/components/cards/) component.",
    "metadata": {
      "component": "v-nested-defaults",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001835",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001836",
    "text": "Component: v-application-layout\nType: component_overview\n\n# v-application-layout\n\nVuetify features an application layout system that allows you to easily create complex website designs.",
    "display_content": "# v-application-layout\n\nVuetify features an application layout system that allows you to easily create complex website designs.",
    "metadata": {
      "component": "v-application-layout",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001836",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001837",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nBy default, the order in which layout components will attempt to reserve space is simply the order that they appear in your markup. To illustrate this concept, see the following two examples where a single **v-app-bar** and **v-navigation-drawer** have changed places in the markup.",
    "display_content": "# v-usage\n\nBy default, the order in which layout components will attempt to reserve space is simply the order that they appear in your markup. To illustrate this concept, see the following two examples where a single **v-app-bar** and **v-navigation-drawer** have changed places in the markup.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001837",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001838",
    "text": "Component: v-complex-layouts\nType: component_overview\n\n# v-complex-layouts\n\nLet's create a more complex layout to show the flexibility of the system. In the following example we have re-created the general layout of the Discord application. This example also demonstrates that layout components accept either a **width** or **height** prop, and that multiple components of the same type can be stacked in the same position.",
    "display_content": "# v-complex-layouts\n\nLet's create a more complex layout to show the flexibility of the system. In the following example we have re-created the general layout of the Discord application. This example also demonstrates that layout components accept either a **width** or **height** prop, and that multiple components of the same type can be stacked in the same position.",
    "metadata": {
      "component": "v-complex-layouts",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001838",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001839",
    "text": "Component: v-dynamic-layouts-and-order\nType: component_overview\n\n# v-dynamic-layouts-and-order\n\nIn most cases, it should be enough to simply place your layout components in the correct order in your markup to achieve the layout you want. There are however a couple of scenarios where this might not be possible. One of these is if you want to change the order of your layout components dynamically.",
    "display_content": "# v-dynamic-layouts-and-order\n\nIn most cases, it should be enough to simply place your layout components in the correct order in your markup to achieve the layout you want. There are however a couple of scenarios where this might not be possible. One of these is if you want to change the order of your layout components dynamically.",
    "metadata": {
      "component": "v-dynamic-layouts-and-order",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001839",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001840",
    "text": "Component: v-accessing-layout-information\nType: component_overview\n\n# v-accessing-layout-information\n\nThe layout system exposes a function `getLayoutItem` that allows you to get size and position information about a specific layout component in your markup. To use it, you will need to add a **name** prop to the layout component, and give it a unique value. You can either access the method by using a ref on **v-app**, or by using the **useLayout** composable.",
    "display_content": "# v-accessing-layout-information\n\nThe layout system exposes a function `getLayoutItem` that allows you to get size and position information about a specific layout component in your markup. To use it, you will need to add a **name** prop to the layout component, and give it a unique value. You can either access the method by using a ref on **v-app**, or by using the **useLayout** composable.",
    "metadata": {
      "component": "v-accessing-layout-information",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001840",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001841",
    "text": "Component: v-blueprints\nType: component_overview\n\n# v-blueprints\n\nVuetify blueprints are a new way to pre-configure your entire application with a completely unique design system.",
    "display_content": "# v-blueprints\n\nVuetify blueprints are a new way to pre-configure your entire application with a completely unique design system.",
    "metadata": {
      "component": "v-blueprints",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001841",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001842",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nBlueprints are a collection of Vuetify configuration options that assign default values for components, colors, language, and more. Open your project's `vuetify.js` file and import the desired blueprint. The follow example demonstrates how to apply the [Material Design 1](#material-design-1) preset:\n\nAvailable sections: White-label concept",
    "display_content": "# v-usage\n\nBlueprints are a collection of Vuetify configuration options that assign default values for components, colors, language, and more. Open your project's `vuetify.js` file and import the desired blueprint. The follow example demonstrates how to apply the [Material Design 1](#material-design-1) preset:\n\nAvailable sections: White-label concept",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001842",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001843",
    "text": "Component: v-usage\nSection: White-label concept\nType: documentation\n\n## v-usage - White-label concept\n\nWhile Vuetify is built under the guise of Google's [Material Design](https://material.io) specification, it is still flexible enough to be used as the foundation for any design system. By default, Vuetify components have no color and are **white-label** in nature. A white-label product is a product or service produced by one company that other companies rebrand to make it appear as if they had made it.",
    "display_content": "## v-usage - White-label concept\n\nWhile Vuetify is built under the guise of Google's [Material Design](https://material.io) specification, it is still flexible enough to be used as the foundation for any design system. By default, Vuetify components have no color and are **white-label** in nature. A white-label product is a product or service produced by one company that other companies rebrand to make it appear as if they had made it.",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "White-label concept",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001843",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001844",
    "text": "Component: v-available-blueprints\nType: component_overview\n\n# v-available-blueprints\n\n| Name | Release date | Status | Resource | | - | - | - | - | | [Material Design 1](#material-design-1) | 2014 | ✅ Available | [Specification](https://m1.material.io) | | [Material Design 2](#material-design-2) | 2017 | ✅ Available | [Specification](https://m2.material.io) | | [Material Design 3](#material-design-3) | 2022 | ✅ Available | [Specification](https://m3.material.io) |\n\nAvailable sections: Material Design 1, Material Design 2, Material Design 3",
    "display_content": "# v-available-blueprints\n\n| Name | Release date | Status | Resource | | - | - | - | - | | [Material Design 1](#material-design-1) | 2014 | ✅ Available | [Specification](https://m1.material.io) | | [Material Design 2](#material-design-2) | 2017 | ✅ Available | [Specification](https://m2.material.io) | | [Material Design 3](#material-design-3) | 2022 | ✅ Available | [Specification](https://m3.material.io) |\n\nAvailable sections: Material Design 1, Material Design 2, Material Design 3",
    "metadata": {
      "component": "v-available-blueprints",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001844",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001845",
    "text": "Component: v-dates\nType: component_overview\n\n# v-dates\n\nEasily hook up date libraries that are used for components such as Date Picker and Calendar that require date functionality.",
    "display_content": "# v-dates\n\nEasily hook up date libraries that are used for components such as Date Picker and Calendar that require date functionality.",
    "metadata": {
      "component": "v-dates",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001845",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001846",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe date composable provides a shared architecture that is used by components such as date picker and calendar. The default implementation is built using the native Date object, but can be swapped out for another date library. If no other date adapter is given, the default Vuetify one is used.\n\nAvailable sections: Format options",
    "display_content": "# v-usage\n\nThe date composable provides a shared architecture that is used by components such as date picker and calendar. The default implementation is built using the native Date object, but can be swapped out for another date library. If no other date adapter is given, the default Vuetify one is used.\n\nAvailable sections: Format options",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001846",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001847",
    "text": "Component: v-usage\nSection: Format options\nType: documentation\n\n## v-usage - Format options\n\nThe date composable supports the following date formatting options:\n\n| Format Name | Format Output |\n| - | - |\n| fullDate | \"Jan 1, 2024\" |\n| fullDateWithWeekday | \"Tuesday, January 1, 2024\" |\n| normalDate | \"1 January\" |\n| normalDateWithWeekday | \"Wed, Jan 1\" |\n| shortDate | \"Jan 1\" |\n| year | \"2024\" |\n| month | \"January\" |\n| monthShort | \"Jan\" |\n| monthAndYear | \"January 2024\" |\n| monthAndDate | \"January 1\" |\n| weekday | \"Wednesday\" |\n| weekdayShort | \"Wed\" |\n| dayOfMonth | \"1\" |\n| hours12h | \"11\" |\n| hours24h | \"23\" |\n| minutes | \"44\" |\n| seconds | \"00\" |\n| fullTime | \"11:44 PM\" for US, \"23:44\" for Europe |\n| fullTime12h | \"11:44 PM\" |\n| fullTime24h | \"23:44\" |\n| fullDateTime | \"Jan 1, 2024 11:44 PM\" |\n| fullDateTime12h | \"Jan 1, 2024 11:44 PM\" |\n| fullDateTime24h | \"Jan 1, 2024 23:44\" |\n| keyboardDate | \"02/13/2024\" |\n| keyboardDateTime | \"02/13/2024 23:44\" |\n| keyboardDateTime12h | \"02/13/2024 11:44 PM\" |\n| keyboardDateTime24h | \"02/13/2024 23:44\" |\n\nThe following example shows how to use the date composable to format a date string:\n\n```html { resource=\"src/views/Date.vue\" }\n<script setup>\n  import { useDate } from 'vuetify'\n\n  const date = useDate()\n\n  const formatted = date.format('2010-04-13', 'fullDateWithWeekday')\n\n  console.log(formatted) // Tuesday, April 13, 2010\n</script>\n```",
    "display_content": "## v-usage - Format options\n\nThe date composable supports the following date formatting options:\n\n| Format Name | Format Output |\n| - | - |\n| fullDate | \"Jan 1, 2024\" |\n| fullDateWithWeekday | \"Tuesday, January 1, 2024\" |\n| normalDate | \"1 January\" |\n| normalDateWithWeekday | \"Wed, Jan 1\" |\n| shortDate | \"Jan 1\" |\n| year | \"2024\" |\n| month | \"January\" |\n| monthShort | \"Jan\" |\n| monthAndYear | \"January 2024\" |\n| monthAndDate | \"January 1\" |\n| weekday | \"Wednesday\" |\n| weekdayShort | \"Wed\" |\n| dayOfMonth | \"1\" |\n| hours12h | \"11\" |\n| hours24h | \"23\" |\n| minutes | \"44\" |\n| seconds | \"00\" |\n| fullTime | \"11:44 PM\" for US, \"23:44\" for Europe |\n| fullTime12h | \"11:44 PM\" |\n| fullTime24h | \"23:44\" |\n| fullDateTime | \"Jan 1, 2024 11:44 PM\" |\n| fullDateTime12h | \"Jan 1, 2024 11:44 PM\" |\n| fullDateTime24h | \"Jan 1, 2024 23:44\" |\n| keyboardDate | \"02/13/2024\" |\n| keyboardDateTime | \"02/13/2024 23:44\" |\n| keyboardDateTime12h | \"02/13/2024 11:44 PM\" |\n| keyboardDateTime24h | \"02/13/2024 23:44\" |\n\nThe following example shows how to use the date composable to format a date string:\n\n```html { resource=\"src/views/Date.vue\" }\n<script setup>\n  import { useDate } from 'vuetify'\n\n  const date = useDate()\n\n  const formatted = date.format('2010-04-13', 'fullDateWithWeekday')\n\n  console.log(formatted) // Tuesday, April 13, 2010\n</script>\n```",
    "metadata": {
      "component": "v-usage",
      "section_type": "subsection",
      "subsection": "Format options",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001847",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001848",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Feature | Description | | - | - | | [useDate](/api/use-date/) | The date composable is used by components that require date functionality |",
    "display_content": "# v-api\n\n| Feature | Description | | - | - | | [useDate](/api/use-date/) | The date composable is used by components that require date functionality |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001848",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001849",
    "text": "Component: v-adapter\nType: component_overview\n\n# v-adapter\n\nThe built-in date adapter implements a subset of functionality from the [DateIOFormats](https://github.com/dmtrKovalenko/date-io/blob/master/packages/core/IUtils.d.ts) interface. Because of this, it's easy to swap in any date library supported by [date-io](https://github.com/dmtrKovalenko/date-io).\n\nAvailable sections: Using DateFns, Using DayJs, Using Luxon, Using Moment",
    "display_content": "# v-adapter\n\nThe built-in date adapter implements a subset of functionality from the [DateIOFormats](https://github.com/dmtrKovalenko/date-io/blob/master/packages/core/IUtils.d.ts) interface. Because of this, it's easy to swap in any date library supported by [date-io](https://github.com/dmtrKovalenko/date-io).\n\nAvailable sections: Using DateFns, Using DayJs, Using Luxon, Using Moment",
    "metadata": {
      "component": "v-adapter",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001849",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001850",
    "text": "Component: v-adapter\nSection: Using DateFns\nType: code_example\n\n## v-adapter - Using DateFns\n\nTo use DateFns as the date adapter, install the necessary packages:\n\n::: tabs\n\n```bash [pnpm]\npnpm install @date-io/date-fns date-fns\n\n```\n\n```",
    "display_content": "## v-adapter - Using DateFns\n\nTo use DateFns as the date adapter, install the necessary packages:\n\n::: tabs\n\n```bash [pnpm]\npnpm install @date-io/date-fns date-fns\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using DateFns",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001850",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001851",
    "text": "Component: v-adapter\nSection: Using DateFns\nType: code_example\n\n## v-adapter - Using DateFns\n\nbash [yarn]\nyarn add @date-io/date-fns date-fns\n\n```\n\n```",
    "display_content": "## v-adapter - Using DateFns\n\nbash [yarn]\nyarn add @date-io/date-fns date-fns\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using DateFns",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001851",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001852",
    "text": "Component: v-adapter\nSection: Using DateFns\nType: code_example\n\n## v-adapter - Using DateFns\n\nbash [npm]\nnpm install @date-io/date-fns date-fns\n\n```\n\n```",
    "display_content": "## v-adapter - Using DateFns\n\nbash [npm]\nnpm install @date-io/date-fns date-fns\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using DateFns",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001852",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001853",
    "text": "Component: v-adapter\nSection: Using DateFns\nType: code_example\n\n## v-adapter - Using DateFns\n\nbash [bun]\nbun install @date-io/date-fns date-fns\n\n```\n\n:::\n\nThen configure Vuetify to use DateFns:\n\n```",
    "display_content": "## v-adapter - Using DateFns\n\nbash [bun]\nbun install @date-io/date-fns date-fns\n\n```\n\n:::\n\nThen configure Vuetify to use DateFns:\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using DateFns",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001853",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001854",
    "text": "Component: v-adapter\nSection: Using DayJs\nType: code_example\n\n## v-adapter - Using DayJs\n\nTo use DayJs as the date adapter, install the necessary packages:\n\n::: tabs\n\n```bash [pnpm]\npnpm install @date-io/dayjs dayjs\n\n```\n\n```",
    "display_content": "## v-adapter - Using DayJs\n\nTo use DayJs as the date adapter, install the necessary packages:\n\n::: tabs\n\n```bash [pnpm]\npnpm install @date-io/dayjs dayjs\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using DayJs",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001854",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001855",
    "text": "Component: v-adapter\nSection: Using DayJs\nType: code_example\n\n## v-adapter - Using DayJs\n\nbash [yarn]\nyarn add @date-io/dayjs dayjs\n\n```\n\n```",
    "display_content": "## v-adapter - Using DayJs\n\nbash [yarn]\nyarn add @date-io/dayjs dayjs\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using DayJs",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001855",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001856",
    "text": "Component: v-adapter\nSection: Using DayJs\nType: code_example\n\n## v-adapter - Using DayJs\n\nbash [npm]\nnpm install @date-io/dayjs dayjs\n\n```\n\n```",
    "display_content": "## v-adapter - Using DayJs\n\nbash [npm]\nnpm install @date-io/dayjs dayjs\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using DayJs",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001856",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001857",
    "text": "Component: v-adapter\nSection: Using DayJs\nType: code_example\n\n## v-adapter - Using DayJs\n\nbash [bun]\nbun add @date-io/dayjs dayjs\n\n```\n\n:::\n\nThen configure Vuetify to use DayJs:\n\n```",
    "display_content": "## v-adapter - Using DayJs\n\nbash [bun]\nbun add @date-io/dayjs dayjs\n\n```\n\n:::\n\nThen configure Vuetify to use DayJs:\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using DayJs",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001857",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001858",
    "text": "Component: v-adapter\nSection: Using Luxon\nType: code_example\n\n## v-adapter - Using Luxon\n\nTo use Luxon as the date adapter, install the necessary packages:\n\n::: tabs\n\n```bash [pnpm]\npnpm install @date-io/luxon luxon\n\n```\n\n```",
    "display_content": "## v-adapter - Using Luxon\n\nTo use Luxon as the date adapter, install the necessary packages:\n\n::: tabs\n\n```bash [pnpm]\npnpm install @date-io/luxon luxon\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using Luxon",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001858",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001859",
    "text": "Component: v-adapter\nSection: Using Luxon\nType: code_example\n\n## v-adapter - Using Luxon\n\nbash [yarn]\nyarn add @date-io/luxon luxon\n\n```\n\n```",
    "display_content": "## v-adapter - Using Luxon\n\nbash [yarn]\nyarn add @date-io/luxon luxon\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using Luxon",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001859",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001860",
    "text": "Component: v-adapter\nSection: Using Luxon\nType: code_example\n\n## v-adapter - Using Luxon\n\nbash [npm]\nnpm install @date-io/luxon luxon\n\n```\n\n```",
    "display_content": "## v-adapter - Using Luxon\n\nbash [npm]\nnpm install @date-io/luxon luxon\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using Luxon",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001860",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001861",
    "text": "Component: v-adapter\nSection: Using Luxon\nType: code_example\n\n## v-adapter - Using Luxon\n\nbash [bun]\nbun add @date-io/luxon luxon\n\n```\n\n:::\n\nThen configure Vuetify to use Luxon:\n\n```",
    "display_content": "## v-adapter - Using Luxon\n\nbash [bun]\nbun add @date-io/luxon luxon\n\n```\n\n:::\n\nThen configure Vuetify to use Luxon:\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using Luxon",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001861",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001862",
    "text": "Component: v-adapter\nSection: Using Moment\nType: code_example\n\n## v-adapter - Using Moment\n\nTo use Moment as the date adapter, install the necessary packages:\n\n::: tabs\n\n```bash [pnpm]\npnpm install @date-io/moment moment\n\n```\n\n```",
    "display_content": "## v-adapter - Using Moment\n\nTo use Moment as the date adapter, install the necessary packages:\n\n::: tabs\n\n```bash [pnpm]\npnpm install @date-io/moment moment\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using Moment",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001862",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001863",
    "text": "Component: v-adapter\nSection: Using Moment\nType: code_example\n\n## v-adapter - Using Moment\n\nbash [yarn]\nyarn add @date-io/moment moment\n\n```\n\n```",
    "display_content": "## v-adapter - Using Moment\n\nbash [yarn]\nyarn add @date-io/moment moment\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using Moment",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001863",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001864",
    "text": "Component: v-adapter\nSection: Using Moment\nType: code_example\n\n## v-adapter - Using Moment\n\nbash [npm]\nnpm install @date-io/moment moment\n\n```\n\n```",
    "display_content": "## v-adapter - Using Moment\n\nbash [npm]\nnpm install @date-io/moment moment\n\n```\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using Moment",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001864",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001865",
    "text": "Component: v-adapter\nSection: Using Moment\nType: code_example\n\n## v-adapter - Using Moment\n\nbash [bun]\nbun add @date-io/moment moment\n\n```\n\n:::\n\nThen configure Vuetify to use Moment:\n\n```",
    "display_content": "## v-adapter - Using Moment\n\nbash [bun]\nbun add @date-io/moment moment\n\n```\n\n:::\n\nThen configure Vuetify to use Moment:\n\n```",
    "metadata": {
      "component": "v-adapter",
      "section_type": "code_example",
      "subsection": "Using Moment",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001865",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001866",
    "text": "Component: v-typescript\nType: component_overview\n\n# v-typescript\n\nFor TypeScript users, an interface is also exposed for [module augmentation](https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation):",
    "display_content": "# v-typescript\n\nFor TypeScript users, an interface is also exposed for [module augmentation](https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation):",
    "metadata": {
      "component": "v-typescript",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001866",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001867",
    "text": "Component: v-localization\nType: component_overview\n\n# v-localization\n\nThe date composable will use the current vuetify [locale](/features/internationalization/) for formatting and getting the first day of the week. These do not always line up perfectly, so a list of aliases can be provided to map language codes to locales. The following configuration will look up `en` keys for translations, but use `en-GB` for date formatting:",
    "display_content": "# v-localization\n\nThe date composable will use the current vuetify [locale](/features/internationalization/) for formatting and getting the first day of the week. These do not always line up perfectly, so a list of aliases can be provided to map language codes to locales. The following configuration will look up `en` keys for translations, but use `en-GB` for date formatting:",
    "metadata": {
      "component": "v-localization",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001867",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001868",
    "text": "Component: v-create-your-own\nType: component_overview\n\n# v-create-your-own\n\nTo create your own date adapter, implement the **DateAdapter** interface:",
    "display_content": "# v-create-your-own\n\nTo create your own date adapter, implement the **DateAdapter** interface:",
    "metadata": {
      "component": "v-create-your-own",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001868",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001869",
    "text": "Component: v-display-and-platform\nType: component_overview\n\n# v-display-and-platform\n\nThe display composable provides a multitude of information about the current device",
    "display_content": "# v-display-and-platform\n\nThe display composable provides a multitude of information about the current device",
    "metadata": {
      "component": "v-display-and-platform",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001869",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001870",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe **useDisplay** composable provides information on multiple aspects of the current device.",
    "display_content": "# v-usage\n\nThe **useDisplay** composable provides information on multiple aspects of the current device.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001870",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001871",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Component | Description | | - | - | | [useDisplay](/api/use-display/) | Composable |",
    "display_content": "# v-api\n\n| Component | Description | | - | - | | [useDisplay](/api/use-display/) | Composable |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001871",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001872",
    "text": "Component: v-breakpoints-and-thresholds\nType: component_overview\n\n# v-breakpoints-and-thresholds\n\nThreshold values generate the ranges used for various breakpoints seen throughout vuetify and the `useDisplay` composable. The system uses an \"and up\" mentality starting from `xs` at 0px. The default threshold values are displayed below.",
    "display_content": "# v-breakpoints-and-thresholds\n\nThreshold values generate the ranges used for various breakpoints seen throughout vuetify and the `useDisplay` composable. The system uses an \"and up\" mentality starting from `xs` at 0px. The default threshold values are displayed below.",
    "metadata": {
      "component": "v-breakpoints-and-thresholds",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001872",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001873",
    "text": "Component: v-options\nType: component_overview\n\n# v-options\n\nThe **useDisplay** composable has several configuration options, such as the ability to define custom values for breakpoints.",
    "display_content": "# v-options\n\nThe **useDisplay** composable has several configuration options, such as the ability to define custom values for breakpoints.",
    "metadata": {
      "component": "v-options",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001873",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001874",
    "text": "Component: v-examples\nType: component_overview\n\n# v-examples\n\nIn the following example, we use a switch statement and the current breakpoint name to modify the **height** property of the [v-card](/components/cards/) component:\n\nAvailable sections: Interface",
    "display_content": "# v-examples\n\nIn the following example, we use a switch statement and the current breakpoint name to modify the **height** property of the [v-card](/components/cards/) component:\n\nAvailable sections: Interface",
    "metadata": {
      "component": "v-examples",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001874",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001875",
    "text": "Component: v-examples\nSection: Interface\nType: code_example\n\n## v-examples - Interface\n\n```ts\n{\n  // Breakpoints\n  xs: boolean // 0 - 595\n  sm: boolean // 600 - 959\n  md: boolean // 960 - 1279\n  lg: boolean // 1280 - 1919\n  xl: boolean // > 1920\n  xxl: boolean\n  smAndDown: boolean // < 960\n  smAndUp: boolean // > 600\n  mdAndDown: boolean // < 1280\n  mdAndUp: boolean // > 960\n  lgAndDown: boolean // < 1919\n  lgAndUp: boolean // > 1280\n  xlAndDown: boolean\n  xlAndUp: boolean // < 1920\n\n  // true if screen width < mobileBreakpoint\n  mobile: boolean\n  mobileBreakpoint: number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n\n  // Current breakpoint name (e.g. 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl')\n  name: string\n\n  // The current value of window.innerHeight and window.innerWidth\n  height: number\n  width: number\n\n  // Device userAgent information\n  platform: {\n    android: boolean\n    ios: boolean\n    cordova: boolean\n    electron: boolean\n    chrome: boolean\n    edge: boolean\n    firefox: boolean\n    opera: boolean\n    win: boolean\n    mac: boolean\n    linux: boolean\n    touch: boolean\n    ssr: boolean\n  }\n\n  // The values used to make Breakpoint calculations\n  thresholds: {\n    xs: number\n    sm: number\n    md: number\n    lg: number\n    xl: number\n    xxl: number\n  }\n}\n```",
    "display_content": "## v-examples - Interface\n\n```ts\n{\n  // Breakpoints\n  xs: boolean // 0 - 595\n  sm: boolean // 600 - 959\n  md: boolean // 960 - 1279\n  lg: boolean // 1280 - 1919\n  xl: boolean // > 1920\n  xxl: boolean\n  smAndDown: boolean // < 960\n  smAndUp: boolean // > 600\n  mdAndDown: boolean // < 1280\n  mdAndUp: boolean // > 960\n  lgAndDown: boolean // < 1919\n  lgAndUp: boolean // > 1280\n  xlAndDown: boolean\n  xlAndUp: boolean // < 1920\n\n  // true if screen width < mobileBreakpoint\n  mobile: boolean\n  mobileBreakpoint: number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n\n  // Current breakpoint name (e.g. 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl')\n  name: string\n\n  // The current value of window.innerHeight and window.innerWidth\n  height: number\n  width: number\n\n  // Device userAgent information\n  platform: {\n    android: boolean\n    ios: boolean\n    cordova: boolean\n    electron: boolean\n    chrome: boolean\n    edge: boolean\n    firefox: boolean\n    opera: boolean\n    win: boolean\n    mac: boolean\n    linux: boolean\n    touch: boolean\n    ssr: boolean\n  }\n\n  // The values used to make Breakpoint calculations\n  thresholds: {\n    xs: number\n    sm: number\n    md: number\n    lg: number\n    xl: number\n    xxl: number\n  }\n}\n```",
    "metadata": {
      "component": "v-examples",
      "section_type": "code_example",
      "subsection": "Interface",
      "content_type": "code_example",
      "language": "ts",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001875",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001876",
    "text": "Component: v-using-setup\nType: component_overview\n\n# v-using-setup\n\nUse the **useDisplay** composable alongside Vue 3's `setup` function to harness the power of the [Composition API](https://v3.vuejs.org/guide/composition-api-setup.html). In this example we show how to toggle the **fullscreen** property of `v-dialog` when the mobile breakpoint is active.\n\nAvailable sections: Breakpoint conditionals",
    "display_content": "# v-using-setup\n\nUse the **useDisplay** composable alongside Vue 3's `setup` function to harness the power of the [Composition API](https://v3.vuejs.org/guide/composition-api-setup.html). In this example we show how to toggle the **fullscreen** property of `v-dialog` when the mobile breakpoint is active.\n\nAvailable sections: Breakpoint conditionals",
    "metadata": {
      "component": "v-using-setup",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001876",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001877",
    "text": "Component: v-component-mobile-breakpoints\nType: component_overview\n\n# v-component-mobile-breakpoints\n\nSome components within Vuetify have a **mobile-breakpoint** property which allows you to override the default value. These components reference the global mobileBreakpoint value that is generated at runtime using the provided options in the `vuetify.js` file.\n\nAvailable sections: useDisplay overrides",
    "display_content": "# v-component-mobile-breakpoints\n\nSome components within Vuetify have a **mobile-breakpoint** property which allows you to override the default value. These components reference the global mobileBreakpoint value that is generated at runtime using the provided options in the `vuetify.js` file.\n\nAvailable sections: useDisplay overrides",
    "metadata": {
      "component": "v-component-mobile-breakpoints",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001877",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001878",
    "text": "Component: v-component-mobile-breakpoints\nSection: useDisplay overrides\nType: code_example\n\n## v-component-mobile-breakpoints - useDisplay overrides\n\nSpecify a custom **mobileBreakpoint** value directly to the [useDisplay](/api/use-display/) composable and override the global value. In the following example we use a custom mobileBreakpoint value of **580**:\n\n```html { resource=\"Component.vue\" }\n<script setup>\n  import { onMounted } from 'vue'\n  import { useDisplay } from 'vuetify'\n\n  const { mobile } = useDisplay({ mobileBreakpoint: 580 })\n\n  // Given a viewport width of 960px\n  onMounted(() => {\n    console.log(mobile.value) // false\n  })\n</script>\n\n```\n\nIf you supply a value for the **name** argument, utilize the **displayClasses** property to apply the appropriate classes to your component. In the next example, the following classes would be applied to the root element of the component:\n\n```",
    "display_content": "## v-component-mobile-breakpoints - useDisplay overrides\n\nSpecify a custom **mobileBreakpoint** value directly to the [useDisplay](/api/use-display/) composable and override the global value. In the following example we use a custom mobileBreakpoint value of **580**:\n\n```html { resource=\"Component.vue\" }\n<script setup>\n  import { onMounted } from 'vue'\n  import { useDisplay } from 'vuetify'\n\n  const { mobile } = useDisplay({ mobileBreakpoint: 580 })\n\n  // Given a viewport width of 960px\n  onMounted(() => {\n    console.log(mobile.value) // false\n  })\n</script>\n\n```\n\nIf you supply a value for the **name** argument, utilize the **displayClasses** property to apply the appropriate classes to your component. In the next example, the following classes would be applied to the root element of the component:\n\n```",
    "metadata": {
      "component": "v-component-mobile-breakpoints",
      "section_type": "code_example",
      "subsection": "useDisplay overrides",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001878",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001879",
    "text": "Component: v-component-mobile-breakpoints\nSection: useDisplay overrides\nType: code_example\n\n## v-component-mobile-breakpoints - useDisplay overrides\n\nhtml { resource=\"Component.vue\" }\n<template>\n  <div\n    :class=\"[\n      'v-component',\n      displayClasses,\n    ]\"\n  >\n    <!-- v-component--mobile -->\n  </div>\n</template>\n\n<script setup>\n  import { defineName } from 'vue'\n  import { useDisplay } from 'vuetify'\n\n  const { displayClasses } = useDisplay({ mobileBreakpoint }, 'v-component')\n</script>\n\n```\n\nIf you leave out the name argument, displayClasses will use the default name set by Vue. The following example uses the default name of the local component:\n\n```",
    "display_content": "## v-component-mobile-breakpoints - useDisplay overrides\n\nhtml { resource=\"Component.vue\" }\n<template>\n  <div\n    :class=\"[\n      'v-component',\n      displayClasses,\n    ]\"\n  >\n    <!-- v-component--mobile -->\n  </div>\n</template>\n\n<script setup>\n  import { defineName } from 'vue'\n  import { useDisplay } from 'vuetify'\n\n  const { displayClasses } = useDisplay({ mobileBreakpoint }, 'v-component')\n</script>\n\n```\n\nIf you leave out the name argument, displayClasses will use the default name set by Vue. The following example uses the default name of the local component:\n\n```",
    "metadata": {
      "component": "v-component-mobile-breakpoints",
      "section_type": "code_example",
      "subsection": "useDisplay overrides",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001879",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001880",
    "text": "Component: v-global-configuration\nType: component_overview\n\n# v-global-configuration\n\nVuetify allows you to set default prop values globally or per component when setting up your application. Using this functionality you can for example disable **ripple** on all components, or set the default **elevation** for all sheets or buttons.",
    "display_content": "# v-global-configuration\n\nVuetify allows you to set default prop values globally or per component when setting up your application. Using this functionality you can for example disable **ripple** on all components, or set the default **elevation** for all sheets or buttons.",
    "metadata": {
      "component": "v-global-configuration",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001880",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001881",
    "text": "Component: v-setup\nType: component_overview\n\n# v-setup\n\nUse the **defaults** property of the Vuetify configuration object to set default prop values. Here we have disabled **ripple** for all components that support it, and set the default **elevation** to `4` and the default **prepend-icon** to `$vuetify` for all `<v-btn>` components.",
    "display_content": "# v-setup\n\nUse the **defaults** property of the Vuetify configuration object to set default prop values. Here we have disabled **ripple** for all components that support it, and set the default **elevation** to `4` and the default **prepend-icon** to `$vuetify` for all `<v-btn>` components.",
    "metadata": {
      "component": "v-setup",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001881",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001882",
    "text": "Component: v-contextual-defaults\nType: component_overview\n\n# v-contextual-defaults\n\nDefaults can also be configured for components nested within other components, for example if you want to set the default **variant** for all `<v-btn>` components nested within a `<v-card>` component:",
    "display_content": "# v-contextual-defaults\n\nDefaults can also be configured for components nested within other components, for example if you want to set the default **variant** for all `<v-btn>` components nested within a `<v-card>` component:",
    "metadata": {
      "component": "v-contextual-defaults",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001882",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001883",
    "text": "Component: v-global-class-and-styles\nType: component_overview\n\n# v-global-class-and-styles\n\nDefine global classes and styles for all [built-in](/components/all/) components; including [virtual](/features/aliasing/#virtual-component-defaults) ones. This provides an immense amount of utility when building your application's design system and it reduces the amount of duplicated code in your templates.",
    "display_content": "# v-global-class-and-styles\n\nDefine global classes and styles for all [built-in](/components/all/) components; including [virtual](/features/aliasing/#virtual-component-defaults) ones. This provides an immense amount of utility when building your application's design system and it reduces the amount of duplicated code in your templates.",
    "metadata": {
      "component": "v-global-class-and-styles",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001883",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001884",
    "text": "Component: v-using-with-virtual-components\nType: component_overview\n\n# v-using-with-virtual-components\n\nWhether you are developing a wrapper framework or just a design system for your application, [virtual components](/features/aliasing/#virtual-component-defaults) are a powerful ally. Within the Vuetify defaults system, classes and styles are treated just like regular props but instead of being overwritten at the template level, they are merged.",
    "display_content": "# v-using-with-virtual-components\n\nWhether you are developing a wrapper framework or just a design system for your application, [virtual components](/features/aliasing/#virtual-component-defaults) are a powerful ally. Within the Vuetify defaults system, classes and styles are treated just like regular props but instead of being overwritten at the template level, they are merged.",
    "metadata": {
      "component": "v-using-with-virtual-components",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001884",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001885",
    "text": "Component: v-using-in-custom-components\nType: component_overview\n\n# v-using-in-custom-components\n\nHook into the Vuetify defaults engine and configure your custom components the same way that we do. This feature makes it super easy to homogenize functionality across your application and reduce the amount of duplicated code.\n\nAvailable sections: Nested defaults",
    "display_content": "# v-using-in-custom-components\n\nHook into the Vuetify defaults engine and configure your custom components the same way that we do. This feature makes it super easy to homogenize functionality across your application and reduce the amount of duplicated code.\n\nAvailable sections: Nested defaults",
    "metadata": {
      "component": "v-using-in-custom-components",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001885",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001886",
    "text": "Component: v-using-in-custom-components\nSection: Nested defaults\nType: code_example\n\n## v-using-in-custom-components - Nested defaults\n\nIt is possible to assign nested defaults within your component chain. This provides you with countless ways to configure your application and its components.\n\nLet's expand on the previous [example](#using-in-custom-components) by creating a new component, `<MyComponent2>` that uses `<MyComponent1>`:\n\n```html { resource=\"src/components/MyComponent2.vue\" }\n<template>\n  <MyComponent1 />\n</template>\n\n<script setup>\n  import MyComponent1 from './MyComponent1.vue'\n</script>\n\n```\n\nNow, let's add `<MyComponent2>` to the Vuetify defaults configuration object and assign a default value to `foo` prop of all nested `<MyComponent1>` components:\n\n```",
    "display_content": "## v-using-in-custom-components - Nested defaults\n\nIt is possible to assign nested defaults within your component chain. This provides you with countless ways to configure your application and its components.\n\nLet's expand on the previous [example](#using-in-custom-components) by creating a new component, `<MyComponent2>` that uses `<MyComponent1>`:\n\n```html { resource=\"src/components/MyComponent2.vue\" }\n<template>\n  <MyComponent1 />\n</template>\n\n<script setup>\n  import MyComponent1 from './MyComponent1.vue'\n</script>\n\n```\n\nNow, let's add `<MyComponent2>` to the Vuetify defaults configuration object and assign a default value to `foo` prop of all nested `<MyComponent1>` components:\n\n```",
    "metadata": {
      "component": "v-using-in-custom-components",
      "section_type": "code_example",
      "subsection": "Nested defaults",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001886",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001887",
    "text": "Component: v-using-in-custom-components\nSection: Nested defaults\nType: code_example\n\n## v-using-in-custom-components - Nested defaults\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify({\n  defaults: {\n    MyComponent: { foo: 'bar' },\n\n    MyComponent2: {\n      MyComponent: { foo: 'baz' },\n    }\n  }\n})\n\n```\n\nHead back to the `MyComponent2.vue` file and import & invoke the `useDefaults` composable:\n\n```",
    "display_content": "## v-using-in-custom-components - Nested defaults\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify({\n  defaults: {\n    MyComponent: { foo: 'bar' },\n\n    MyComponent2: {\n      MyComponent: { foo: 'baz' },\n    }\n  }\n})\n\n```\n\nHead back to the `MyComponent2.vue` file and import & invoke the `useDefaults` composable:\n\n```",
    "metadata": {
      "component": "v-using-in-custom-components",
      "section_type": "code_example",
      "subsection": "Nested defaults",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001887",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001888",
    "text": "Component: v-using-in-custom-components\nSection: Nested defaults\nType: code_example\n\n## v-using-in-custom-components - Nested defaults\n\nhtml { resource=\"src/components/MyComponent2.vue\" }\n<template>\n  <div>\n    <slot />\n  </div>\n</template>\n\n<script setup>\n  import MyComponent1 from './MyComponent1.vue'\n  import { useDefaults } from 'vuetify'\n\n  useDefaults()\n</script>\n\n```\n\nFinally, add both new components to a template and inspect the output:\n\n```",
    "display_content": "## v-using-in-custom-components - Nested defaults\n\nhtml { resource=\"src/components/MyComponent2.vue\" }\n<template>\n  <div>\n    <slot />\n  </div>\n</template>\n\n<script setup>\n  import MyComponent1 from './MyComponent1.vue'\n  import { useDefaults } from 'vuetify'\n\n  useDefaults()\n</script>\n\n```\n\nFinally, add both new components to a template and inspect the output:\n\n```",
    "metadata": {
      "component": "v-using-in-custom-components",
      "section_type": "code_example",
      "subsection": "Nested defaults",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001888",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001889",
    "text": "Component: v-icon-fonts\nType: component_overview\n\n# v-icon-fonts\n\nOut of the box, Vuetify supports 4 popular icon font libraries—[Material Design Icons](https://materialdesignicons.com/), [Material Icons](https://fonts.google.com/icons), [Font Awesome 4](https://fontawesome.com/v4.7.0/) and [Font Awesome 5](https://fontawesome.com/).",
    "display_content": "# v-icon-fonts\n\nOut of the box, Vuetify supports 4 popular icon font libraries—[Material Design Icons](https://materialdesignicons.com/), [Material Icons](https://fonts.google.com/icons), [Font Awesome 4](https://fontawesome.com/v4.7.0/) and [Font Awesome 5](https://fontawesome.com/).",
    "metadata": {
      "component": "v-icon-fonts",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001889",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001890",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nTo change your font library, import one of the pre-defined icon sets or provide your own.",
    "display_content": "# v-usage\n\nTo change your font library, import one of the pre-defined icon sets or provide your own.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001890",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001891",
    "text": "Component: v-installing-icon-fonts\nType: component_overview\n\n# v-installing-icon-fonts\n\nYou are required to include the specified icon library (even when using the default icons from [Material Design Icons](https://materialdesignicons.com/)). This can be done by including a CDN link or importing the icon library into your application.\n\nAvailable sections: Material Design Icons, MDI - CSS, MDI - JS SVG, MDI - Icon search, Material Icons, Material Icons - CSS, Font Awesome, FA 5 - CSS, FA 4 - CSS, FA 5 - SVG",
    "display_content": "# v-installing-icon-fonts\n\nYou are required to include the specified icon library (even when using the default icons from [Material Design Icons](https://materialdesignicons.com/)). This can be done by including a CDN link or importing the icon library into your application.\n\nAvailable sections: Material Design Icons, MDI - CSS, MDI - JS SVG, MDI - Icon search, Material Icons, Material Icons - CSS, Font Awesome, FA 5 - CSS, FA 4 - CSS, FA 5 - SVG",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001891",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001892",
    "text": "Component: v-installing-icon-fonts\nSection: Material Design Icons\nType: documentation\n\n## v-installing-icon-fonts - Material Design Icons\n\nThis is the default icon set used by Vuetify. It supports local installation with a build process or a CDN link. The following shows how to add the CDN link to your `index.html`:",
    "display_content": "## v-installing-icon-fonts - Material Design Icons\n\nThis is the default icon set used by Vuetify. It supports local installation with a build process or a CDN link. The following shows how to add the CDN link to your `index.html`:",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "subsection",
      "subsection": "Material Design Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001892",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001893",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - CSS\nType: code_example\n\n## v-installing-icon-fonts - MDI - CSS\n\n```html\n<link href=\"https://cdn.jsdelivr.net/npm/@mdi/font@5.x/css/materialdesignicons.min.css\" rel=\"stylesheet\">\n```",
    "display_content": "## v-installing-icon-fonts - MDI - CSS\n\n```html\n<link href=\"https://cdn.jsdelivr.net/npm/@mdi/font@5.x/css/materialdesignicons.min.css\" rel=\"stylesheet\">\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - CSS",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001893",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001894",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - CSS\nType: code_example\n\n## v-installing-icon-fonts - MDI - CSS\n\nOr as a local dependency:\n\n::: tabs\n\n```bash [pnpm]\npnpm add @mdi/font -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - CSS\n\nOr as a local dependency:\n\n::: tabs\n\n```bash [pnpm]\npnpm add @mdi/font -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001894",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001895",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - CSS\nType: code_example\n\n## v-installing-icon-fonts - MDI - CSS\n\nbash [yarn]\nyarn add @mdi/font -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - CSS\n\nbash [yarn]\nyarn add @mdi/font -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001895",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001896",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - CSS\nType: code_example\n\n## v-installing-icon-fonts - MDI - CSS\n\nbash [npm]\nnpm install @mdi/font -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - CSS\n\nbash [npm]\nnpm install @mdi/font -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001896",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001897",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - CSS\nType: code_example\n\n## v-installing-icon-fonts - MDI - CSS\n\nbash [bun]\nbun add @mdi/font -D\n\n```\n\n:::\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - CSS\n\nbash [bun]\nbun add @mdi/font -D\n\n```\n\n:::\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001897",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001898",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - JS SVG\nType: code_example\n\n## v-installing-icon-fonts - MDI - JS SVG\n\nThis is the recommended installation when optimizing your application for production, as only icons used for Vuetify components internally will be imported into your application bundle. You will need to provide your own icons for the rest of the app.\n\n```js { resource=\"src/plugins/vuetify.js\" }\nimport { createVuetify } from 'vuetify'\nimport { aliases, mdi } from 'vuetify/iconsets/mdi-svg'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'mdi',\n    aliases,\n    sets: {\n      mdi,\n    },\n  },\n})\n\n```\n\n`@mdi/js` or [unplugin-icons](https://github.com/antfu/unplugin-icons) are two alternatives to get the rest of the icons that you will need in your application.\n\nIf you want to stick with `@mdi/js`, use the SVG paths as designated in [@mdi/js](https://www.npmjs.com/package/@mdi/js) and\nonly import the icons that you need.\n\nThe following example shows how to use an imported icon within a `.vue` SFC template:\n\n::: tabs\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - JS SVG\n\nThis is the recommended installation when optimizing your application for production, as only icons used for Vuetify components internally will be imported into your application bundle. You will need to provide your own icons for the rest of the app.\n\n```js { resource=\"src/plugins/vuetify.js\" }\nimport { createVuetify } from 'vuetify'\nimport { aliases, mdi } from 'vuetify/iconsets/mdi-svg'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'mdi',\n    aliases,\n    sets: {\n      mdi,\n    },\n  },\n})\n\n```\n\n`@mdi/js` or [unplugin-icons](https://github.com/antfu/unplugin-icons) are two alternatives to get the rest of the icons that you will need in your application.\n\nIf you want to stick with `@mdi/js`, use the SVG paths as designated in [@mdi/js](https://www.npmjs.com/package/@mdi/js) and\nonly import the icons that you need.\n\nThe following example shows how to use an imported icon within a `.vue` SFC template:\n\n::: tabs\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - JS SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001898",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001899",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - JS SVG\nType: code_example\n\n## v-installing-icon-fonts - MDI - JS SVG\n\nbash [pnpm]\npnpm add @mdi/js -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - JS SVG\n\nbash [pnpm]\npnpm add @mdi/js -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - JS SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001899",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001900",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - JS SVG\nType: code_example\n\n## v-installing-icon-fonts - MDI - JS SVG\n\nbash [yarn]\nyarn add @mdi/js -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - JS SVG\n\nbash [yarn]\nyarn add @mdi/js -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - JS SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001900",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001901",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - JS SVG\nType: code_example\n\n## v-installing-icon-fonts - MDI - JS SVG\n\nbash [npm]\nnpm install @mdi/js -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - JS SVG\n\nbash [npm]\nnpm install @mdi/js -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - JS SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001901",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001902",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - JS SVG\nType: code_example\n\n## v-installing-icon-fonts - MDI - JS SVG\n\nbash [bun]\nbun add @mdi/js -D\n\n```\n\n:::\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - JS SVG\n\nbash [bun]\nbun add @mdi/js -D\n\n```\n\n:::\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - JS SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001902",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001903",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - JS SVG\nType: code_example\n\n## v-installing-icon-fonts - MDI - JS SVG\n\nhtml\n<template>\n  <v-icon :icon=\"mdiAccount\" />\n</template>\n\n<script setup>\n  import { mdiAccount } from '@mdi/js'\n</script>\n\n```\n\nOr the icons you want to use can be added as aliases to simplify reuse:\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - JS SVG\n\nhtml\n<template>\n  <v-icon :icon=\"mdiAccount\" />\n</template>\n\n<script setup>\n  import { mdiAccount } from '@mdi/js'\n</script>\n\n```\n\nOr the icons you want to use can be added as aliases to simplify reuse:\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - JS SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001903",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001904",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - JS SVG\nType: code_example\n\n## v-installing-icon-fonts - MDI - JS SVG\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport { createVuetify } from 'vuetify'\nimport { aliases, mdi } from 'vuetify/iconsets/mdi-svg'\nimport { mdiAccount } from '@mdi/js'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'mdi',\n    aliases: {\n      ...aliases,\n      account: mdiAccount,\n    },\n    sets: {\n      mdi,\n    },\n  },\n})\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - MDI - JS SVG\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport { createVuetify } from 'vuetify'\nimport { aliases, mdi } from 'vuetify/iconsets/mdi-svg'\nimport { mdiAccount } from '@mdi/js'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'mdi',\n    aliases: {\n      ...aliases,\n      account: mdiAccount,\n    },\n    sets: {\n      mdi,\n    },\n  },\n})\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "MDI - JS SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001904",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001905",
    "text": "Component: v-installing-icon-fonts\nSection: MDI - Icon search\nType: documentation\n\n## v-installing-icon-fonts - MDI - Icon search\n\nUse this tool to search for any Material Design Icons and copy them to your clipboard by clicking the item.\n\n<DocIconList />",
    "display_content": "## v-installing-icon-fonts - MDI - Icon search\n\nUse this tool to search for any Material Design Icons and copy them to your clipboard by clicking the item.\n\n<DocIconList />",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "subsection",
      "subsection": "MDI - Icon search",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001905",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001906",
    "text": "Component: v-installing-icon-fonts\nSection: Material Icons\nType: documentation\n\n## v-installing-icon-fonts - Material Icons\n\nFor projects without a build process, it is recommended to import the icons from CDN.",
    "display_content": "## v-installing-icon-fonts - Material Icons\n\nFor projects without a build process, it is recommended to import the icons from CDN.",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "subsection",
      "subsection": "Material Icons",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001906",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001907",
    "text": "Component: v-installing-icon-fonts\nSection: Material Icons - CSS\nType: code_example\n\n## v-installing-icon-fonts - Material Icons - CSS\n\n```html\n<link href=\"https://fonts.googleapis.com/css?family=Material+Icons\" rel=\"stylesheet\">\n```",
    "display_content": "## v-installing-icon-fonts - Material Icons - CSS\n\n```html\n<link href=\"https://fonts.googleapis.com/css?family=Material+Icons\" rel=\"stylesheet\">\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "Material Icons - CSS",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001907",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001908",
    "text": "Component: v-installing-icon-fonts\nSection: Material Icons - CSS\nType: code_example\n\n## v-installing-icon-fonts - Material Icons - CSS\n\nSome Material Icons are missing by default. For example, `person` and `person_outline` are available, but `visibility_outline` isn't, while `visibility` is. To use the missing icons, replace the existing `<link>` with the following:\n\n```html\n<link\n  rel=\"stylesheet\"\n  href=\"https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp\"\n/>\n```",
    "display_content": "## v-installing-icon-fonts - Material Icons - CSS\n\nSome Material Icons are missing by default. For example, `person` and `person_outline` are available, but `visibility_outline` isn't, while `visibility` is. To use the missing icons, replace the existing `<link>` with the following:\n\n```html\n<link\n  rel=\"stylesheet\"\n  href=\"https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp\"\n/>\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "Material Icons - CSS",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001908",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001909",
    "text": "Component: v-installing-icon-fonts\nSection: Material Icons - CSS\nType: code_example\n\n## v-installing-icon-fonts - Material Icons - CSS\n\nAlternatively, it is possible to install locally using yarn or npm. Keep in mind that this is not an official google repository and may not contain all icons.\n\n::: tabs\n\n```bash [pnpm]\npnpm add material-design-icons-iconfont -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - Material Icons - CSS\n\nAlternatively, it is possible to install locally using yarn or npm. Keep in mind that this is not an official google repository and may not contain all icons.\n\n::: tabs\n\n```bash [pnpm]\npnpm add material-design-icons-iconfont -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "Material Icons - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001909",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001910",
    "text": "Component: v-installing-icon-fonts\nSection: Material Icons - CSS\nType: code_example\n\n## v-installing-icon-fonts - Material Icons - CSS\n\nbash [yarn]\nyarn add material-design-icons-iconfont -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - Material Icons - CSS\n\nbash [yarn]\nyarn add material-design-icons-iconfont -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "Material Icons - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001910",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001911",
    "text": "Component: v-installing-icon-fonts\nSection: Material Icons - CSS\nType: code_example\n\n## v-installing-icon-fonts - Material Icons - CSS\n\nbash [npm]\nnpm install material-design-icons-iconfont -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - Material Icons - CSS\n\nbash [npm]\nnpm install material-design-icons-iconfont -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "Material Icons - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001911",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001912",
    "text": "Component: v-installing-icon-fonts\nSection: Material Icons - CSS\nType: code_example\n\n## v-installing-icon-fonts - Material Icons - CSS\n\nbash [bun]\nbun add material-design-icons-iconfont -D\n\n```\n\n:::\n\n```",
    "display_content": "## v-installing-icon-fonts - Material Icons - CSS\n\nbash [bun]\nbun add material-design-icons-iconfont -D\n\n```\n\n:::\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "Material Icons - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001912",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001913",
    "text": "Component: v-installing-icon-fonts\nSection: Material Icons - CSS\nType: code_example\n\n## v-installing-icon-fonts - Material Icons - CSS\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport 'material-design-icons-iconfont/dist/material-design-icons.css' // Ensure your project is capable of handling css files\nimport { createVuetify } from 'vuetify'\nimport { aliases, md } from 'vuetify/iconsets/md'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'md',\n    aliases,\n    sets: {\n      md,\n    },\n  },\n})\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - Material Icons - CSS\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport 'material-design-icons-iconfont/dist/material-design-icons.css' // Ensure your project is capable of handling css files\nimport { createVuetify } from 'vuetify'\nimport { aliases, md } from 'vuetify/iconsets/md'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'md',\n    aliases,\n    sets: {\n      md,\n    },\n  },\n})\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "Material Icons - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001913",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001914",
    "text": "Component: v-installing-icon-fonts\nSection: Font Awesome\nType: documentation\n\n## v-installing-icon-fonts - Font Awesome\n\nThe easiest way to get started with **FontAwesome** is to use a CDN.",
    "display_content": "## v-installing-icon-fonts - Font Awesome\n\nThe easiest way to get started with **FontAwesome** is to use a CDN.",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "subsection",
      "subsection": "Font Awesome",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001914",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001915",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - CSS\n\n```html\n<link href=\"https://use.fontawesome.com/releases/v5.0.13/css/all.css\" rel=\"stylesheet\">\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - CSS\n\n```html\n<link href=\"https://use.fontawesome.com/releases/v5.0.13/css/all.css\" rel=\"stylesheet\">\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - CSS",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001915",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001916",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - CSS\n\nTo install locally you can pull in the [free](https://fontawesome.com/) version of **FontAwesome** using your preferred package manager:\n\n::: tabs\n\n```bash [pnpm]\npnpm add @fortawesome/fontawesome-free -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - CSS\n\nTo install locally you can pull in the [free](https://fontawesome.com/) version of **FontAwesome** using your preferred package manager:\n\n::: tabs\n\n```bash [pnpm]\npnpm add @fortawesome/fontawesome-free -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001916",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001917",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - CSS\n\nbash [yarn]\nyarn add @fortawesome/fontawesome-free -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - CSS\n\nbash [yarn]\nyarn add @fortawesome/fontawesome-free -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001917",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001918",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - CSS\n\nbash [npm]\nnpm install @fortawesome/fontawesome-free -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - CSS\n\nbash [npm]\nnpm install @fortawesome/fontawesome-free -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001918",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001919",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - CSS\n\nbash [bun]\nbun add @fortawesome/fontawesome-free -D\n\n```\n\n:::\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - CSS\n\nbash [bun]\nbun add @fortawesome/fontawesome-free -D\n\n```\n\n:::\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001919",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001920",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - CSS\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport '@fortawesome/fontawesome-free/css/all.css' // Ensure your project is capable of handling css files\nimport { createVuetify } from 'vuetify'\nimport { aliases, fa } from 'vuetify/iconsets/fa'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'fa',\n    aliases,\n    sets: {\n      fa,\n    },\n  },\n})\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - CSS\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport '@fortawesome/fontawesome-free/css/all.css' // Ensure your project is capable of handling css files\nimport { createVuetify } from 'vuetify'\nimport { aliases, fa } from 'vuetify/iconsets/fa'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'fa',\n    aliases,\n    sets: {\n      fa,\n    },\n  },\n})\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001920",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001921",
    "text": "Component: v-installing-icon-fonts\nSection: FA 4 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 4 - CSS\n\nThe easiest way to get started with **FontAwesome** is to use a CDN.\n\n```html\n<link href=\"https://cdn.jsdelivr.net/npm/font-awesome@4.x/css/font-awesome.min.css\" rel=\"stylesheet\">\n```",
    "display_content": "## v-installing-icon-fonts - FA 4 - CSS\n\nThe easiest way to get started with **FontAwesome** is to use a CDN.\n\n```html\n<link href=\"https://cdn.jsdelivr.net/npm/font-awesome@4.x/css/font-awesome.min.css\" rel=\"stylesheet\">\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 4 - CSS",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001921",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001922",
    "text": "Component: v-installing-icon-fonts\nSection: FA 4 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 4 - CSS\n\nTo install FontAwesome **4** locally is the same as its newer version, just from a different package. You will be using the `font-awesome` package as opposed to `@fortawesome`.\n\n::: tabs\n\n```bash [pnpm]\npnpm add font-awesome@4.7.0 -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 4 - CSS\n\nTo install FontAwesome **4** locally is the same as its newer version, just from a different package. You will be using the `font-awesome` package as opposed to `@fortawesome`.\n\n::: tabs\n\n```bash [pnpm]\npnpm add font-awesome@4.7.0 -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 4 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001922",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001923",
    "text": "Component: v-installing-icon-fonts\nSection: FA 4 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 4 - CSS\n\nbash [yarn]\nyarn add font-awesome@4.7.0 -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 4 - CSS\n\nbash [yarn]\nyarn add font-awesome@4.7.0 -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 4 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001923",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001924",
    "text": "Component: v-installing-icon-fonts\nSection: FA 4 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 4 - CSS\n\nbash [npm]\nnpm install font-awesome@4.7.0 -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 4 - CSS\n\nbash [npm]\nnpm install font-awesome@4.7.0 -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 4 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001924",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001925",
    "text": "Component: v-installing-icon-fonts\nSection: FA 4 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 4 - CSS\n\nbash [bun]\nbun add font-awesome@4.7.0 -D\n\n```\n\n:::\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 4 - CSS\n\nbash [bun]\nbun add font-awesome@4.7.0 -D\n\n```\n\n:::\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 4 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001925",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001926",
    "text": "Component: v-installing-icon-fonts\nSection: FA 4 - CSS\nType: code_example\n\n## v-installing-icon-fonts - FA 4 - CSS\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport 'font-awesome/css/font-awesome.min.css' // Ensure your project is capable of handling css files\nimport { createVuetify } from 'vuetify'\nimport { aliases, fa } from 'vuetify/iconsets/fa4'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'fa',\n    aliases,\n    sets: {\n      fa,\n    },\n  },\n})\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 4 - CSS\n\njs { resource=\"src/plugins/vuetify.js\" }\nimport 'font-awesome/css/font-awesome.min.css' // Ensure your project is capable of handling css files\nimport { createVuetify } from 'vuetify'\nimport { aliases, fa } from 'vuetify/iconsets/fa4'\n\nexport default createVuetify({\n  icons: {\n    defaultSet: 'fa',\n    aliases,\n    sets: {\n      fa,\n    },\n  },\n})\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 4 - CSS",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001926",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001927",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - SVG\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - SVG\n\nInstall the following packages.\n\n::: tabs\n\n```bash [pnpm]\npnpm add @fortawesome/fontawesome-svg-core @fortawesome/vue-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/free-regular-svg-icons -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - SVG\n\nInstall the following packages.\n\n::: tabs\n\n```bash [pnpm]\npnpm add @fortawesome/fontawesome-svg-core @fortawesome/vue-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/free-regular-svg-icons -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001927",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001928",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - SVG\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - SVG\n\nbash [yarn]\nyarn add @fortawesome/fontawesome-svg-core @fortawesome/vue-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/free-regular-svg-icons -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - SVG\n\nbash [yarn]\nyarn add @fortawesome/fontawesome-svg-core @fortawesome/vue-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/free-regular-svg-icons -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001928",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001929",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - SVG\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - SVG\n\nbash [npm]\nnpm install @fortawesome/fontawesome-svg-core @fortawesome/vue-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/free-regular-svg-icons -D\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - SVG\n\nbash [npm]\nnpm install @fortawesome/fontawesome-svg-core @fortawesome/vue-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/free-regular-svg-icons -D\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001929",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001930",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - SVG\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - SVG\n\nbash [bun]\nbun add @fortawesome/fontawesome-svg-core @fortawesome/vue-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/free-regular-svg-icons -D\n\n```\n\n:::\n\nThen register the global `font-awesome-icon` component and use the pre-defined `fa-svg` icon set. If you have access to Font Awesome Pro icons they can be added to the library in the same way.\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - SVG\n\nbash [bun]\nbun add @fortawesome/fontawesome-svg-core @fortawesome/vue-fontawesome @fortawesome/free-solid-svg-icons @fortawesome/free-regular-svg-icons -D\n\n```\n\n:::\n\nThen register the global `font-awesome-icon` component and use the pre-defined `fa-svg` icon set. If you have access to Font Awesome Pro icons they can be added to the library in the same way.\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001930",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001931",
    "text": "Component: v-installing-icon-fonts\nSection: FA 5 - SVG\nType: code_example\n\n## v-installing-icon-fonts - FA 5 - SVG\n\njs { resource=\"src/main.js\" }\nimport { createApp } from 'vue'\nimport { createVuetify } from 'vuetify'\nimport { aliases, fa } from 'vuetify/iconsets/fa-svg'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\n\nconst app = createApp()\n\napp.component('font-awesome-icon', FontAwesomeIcon) // Register component globally\nlibrary.add(fas) // Include needed solid icons\nlibrary.add(far) // Include needed regular icons\n\nconst vuetify = createVuetify({\n  icons: {\n    defaultSet: 'fa',\n    aliases,\n    sets: {\n      fa,\n    },\n  },\n})\n\napp.use(vuetify)\n\napp.mount('#app')\n\n```\n\n```",
    "display_content": "## v-installing-icon-fonts - FA 5 - SVG\n\njs { resource=\"src/main.js\" }\nimport { createApp } from 'vue'\nimport { createVuetify } from 'vuetify'\nimport { aliases, fa } from 'vuetify/iconsets/fa-svg'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\n\nconst app = createApp()\n\napp.component('font-awesome-icon', FontAwesomeIcon) // Register component globally\nlibrary.add(fas) // Include needed solid icons\nlibrary.add(far) // Include needed regular icons\n\nconst vuetify = createVuetify({\n  icons: {\n    defaultSet: 'fa',\n    aliases,\n    sets: {\n      fa,\n    },\n  },\n})\n\napp.use(vuetify)\n\napp.mount('#app')\n\n```\n\n```",
    "metadata": {
      "component": "v-installing-icon-fonts",
      "section_type": "code_example",
      "subsection": "FA 5 - SVG",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001931",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001932",
    "text": "Component: v-built-in-aliases\nType: component_overview\n\n# v-built-in-aliases\n\nThe following icons are available as aliases for use in Vuetify components:",
    "display_content": "# v-built-in-aliases\n\nThe following icons are available as aliases for use in Vuetify components:",
    "metadata": {
      "component": "v-built-in-aliases",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001932",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001933",
    "text": "Component: v-multiple-icon-sets\nType: component_overview\n\n# v-multiple-icon-sets\n\nOut of the box, Vuetify supports the use of multiple *different* icon sets at the same time. The following example demonstrates how to change the default icon font to Font Awesome (`fa`) while still maintaining access to the original Material Design Icons (`mdi`) through the use of a prefix:",
    "display_content": "# v-multiple-icon-sets\n\nOut of the box, Vuetify supports the use of multiple *different* icon sets at the same time. The following example demonstrates how to change the default icon font to Font Awesome (`fa`) while still maintaining access to the original Material Design Icons (`mdi`) through the use of a prefix:",
    "metadata": {
      "component": "v-multiple-icon-sets",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001933",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001934",
    "text": "Component: v-creating-a-custom-icon-set\nType: component_overview\n\n# v-creating-a-custom-icon-set\n\nAn icon set consists of an object with one property `component` which should be a functional component that receives props of type `IconsProps`, and renders an icon.",
    "display_content": "# v-creating-a-custom-icon-set\n\nAn icon set consists of an object with one property `component` which should be a functional component that receives props of type `IconsProps`, and renders an icon.",
    "metadata": {
      "component": "v-creating-a-custom-icon-set",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001934",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001935",
    "text": "Component: v-extending-available-aliases\nType: component_overview\n\n# v-extending-available-aliases\n\nIf you are developing custom Vuetify components, you can extend the `aliases` object to utilize the same functionality that internal Vuetify components use. Icon aliases are referenced with an initial `$` followed by the name of the alias, e.g. `$product`.",
    "display_content": "# v-extending-available-aliases\n\nIf you are developing custom Vuetify components, you can extend the `aliases` object to utilize the same functionality that internal Vuetify components use. Icon aliases are referenced with an initial `$` followed by the name of the alias, e.g. `$product`.",
    "metadata": {
      "component": "v-extending-available-aliases",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001935",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001936",
    "text": "Component: v-internationalization\nType: component_overview\n\n# v-internationalization\n\nVuetify supports language Internationalization (i18n) of its components.",
    "display_content": "# v-internationalization\n\nVuetify supports language Internationalization (i18n) of its components.",
    "metadata": {
      "component": "v-internationalization",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001936",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001937",
    "text": "Component: v-getting-started\nType: component_overview\n\n# v-getting-started\n\nTo set the available locale messages or the default locale, supply the **locale** option when installing Vuetify.",
    "display_content": "# v-getting-started\n\nTo set the available locale messages or the default locale, supply the **locale** option when installing Vuetify.",
    "metadata": {
      "component": "v-getting-started",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001937",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001938",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Feature | Description | | - | - | | [useLocale](/api/use-locale/) | The locale composable is used | | [v-locale-provider](/api/v-locale-provider/) | The locale provider component is used to scope a portion of your application to a different locale than the default one |",
    "display_content": "# v-api\n\n| Feature | Description | | - | - | | [useLocale](/api/use-locale/) | The locale composable is used | | [v-locale-provider](/api/v-locale-provider/) | The locale provider component is used to scope a portion of your application to a different locale than the default one |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001938",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001939",
    "text": "Component: v-scoped-languages\nType: component_overview\n\n# v-scoped-languages\n\nUsing the `v-locale-provider` component it is possible to scope a portion of your application to a different locale than the default one.",
    "display_content": "# v-scoped-languages\n\nUsing the `v-locale-provider` component it is possible to scope a portion of your application to a different locale than the default one.",
    "metadata": {
      "component": "v-scoped-languages",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001939",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001940",
    "text": "Component: v-rtl\nType: component_overview\n\n# v-rtl\n\nRTL (Right To Left) support is built in for all localizations that ship with Vuetify. If a [supported language](#supported-languages) is flagged as RTL, all content directions are automatically switched. See the [next section](#creating-a-custom-locale) for information on how to add RTL support to a custom locale.",
    "display_content": "# v-rtl\n\nRTL (Right To Left) support is built in for all localizations that ship with Vuetify. If a [supported language](#supported-languages) is flagged as RTL, all content directions are automatically switched. See the [next section](#creating-a-custom-locale) for information on how to add RTL support to a custom locale.",
    "metadata": {
      "component": "v-rtl",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001940",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001941",
    "text": "Component: v-creating-a-custom-locale\nType: component_overview\n\n# v-creating-a-custom-locale\n\nTo create your own locale messages, copy and paste the content of `vuetify/src/locale/en.ts` to a new file, and change the localized strings. You can also specify if they should be displayed RTL or not by using the `rtl` property of the locale options.",
    "display_content": "# v-creating-a-custom-locale\n\nTo create your own locale messages, copy and paste the content of `vuetify/src/locale/en.ts` to a new file, and change the localized strings. You can also specify if they should be displayed RTL or not by using the `rtl` property of the locale options.",
    "metadata": {
      "component": "v-creating-a-custom-locale",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001941",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001942",
    "text": "Component: v-custom-vuetify-components\nType: component_overview\n\n# v-custom-vuetify-components\n\nIf you are building custom Vuetify components that need to hook into the locale service, you can use the `t` function from the **useLocale** composable, or the `$vuetify.locale` property when using Options API.",
    "display_content": "# v-custom-vuetify-components\n\nIf you are building custom Vuetify components that need to hook into the locale service, you can use the `t` function from the **useLocale** composable, or the `$vuetify.locale` property when using Options API.",
    "metadata": {
      "component": "v-custom-vuetify-components",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001942",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001943",
    "text": "Component: v-supported-languages\nType: component_overview\n\n# v-supported-languages\n\nCurrently Vuetify provides translations in the following languages:",
    "display_content": "# v-supported-languages\n\nCurrently Vuetify provides translations in the following languages:",
    "metadata": {
      "component": "v-supported-languages",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001943",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001944",
    "text": "Component: v-validation-rules\nType: component_overview\n\n# v-validation-rules\n\nThe rules composable provide a multitude of validation rules to be used with form inputs.",
    "display_content": "# v-validation-rules\n\nThe rules composable provide a multitude of validation rules to be used with form inputs.",
    "metadata": {
      "component": "v-validation-rules",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001944",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001945",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nTo use the Rules plugin, you'll need to import and register it with your Vuetify instance:",
    "display_content": "# v-installation\n\nTo use the Rules plugin, you'll need to import and register it with your Vuetify instance:",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001945",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001946",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nWithin your application, import the useRules function and use it to access the rules composable. Existing rules' error messages can also be customized on the fly, to fit specific field cases.",
    "display_content": "# v-usage\n\nWithin your application, import the useRules function and use it to access the rules composable. Existing rules' error messages can also be customized on the fly, to fit specific field cases.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001946",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001947",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\nBelow is a table of the available validation rules provided by the rules composable, including their arguments or options:",
    "display_content": "# v-api\n\nBelow is a table of the available validation rules provided by the rules composable, including their arguments or options:",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001947",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001948",
    "text": "Component: v-guide\nType: component_overview\n\n# v-guide\n\nThe `useRules` composable doesn't return rules directly but RuleBuilders that allows to customize error messages and to provide options when necessary.\n\nAvailable sections: Error message, Options",
    "display_content": "# v-guide\n\nThe `useRules` composable doesn't return rules directly but RuleBuilders that allows to customize error messages and to provide options when necessary.\n\nAvailable sections: Error message, Options",
    "metadata": {
      "component": "v-guide",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001948",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001949",
    "text": "Component: v-guide\nSection: Error message\nType: documentation\n\n## v-guide - Error message\n\nDefault error messages can be field-level redefined.\n\n```html { resource=\"src/App.vue\" }\n<v-form>\n  <v-text-field\n    label=\"Username\"\n    :rules=\"[rules.required('You have to fill this field!')]\"\n  ></v-text-field>\n</v-form>\n```",
    "display_content": "## v-guide - Error message\n\nDefault error messages can be field-level redefined.\n\n```html { resource=\"src/App.vue\" }\n<v-form>\n  <v-text-field\n    label=\"Username\"\n    :rules=\"[rules.required('You have to fill this field!')]\"\n  ></v-text-field>\n</v-form>\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "subsection",
      "subsection": "Error message",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001949",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001950",
    "text": "Component: v-guide\nSection: Options\nType: code_example\n\n## v-guide - Options\n\nSome RuleBuilders need options to work. For example `maxLength` needs a number as first parameter:\n\n```html { resource=\"src/App.vue\" }\n<v-form>\n  <v-text-field\n    label=\"Username\"\n    :rules=\"[rules.maxLength(10)]\"\n  ></v-text-field>\n</v-form>\n\n```\n\nIn this case, error message can be redefined as second parameter:\n\n```",
    "display_content": "## v-guide - Options\n\nSome RuleBuilders need options to work. For example `maxLength` needs a number as first parameter:\n\n```html { resource=\"src/App.vue\" }\n<v-form>\n  <v-text-field\n    label=\"Username\"\n    :rules=\"[rules.maxLength(10)]\"\n  ></v-text-field>\n</v-form>\n\n```\n\nIn this case, error message can be redefined as second parameter:\n\n```",
    "metadata": {
      "component": "v-guide",
      "section_type": "code_example",
      "subsection": "Options",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001950",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001951",
    "text": "Component: v-aliases\nType: component_overview\n\n# v-aliases\n\nRules can also be used in inputs using the alias names syntax:",
    "display_content": "# v-aliases\n\nRules can also be used in inputs using the alias names syntax:",
    "metadata": {
      "component": "v-aliases",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001951",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001952",
    "text": "Component: v-custom-rules\nType: component_overview\n\n# v-custom-rules\n\nVuetify comes with an existing set of validation rules but you can overwrite them or add yours.",
    "display_content": "# v-custom-rules\n\nVuetify comes with an existing set of validation rules but you can overwrite them or add yours.",
    "metadata": {
      "component": "v-custom-rules",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001952",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001953",
    "text": "Component: v-sass-variables\nType: component_overview\n\n# v-sass-variables\n\nVuetify uses **SASS/SCSS** to craft the style and appearance of all aspects of the framework.",
    "display_content": "# v-sass-variables\n\nVuetify uses **SASS/SCSS** to craft the style and appearance of all aspects of the framework.",
    "metadata": {
      "component": "v-sass-variables",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001953",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001954",
    "text": "Component: v-installation\nType: component_overview\n\n# v-installation\n\nVuetify works out of the box without any additional compilers needing to be installed but does support advanced use-cases such as modifying the underlying variables of the framework. Vite provides built-in support for sass, less and stylus files without the need to install Vite-specific plugins for them; just the corresponding pre-processor itself.",
    "display_content": "# v-installation\n\nVuetify works out of the box without any additional compilers needing to be installed but does support advanced use-cases such as modifying the underlying variables of the framework. Vite provides built-in support for sass, less and stylus files without the need to install Vite-specific plugins for them; just the corresponding pre-processor itself.",
    "metadata": {
      "component": "v-installation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001954",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001955",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThere are many SASS variables such as **font size**, **font family**, and **line height** that can be configured globally. An extensive list of configurable global SASS variables can be found [here](/api/globals/). To start, Follow the plugin setup guide from [treeshaking](/features/treeshaking/) then add `styles.configFile` to the plugin options:",
    "display_content": "# v-usage\n\nThere are many SASS variables such as **font size**, **font family**, and **line height** that can be configured globally. An extensive list of configurable global SASS variables can be found [here](/api/globals/). To start, Follow the plugin setup guide from [treeshaking](/features/treeshaking/) then add `styles.configFile` to the plugin options:",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001955",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001956",
    "text": "Component: v-variable-api\nType: component_overview\n\n# v-variable-api\n\nThere are many SASS/SCSS variables that can be customized across the entire Vuetify framework. You can browse all the variables using the tool below:",
    "display_content": "# v-variable-api\n\nThere are many SASS/SCSS variables that can be customized across the entire Vuetify framework. You can browse all the variables using the tool below:",
    "metadata": {
      "component": "v-variable-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001956",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001957",
    "text": "Component: v-usage-in-templates\nType: component_overview\n\n# v-usage-in-templates\n\nYou can access [global](/api/globals/) and per-component variables in Vue templates simply by importing the settings file:",
    "display_content": "# v-usage-in-templates\n\nYou can access [global](/api/globals/) and per-component variables in Vue templates simply by importing the settings file:",
    "metadata": {
      "component": "v-usage-in-templates",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001957",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001958",
    "text": "Component: v-disabling-utility-classes\nType: component_overview\n\n# v-disabling-utility-classes\n\nUtility classes are a powerful feature of Vuetify, but they can also be unnecessary for some projects. Each utility class is generated with a set of options that are defined [here](https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/styles/settings/_utilities.scss). Disable individual classes by setting their corresponding variable to `false`:",
    "display_content": "# v-disabling-utility-classes\n\nUtility classes are a powerful feature of Vuetify, but they can also be unnecessary for some projects. Each utility class is generated with a set of options that are defined [here](https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/styles/settings/_utilities.scss). Disable individual classes by setting their corresponding variable to `false`:",
    "metadata": {
      "component": "v-disabling-utility-classes",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001958",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001959",
    "text": "Component: v-disabling-color-packs\nType: component_overview\n\n# v-disabling-color-packs\n\nColor packs are handy for quickly applying a color to a component but mostly unused in production. To disable them, set the `$color-pack` variable to `false`:",
    "display_content": "# v-disabling-color-packs\n\nColor packs are handy for quickly applying a color to a component but mostly unused in production. To disable them, set the `$color-pack` variable to `false`:",
    "metadata": {
      "component": "v-disabling-color-packs",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001959",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001960",
    "text": "Component: v-enabling-css-cascade-layers\nType: component_overview\n\n# v-enabling-css-cascade-layers\n\n[Cascade layers](https://developer.mozilla.org/en-US/docs/Web/CSS/@layer) are a modern CSS feature that makes it easier to write custom styles without having to deal with specificity issues and `!important`. This will be included by default in Vuetify 4 but can optionally be used now:",
    "display_content": "# v-enabling-css-cascade-layers\n\n[Cascade layers](https://developer.mozilla.org/en-US/docs/Web/CSS/@layer) are a modern CSS feature that makes it easier to write custom styles without having to deal with specificity issues and `!important`. This will be included by default in Vuetify 4 but can optionally be used now:",
    "metadata": {
      "component": "v-enabling-css-cascade-layers",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001960",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001961",
    "text": "Component: v-caveats\nType: component_overview\n\n# v-caveats\n\nWhen using sass variables, there are a few considerations to be aware of.\n\nAvailable sections: Duplicated CSS, Build performance, Symlinks, sass-loader with `api: 'modern'`",
    "display_content": "# v-caveats\n\nWhen using sass variables, there are a few considerations to be aware of.\n\nAvailable sections: Duplicated CSS, Build performance, Symlinks, sass-loader with `api: 'modern'`",
    "metadata": {
      "component": "v-caveats",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001961",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001962",
    "text": "Component: v-caveats\nSection: Duplicated CSS\nType: documentation\n\n## v-caveats - Duplicated CSS\n\nPlacing actual styles or importing a regular stylesheet into the settings file will cause them to be duplicated everywhere the file is imported.\nOnly put variables, mixins, and functions in the settings file, styles should be placed in the main stylesheet or loaded another way.",
    "display_content": "## v-caveats - Duplicated CSS\n\nPlacing actual styles or importing a regular stylesheet into the settings file will cause them to be duplicated everywhere the file is imported.\nOnly put variables, mixins, and functions in the settings file, styles should be placed in the main stylesheet or loaded another way.",
    "metadata": {
      "component": "v-caveats",
      "section_type": "subsection",
      "subsection": "Duplicated CSS",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001962",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001963",
    "text": "Component: v-caveats\nSection: Build performance\nType: documentation\n\n## v-caveats - Build performance\n\nVuetify loads precompiled CSS by default, enabling variable customization will switch to the base SASS files instead which must be recompiled with your project.\nThis can be a performance hit if you're using more than a few vuetify components, and also forces you to use the same SASS compiler version as us.\n\nPerformance can be improved with Vite by using the modern sass compiler. Replace your `sass` dependency with `sass-embedded`, update vite to 5.4 or later, and set [`css.preprocessorOptions.sass.api`](https://vitejs.dev/config/shared-options#css-preprocessoroptions) to `'modern-compiler'` in the vite config.",
    "display_content": "## v-caveats - Build performance\n\nVuetify loads precompiled CSS by default, enabling variable customization will switch to the base SASS files instead which must be recompiled with your project.\nThis can be a performance hit if you're using more than a few vuetify components, and also forces you to use the same SASS compiler version as us.\n\nPerformance can be improved with Vite by using the modern sass compiler. Replace your `sass` dependency with `sass-embedded`, update vite to 5.4 or later, and set [`css.preprocessorOptions.sass.api`](https://vitejs.dev/config/shared-options#css-preprocessoroptions) to `'modern-compiler'` in the vite config.",
    "metadata": {
      "component": "v-caveats",
      "section_type": "subsection",
      "subsection": "Build performance",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001963",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001964",
    "text": "Component: v-caveats\nSection: Symlinks\nType: documentation\n\n## v-caveats - Symlinks\n\nPNPM and Yarn 2+ create symlinks to library files instead of copying them to node_modules, sass doesn't seem to like this and sometimes doesn't apply the configuration.",
    "display_content": "## v-caveats - Symlinks\n\nPNPM and Yarn 2+ create symlinks to library files instead of copying them to node_modules, sass doesn't seem to like this and sometimes doesn't apply the configuration.",
    "metadata": {
      "component": "v-caveats",
      "section_type": "subsection",
      "subsection": "Symlinks",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001964",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001965",
    "text": "Component: v-caveats\nSection: sass-loader with `api: 'modern'`\nType: api_reference\n\n## v-caveats - sass-loader with `api: 'modern'`\n\nYou might have to write a custom importer plugin to load the settings file.",
    "display_content": "## v-caveats - sass-loader with `api: 'modern'`\n\nYou might have to write a custom importer plugin to load the settings file.",
    "metadata": {
      "component": "v-caveats",
      "section_type": "subsection",
      "subsection": "sass-loader with `api: 'modern'`",
      "content_type": "api_reference",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001965",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001966",
    "text": "Component: v-programmatic-scrolling\nType: component_overview\n\n# v-programmatic-scrolling\n\nHandle scrolling within your application by using the **goTo** function.",
    "display_content": "# v-programmatic-scrolling\n\nHandle scrolling within your application by using the **goTo** function.",
    "metadata": {
      "component": "v-programmatic-scrolling",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001966",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001967",
    "text": "Component: v-usage\nType: component_overview\n\n# v-usage\n\nThe **goTo** method takes two parameters **target** and **options**. **target** can be either a pixel offset from the top of the page, a valid css selector, or an element reference. **options** is an object that includes **duration**, **easing**, **container**, and **offset**.",
    "display_content": "# v-usage\n\nThe **goTo** method takes two parameters **target** and **options**. **target** can be either a pixel offset from the top of the page, a valid css selector, or an element reference. **options** is an object that includes **duration**, **easing**, **container**, and **offset**.",
    "metadata": {
      "component": "v-usage",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001967",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001968",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Directive | Description | | - | - | | [useGoTo](/api/use-go-to/) | The useGoTo composable |",
    "display_content": "# v-api\n\n| Directive | Description | | - | - | | [useGoTo](/api/use-go-to/) | The useGoTo composable |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001968",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001969",
    "text": "Component: v-theme-configuration\nType: component_overview\n\n# v-theme-configuration\n\nCustomize your application's default text colors, surfaces, and more. Easily modify your theme programmatically in real time. Vuetify comes with standard support for light and dark variants.",
    "display_content": "# v-theme-configuration\n\nCustomize your application's default text colors, surfaces, and more. Easily modify your theme programmatically in real time. Vuetify comes with standard support for light and dark variants.",
    "metadata": {
      "component": "v-theme-configuration",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001969",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001970",
    "text": "Component: v-api\nType: component_overview\n\n# v-api\n\n| Feature | Description | | - | - | | [useTheme](/api/use-theme/) | The theme composable allows you to get information about, and modify the current theme | | [v-theme-provider](/api/v-theme-provider/) | The theme provider component modifies the theme of all its children |",
    "display_content": "# v-api\n\n| Feature | Description | | - | - | | [useTheme](/api/use-theme/) | The theme composable allows you to get information about, and modify the current theme | | [v-theme-provider](/api/v-theme-provider/) | The theme provider component modifies the theme of all its children |",
    "metadata": {
      "component": "v-api",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001970",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001971",
    "text": "Component: v-setup\nType: component_overview\n\n# v-setup\n\nVuetify comes with two themes pre-installed, `light` and `dark`. To set the default theme of your application, use the **defaultTheme** option.\n\nAvailable sections: Javascript, Typescript",
    "display_content": "# v-setup\n\nVuetify comes with two themes pre-installed, `light` and `dark`. To set the default theme of your application, use the **defaultTheme** option.\n\nAvailable sections: Javascript, Typescript",
    "metadata": {
      "component": "v-setup",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001971",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001972",
    "text": "Component: v-setup\nSection: Javascript\nType: code_example\n\n## v-setup - Javascript\n\nExample with only the **defaultTheme** value\n\n```js { resource=\"src/plugins/vuetify.js\" }\nimport { createApp } from 'vue'\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify({\n  theme: {\n    defaultTheme: 'dark'\n  }\n})\n\n```\n\nAdding new themes is as easy as defining a new property in the **theme.themes** object. A theme is a collection of colors and options that change the overall look and feel of your application. One of these options designates the theme as being either a **light** or **dark** variation.\nThis makes it possible for Vuetify to implement Material Design concepts such as elevated surfaces having a lighter overlay color the higher up they are. Find out more about dark themes on the official [Material Design](https://material.io/design/color/dark-theme.html) page.\n\n```",
    "display_content": "## v-setup - Javascript\n\nExample with only the **defaultTheme** value\n\n```js { resource=\"src/plugins/vuetify.js\" }\nimport { createApp } from 'vue'\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify({\n  theme: {\n    defaultTheme: 'dark'\n  }\n})\n\n```\n\nAdding new themes is as easy as defining a new property in the **theme.themes** object. A theme is a collection of colors and options that change the overall look and feel of your application. One of these options designates the theme as being either a **light** or **dark** variation.\nThis makes it possible for Vuetify to implement Material Design concepts such as elevated surfaces having a lighter overlay color the higher up they are. Find out more about dark themes on the official [Material Design](https://material.io/design/color/dark-theme.html) page.\n\n```",
    "metadata": {
      "component": "v-setup",
      "section_type": "code_example",
      "subsection": "Javascript",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001972",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001973",
    "text": "Component: v-setup\nSection: Typescript\nType: code_example\n\n## v-setup - Typescript\n\nExample with only the **defaultTheme** value\n\n```ts { resource=\"src/plugins/vuetify.ts\" }\nimport { createApp } from 'vue'\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify({\n  theme: {\n    defaultTheme: 'dark',\n  },\n})\n\n```\n\nWhen using Typescript you may use the `ThemeDefinition` type to get type hints for the structure of the theme object.\n\n```",
    "display_content": "## v-setup - Typescript\n\nExample with only the **defaultTheme** value\n\n```ts { resource=\"src/plugins/vuetify.ts\" }\nimport { createApp } from 'vue'\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify({\n  theme: {\n    defaultTheme: 'dark',\n  },\n})\n\n```\n\nWhen using Typescript you may use the `ThemeDefinition` type to get type hints for the structure of the theme object.\n\n```",
    "metadata": {
      "component": "v-setup",
      "section_type": "code_example",
      "subsection": "Typescript",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001973",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001974",
    "text": "Component: v-changing-theme\nType: component_overview\n\n# v-changing-theme\n\nThis is used when you need to change the theme during runtime",
    "display_content": "# v-changing-theme\n\nThis is used when you need to change the theme during runtime",
    "metadata": {
      "component": "v-changing-theme",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001974",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001975",
    "text": "Component: v-custom-theme-colors\nType: component_overview\n\n# v-custom-theme-colors\n\nThe Vuetify theme system supports adding custom colors. When configuring the Vuetify theme settings, add your custom colors to the **colors** object and Vuetify will generate a number of CSS classes and variables for you to use in your application.",
    "display_content": "# v-custom-theme-colors\n\nThe Vuetify theme system supports adding custom colors. When configuring the Vuetify theme settings, add your custom colors to the **colors** object and Vuetify will generate a number of CSS classes and variables for you to use in your application.",
    "metadata": {
      "component": "v-custom-theme-colors",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001975",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001976",
    "text": "Component: v-color-variations\nType: component_overview\n\n# v-color-variations\n\nThe Vuetify theme system can help you generate any number of **variations** for the colors in your theme. The following example shows how to generate 1 lighten and 2 darken variants for the `primary` and `secondary` colors.",
    "display_content": "# v-color-variations\n\nThe Vuetify theme system can help you generate any number of **variations** for the colors in your theme. The following example shows how to generate 1 lighten and 2 darken variants for the `primary` and `secondary` colors.",
    "metadata": {
      "component": "v-color-variations",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001976",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001977",
    "text": "Component: v-disable-theme\nType: component_overview\n\n# v-disable-theme\n\nThe theme functionality can be disabled by setting the **theme** configuration property to `false`. This prevents the creation of the Vuetify stylesheet, and theme classes will not be applied to components.",
    "display_content": "# v-disable-theme\n\nThe theme functionality can be disabled by setting the **theme** configuration property to `false`. This prevents the creation of the Vuetify stylesheet, and theme classes will not be applied to components.",
    "metadata": {
      "component": "v-disable-theme",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001977",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001978",
    "text": "Component: v-theme-object-structure\nType: component_overview\n\n# v-theme-object-structure\n\ninterface ThemeInstance { /** * Raw theme objects * Can be mutated to add new themes or update existing colors */ themes: Ref<{ [name: string]: ThemeDefinition }>",
    "display_content": "# v-theme-object-structure\n\ninterface ThemeInstance { /** * Raw theme objects * Can be mutated to add new themes or update existing colors */ themes: Ref<{ [name: string]: ThemeDefinition }>",
    "metadata": {
      "component": "v-theme-object-structure",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001978",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001979",
    "text": "Component: v-csp-nonce\nType: component_overview\n\n# v-csp-nonce\n\nPages with the `script-src` or `style-src` CSP rules enabled may require a **nonce** to be specified for embedded style tags.",
    "display_content": "# v-csp-nonce\n\nPages with the `script-src` or `style-src` CSP rules enabled may require a **nonce** to be specified for embedded style tags.",
    "metadata": {
      "component": "v-csp-nonce",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001979",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001980",
    "text": "Component: v-implementation\nType: component_overview\n\n# v-implementation\n\nVuetify generates theme styles at runtime according to the given configuration. The generated styles are injected into the `<head>` section of the DOM in a `<style>` tag with a default **id** of `vuetify-theme-stylesheet`.\n\nAvailable sections: Microfrontends",
    "display_content": "# v-implementation\n\nVuetify generates theme styles at runtime according to the given configuration. The generated styles are injected into the `<head>` section of the DOM in a `<style>` tag with a default **id** of `vuetify-theme-stylesheet`.\n\nAvailable sections: Microfrontends",
    "metadata": {
      "component": "v-implementation",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001980",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001981",
    "text": "Component: v-implementation\nSection: Microfrontends\nType: documentation\n\n## v-implementation - Microfrontends\n\nAn application using microfrontends with multiple instances of Vuetify may need to define unique **theme.stylesheetId** values for each microfrontend in order to prevent conflicts between their generated stylesheets.\nFurther, such a scenario might require styles to be scoped to a specific microfrontend, which can be achieved by setting the **theme.scope** property.\nFor example, a microfrontend mounted in an element `#my-app` can define a **theme.scope** of `#my-app` to scope its styles to that element and its children instead of `:root` and global classes.",
    "display_content": "## v-implementation - Microfrontends\n\nAn application using microfrontends with multiple instances of Vuetify may need to define unique **theme.stylesheetId** values for each microfrontend in order to prevent conflicts between their generated stylesheets.\nFurther, such a scenario might require styles to be scoped to a specific microfrontend, which can be achieved by setting the **theme.scope** property.\nFor example, a microfrontend mounted in an element `#my-app` can define a **theme.scope** of `#my-app` to scope its styles to that element and its children instead of `:root` and global classes.",
    "metadata": {
      "component": "v-implementation",
      "section_type": "subsection",
      "subsection": "Microfrontends",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001981",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001982",
    "text": "Component: v-treeshaking\nType: component_overview\n\n# v-treeshaking\n\nBeing a component framework, Vuetify will always grow horizontally. Depending on your project, a small bundle size may be a requirement.",
    "display_content": "# v-treeshaking\n\nBeing a component framework, Vuetify will always grow horizontally. Depending on your project, a small bundle size may be a requirement.",
    "metadata": {
      "component": "v-treeshaking",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001982",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001983",
    "text": "Component: v-automatic-treeshaking\nType: component_overview\n\n# v-automatic-treeshaking\n\nTreeshaking enables you to drastically lower your build size by only including the components you actually use in the final bundle. Vuetify comes with plugins for both [Webpack](https://webpack.js.org/) and [vite](https://vitejs.dev/) that enable automatic treeshaking.",
    "display_content": "# v-automatic-treeshaking\n\nTreeshaking enables you to drastically lower your build size by only including the components you actually use in the final bundle. Vuetify comes with plugins for both [Webpack](https://webpack.js.org/) and [vite](https://vitejs.dev/) that enable automatic treeshaking.",
    "metadata": {
      "component": "v-automatic-treeshaking",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001983",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001984",
    "text": "Component: v-manual-imports\nType: component_overview\n\n# v-manual-imports\n\nComponents can be manually imported when not using the loader plugin.",
    "display_content": "# v-manual-imports\n\nComponents can be manually imported when not using the loader plugin.",
    "metadata": {
      "component": "v-manual-imports",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001984",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001985",
    "text": "Component: v-limitations\nType: component_overview\n\n# v-limitations\n\nWhen using the loader plugin, there are a few scenarios which will require manually importing components.\n\nAvailable sections: Dynamic components, Import groups",
    "display_content": "# v-limitations\n\nWhen using the loader plugin, there are a few scenarios which will require manually importing components.\n\nAvailable sections: Dynamic components, Import groups",
    "metadata": {
      "component": "v-limitations",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001985",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001986",
    "text": "Component: v-limitations\nSection: Dynamic components\nType: code_example\n\n## v-limitations - Dynamic components\n\nWhen using dynamic components the plugin is unable to parse which vuetify components are being rendered. This commonly occurs when using the built-in Vue `<component>`. More information about dynamic components can be found in the official Vue [documentation](https://vuejs.org/guide/essentials/component-basics.html#dynamic-components).\n\n<!--\n`v-data-iterator` can use any component via the content-tag prop. This component must be registered [globally](#markup-js-a-la-carte-manual):\n\n```html\n<template>\n  <v-data-iterator content-tag=\"v-layout\">\n    ...\n  </v-data-iterator>\n</template>\n```",
    "display_content": "## v-limitations - Dynamic components\n\nWhen using dynamic components the plugin is unable to parse which vuetify components are being rendered. This commonly occurs when using the built-in Vue `<component>`. More information about dynamic components can be found in the official Vue [documentation](https://vuejs.org/guide/essentials/component-basics.html#dynamic-components).\n\n<!--\n`v-data-iterator` can use any component via the content-tag prop. This component must be registered [globally](#markup-js-a-la-carte-manual):\n\n```html\n<template>\n  <v-data-iterator content-tag=\"v-layout\">\n    ...\n  </v-data-iterator>\n</template>\n```",
    "metadata": {
      "component": "v-limitations",
      "section_type": "code_example",
      "subsection": "Dynamic components",
      "content_type": "code_example",
      "language": "html",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001986",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001987",
    "text": "Component: v-limitations\nSection: Dynamic components\nType: code_example\n\n## v-limitations - Dynamic components\n\n```js\n// src/plugins/vuetify.js\n\nimport Vue from 'vue'\nimport Vuetify, { VLayout } from 'vuetify/lib'\n\nVue.use(Vuetify, {\n  components: { VLayout },\n})\n\nconst opts = {}\n\nexport default new Vuetify(opts)\n```",
    "display_content": "## v-limitations - Dynamic components\n\n```js\n// src/plugins/vuetify.js\n\nimport Vue from 'vue'\nimport Vuetify, { VLayout } from 'vuetify/lib'\n\nVue.use(Vuetify, {\n  components: { VLayout },\n})\n\nconst opts = {}\n\nexport default new Vuetify(opts)\n```",
    "metadata": {
      "component": "v-limitations",
      "section_type": "code_example",
      "subsection": "Dynamic components",
      "content_type": "code_example",
      "language": "js",
      "has_explanation": false,
      "chunk_id": "vuetify_chunk_001987",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001988",
    "text": "Component: v-limitations\nSection: Dynamic components\nType: code_example\n\n## v-limitations - Dynamic components\n\n-->\n\nDynamic components using `<component>` can just be imported in setup components:\n\n```html { resource=\"Component.vue\" }\n<template>\n  <component :is=\"button ? VBtn : VChip\" />\n</template>\n\n<script setup>\n  import { VBtn } from 'vuetify/components/VBtn'\n  import { VChip } from 'vuetify/components/VChip'\n  import { shallowRef } from 'vue'\n\n  const button = shallowRef(false)\n</script>\n\n```\n\nOr registered locally in options components:\n\n```",
    "display_content": "## v-limitations - Dynamic components\n\n-->\n\nDynamic components using `<component>` can just be imported in setup components:\n\n```html { resource=\"Component.vue\" }\n<template>\n  <component :is=\"button ? VBtn : VChip\" />\n</template>\n\n<script setup>\n  import { VBtn } from 'vuetify/components/VBtn'\n  import { VChip } from 'vuetify/components/VChip'\n  import { shallowRef } from 'vue'\n\n  const button = shallowRef(false)\n</script>\n\n```\n\nOr registered locally in options components:\n\n```",
    "metadata": {
      "component": "v-limitations",
      "section_type": "code_example",
      "subsection": "Dynamic components",
      "content_type": "code_example",
      "language": "text",
      "has_explanation": true,
      "chunk_id": "vuetify_chunk_001988",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001989",
    "text": "Component: v-limitations\nSection: Import groups\nType: documentation\n\n## v-limitations - Import groups\n\nAll components are available at both `vuetify/components` and `vuetify/components/<group>`. Use of the latter is preferred however as it only loads files that are needed. Treeshaking will still work in production builds if you use `vuetify/components`, but during development it will cause a performance hit by loading styles even for components you aren't using.\n\n---\n\n\n\n## 📊 Documentation Statistics\n\n- **Total Components:** 89\n- **Total Code Examples:** 622\n- **Total Style Utilities:** 17\n- **Total Features:** 14",
    "display_content": "## v-limitations - Import groups\n\nAll components are available at both `vuetify/components` and `vuetify/components/<group>`. Use of the latter is preferred however as it only loads files that are needed. Treeshaking will still work in production builds if you use `vuetify/components`, but during development it will cause a performance hit by loading styles even for components you aren't using.\n\n---\n\n\n\n## 📊 Documentation Statistics\n\n- **Total Components:** 89\n- **Total Code Examples:** 622\n- **Total Style Utilities:** 17\n- **Total Features:** 14",
    "metadata": {
      "component": "v-limitations",
      "section_type": "subsection",
      "subsection": "Import groups",
      "content_type": "documentation",
      "chunk_index": 0,
      "chunk_id": "vuetify_chunk_001989",
      "source": "vuetify_documentation"
    }
  },
  {
    "id": "vuetify_chunk_001990",
    "text": "Component: v-additional-resources\nType: component_overview\n\n# v-additional-resources\n\n- [Official Vuetify Documentation](https://vuetifyjs.com/) - [Vuetify GitHub Repository](https://github.com/vuetifyjs/vuetify) - [Vue.js Documentation](https://vuejs.org/) - [Material Design Guidelines](https://material.io/design)",
    "display_content": "# v-additional-resources\n\n- [Official Vuetify Documentation](https://vuetifyjs.com/) - [Vuetify GitHub Repository](https://github.com/vuetifyjs/vuetify) - [Vue.js Documentation](https://vuejs.org/) - [Material Design Guidelines](https://material.io/design)",
    "metadata": {
      "component": "v-additional-resources",
      "section_type": "overview",
      "subsection": null,
      "content_type": "component_overview",
      "chunk_id": "vuetify_chunk_001990",
      "source": "vuetify_documentation"
    }
  }
]